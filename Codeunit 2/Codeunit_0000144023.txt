OBJECT Codeunit 144023 ERM Report
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
            IsInitialized := FALSE;
          END;

  }
  CODE
  {
    VAR
      Assert@1500002 : Codeunit 130000;
      LibraryVariableStorage@1500003 : Codeunit 131004;
      IsInitialized@1500005 : Boolean;
      VisibilityError@1500006 : TextConst 'ENU=Control must be visible.';
      EditableError@1500007 : TextConst 'ENU=Control must be editable.';
      ValidReceiptNoError@1500008 : TextConst 'ENU=Please enter valid 8 character Receipt number.';
      ConfirmDialogError@1500009 : TextConst 'ENU=Incorrect question in Confirm Dialog.';

    [Test]
    [HandlerFunctions(GenerateCertificateNosHandler)]
    PROCEDURE TestReceiptNoIsVisibleAndEditable@1500002();
    VAR
      GenerateTCSCertificateNos@1500002 : Report 16517;
    BEGIN
      Initialize;
      GenerateTCSCertificateNos.RUN;
    END;

    [Test]
    [HandlerFunctions(GenerateCertificateNosWithParameterHandler)]
    PROCEDURE TestErrorWhenReceiptNoIsBlank@1500003();
    VAR
      GenerateTCSCertificateNos@1500002 : Report 16517;
    BEGIN
      Initialize;
      LibraryVariableStorage.Enqueue('');
      ASSERTERROR GenerateTCSCertificateNos.RUN;
      Assert.ExpectedError(ValidReceiptNoError);
    END;

    [Test]
    [HandlerFunctions(GenerateCertificateNosWithParameterHandler)]
    PROCEDURE TestErrorWhenReceiptNoIsLessThenEightCharacter@1500004();
    VAR
      GenerateTCSCertificateNos@1500002 : Report 16517;
    BEGIN
      Initialize;
      LibraryVariableStorage.Enqueue('AAAAAAA');
      ASSERTERROR GenerateTCSCertificateNos.RUN;
      Assert.ExpectedError(ValidReceiptNoError);
    END;

    [Test]
    [HandlerFunctions(GenerateCertificateNosWithParameterHandler,ConfirmNoHandler)]
    PROCEDURE TestConfirmDialogAfterValidatingEightCharacterReceiptNo@1500005();
    VAR
      GenerateTCSCertificateNos@1500002 : Report 16517;
    BEGIN
      Initialize;
      LibraryVariableStorage.Enqueue('AAAAAAAA');
      GenerateTCSCertificateNos.RUN;
      // Verification is done through capturing confirmation dialog in ConfirmaNoHandler after Receipt no is validated.
    END;

    [Test]
    [HandlerFunctions(GenerateCertificateNosWithParameterHandler)]
    PROCEDURE TestErrorWithOneNumericValueInReceiptNo@1500006();
    VAR
      GenerateTCSCertificateNos@1500002 : Report 16517;
    BEGIN
      Initialize;
      LibraryVariableStorage.Enqueue('1AAAAAAA');
      ASSERTERROR GenerateTCSCertificateNos.RUN;
      Assert.ExpectedError(ValidReceiptNoError);
    END;

    LOCAL PROCEDURE Initialize@1500007();
    BEGIN
      LibraryVariableStorage.Clear;
      IF IsInitialized THEN
        EXIT;

      IsInitialized := TRUE;
      COMMIT;
    END;

    [RequestPageHandler]
    PROCEDURE GenerateCertificateNosHandler@1500008(VAR GenerateTCSCertificateNos@1500002 : TestRequestPage 16517);
    BEGIN
      Assert.IsTrue(GenerateTCSCertificateNos.ReceiptNumber.VISIBLE,VisibilityError);
      Assert.IsTrue(GenerateTCSCertificateNos.ReceiptNumber.EDITABLE,EditableError);
    END;

    [RequestPageHandler]
    PROCEDURE GenerateCertificateNosWithParameterHandler@1500009(VAR GenerateTCSCertificateNos@1500003 : TestRequestPage 16517);
    VAR
      ReceiptNo@1500002 : Variant;
      PartyType@1500004 : ',Party,Customer';
    BEGIN
      LibraryVariableStorage.Dequeue(ReceiptNo);
      GenerateTCSCertificateNos.PartyType.SETVALUE(PartyType::Party);      // Parameter are only set as to check Recipt Number cases.
      GenerateTCSCertificateNos.StartDate.SETVALUE(WORKDATE);
      GenerateTCSCertificateNos.EndDate.SETVALUE(WORKDATE);
      GenerateTCSCertificateNos.ReceiptNumber.SETVALUE(ReceiptNo);
      GenerateTCSCertificateNos.OK.INVOKE;
    END;

    [ConfirmHandler]
    PROCEDURE ConfirmNoHandler@1500010(Question@1500002 : Text[1024];VAR Reply@1500003 : Boolean);
    BEGIN
      Reply := FALSE;
      Assert.IsTrue(STRPOS(Question,'Do you want to update the receipt number') > 0,ConfirmDialogError);
    END;

    BEGIN
    END.
  }
}

