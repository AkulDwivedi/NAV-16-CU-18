OBJECT Codeunit 131901 Library - Human Resource
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      LibraryUtility@1001 : Codeunit 131000;
      FirstName@1000 : TextConst 'ENU=First Name';
      Name@1002 : TextConst 'ENU=Name';

    PROCEDURE CreateAlternativeAddress@2(VAR AlternativeAddress@1000 : Record 5201;EmployeeNo@1001 : Code[20]);
    BEGIN
      AlternativeAddress.INIT;
      AlternativeAddress.VALIDATE("Employee No.",EmployeeNo);
      AlternativeAddress.VALIDATE(
        Code,
        COPYSTR(
          LibraryUtility.GenerateRandomCode(AlternativeAddress.FIELDNO(Code),DATABASE::"Alternative Address"),
          1,
          LibraryUtility.GetFieldLength(DATABASE::"Alternative Address",AlternativeAddress.FIELDNO(Code))));
      AlternativeAddress.INSERT(TRUE);
    END;

    PROCEDURE CreateEmployee@4(VAR Employee@1000 : Record 5200);
    BEGIN
      Employee.INIT;
      Employee.INSERT(TRUE);
      UpdateEmployeeName(Employee);
      Employee.MODIFY(TRUE);
    END;

    PROCEDURE CreateMiscArticle@8(VAR MiscArticle@1000 : Record 5213);
    BEGIN
      MiscArticle.INIT;
      MiscArticle.VALIDATE(
        Code,
        COPYSTR(
          LibraryUtility.GenerateRandomCode(MiscArticle.FIELDNO(Code),DATABASE::"Misc. Article"),
          1,
          LibraryUtility.GetFieldLength(DATABASE::"Misc. Article",MiscArticle.FIELDNO(Code))));
      MiscArticle.VALIDATE(Description,MiscArticle.Code);
      MiscArticle.INSERT(TRUE);
    END;

    PROCEDURE CreateMiscArticleInformation@5(VAR MiscArticleInformation@1000 : Record 5214;EmployeeNo@1001 : Code[20];MiscArticleCode@1004 : Code[10]);
    VAR
      RecRef@1003 : RecordRef;
    BEGIN
      MiscArticleInformation.INIT;
      MiscArticleInformation.VALIDATE("Employee No.",EmployeeNo);
      MiscArticleInformation.VALIDATE("Misc. Article Code",MiscArticleCode);
      RecRef.GETTABLE(MiscArticleInformation);
      MiscArticleInformation.VALIDATE("Line No.",LibraryUtility.GetNewLineNo(RecRef,MiscArticleInformation.FIELDNO("Line No.")));
      MiscArticleInformation.INSERT(TRUE);
    END;

    PROCEDURE CreateEmployeeQualification@1(VAR EmployeeQualification@1000 : Record 5203;EmployeeNo@1001 : Code[20]);
    VAR
      RecRef@1002 : RecordRef;
    BEGIN
      EmployeeQualification.INIT;
      EmployeeQualification.VALIDATE("Employee No.",EmployeeNo);
      RecRef.GETTABLE(EmployeeQualification);
      EmployeeQualification.VALIDATE("Line No.",LibraryUtility.GetNewLineNo(RecRef,EmployeeQualification.FIELDNO("Line No.")));
      EmployeeQualification.INSERT(TRUE);
    END;

    PROCEDURE CreateEmployeeAbsence@9(VAR EmployeeAbsence@1000 : Record 5207);
    BEGIN
      EmployeeAbsence.INIT;
      EmployeeAbsence.INSERT(TRUE);
    END;

    PROCEDURE CreateEmployeeRelative@12(VAR EmployeeRelative@1003 : Record 5205;EmployeeNo@1002 : Code[20]);
    VAR
      RecRef@1004 : RecordRef;
    BEGIN
      EmployeeRelative.INIT;
      EmployeeRelative.VALIDATE("Employee No.",EmployeeNo);
      RecRef.GETTABLE(EmployeeRelative);
      EmployeeRelative.VALIDATE("Line No.",LibraryUtility.GetNewLineNo(RecRef,EmployeeRelative.FIELDNO("Line No.")));
      EmployeeRelative.INSERT(TRUE);
    END;

    PROCEDURE CreateEmployeeStatGroup@14(VAR EmployeeStatisticsGroup@1000 : Record 5212);
    BEGIN
      EmployeeStatisticsGroup.INIT;
      EmployeeStatisticsGroup.VALIDATE(
        Code,
        COPYSTR(
          LibraryUtility.GenerateRandomCode(EmployeeStatisticsGroup.FIELDNO(Code),DATABASE::"Employee Statistics Group"),
          1,
          LibraryUtility.GetFieldLength(DATABASE::"Employee Statistics Group",EmployeeStatisticsGroup.FIELDNO(Code))));
      EmployeeStatisticsGroup.VALIDATE(Description,EmployeeStatisticsGroup.Code);
      EmployeeStatisticsGroup.INSERT(TRUE);
    END;

    PROCEDURE CreateEmploymentContract@11(VAR EmploymentContract@1000 : Record 5211);
    BEGIN
      EmploymentContract.INIT;
      EmploymentContract.VALIDATE(
        Code,
        COPYSTR(
          LibraryUtility.GenerateRandomCode(EmploymentContract.FIELDNO(Code),DATABASE::"Employment Contract"),
          1,
          LibraryUtility.GetFieldLength(DATABASE::"Employment Contract",EmploymentContract.FIELDNO(Code))));
      EmploymentContract.VALIDATE(Description,EmploymentContract.Code);
      EmploymentContract.INSERT(TRUE);
    END;

    PROCEDURE CreateConfidential@10(VAR Confidential@1000 : Record 5215);
    BEGIN
      Confidential.INIT;
      Confidential.VALIDATE(
        Code,
        COPYSTR(
          LibraryUtility.GenerateRandomCode(Confidential.FIELDNO(Code),DATABASE::Confidential),
          1,
          LibraryUtility.GetFieldLength(DATABASE::Confidential,Confidential.FIELDNO(Code))));
      Confidential.VALIDATE(Description,Confidential.Code);
      Confidential.INSERT(TRUE);
    END;

    PROCEDURE CreateConfidentialInformation@25(VAR ConfidentialInformation@1000 : Record 5216;EmployeeNo@1001 : Code[20];ConfidentialCode@1002 : Code[10]);
    VAR
      RecRef@1003 : RecordRef;
    BEGIN
      ConfidentialInformation.INIT;
      ConfidentialInformation.VALIDATE("Employee No.",EmployeeNo);
      ConfidentialInformation.VALIDATE("Confidential Code",ConfidentialCode);
      RecRef.GETTABLE(ConfidentialInformation);
      ConfidentialInformation.VALIDATE("Line No.",LibraryUtility.GetNewLineNo(RecRef,ConfidentialInformation.FIELDNO("Line No.")));
      ConfidentialInformation.INSERT(TRUE);
    END;

    PROCEDURE CreateQualification@13(VAR Qualification@1000 : Record 5202);
    BEGIN
      Qualification.INIT;
      Qualification.VALIDATE(
        Code,
        COPYSTR(
          LibraryUtility.GenerateRandomCode(Qualification.FIELDNO(Code),DATABASE::Qualification),
          1,
          LibraryUtility.GetFieldLength(DATABASE::Qualification,Qualification.FIELDNO(Code))));
      Qualification.VALIDATE(Description,Qualification.Code);
      Qualification.INSERT(TRUE);
    END;

    PROCEDURE CreateRelative@7(VAR Relative@1000 : Record 5204);
    BEGIN
      Relative.INIT;
      Relative.VALIDATE(
        Code,
        COPYSTR(
          LibraryUtility.GenerateRandomCode(Relative.FIELDNO(Code),DATABASE::Relative),
          1,
          LibraryUtility.GetFieldLength(DATABASE::Relative,Relative.FIELDNO(Code))));
      Relative.VALIDATE(Description,Relative.Code);
      Relative.INSERT(TRUE);
    END;

    PROCEDURE CreateUnion@3(VAR Union@1000 : Record 5209);
    BEGIN
      Union.INIT;
      Union.VALIDATE(
        Code,
        COPYSTR(
          LibraryUtility.GenerateRandomCode(Union.FIELDNO(Code),DATABASE::Union),
          1,
          LibraryUtility.GetFieldLength(DATABASE::Union,Union.FIELDNO(Code))));
      Union.VALIDATE(Name,Union.Code);
      Union.INSERT(TRUE);
    END;

    LOCAL PROCEDURE UpdateEmployeeName@62(VAR Employee@1000 : Record 5200);
    VAR
      RecRef@1001 : RecordRef;
      FieldRef@1002 : FieldRef;
    BEGIN
      RecRef.GETTABLE(Employee);
      IF LibraryUtility.CheckFieldExistenceInTable(DATABASE::Employee,FirstName) THEN
        FieldRef := RecRef.FIELD(LibraryUtility.FindFieldNoInTable(DATABASE::Employee,FirstName))
      ELSE
        FieldRef := RecRef.FIELD(LibraryUtility.FindFieldNoInTable(DATABASE::Employee,Name));
      FieldRef.VALIDATE(Employee."No.");  // Validating Name as No. because value is not important.
      RecRef.SETTABLE(Employee);
    END;

    PROCEDURE SetupEmployeeNumberSeries@6() : Code[10];
    VAR
      HumanResourcesSetup@1000 : Record 5218;
    BEGIN
      HumanResourcesSetup.GET;
      IF HumanResourcesSetup."Employee Nos." = '' THEN
        HumanResourcesSetup.VALIDATE("Employee Nos.",LibraryUtility.GetGlobalNoSeriesCode);
      HumanResourcesSetup.MODIFY(TRUE);
      EXIT(HumanResourcesSetup."Employee Nos.");
    END;

    BEGIN
    {
      Contains all utility functions related to Human Resource.
    }
    END.
  }
}

