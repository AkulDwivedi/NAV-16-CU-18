OBJECT Codeunit 144002 Report Layout - Local
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
            isInitialized := FALSE;
          END;

  }
  CODE
  {
    VAR
      isInitialized@1100000 : Boolean;

    [Test]
    [HandlerFunctions(RHRG23APARTII)]
    PROCEDURE TestRG23APARTII@1500002();
    BEGIN
      Initialize;
      REPORT.RUN(REPORT::"RG 23 A PART II");
    END;

    [Test]
    [HandlerFunctions(RHRG23CPARTII)]
    PROCEDURE TestRG23CPARTII@1500004();
    BEGIN
      Initialize;
      REPORT.RUN(REPORT::"RG 23 C PART II");
    END;

    [Test]
    [HandlerFunctions(RHCentralSalesTax)]
    PROCEDURE TestCentralSalesTax@1500006();
    BEGIN
      Initialize;
      REPORT.RUN(REPORT::"Central Sales Tax");
    END;

    [Test]
    [HandlerFunctions(RHQuarterlyReturnforTraders)]
    PROCEDURE TestQuarterlyReturnforTraders@1500001();
    BEGIN
      Initialize;
      REPORT.RUN(REPORT::"Quarterly Return for Traders");
    END;

    [Test]
    [HandlerFunctions(RHServiceTaxCreditRegister)]
    PROCEDURE TestServiceTaxCreditRegister@47();
    BEGIN
      Initialize;
      REPORT.RUN(REPORT::"Service Tax Credit Register");
    END;

    [Test]
    [HandlerFunctions(RHDailyStockMovement)]
    PROCEDURE TestDailyStockMovement@1500008();
    BEGIN
      Initialize;
      REPORT.RUN(REPORT::"Daily Stock Movement");
    END;

    [Test]
    [HandlerFunctions(RHFormST3)]
    PROCEDURE TestFormST3@1500011();
    BEGIN
      Initialize;
      REPORT.RUN(REPORT::"Old Form ST-3");
    END;

    LOCAL PROCEDURE Initialize@2();
    VAR
      SalesSetup@1001 : Record 311;
      LibraryRandom@1002 : Codeunit 130440;
    BEGIN
      LibraryRandom.SetSeed(1);  // Use Random Number Generator to generate the seed for RANDOM function.

      IF isInitialized THEN
        EXIT;

      // Setup logo to be printed by default
      SalesSetup.VALIDATE("Logo Position on Documents",SalesSetup."Logo Position on Documents"::Center);
      SalesSetup.MODIFY(TRUE);

      isInitialized := TRUE;
      COMMIT
    END;

    LOCAL PROCEDURE FomatFileName@9(ReportCaption@1000 : Text) ReportFileName : Text;
    BEGIN
      ReportFileName := DELCHR(ReportCaption,'=','/') + '.pdf'
    END;

    [RequestPageHandler]
    PROCEDURE RHRG23APARTII@1500003(VAR RepRG23APARTII@1500000 : TestRequestPage 13702);
    VAR
      ECCNos@1500001 : Record 13708;
    BEGIN
      ECCNos.FINDFIRST;
      RepRG23APARTII."RG 23 A Part II".SETFILTER("Location E.C.C. No.",ECCNos.Code);
      RepRG23APARTII.SAVEASPDF(FomatFileName(RepRG23APARTII.CAPTION));
    END;

    [RequestPageHandler]
    PROCEDURE RHRG23CPARTII@1500005(VAR RepRG23CPARTII@1500000 : TestRequestPage 13704);
    VAR
      ECCNos@1500002 : Record 13708;
    BEGIN
      ECCNos.FINDFIRST;
      RepRG23CPARTII."RG 23 C Part II".SETFILTER("Location E.C.C. No.",ECCNos.Code);
      RepRG23CPARTII.SAVEASPDF(FomatFileName(RepRG23CPARTII.CAPTION));
    END;

    [RequestPageHandler]
    PROCEDURE RHCentralSalesTax@1500007(VAR RepCentralSalesTax@1500000 : TestRequestPage 13709);
    VAR
      Yr@1500001 : Integer;
      Yr2@1500002 : Integer;
    BEGIN
      RepCentralSalesTax.Year.SETVALUE(DATE2DMY(WORKDATE,3)+2);
      RepCentralSalesTax.SAVEASPDF(FomatFileName(RepCentralSalesTax.CAPTION));
    END;

    [RequestPageHandler]
    PROCEDURE RHQuarterlyReturnforTraders@1500000(VAR QuarterlyReturnforTraders@1500000 : TestRequestPage 16554);
    BEGIN
      QuarterlyReturnforTraders.StartingDate.SETVALUE(WORKDATE);
      QuarterlyReturnforTraders.EndingDate.SETVALUE(WORKDATE);
      QuarterlyReturnforTraders.SAVEASPDF(FomatFileName(QuarterlyReturnforTraders.CAPTION));
    END;

    [RequestPageHandler]
    PROCEDURE RHServiceTaxCreditRegister@46(VAR ServiceTaxCreditRegister@1000 : TestRequestPage 16592);
    VAR
      ServiceTaxRegistrationNos@1500000 : Record 16475;
    BEGIN
      ServiceTaxRegistrationNos.FINDFIRST;
      ServiceTaxCreditRegister.StartingDate.SETVALUE(FORMAT(WORKDATE));
      ServiceTaxCreditRegister.EndingDate.SETVALUE(FORMAT(WORKDATE));
      ServiceTaxCreditRegister.STRegistrationNo.SETVALUE(ServiceTaxRegistrationNos.Code);
      ServiceTaxCreditRegister.SAVEASPDF(FomatFileName(ServiceTaxCreditRegister.CAPTION));
    END;

    [RequestPageHandler]
    PROCEDURE RHDailyStockMovement@1500009(VAR RepDailyStockMovement@1500000 : TestRequestPage 13708);
    BEGIN
      RepDailyStockMovement.StartingDate.SETVALUE(FORMAT(WORKDATE));
      RepDailyStockMovement.EndingDate.SETVALUE(FORMAT(CALCDATE('<+2Y>',WORKDATE)));
      RepDailyStockMovement.SAVEASPDF(FomatFileName(RepDailyStockMovement.CAPTION));
    END;

    [RequestPageHandler]
    PROCEDURE RHFormST3@1500010(VAR FormST3@1500000 : TestRequestPage 16472);
    VAR
      ServiceTaxRegistrationNos@1500001 : Record 16475;
      ServiceTaxReturnPeriod@1500003 : Record 16588;
      MonthRange@1500002 : ' ,Apr-Sept,Oct-March';
    BEGIN
      ServiceTaxRegistrationNos.FINDFIRST;
      ServiceTaxReturnPeriod.SETRANGE("Return Period",MonthRange::"Apr-Sept");
      ServiceTaxReturnPeriod.FINDLAST;
      FormST3.ServiceTaxRegNo.SETVALUE(ServiceTaxRegistrationNos.Code);
      FormST3.HalfYearlyPeriod.SETVALUE(MonthRange::"Apr-Sept");
      FormST3.Year.SETVALUE(ServiceTaxReturnPeriod.Year);
      FormST3.PlaceSubmitted.SETVALUE(ServiceTaxRegistrationNos.Description);
      FormST3.DateSubmitted.SETVALUE(WORKDATE);
      FormST3.SAVEASPDF(FomatFileName(FormST3.CAPTION));
    END;

    BEGIN
    END.
  }
}

