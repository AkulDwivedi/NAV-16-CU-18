OBJECT Codeunit 138041 SMB Company Information
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CompanyBankAccountTxt@1004 : TextConst 'ENU=CompanyBankAccount';
      XPAYMENTTxt@1001 : TextConst '@@@=Payment;ENU=PAYMENT';
      XPmtRegTxt@1000 : TextConst '@@@=Payment Registration;ENU=PMT REG';
      Assert@1006 : Codeunit 130000;

    [Test]
    PROCEDURE BankAccountCreatedAfterClosingPage@1();
    VAR
      BankAccount@1001 : Record 270;
      GenJournalBatch@1003 : Record 232;
      CompanyInformation@1002 : Record 79;
      PaymentRegistrationSetup@1004 : Record 980;
      BankAccountPostingGroup@1005 : Record 277;
      CompanyInformationPage@1000 : TestPage 1352;
    BEGIN
      // delete company bank account
      IF BankAccount.GET(CompanyBankAccountTxt) THEN
        BankAccount.DELETE;

      IF GenJournalBatch.GET(XPAYMENTTxt,XPmtRegTxt) THEN BEGIN
        GenJournalBatch."Bal. Account No." := '';
        GenJournalBatch.MODIFY;
      END;

      // fill out bank account information in Company Information page
      CompanyInformationPage.OPENEDIT;
      CompanyInformationPage."Bank Name".SETVALUE('Stans Bank');
      CompanyInformationPage."Bank Branch No.".SETVALUE('0235');
      CompanyInformationPage."Bank Account No.".SETVALUE('3276392693');
      CompanyInformationPage."SWIFT Code".SETVALUE('DABASTAN');
      CompanyInformationPage.IBAN.SETVALUE('GB 80 RBOS 161732 41116737');
      BankAccountPostingGroup.FINDLAST;
      CompanyInformationPage.BankAccountPostingGroup.SETVALUE(BankAccountPostingGroup.Code);
      CompanyInformationPage.OK.INVOKE;

      // verify that a bank account has been created
      CompanyInformation.GET;
      Assert.IsTrue(BankAccount.GET(CompanyBankAccountTxt),'Bank account ' + CompanyBankAccountTxt + ' not generated.');
      Assert.AreEqual(BankAccount.Name,CompanyInformation."Bank Name",'Bank Name not properly updated.');
      Assert.AreEqual(BankAccount."Bank Account No.",CompanyInformation."Bank Account No.",'Bank Account No. not updated.');
      Assert.AreEqual(BankAccount."Bank Branch No.",CompanyInformation."Bank Branch No.",'Bank Branch No. not updated.');
      Assert.AreEqual(BankAccount."SWIFT Code",CompanyInformation."SWIFT Code",'SWIFT Code not properly updated.');
      Assert.AreEqual(BankAccount.IBAN,CompanyInformation.IBAN,'IBAN not properly updated.');
      Assert.AreEqual(BankAccount."Bank Acc. Posting Group",BankAccountPostingGroup.Code,'Bank Acc. Posting Group not set properly');

      // verify that payment registration General Journal Batch points to the company bank account
      IF GenJournalBatch.GET(XPAYMENTTxt,XPmtRegTxt) THEN
        Assert.AreEqual(GenJournalBatch."Bal. Account No.",BankAccount."No.",'Bank account not set in payment reg. batch.');

      // verify that payment registration setup points to to the company bank account
      IF PaymentRegistrationSetup.GET(USERID) THEN BEGIN
        Assert.IsTrue(PaymentRegistrationSetup."Journal Template Name" = XPAYMENTTxt,
          'Unexpected journal template in payment registration setup.');
        Assert.IsTrue(PaymentRegistrationSetup."Journal Batch Name" = XPmtRegTxt,
          'Unexpected journal batch in payment registration setup.');
        Assert.IsTrue(PaymentRegistrationSetup."Bal. Account Type" = PaymentRegistrationSetup."Bal. Account Type"::"Bank Account",
          'Unexpected balance account type in payment registration setup.');
        Assert.IsTrue(PaymentRegistrationSetup."Bal. Account No." = BankAccount."No.",
          'Unexpected bank account in payment registration setup.');
      END;

      // Modify bank name
      WITH CompanyInformationPage DO BEGIN
        OPENEDIT;
        "Bank Name".SETVALUE("Bank Name".VALUE + "Bank Name".VALUE);
        OK.INVOKE;
      END;

      // Verify that company bank account has been updated
      Assert.AreEqual(BankAccount.Name,CompanyInformation."Bank Name",'Bank Name not properly updated in bank account.');
    END;

    BEGIN
    {
      // [FEATURE] [Company Information] [Bank Account] [SMB]
    }
    END.
  }
}

