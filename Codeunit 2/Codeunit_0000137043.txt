OBJECT Codeunit 137043 SCM General Journal
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
            isInitialized := FALSE;
          END;

  }
  CODE
  {
    VAR
      LibraryRandom@1000 : Codeunit 130440;
      LibraryUtility@1007 : Codeunit 131000;
      LibraryInventory@1002 : Codeunit 132201;
      LibraryERM@1003 : Codeunit 131300;
      LibraryPurchase@1008 : Codeunit 130512;
      LibrarySales@1009 : Codeunit 130509;
      Assert@1005 : Codeunit 130000;
      isInitialized@1001 : Boolean;
      ErrNoOfLinesMustBeEqual@1004 : TextConst 'ENU=No Of Lines Must Be Equal';
      MSGStdGeneralJrnlExists@1006 : TextConst 'ENU=Standard General Journal';

    [Test]
    PROCEDURE SaveStandardJournal@1();
    VAR
      GenJournalBatch@1005 : Record 232;
      GenJournalLine@1000 : Record 81;
      StandardGeneralJournalCode@1003 : Code[10];
    BEGIN
      // Setup : Create General Journal Template and General Journal Batch.
      // Exercise : Create Multiple General Lines and save Them as standard Journal.
      Initialize;
      CreateGenJournalTemplateBatch(GenJournalBatch);
      CreateGenJournalLines(GenJournalBatch,StandardGeneralJournalCode);

      // Verify : Verify Number Standard General Journal Created.
      VerifyStandardGeneralJournal(GenJournalBatch."Journal Template Name",3);

      // Tear Down : Delete General Lines Created.
      DeleteGenJournalLine(GenJournalLine,GenJournalBatch."Journal Template Name",GenJournalBatch.Name);
    END;

    [Test]
    [HandlerFunctions(ModalFormHandler)]
    PROCEDURE GetStandardJournal@6();
    VAR
      GenJournalBatch@1005 : Record 232;
      GenJournalLine@1000 : Record 81;
      StandardGeneralJournalCode@1003 : Code[10];
    BEGIN
      // Setup : Create General Journal Template and General Journal Batch.
      // Create Multiple General Lines and save Them as standard Journal.
      Initialize;
      CreateGenJournalTemplateBatch(GenJournalBatch);
      CreateGenJournalLines(GenJournalBatch,StandardGeneralJournalCode);

      // Exercise : Get saved standard Journal in General Line.
      DeleteAndGetStandardJournal(GenJournalLine,GenJournalBatch,StandardGeneralJournalCode);

      // Verify : Verify Number Standard General Journal Created.
      // Verify : Verify General Journal Line Inserted through Get STandard Journal.
      VerifyStandardGeneralJournal(GenJournalBatch."Journal Template Name",3);
      VerifyGenJournalLine(GenJournalBatch);

      // Tear Down : Delete General Lines Created.
      DeleteGenJournalLine(GenJournalLine,GenJournalBatch."Journal Template Name",GenJournalBatch.Name);
    END;

    [Test]
    [HandlerFunctions(ModalFormHandler,ConfirmHandler)]
    PROCEDURE GetAndSaveStandardJournal@13();
    VAR
      GenJournalBatch@1005 : Record 232;
      GenJournalLine@1001 : Record 81;
      StandardGeneralJournalCode@1000 : Code[10];
    BEGIN
      // Setup : Create General Journal Template and General Journal Batch.
      // Create Multiple General Lines and save Them as standard Journal.
      Initialize;
      CreateGenJournalTemplateBatch(GenJournalBatch);
      CreateGenJournalLines(GenJournalBatch,StandardGeneralJournalCode);
      DeleteAndGetStandardJournal(GenJournalLine,GenJournalBatch,StandardGeneralJournalCode);

      // Exercise : Save standard Journal.
      LibraryInventory.SaveAsStandardJournal(GenJournalBatch,StandardGeneralJournalCode,TRUE);

      // Verify : Verify Number Standard General Journal Created.
      // Verify : Verify General Journal Line Inserted through Get STandard Journal.
      VerifyStandardGeneralJournal(GenJournalBatch."Journal Template Name",3);
      VerifyGenJournalLine(GenJournalBatch);

      // Tear Down : Delete General Lines Created.
      DeleteGenJournalLine(GenJournalLine,GenJournalBatch."Journal Template Name",GenJournalBatch.Name);
    END;

    [Test]
    [HandlerFunctions(ModalFormHandler)]
    PROCEDURE UpdateAndGetStandardJournal@15();
    VAR
      GenJournalBatch@1005 : Record 232;
      GenJournalLine@1000 : Record 81;
      StandardGeneralJournalCode@1003 : Code[10];
      AccountNo@1001 : Code[20];
    BEGIN
      // Setup : Create General Journal Template and General Journal Batch.
      // Create Multiple General Lines and save Them as standard Journal.
      Initialize;
      CreateGenJournalTemplateBatch(GenJournalBatch);
      CreateGenJournalLines(GenJournalBatch,StandardGeneralJournalCode);
      DeleteGenJournalLine(GenJournalLine,GenJournalBatch."Journal Template Name",GenJournalBatch.Name);

      // Exercise : Update standard General Journal Line adn Get it in Genereal Journal.
      AccountNo := UpdateStandardJournals(GenJournalBatch."Journal Template Name",StandardGeneralJournalCode);
      GetSavedStandardJournal(GenJournalBatch,StandardGeneralJournalCode);

      // Verify : Verify Updated GL Account  No in Gen Journal Line.
      VerifyGLAccountNo(GenJournalBatch,AccountNo);

      // Tear Down : Delete General Lines Created.
      DeleteGenJournalLine(GenJournalLine,GenJournalBatch."Journal Template Name",GenJournalBatch.Name);
    END;

    [Test]
    [HandlerFunctions(ModalFormHandler)]
    PROCEDURE SaveMultipleStandardJournal@17();
    VAR
      GenJournalBatch@1005 : Record 232;
      GenJournalLine@1000 : Record 81;
      StandardGeneralJournal@1006 : Record 750;
      StandardGeneralJournalCode@1003 : Code[10];
      StandardGeneralJournalCode2@1001 : Code[10];
      StandardGeneralJournalCode3@1002 : Code[10];
    BEGIN
      // Setup : Create General Journal Template and General Journal Batch.
      // Create Two Standard General Journal.
      Initialize;
      CreateGenJournalTemplateBatch(GenJournalBatch);
      CreateGenJournalLines(GenJournalBatch,StandardGeneralJournalCode);
      CreateGenJournalLines(GenJournalBatch,StandardGeneralJournalCode2);

      // Create New standard Journal using Get saved standard Journal in General Line.
      DeleteAndGetStandardJournal(GenJournalLine,GenJournalBatch,StandardGeneralJournalCode);
      GetSavedStandardJournal(GenJournalBatch,StandardGeneralJournalCode2);

      // Exercise : Save Standard Journal.
      CreateStandardGenlJournalCode(StandardGeneralJournalCode3);
      LibraryInventory.SaveAsStandardJournal(GenJournalBatch,StandardGeneralJournalCode3,TRUE);

      // Verify : Verify Multiply Standard General Journal Created.
      StandardGeneralJournal.SETRANGE("Journal Template Name",GenJournalBatch."Journal Template Name");
      StandardGeneralJournal.SETFILTER(
        Code,'%1|%2|%3',StandardGeneralJournalCode,StandardGeneralJournalCode2,StandardGeneralJournalCode3);
      StandardGeneralJournal.FINDFIRST;

      // Tear Down : Delete General Lines Created.
      DeleteGenJournalLine(GenJournalLine,GenJournalBatch."Journal Template Name",GenJournalBatch.Name);
    END;

    [Test]
    [HandlerFunctions(ModalFormHandler,ConfirmHandler)]
    PROCEDURE ReplaceExistingStandardJournal@20();
    VAR
      GenJournalBatch@1005 : Record 232;
      GenJournalLine@1000 : Record 81;
      StandardGeneralJournalCode@1003 : Code[10];
    BEGIN
      // Setup : Create General Journal Template and General Journal Batch.
      // Create Two Standard General Journal.
      Initialize;
      CreateGenJournalTemplateBatch(GenJournalBatch);
      CreateGenJournalLines(GenJournalBatch,StandardGeneralJournalCode);
      DeleteAndGetStandardJournal(GenJournalLine,GenJournalBatch,StandardGeneralJournalCode);

      // Exercise : Save existing Standard Journal.
      LibraryInventory.SaveAsStandardJournal(GenJournalBatch,StandardGeneralJournalCode,TRUE);

      // Verify : Verify Number Standard of General Journal Created.
      VerifyStandardGeneralJournal(GenJournalBatch."Journal Template Name",3);

      // Tear Down : Delete General Lines Created.
      DeleteGenJournalLine(GenJournalLine,GenJournalBatch."Journal Template Name",GenJournalBatch.Name);
    END;

    [Test]
    [HandlerFunctions(ModalFormHandler)]
    PROCEDURE PostStandardJournal@21();
    VAR
      GenJournalBatch@1005 : Record 232;
      GenJournalLine@1000 : Record 81;
      Customer@1002 : Record 18;
      GLAccount@1004 : Record 15;
      StandardGeneralJournalCode@1003 : Code[10];
      Amount@1006 : Decimal;
    BEGIN
      // Setup : Create General Journal Template and General Journal Batch.
      // Create Customer and Create General Journal Line.
      Initialize;
      CreateGenJournalTemplateBatch(GenJournalBatch);
      LibrarySales.CreateCustomer(Customer);
      GLAccount.FILTERGROUP(2);
      GLAccount.SETRANGE("Gen. Posting Type",GLAccount."Gen. Posting Type"::Sale);
      GLAccount.FILTERGROUP(0);
      LibraryERM.FindGLAccount(GLAccount);
      Amount := LibraryRandom.RandDec(100,2);
      CreateGenJournalLine(
        GenJournalLine,GenJournalBatch,GenJournalLine."Account Type"::Customer,GenJournalLine."Bal. Account Type"::"G/L Account",
        Customer."No.",GLAccount."No.",Amount);

      // Save as Standard Journal and delete General Journal Line,
      CreateStandardGenlJournalCode(StandardGeneralJournalCode);
      LibraryInventory.SaveAsStandardJournal(GenJournalBatch,StandardGeneralJournalCode,TRUE);

      // Exercise : Get saved standard Journal in General Line and Post it.
      DeleteAndGetStandardJournal(GenJournalLine,GenJournalBatch,StandardGeneralJournalCode);
      FindGenJournalLine(GenJournalLine,GenJournalBatch."Journal Template Name",GenJournalBatch.Name);
      LibraryERM.PostGeneralJnlLine(GenJournalLine);

      // Verify : verify Customer Ledger Entry.
      VerifyCustLedgerEntry(Customer."No.",Amount);
    END;

    LOCAL PROCEDURE Initialize@4();
    VAR
      LibraryERMCountryData@1000 : Codeunit 131305;
    BEGIN
      // Lazy Setup.
      IF isInitialized THEN
        EXIT;

      LibraryERMCountryData.UpdateGeneralPostingSetup;

      isInitialized := TRUE;
      COMMIT;
    END;

    LOCAL PROCEDURE CreateGenJournalTemplateBatch@2(VAR GenJournalBatch@1000 : Record 232);
    VAR
      GenJournalTemplate@1001 : Record 80;
    BEGIN
      LibraryERM.CreateGenJournalTemplate(GenJournalTemplate);
      LibraryERM.CreateGenJournalBatch(GenJournalBatch,GenJournalTemplate.Name);
      GenJournalBatch.VALIDATE("No. Series",LibraryUtility.GetGlobalNoSeriesCode);
      GenJournalBatch.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE CreateGenJournalLine@5(VAR GenJournalLine@1002 : Record 81;GenJournalBatch@1000 : Record 232;AccountType@1001 : Option;BalAccountType@1005 : Option;AccountNo@1004 : Code[20];BalAccountNo@1007 : Code[20];Amount@1006 : Decimal);
    BEGIN
      LibraryERM.CreateGeneralJnlLine(
        GenJournalLine,GenJournalBatch."Journal Template Name",GenJournalBatch.Name,GenJournalLine."Document Type"::" ",
        AccountType,AccountNo,Amount);
      GenJournalLine.VALIDATE("Bal. Account Type",BalAccountType);
      GenJournalLine.VALIDATE("Bal. Account No.",BalAccountNo);
      GenJournalLine.MODIFY;
    END;

    LOCAL PROCEDURE CreateStandardGenlJournalCode@18(VAR StandardGeneralJournalCode@1000 : Code[10]);
    VAR
      StandardGeneralJournal@1002 : Record 750;
    BEGIN
      StandardGeneralJournalCode :=
        COPYSTR(
          LibraryUtility.GenerateRandomCode(StandardGeneralJournal.FIELDNO(Code),DATABASE::"Standard General Journal"),
          1,LibraryUtility.GetFieldLength(DATABASE::"Standard General Journal",StandardGeneralJournal.FIELDNO(Code)));
    END;

    LOCAL PROCEDURE CreateGenJournalLines@14(VAR GenJournalBatch@1000 : Record 232;VAR StandardGeneralJournalCode@1001 : Code[10]);
    VAR
      GenJournalLine@1006 : Record 81;
      GLAccount@1005 : Record 15;
    BEGIN
      // Setup : Create General Journal Template and General Journal Batch.
      // Exercise : Create Multiple General Lines and save Them as standard Journal.
      LibraryERM.FindGLAccount(GLAccount);
      CreateGenJournalLine(
        GenJournalLine,GenJournalBatch,GenJournalLine."Account Type"::"G/L Account",GenJournalLine."Bal. Account Type"::"G/L Account",
        GLAccount."No.",'',LibraryRandom.RandDec(100,2));

      CreateGenJournalLine(
        GenJournalLine,GenJournalBatch,GenJournalLine."Account Type"::Customer,GenJournalLine."Bal. Account Type"::"G/L Account",
        LibrarySales.CreateCustomerNo,'',LibraryRandom.RandDec(100,2));

      CreateGenJournalLine(
        GenJournalLine,GenJournalBatch,GenJournalLine."Account Type"::Vendor,GenJournalLine."Bal. Account Type"::"Bank Account",
        LibraryPurchase.CreateVendorNo,'',LibraryRandom.RandDec(100,2));
      CreateStandardGenlJournalCode(StandardGeneralJournalCode);
      LibraryInventory.SaveAsStandardJournal(GenJournalBatch,StandardGeneralJournalCode,TRUE);
    END;

    LOCAL PROCEDURE DeleteGenJournalLine@8(VAR GenJournalLine@1001 : Record 81;JournalTemplateName@1002 : Code[10];JournalBatchName@1000 : Code[10]);
    BEGIN
      FindGenJournalLine(GenJournalLine,JournalTemplateName,JournalBatchName);
      REPEAT
        GenJournalLine.DELETE(TRUE);
      UNTIL GenJournalLine.NEXT = 0;
      COMMIT;
    END;

    [Normal]
    LOCAL PROCEDURE GetSavedStandardJournal@9(GenJournalBatch@1001 : Record 232;Code@1002 : Code[10]);
    VAR
      StandardGeneralJournal@1000 : Record 750;
    BEGIN
      StandardGeneralJournal.SETRANGE("Journal Template Name",GenJournalBatch."Journal Template Name");
      StandardGeneralJournal.SETRANGE(Code,Code);
      StandardGeneralJournal.FINDFIRST;
      IF PAGE.RUNMODAL(PAGE::"Standard General Journals",StandardGeneralJournal) = ACTION::LookupOK THEN
        StandardGeneralJournal.CreateGenJnlFromStdJnl(StandardGeneralJournal,GenJournalBatch.Name);
    END;

    LOCAL PROCEDURE UpdateStandardJournals@16(JournalTemplateName@1002 : Code[10];StandardGeneralJournalCode@1000 : Code[10]) : Code[20];
    VAR
      StandardGeneralJournalLine@1001 : Record 751;
      GLAccount@1003 : Record 15;
    BEGIN
      LibraryERM.CreateGLAccount(GLAccount);

      StandardGeneralJournalLine.SETRANGE("Journal Template Name",JournalTemplateName);
      StandardGeneralJournalLine.SETRANGE("Standard Journal Code",StandardGeneralJournalCode);
      StandardGeneralJournalLine.SETRANGE("Account Type",StandardGeneralJournalLine."Account Type"::"G/L Account");
      StandardGeneralJournalLine.FINDFIRST;
      StandardGeneralJournalLine.VALIDATE("Account No.",GLAccount."No.");
      StandardGeneralJournalLine.MODIFY;
      COMMIT;
      EXIT(StandardGeneralJournalLine."Account No.");
    END;

    LOCAL PROCEDURE DeleteAndGetStandardJournal@24(VAR GenJournalLine@1000 : Record 81;GenJournalBatch@1001 : Record 232;StandardGeneralJournalCode@1002 : Code[10]);
    BEGIN
      DeleteGenJournalLine(GenJournalLine,GenJournalBatch."Journal Template Name",GenJournalBatch.Name);
      GetSavedStandardJournal(GenJournalBatch,StandardGeneralJournalCode);
    END;

    LOCAL PROCEDURE FindGenJournalLine@11(VAR GenJournalLine@1000 : Record 81;JournalTemplateName@1001 : Code[10];JournalBatchName@1002 : Code[10]);
    BEGIN
      GenJournalLine.SETRANGE("Journal Template Name",JournalTemplateName);
      GenJournalLine.SETRANGE("Journal Batch Name",JournalBatchName);
      GenJournalLine.FINDSET;
    END;

    LOCAL PROCEDURE FindStandardGeneralJournalLine@22(VAR StandardGeneralJournalLine@1000 : Record 751;JournalTemplateName@1001 : Code[10]);
    BEGIN
      StandardGeneralJournalLine.SETRANGE("Journal Template Name",JournalTemplateName);
      StandardGeneralJournalLine.FINDSET;
    END;

    LOCAL PROCEDURE VerifyStandardGeneralJournal@7(JournalTemplateName@1001 : Code[10];NoOfLines@1003 : Integer);
    VAR
      StandardGeneralJournalLine@1000 : Record 751;
    BEGIN
      FindStandardGeneralJournalLine(StandardGeneralJournalLine,JournalTemplateName);
      Assert.AreEqual(StandardGeneralJournalLine.COUNT,NoOfLines,ErrNoOfLinesMustBeEqual);
    END;

    LOCAL PROCEDURE VerifyGenJournalLine@10(GenJournalBatch@1001 : Record 232);
    VAR
      GenJournalLine@1005 : Record 81;
      StandardGeneralJournalLine@1000 : Record 751;
    BEGIN
      FindStandardGeneralJournalLine(StandardGeneralJournalLine,GenJournalBatch."Journal Template Name");
      FindGenJournalLine(GenJournalLine,GenJournalBatch."Journal Template Name",GenJournalBatch.Name);
      Assert.AreEqual(GenJournalLine.COUNT,StandardGeneralJournalLine.COUNT,ErrNoOfLinesMustBeEqual);
    END;

    LOCAL PROCEDURE VerifyGLAccountNo@19(GenJournalBatch@1001 : Record 232;AccountNo@1000 : Code[20]);
    VAR
      GenJournalLine@1005 : Record 81;
    BEGIN
      GenJournalLine.SETRANGE("Journal Template Name",GenJournalBatch."Journal Template Name");
      GenJournalLine.SETRANGE("Journal Batch Name",GenJournalBatch.Name);
      GenJournalLine.SETRANGE("Account Type",GenJournalLine."Account Type"::"G/L Account");
      GenJournalLine.FINDFIRST;
      Assert.AreEqual(AccountNo,GenJournalLine."Account No.",'Account No must be the Same');
    END;

    LOCAL PROCEDURE VerifyCustLedgerEntry@23(CustomerNo@1000 : Code[20];Amount@1002 : Decimal);
    VAR
      CustLedgerEntry@1001 : Record 21;
      ActualAmount@1003 : Decimal;
    BEGIN
      CustLedgerEntry.SETRANGE("Customer No.",CustomerNo);
      CustLedgerEntry.FINDSET;
      REPEAT
        CustLedgerEntry.CALCFIELDS(Amount);
        ActualAmount += CustLedgerEntry.Amount;
      UNTIL CustLedgerEntry.NEXT = 0;
      Assert.AreEqual(Amount,ActualAmount,'Amount must be the Same');
    END;

    [Normal]
    LOCAL PROCEDURE ConvertMessage@89(ErrorMessage@1000 : Text[1024]) : Text[1024];
    VAR
      NewLine@1001 : Text[1];
    BEGIN
      // Remove New Line Character from Error Message.
      NewLine[1] := 13;
      EXIT(DELCHR(ErrorMessage,'=',NewLine));
    END;

    [ModalPageHandler]
    PROCEDURE ModalFormHandler@12(VAR StandardGeneralJournals@1000 : Page 750;VAR Response@1001 : Action);
    BEGIN
      Response := ACTION::LookupOK;
    END;

    [ConfirmHandler]
    PROCEDURE ConfirmHandler@87(Question@1000 : Text[1024];VAR Reply@1001 : Boolean);
    BEGIN
      Assert.AreNotEqual(STRPOS(ConvertMessage(Question),MSGStdGeneralJrnlExists),0,Question);
      Reply := TRUE;
    END;

    BEGIN
    {
      // [FEATURE] [Standard General Journal] [General Journal]
      Unsupported version tags:
      CA: Unable to Execute
      IT: Unable to Execute

      Test for General Journal:
        1. Create General Lines and Save them as Standard Journal
        2. Create General Line Using Get standard Journal.
        3. Create General Line Using Get standard Journal and Save them as Standard Journal.
        4. Update an Existing Standard Journal and Create General Line Using Get this standard Journal.
        5. Create General Line Using Get standard Journal.Save Multiple standard Journals.
        6. Create General Journal Lines and Replace an existing Standard Journal using Save standard Journal.
        7. Create General Line Using Get standard Journal.Post It.

       Covers Test cases:
        --------------------------------------------------------------------------------------
        Test Function Name                TFS ID
        --------------------------------------------------------------------------------------
        SaveStandardJournal               185629,121326
        GetStandardJournal                185629,121327
        GetAndSaveStandardJournal         185629,121328,121329
        UpdateAndGetStandardJournal       185629,121330,121331
        SaveMultipleStandardJournal       185629,121332,121333
        ReplaceExistingStandardJournal    185629,121334,121335
        PostStandardJournal               185629,121336,135775
    }
    END.
  }
}

