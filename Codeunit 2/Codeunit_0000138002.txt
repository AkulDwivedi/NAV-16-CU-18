OBJECT Codeunit 138002 SMB Email as PDF UT
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ReportDistributionManagement@1000 : Codeunit 452;
      Assert@1002 : Codeunit 130000;
      TmpResult@1001 : Text;
      InvalidWindowsChrStringTxt@1003 : TextConst 'ENU="""#%&*:<>?\/{|}~"';

    [Test]
    PROCEDURE DownloadPdfOnClient@19();
    VAR
      FileManagement@1002 : Codeunit 419;
    BEGIN
      // Empty server file name
      TmpResult := '';
      ASSERTERROR ReportDistributionManagement.DownloadPdfOnClient(TmpResult);
      Assert.IsTrue(STRPOS(GETLASTERRORTEXT,'File name was not specified') <> 0,'Expected error not thrown');

      // Correct file names
      TmpResult := FileManagement.ServerTempFileName('pdf');
      CreateFileOnServer(TmpResult);
      ReportDistributionManagement.DownloadPdfOnClient(TmpResult);
      Assert.IsFalse(FILE.EXISTS(TmpResult),'Server file was not deleted');
    END;

    [Test]
    PROCEDURE VerifyDeletionOfinvalidChr@1();
    VAR
      FileManagement@1000 : Codeunit 419;
    BEGIN
      Assert.AreEqual(
        '',FileManagement.StripNotsupportChrInFileName(InvalidWindowsChrStringTxt),
        'All invalid charaters needs to be deleted');
    END;

    [Normal]
    LOCAL PROCEDURE CreateFileOnServer@26(Path@1001 : Text);
    VAR
      File@1000 : File;
    BEGIN
      Assert.IsTrue(File.CREATE(Path),'Unable to create a file: ' + Path);
    END;

    BEGIN
    {
      // [FEATURE] [Report Distribution] [PDF]
    }
    END.
  }
}

