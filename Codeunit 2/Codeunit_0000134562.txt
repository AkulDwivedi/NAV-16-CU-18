OBJECT Codeunit 134562 Object Selection
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Assert@1000 : Codeunit 130000;
      CalcFieldValueErr@1001 : TextConst '@@@="%1 = CalcFieldRef";ENU=CalcField %1 was not calculated correctly';
      CalcFieldLengthErr@1004 : TextConst '@@@="%1 = CalcFieldRef";ENU=Length of CalcField %1 does not fit referenced object caption';
      LibraryUtility@1002 : Codeunit 131000;
      ReportSelectionErr@1003 : TextConst 'ENU=There is no Report Selections within the filter';

    [Test]
    PROCEDURE CashFlowReportSelection@4();
    VAR
      CashFlowReportSelection@1000 : Record 856;
    BEGIN
      RunReportTest(
        DATABASE::"Cash Flow Report Selection",
        CashFlowReportSelection.FIELDNO("Report ID"),
        CashFlowReportSelection.FIELDNO("Report Caption"));
    END;

    [Test]
    PROCEDURE CostJournalTemplate@13();
    VAR
      CostJournalTemplate@1000 : Record 1100;
    BEGIN
      RunReportTest(
        DATABASE::"Cost Journal Template",
        CostJournalTemplate.FIELDNO("Posting Report ID"),
        CostJournalTemplate.FIELDNO("Posting Report Caption"));
    END;

    [Test]
    PROCEDURE ResJournalTemplate@1();
    VAR
      ResJournalTemplate@1000 : Record 206;
    BEGIN
      RunReportTest(
        DATABASE::"Res. Journal Template",
        ResJournalTemplate.FIELDNO("Test Report ID"),
        ResJournalTemplate.FIELDNO("Test Report Caption"));
      RunPageTest(
        DATABASE::"Res. Journal Template",
        ResJournalTemplate.FIELDNO("Page ID"),
        ResJournalTemplate.FIELDNO("Page Caption"));
      RunReportTest(
        DATABASE::"Res. Journal Template",
        ResJournalTemplate.FIELDNO("Posting Report ID"),
        ResJournalTemplate.FIELDNO("Posting Report Caption"));
    END;

    [Test]
    PROCEDURE JobJournalTemplate@10();
    VAR
      JobJournalTemplate@1000 : Record 209;
    BEGIN
      RunReportTest(
        DATABASE::"Job Journal Template",
        JobJournalTemplate.FIELDNO("Test Report ID"),
        JobJournalTemplate.FIELDNO("Test Report Caption"));
      RunPageTest(
        DATABASE::"Job Journal Template",
        JobJournalTemplate.FIELDNO("Page ID"),
        JobJournalTemplate.FIELDNO("Page Caption"));
      RunReportTest(
        DATABASE::"Job Journal Template",
        JobJournalTemplate.FIELDNO("Posting Report ID"),
        JobJournalTemplate.FIELDNO("Posting Report Caption"));
    END;

    [Test]
    PROCEDURE ReqWkshTemplate@14();
    VAR
      ReqWkshTemplate@1000 : Record 244;
    BEGIN
      RunPageTest(
        DATABASE::"Req. Wksh. Template",
        ReqWkshTemplate.FIELDNO("Page ID"),
        ReqWkshTemplate.FIELDNO("Page Caption"));
    END;

    [Test]
    PROCEDURE VATStatementTemplate@16();
    VAR
      VATStatementTemplate@1000 : Record 255;
    BEGIN
      RunReportTest(
        DATABASE::"VAT Statement Template",
        VATStatementTemplate.FIELDNO("VAT Statement Report ID"),
        VATStatementTemplate.FIELDNO("VAT Statement Report Caption"));
      RunPageTest(
        DATABASE::"VAT Statement Template",
        VATStatementTemplate.FIELDNO("Page ID"),
        VATStatementTemplate.FIELDNO("Page Caption"));
    END;

    [Test]
    PROCEDURE IntrastatJnlTemplate@19();
    VAR
      IntrastatJnlTemplate@1000 : Record 261;
    BEGIN
      RunReportTest(
        DATABASE::"Intrastat Jnl. Template",
        IntrastatJnlTemplate.FIELDNO("Checklist Report ID"),
        IntrastatJnlTemplate.FIELDNO("Checklist Report Caption"));
      RunPageTest(
        DATABASE::"Intrastat Jnl. Template",
        IntrastatJnlTemplate.FIELDNO("Page ID"),
        IntrastatJnlTemplate.FIELDNO("Page Caption"));
    END;

    [Test]
    PROCEDURE DefaultDimension@21();
    VAR
      DefaultDimension@1000 : Record 352;
    BEGIN
      RunTableTest(
        DATABASE::"Default Dimension",
        DefaultDimension.FIELDNO("Table ID"),
        DefaultDimension.FIELDNO("Table Caption"));
    END;

    [Test]
    PROCEDURE DefaultDimensionPriority@23();
    VAR
      DefaultDimensionPriority@1000 : Record 354;
    BEGIN
      RunTableTest(
        DATABASE::"Default Dimension Priority",
        DefaultDimensionPriority.FIELDNO("Table ID"),
        DefaultDimensionPriority.FIELDNO("Table Caption"));
    END;

    [Test]
    PROCEDURE ChangeLogSetupTable@25();
    VAR
      ChangeLogSetupTable@1000 : Record 403;
    BEGIN
      RunTableTest(
        DATABASE::"Change Log Setup (Table)",
        ChangeLogSetupTable.FIELDNO("Table No."),
        ChangeLogSetupTable.FIELDNO("Table Caption"));
    END;

    [Test]
    PROCEDURE ChangeLogEntry@28();
    VAR
      ChangeLogEntry@1000 : Record 405;
    BEGIN
      RunTableTest(
        DATABASE::"Change Log Entry",
        ChangeLogEntry.FIELDNO("Table No."),
        ChangeLogEntry.FIELDNO("Table Caption"));
    END;

    [Test]
    PROCEDURE JobQueueEntry@30();
    VAR
      Object@1000 : Record 2000000001;
      JobQueueEntry@1001 : Record 472;
    BEGIN
      RunTestWithObjectType(
        DATABASE::"Job Queue Entry",
        JobQueueEntry.FIELDNO("Object Type to Run"),
        JobQueueEntry.FIELDNO("Object ID to Run"),
        JobQueueEntry.FIELDNO("Object Caption to Run"),
        Object.Type::Report);
    END;

    [Test]
    PROCEDURE JobQueueLogEntry@32();
    VAR
      Object@1000 : Record 2000000001;
      JobQueueLogEntry@1001 : Record 474;
    BEGIN
      RunTestWithObjectType(
        DATABASE::"Job Queue Log Entry",
        JobQueueLogEntry.FIELDNO("Object Type to Run"),
        JobQueueLogEntry.FIELDNO("Object ID to Run"),
        JobQueueLogEntry.FIELDNO("Object Caption to Run"),
        Object.Type::Report);
    END;

    [Test]
    PROCEDURE SegmentCriteriaLine@34();
    VAR
      SegmentCriteriaLine@1000 : Record 5097;
    BEGIN
      RunTableTest(
        DATABASE::"Segment Criteria Line",
        SegmentCriteriaLine.FIELDNO("Table No."),
        SegmentCriteriaLine.FIELDNO("Table Caption"));
    END;

    [Test]
    PROCEDURE SavedSegmentCriteriaLine@36();
    VAR
      SavedSegmentCriteriaLine@1000 : Record 5099;
    BEGIN
      RunTableTest(
        DATABASE::"Saved Segment Criteria Line",
        SavedSegmentCriteriaLine.FIELDNO("Table No."),
        SavedSegmentCriteriaLine.FIELDNO("Table Caption"));
    END;

    [Test]
    PROCEDURE OutlookSynchEntity@38();
    VAR
      OutlookSynchEntity@1000 : Record 5300;
    BEGIN
      RunTableTest(
        DATABASE::"Outlook Synch. Entity",
        OutlookSynchEntity.FIELDNO("Table No."),
        OutlookSynchEntity.FIELDNO("Table Caption"));
    END;

    [Test]
    PROCEDURE OutlookSynchEntityElement@40();
    VAR
      OutlookSynchEntityElement@1000 : Record 5301;
    BEGIN
      RunTableTest(
        DATABASE::"Outlook Synch. Entity Element",
        OutlookSynchEntityElement.FIELDNO("Table No."),
        OutlookSynchEntityElement.FIELDNO("Table Caption"));
    END;

    [Test]
    PROCEDURE OutlookSynchField@42();
    VAR
      OutlookSynchField@1000 : Record 5304;
    BEGIN
      RunTableTest(
        DATABASE::"Outlook Synch. Field",
        OutlookSynchField.FIELDNO("Table No."),
        OutlookSynchField.FIELDNO("Table Caption"));
    END;

    [Test]
    PROCEDURE FAJournalTemplate@44();
    VAR
      FAJournalTemplate@1000 : Record 5619;
    BEGIN
      RunReportTest(
        DATABASE::"FA Journal Template",
        FAJournalTemplate.FIELDNO("Test Report ID"),
        FAJournalTemplate.FIELDNO("Test Report Caption"));
      RunPageTest(
        DATABASE::"FA Journal Template",
        FAJournalTemplate.FIELDNO("Page ID"),
        FAJournalTemplate.FIELDNO("Page Caption"));
      RunReportTest(
        DATABASE::"FA Journal Template",
        FAJournalTemplate.FIELDNO("Posting Report ID"),
        FAJournalTemplate.FIELDNO("Posting Report Caption"));
    END;

    [Test]
    PROCEDURE FAReclassJournalTemplate@46();
    VAR
      FAReclassJournalTemplate@1000 : Record 5622;
    BEGIN
      RunPageTest(
        DATABASE::"FA Reclass. Journal Template",
        FAReclassJournalTemplate.FIELDNO("Page ID"),
        FAReclassJournalTemplate.FIELDNO("Page Caption"));
    END;

    [Test]
    PROCEDURE InsuranceJournalTemplate@49();
    VAR
      InsuranceJournalTemplate@1000 : Record 5633;
    BEGIN
      RunReportTest(
        DATABASE::"Insurance Journal Template",
        InsuranceJournalTemplate.FIELDNO("Test Report ID"),
        InsuranceJournalTemplate.FIELDNO("Test Report Caption"));
      RunPageTest(
        DATABASE::"Insurance Journal Template",
        InsuranceJournalTemplate.FIELDNO("Page ID"),
        InsuranceJournalTemplate.FIELDNO("Page Caption"));
      RunReportTest(
        DATABASE::"Insurance Journal Template",
        InsuranceJournalTemplate.FIELDNO("Posting Report ID"),
        InsuranceJournalTemplate.FIELDNO("Posting Report Caption"));
    END;

    [Test]
    PROCEDURE WarehouseJournalTemplate@51();
    VAR
      WarehouseJournalTemplate@1000 : Record 7309;
    BEGIN
      RunReportTest(
        DATABASE::"Warehouse Journal Template",
        WarehouseJournalTemplate.FIELDNO("Test Report ID"),
        WarehouseJournalTemplate.FIELDNO("Test Report Caption"));
      RunPageTest(
        DATABASE::"Warehouse Journal Template",
        WarehouseJournalTemplate.FIELDNO("Page ID"),
        WarehouseJournalTemplate.FIELDNO("Page Caption"));
      RunReportTest(
        DATABASE::"Warehouse Journal Template",
        WarehouseJournalTemplate.FIELDNO("Registering Report ID"),
        WarehouseJournalTemplate.FIELDNO("Registering Report Caption"));
    END;

    [Test]
    PROCEDURE WhseWorksheetTemplate@55();
    VAR
      WhseWorksheetTemplate@1000 : Record 7328;
    BEGIN
      RunPageTest(
        DATABASE::"Whse. Worksheet Template",
        WhseWorksheetTemplate.FIELDNO("Page ID"),
        WhseWorksheetTemplate.FIELDNO("Page Caption"));
    END;

    [Test]
    PROCEDURE BinCreationWkshTemplate@57();
    VAR
      BinCreationWkshTemplate@1000 : Record 7336;
    BEGIN
      RunPageTest(
        DATABASE::"Bin Creation Wksh. Template",
        BinCreationWkshTemplate.FIELDNO("Page ID"),
        BinCreationWkshTemplate.FIELDNO("Page Caption"));
    END;

    [Test]
    PROCEDURE ReportSelections@59();
    VAR
      ReportSelections@1000 : Record 77;
    BEGIN
      RunReportTest(
        DATABASE::"Report Selections",
        ReportSelections.FIELDNO("Report ID"),
        ReportSelections.FIELDNO("Report Caption"));
    END;

    [Test]
    PROCEDURE PrinterSelection@61();
    VAR
      PrinterSelection@1000 : Record 78;
    BEGIN
      RunReportTest(
        DATABASE::"Printer Selection",
        PrinterSelection.FIELDNO("Report ID"),
        PrinterSelection.FIELDNO("Report Caption"));
    END;

    [Test]
    PROCEDURE GenJournalTemplate@64();
    VAR
      GenJournalTemplate@1000 : Record 80;
    BEGIN
      RunReportTest(
        DATABASE::"Gen. Journal Template",
        GenJournalTemplate.FIELDNO("Test Report ID"),
        GenJournalTemplate.FIELDNO("Test Report Caption"));
      RunPageTest(
        DATABASE::"Gen. Journal Template",
        GenJournalTemplate.FIELDNO("Page ID"),
        GenJournalTemplate.FIELDNO("Page Caption"));
      RunReportTest(
        DATABASE::"Gen. Journal Template",
        GenJournalTemplate.FIELDNO("Posting Report ID"),
        GenJournalTemplate.FIELDNO("Posting Report Caption"));
    END;

    [Test]
    PROCEDURE ItemJournalTemplate@69();
    VAR
      ItemJournalTemplate@1000 : Record 82;
    BEGIN
      RunReportTest(
        DATABASE::"Item Journal Template",
        ItemJournalTemplate.FIELDNO("Test Report ID"),
        ItemJournalTemplate.FIELDNO("Test Report Caption"));
      RunPageTest(
        DATABASE::"Item Journal Template",
        ItemJournalTemplate.FIELDNO("Page ID"),
        ItemJournalTemplate.FIELDNO("Page Caption"));
      RunReportTest(
        DATABASE::"Item Journal Template",
        ItemJournalTemplate.FIELDNO("Posting Report ID"),
        ItemJournalTemplate.FIELDNO("Posting Report Caption"));
    END;

    [Test]
    PROCEDURE ConfigQuestionArea@71();
    VAR
      ConfigQuestionArea@1000 : Record 8611;
    BEGIN
      RunTableTest(
        DATABASE::"Config. Question Area",
        ConfigQuestionArea.FIELDNO("Table ID"),
        ConfigQuestionArea.FIELDNO("Table Caption"));
    END;

    [Test]
    PROCEDURE ConfigPackageTable@76();
    VAR
      ConfigPackageTable@1000 : Record 8613;
    BEGIN
      RunTableTest(
        DATABASE::"Config. Package Table",
        ConfigPackageTable.FIELDNO("Table ID"),
        ConfigPackageTable.FIELDNO("Table Caption"));
    END;

    [Test]
    PROCEDURE ConfigTemplateHeader@80();
    VAR
      ConfigTemplateHeader@1000 : Record 8618;
    BEGIN
      RunTableTest(
        DATABASE::"Config. Template Header",
        ConfigTemplateHeader.FIELDNO("Table ID"),
        ConfigTemplateHeader.FIELDNO("Table Caption"));
    END;

    [Test]
    PROCEDURE ConfigTemplateLine@82();
    VAR
      ConfigTemplateLine@1000 : Record 8619;
    BEGIN
      RunTableTest(
        DATABASE::"Config. Template Line",
        ConfigTemplateLine.FIELDNO("Table ID"),
        ConfigTemplateLine.FIELDNO("Table Caption"));
    END;

    [Test]
    PROCEDURE DateComprRegister@84();
    VAR
      DateComprRegister@1000 : Record 87;
    BEGIN
      RunTableTest(
        DATABASE::"Date Compr. Register",
        DateComprRegister.FIELDNO("Table ID"),
        DateComprRegister.FIELDNO("Table Caption"));
    END;

    [Test]
    PROCEDURE AssemblyOrderInReportSelectionInventory@6();
    VAR
      ReportSelectionInventory@1000 : TestPage 5754;
      ReportUsage2@1001 : 'Transfer Order,Transfer Shipment,Transfer Receipt,Inventory Period Test,Asm. Order,P.Assembly Order';
    BEGIN
      // [FEATURE] [Report Selection] [Assembly]
      // [SCENARIO 375912] Report Selection - Inventory should include Assembly Order
      ReportSelectionInventory.OPENEDIT;

      // [WHEN] Set "Asm. Order" for Usage in Report Selection Inventory Page
      ReportSelectionInventory.ReportUsage2.SETVALUE(ReportUsage2::"Asm. Order");

      // [THEN] "Report ID" is 902 (Assembly Order)
      ReportSelectionInventory."Report ID".ASSERTEQUALS(REPORT::"Assembly Order");
    END;

    [Test]
    PROCEDURE PostedAssemblyOrderInReportSelectionInventory@3();
    VAR
      ReportSelectionInventory@1000 : TestPage 5754;
      ReportUsage2@1001 : 'Transfer Order,Transfer Shipment,Transfer Receipt,Inventory Period Test,Asm. Order,P.Assembly Order';
    BEGIN
      // [FEATURE] [Report Selection] [Assembly]
      // [SCENARIO 375912] Report Selection - Inventory should include Posted Assembly Order
      ReportSelectionInventory.OPENEDIT;

      // [WHEN] Set "P.Assembly Order" for Usage in Report Selection Inventory Page
      ReportSelectionInventory.ReportUsage2.SETVALUE(ReportUsage2::"P.Assembly Order");

      // [THEN] "Report ID" is 910 (Posted Assembly Order)
      ReportSelectionInventory."Report ID".ASSERTEQUALS(REPORT::"Posted Assembly Order");
    END;

    [Test]
    [HandlerFunctions(ProdOrderJobCardHandler)]
    PROCEDURE ProdOrderJobCardOnFirmPlannedProdOrders@9();
    VAR
      ReportSelections@1001 : Record 77;
      FirmPlannedProdOrders@1000 : TestPage 9325;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderJobCard" of "Firm Planned Prod. Orders" Page should run "Prod. Order - Job Card" Report

      // [GIVEN] Report Selection for M1
      ReportSelections.DELETEALL;
      CreateReportSelection(ReportSelections.Usage::M1,REPORT::"Prod. Order - Job Card");
      FirmPlannedProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderJobCard" action on "Firm Planned Prod. Order" Page
      COMMIT;
      FirmPlannedProdOrders.ProdOrderJobCard.INVOKE;

      // [THEN] Report "Prod. Order - Job Card" is run
      // Verify through ProdOrderJobCardHandler
    END;

    [Test]
    [HandlerFunctions(ProdOrderMatRequisitionHandler)]
    PROCEDURE ProdOrderMaterialRequisitionOnFirmPlannedProdOrders@68();
    VAR
      ReportSelections@1001 : Record 77;
      FirmPlannedProdOrders@1000 : TestPage 9325;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderMaterialRequisition" of "Firm Planned Prod. Orders" Page should run "Prod. Order - Mat. Requisition" Report

      // [GIVEN] Report Selection for M2
      ReportSelections.DELETEALL;
      CreateReportSelection(ReportSelections.Usage::M2,REPORT::"Prod. Order - Mat. Requisition");
      FirmPlannedProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderMaterialRequisition" action on "Firm Planned Prod. Order" Page
      COMMIT;
      FirmPlannedProdOrders.ProdOrderMaterialRequisition.INVOKE;

      // [THEN] Report "Prod. Order - Mat. Requisition" is run
      // Verify through ProdOrderMatRequisitionHandler
    END;

    [Test]
    [HandlerFunctions(ProdOrderShortageListHandler)]
    PROCEDURE ProdOrderShortageListOnFirmPlannedProdOrders@31();
    VAR
      ReportSelections@1001 : Record 77;
      FirmPlannedProdOrders@1000 : TestPage 9325;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderShortageList" of "Firm Planned Prod. Orders" Page should run "Prod. Order - Shortage List" Report

      // [GIVEN] Report Selection for M3
      ReportSelections.DELETEALL;
      CreateReportSelection(ReportSelections.Usage::M3,REPORT::"Prod. Order - Shortage List");
      FirmPlannedProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderShortageList" action on "Firm Planned Prod. Order" Page
      COMMIT;
      FirmPlannedProdOrders.ProdOrderShortageList.INVOKE;

      // [THEN] Report ""Prod. Order - Shortage List" is run
      // Verify through ProdOrderShortageListHandler
    END;

    [Test]
    [HandlerFunctions(ProdOrderJobCardHandler)]
    PROCEDURE ProdOrderJobCardOnRelPlannedProdOrders@39();
    VAR
      ReportSelections@1001 : Record 77;
      RelProdOrders@1000 : TestPage 9326;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderJobCard" of "Released Production Orders" Page should run "Prod. Order - Job Card" Report

      // [GIVEN] Report Selection for M1
      ReportSelections.DELETEALL;
      CreateReportSelection(ReportSelections.Usage::M1,REPORT::"Prod. Order - Job Card");
      RelProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderJobCard" action on "Released Production Orders" Page
      COMMIT;
      RelProdOrders.ProdOrderJobCard.INVOKE;

      // [THEN] Report "Prod. Order - Job Card" is run
      // Verify through ProdOrderJobCardHandler
    END;

    [Test]
    [HandlerFunctions(ProdOrderMatRequisitionHandler)]
    PROCEDURE ProdOrderMaterialRequisitionOnRelPlannedProdOrders@29();
    VAR
      ReportSelections@1001 : Record 77;
      RelProdOrders@1000 : TestPage 9326;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderMaterialRequisition" of "Released Production Orders" Page should run "Prod. Order - Mat. Requisition" Report

      // [GIVEN] Report Selection for M2
      ReportSelections.DELETEALL;
      CreateReportSelection(ReportSelections.Usage::M2,REPORT::"Prod. Order - Mat. Requisition");
      RelProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderMaterialRequisition" action on "Released Production Orders" Page
      COMMIT;
      RelProdOrders.ProdOrderMaterialRequisition.INVOKE;

      // [THEN] Report "Prod. Order - Mat. Requisition" is run
      // Verify through ProdOrderMatRequisitionHandler
    END;

    [Test]
    [HandlerFunctions(ProdOrderShortageListHandler)]
    PROCEDURE ProdOrderShortageListOnRelPlannedProdOrders@26();
    VAR
      ReportSelections@1001 : Record 77;
      RelProdOrders@1000 : TestPage 9326;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderShortageList" of "Released Production Orders" Page should run "Prod. Order - Shortage List" Report

      // [GIVEN] Report Selection for M3
      ReportSelections.DELETEALL;
      CreateReportSelection(ReportSelections.Usage::M3,REPORT::"Prod. Order - Shortage List");
      RelProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderShortageList" action on "Released Production Orders" Page
      COMMIT;
      RelProdOrders.ProdOrderShortageList.INVOKE;

      // [THEN] Report ""Prod. Order - Shortage List" is run
      // Verify through ProdOrderShortageListHandler
    END;

    [Test]
    [HandlerFunctions(ProdOrderJobCardHandler)]
    PROCEDURE ProdOrderJobCardOnFinPlannedProdOrders@47();
    VAR
      ReportSelections@1001 : Record 77;
      FinProdOrders@1000 : TestPage 9327;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderJobCard" of "Finished Production Orders" Page should run "Prod. Order - Job Card" Report

      // [GIVEN] Report Selection for M1
      ReportSelections.DELETEALL;
      CreateReportSelection(ReportSelections.Usage::M1,REPORT::"Prod. Order - Job Card");
      FinProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderJobCard" action on "Finished Production Orders" Page
      COMMIT;
      FinProdOrders.ProdOrderJobCard.INVOKE;

      // [THEN] Report "Prod. Order - Job Card" is run
      // Verify through ProdOrderJobCardHandler
    END;

    [Test]
    [HandlerFunctions(ProdOrderMatRequisitionHandler)]
    PROCEDURE ProdOrderMaterialRequisitionOnFinPlannedProdOrders@45();
    VAR
      ReportSelections@1001 : Record 77;
      FinProdOrders@1000 : TestPage 9327;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderMaterialRequisition" of "Finished Production Orders" Page should run "Prod. Order - Mat. Requisition" Report

      // [GIVEN] Report Selection for M2
      ReportSelections.DELETEALL;
      CreateReportSelection(ReportSelections.Usage::M2,REPORT::"Prod. Order - Mat. Requisition");
      FinProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderMaterialRequisition" action on "Finished Production Orders" Page
      COMMIT;
      FinProdOrders.ProdOrderMaterialRequisition.INVOKE;

      // [THEN] Report "Prod. Order - Mat. Requisition" is run
      // Verify through ProdOrderMatRequisitionHandler
    END;

    [Test]
    [HandlerFunctions(ProdOrderShortageListHandler)]
    PROCEDURE ProdOrderShortageListOnFinPlannedProdOrders@41();
    VAR
      ReportSelections@1001 : Record 77;
      FinProdOrders@1000 : TestPage 9327;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderShortageList" of "Finished Production Orders" Page should run "Prod. Order - Shortage List" Report

      // [GIVEN] Report Selection for M3
      ReportSelections.DELETEALL;
      CreateReportSelection(ReportSelections.Usage::M3,REPORT::"Prod. Order - Shortage List");
      FinProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderShortageList" action on "Finished Production Orders" Page
      COMMIT;
      FinProdOrders.ProdOrderShortageList.INVOKE;

      // [THEN] Report ""Prod. Order - Shortage List" is run
      // Verify through ProdOrderShortageListHandler
    END;

    [Test]
    PROCEDURE ProdOrderJobCardOnFirmPlannedProdOrdersError@97();
    VAR
      ReportSelections@1001 : Record 77;
      FirmPlannedProdOrders@1000 : TestPage 9325;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderJobCard" of "Firm Planned Prod. Orders" Page should fail if no Report Selection is setup

      // [GIVEN] No Report Selection for M1
      ReportSelections.DELETEALL;
      FirmPlannedProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderJobCard" action on "Firm Planned Prod. Order" Page
      ASSERTERROR FirmPlannedProdOrders.ProdOrderJobCard.INVOKE;

      // [THEN] Error is thrown: "There is no Report Selections within the filter"
      Assert.ExpectedError(ReportSelectionErr);
    END;

    [Test]
    PROCEDURE ProdOrderMaterialRequisitionOnFirmPlannedProdOrdersError@96();
    VAR
      ReportSelections@1001 : Record 77;
      FirmPlannedProdOrders@1000 : TestPage 9325;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderMaterialRequisition" of "Firm Planned Prod. Orders" Page should fail if no Report Selection is setup

      // [GIVEN] No Report Selection for M2
      ReportSelections.DELETEALL;
      FirmPlannedProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderMaterialRequisition" action on "Firm Planned Prod. Order" Page
      ASSERTERROR FirmPlannedProdOrders.ProdOrderMaterialRequisition.INVOKE;

      // [THEN] Error is thrown: "There is no Report Selections within the filter"
      Assert.ExpectedError(ReportSelectionErr);
    END;

    [Test]
    PROCEDURE ProdOrderShortageListOnFirmPlannedProdOrdersError@95();
    VAR
      ReportSelections@1001 : Record 77;
      FirmPlannedProdOrders@1000 : TestPage 9325;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderShortageList" of "Firm Planned Prod. Orders" Page should fail if no Report Selection is setup

      // [GIVEN] No Report Selection for M3
      ReportSelections.DELETEALL;
      FirmPlannedProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderShortageList" action on "Firm Planned Prod. Order" Page
      ASSERTERROR FirmPlannedProdOrders.ProdOrderShortageList.INVOKE;

      // [THEN] Error is thrown: "There is no Report Selections within the filter"
      Assert.ExpectedError(ReportSelectionErr);
    END;

    [Test]
    PROCEDURE ProdOrderJobCardOnRelPlannedProdOrdersError@94();
    VAR
      ReportSelections@1001 : Record 77;
      RelProdOrders@1000 : TestPage 9326;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderJobCard" of "Released Production Orders" Page should fail if no Report Selection is setup

      // [GIVEN] No Report Selection for M1
      ReportSelections.DELETEALL;
      RelProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderJobCard" action on "Released Production Orders" Page
      ASSERTERROR RelProdOrders.ProdOrderJobCard.INVOKE;

      // [THEN] Error is thrown: "There is no Report Selections within the filter"
      Assert.ExpectedError(ReportSelectionErr);
    END;

    [Test]
    PROCEDURE ProdOrderMaterialRequisitionOnRelPlannedProdOrdersError@93();
    VAR
      ReportSelections@1001 : Record 77;
      RelProdOrders@1000 : TestPage 9326;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderMaterialRequisition" of "Released Production Orders" Page should fail if no Report Selection is setup

      // [GIVEN] No Report Selection for M2
      ReportSelections.DELETEALL;
      RelProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderMaterialRequisition" action on "Released Production Orders" Page
      ASSERTERROR RelProdOrders.ProdOrderMaterialRequisition.INVOKE;

      // [THEN] Error is thrown: "There is no Report Selections within the filter"
      Assert.ExpectedError(ReportSelectionErr);
    END;

    [Test]
    PROCEDURE ProdOrderShortageListOnRelPlannedProdOrdersError@91();
    VAR
      ReportSelections@1001 : Record 77;
      RelProdOrders@1000 : TestPage 9326;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderShortageList" of "Released Production Orders" Page should fail if no Report Selection is setup

      // [GIVEN] No Report Selection for M3
      ReportSelections.DELETEALL;
      RelProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderShortageList" action on "Released Production Orders" Page
      ASSERTERROR RelProdOrders.ProdOrderShortageList.INVOKE;

      // [THEN] Error is thrown: "There is no Report Selections within the filter"
      Assert.ExpectedError(ReportSelectionErr);
    END;

    [Test]
    PROCEDURE ProdOrderJobCardOnFinPlannedProdOrdersError@88();
    VAR
      ReportSelections@1001 : Record 77;
      FinProdOrders@1000 : TestPage 9327;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderJobCard" of "Finished Production Orders" Page should fail if no Report Selection is setup

      // [GIVEN] No Report Selection for M1
      ReportSelections.DELETEALL;
      FinProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderJobCard" action on "Finished Production Orders" Page
      ASSERTERROR FinProdOrders.ProdOrderJobCard.INVOKE;

      // [THEN] Error is thrown: "There is no Report Selections within the filter"
      Assert.ExpectedError(ReportSelectionErr);
    END;

    [Test]
    PROCEDURE ProdOrderMaterialRequisitionOnFinPlannedProdOrdersError@87();
    VAR
      ReportSelections@1001 : Record 77;
      FinProdOrders@1000 : TestPage 9327;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderMaterialRequisition" of "Finished Production Orders" Page should fail if no Report Selection is setup

      // [GIVEN] No Report Selection for M2
      ReportSelections.DELETEALL;
      FinProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderMaterialRequisition" action on "Finished Production Orders" Page
      ASSERTERROR FinProdOrders.ProdOrderMaterialRequisition.INVOKE;

      // [THEN] Error is thrown: "There is no Report Selections within the filter"
      Assert.ExpectedError(ReportSelectionErr);
    END;

    [Test]
    PROCEDURE ProdOrderShortageListOnFinPlannedProdOrdersError@86();
    VAR
      ReportSelections@1001 : Record 77;
      FinProdOrders@1000 : TestPage 9327;
    BEGIN
      // [FEATURE] [UT] [Report Selection] [Production Order]
      // [SCENARIO 376612] "ProdOrderShortageList" of "Finished Production Orders" Page should fail if no Report Selection is setup

      // [GIVEN] No Report Selection for M3
      ReportSelections.DELETEALL;
      FinProdOrders.OPENNEW;

      // [WHEN] Run "ProdOrderShortageList" action on "Finished Production Orders" Page
      ASSERTERROR FinProdOrders.ProdOrderShortageList.INVOKE;

      // [THEN] Error is thrown: "There is no Report Selections within the filter"
      Assert.ExpectedError(ReportSelectionErr);
    END;

    LOCAL PROCEDURE RunTest@8(TableId@1005 : Integer;IdFieldNo@1006 : Integer;CalcFieldNo@1007 : Integer;ObjectType@1008 : Integer);
    VAR
      AllObjWithCaption@1001 : Record 2000000058;
      CalcFieldRef@1004 : FieldRef;
      RecRef@1000 : RecordRef;
    BEGIN
      // Initiliaze
      InitCalcRecord(
        CalcFieldRef,AllObjWithCaption,RecRef,TableId,IdFieldNo,CalcFieldNo,ObjectType);

      // Excercise
      CalcFieldRef.CALCFIELD;

      // Test
      VerifyCalculatedField(AllObjWithCaption,CalcFieldRef);
    END;

    LOCAL PROCEDURE RunTestWithObjectType@27(TableId@1005 : Integer;ObjectTypeFieldNo@1002 : Integer;IdFieldNo@1006 : Integer;CalcFieldNo@1007 : Integer;ObjectType@1008 : Integer);
    VAR
      AllObjWithCaption@1001 : Record 2000000058;
      CalcFieldRef@1004 : FieldRef;
    BEGIN
      // Initiliaze
      InitCalcRecordWithObjectType(
        CalcFieldRef,AllObjWithCaption,TableId,ObjectTypeFieldNo,IdFieldNo,CalcFieldNo,
        ObjectType);

      // Excercise
      CalcFieldRef.CALCFIELD;

      // Test
      VerifyCalculatedField(AllObjWithCaption,CalcFieldRef);
    END;

    LOCAL PROCEDURE RunPageTest@89(ObjectIdToTest@1002 : Integer;IdFieldNo@1001 : Integer;CalcFieldNo@1000 : Integer);
    VAR
      Object@1003 : Record 2000000001;
    BEGIN
      RunTest(
        ObjectIdToTest,IdFieldNo,CalcFieldNo,Object.Type::Page);
    END;

    LOCAL PROCEDURE RunReportTest@90(ObjectIdToTest@1002 : Integer;IdFieldNo@1001 : Integer;CalcFieldNo@1000 : Integer);
    VAR
      Object@1003 : Record 2000000001;
    BEGIN
      RunTest(
        ObjectIdToTest,IdFieldNo,CalcFieldNo,Object.Type::Report);
    END;

    LOCAL PROCEDURE RunTableTest@92(ObjectIdToTest@1002 : Integer;IdFieldNo@1001 : Integer;CalcFieldNo@1000 : Integer);
    VAR
      Object@1003 : Record 2000000001;
    BEGIN
      RunTest(
        ObjectIdToTest,IdFieldNo,CalcFieldNo,Object.Type::Table);
    END;

    LOCAL PROCEDURE VerifyCalculatedField@2(AllObjWithCaption@1001 : Record 2000000058;CalcFieldRef@1003 : FieldRef);
    BEGIN
      Assert.IsTrue(
        CalcFieldRef.LENGTH >= MAXSTRLEN(AllObjWithCaption."Object Caption"),
        STRSUBSTNO(CalcFieldLengthErr,CalcFieldRef.NAME));

      Assert.AreEqual(
        AllObjWithCaption."Object Caption",
        CalcFieldRef.VALUE,
        STRSUBSTNO(CalcFieldValueErr,CalcFieldRef.NAME));
    END;

    LOCAL PROCEDURE InitCalcRecord@5(VAR CalcFieldRef@1002 : FieldRef;VAR AllObjWithCaption@1003 : Record 2000000058;VAR RecRef@1000 : RecordRef;TableId@1007 : Integer;IdFieldNo@1009 : Integer;CalcFieldNo@1005 : Integer;ObjectType@1008 : Integer);
    VAR
      IdFieldRef@1006 : FieldRef;
      ObjectId@1004 : Integer;
    BEGIN
      GetAllObjWithCaption(AllObjWithCaption,ObjectType,ObjectId);

      RecRef.OPEN(TableId);
      IdFieldRef := RecRef.FIELD(IdFieldNo);
      CalcFieldRef := RecRef.FIELD(CalcFieldNo);
      IdFieldRef.VALUE(ObjectId);
    END;

    LOCAL PROCEDURE InitCalcRecordWithObjectType@18(VAR CalcFieldRef@1002 : FieldRef;VAR AllObjWithCaption@1003 : Record 2000000058;TableId@1007 : Integer;ObjectTypeFieldNo@1011 : Integer;IdFieldNo@1009 : Integer;CalcFieldNo@1005 : Integer;ObjectType@1008 : Integer);
    VAR
      RecRef@1001 : RecordRef;
      ObjectTypeFieldRef@1000 : FieldRef;
    BEGIN
      InitCalcRecord(
        CalcFieldRef,AllObjWithCaption,RecRef,TableId,IdFieldNo,CalcFieldNo,ObjectType);

      ObjectTypeFieldRef := RecRef.FIELD(ObjectTypeFieldNo);
      ObjectTypeFieldRef.VALUE(ObjectType);
    END;

    LOCAL PROCEDURE GetAllObjWithCaption@7(VAR AllObjWithCaption@1000 : Record 2000000058;ObjectType@1001 : Integer;VAR ObjectId@1002 : Integer);
    BEGIN
      WITH AllObjWithCaption DO BEGIN
        SETRANGE("Object Type",ObjectType);
        FINDFIRST;
        ObjectId := "Object ID";
      END;
    END;

    LOCAL PROCEDURE CreateReportSelection@15(UsageOption@1001 : Option;ReportID@1002 : Integer);
    VAR
      ReportSelections@1000 : Record 77;
    BEGIN
      WITH ReportSelections DO BEGIN
        INIT;
        Usage := UsageOption;
        Sequence :=
          LibraryUtility.GenerateRandomCode(FIELDNO(Sequence),DATABASE::"Report Selections");
        VALIDATE("Report ID",ReportID);
        INSERT;
      END;
    END;

    [RequestPageHandler]
    PROCEDURE ProdOrderJobCardHandler@43(VAR ProdOrderJobCard@1000 : TestRequestPage 99000762);
    BEGIN
    END;

    [RequestPageHandler]
    PROCEDURE ProdOrderMatRequisitionHandler@11(VAR ProdOrderMatRequisition@1000 : TestRequestPage 99000765);
    BEGIN
    END;

    [RequestPageHandler]
    PROCEDURE ProdOrderShortageListHandler@22(VAR ProdOrderShortageList@1000 : TestRequestPage 99000788);
    BEGIN
    END;

    BEGIN
    {
      // [FEATURE] [Object Selection]
    }
    END.
  }
}

