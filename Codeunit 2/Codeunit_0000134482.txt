OBJECT Codeunit 134482 Test Change Shortcut Dimension
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      LibraryDimension@1001 : Codeunit 131001;
      Assert@1000 : Codeunit 130000;

    [Test]
    PROCEDURE TestClearAllShortCutDims@2();
    VAR
      DimensionValue@1001 : Record 349;
    BEGIN
      // Exercise
      ClearShortCutDims;

      // Validate
      DimensionValue.SETRANGE("Global Dimension No.",3,8);
      Assert.AreEqual(0,DimensionValue.COUNT,'');
    END;

    [Test]
    PROCEDURE TestAssignShortCutDims@7();
    VAR
      GeneralLedgerSetup@1000 : Record 98;
      Dimension@1001 : Record 348;
      DimNo@1002 : Integer;
    BEGIN
      // Exercise
      ClearShortCutDims;
      DimNo := 2;
      WITH GeneralLedgerSetup DO BEGIN
        GET;
        IF Dimension.FINDSET THEN
          REPEAT
            IF NOT (Dimension.Code IN ["Global Dimension 1 Code","Global Dimension 2 Code"]) THEN BEGIN
              DimNo += 1;
              CASE DimNo OF
                3:
                  VALIDATE("Shortcut Dimension 3 Code",Dimension.Code);
                4:
                  VALIDATE("Shortcut Dimension 4 Code",Dimension.Code);
                5:
                  VALIDATE("Shortcut Dimension 5 Code",Dimension.Code);
                6:
                  VALIDATE("Shortcut Dimension 6 Code",Dimension.Code);
                7:
                  VALIDATE("Shortcut Dimension 7 Code",Dimension.Code);
                8:
                  VALIDATE("Shortcut Dimension 8 Code",Dimension.Code);
              END;
              VerifyDimValueGlobalDimNo(Dimension.Code,DimNo);
            END;
          UNTIL (DimNo = 8) OR (Dimension.NEXT = 0);
      END;
    END;

    [Test]
    PROCEDURE ZeroGlobalDimNoOnInsertNewDimValue@14();
    BEGIN
      // [SCENARIO 376608] "Dimension Value"."Global Dimension No." = 0 OnInsert new Dim Value into Dimension which is not in list of GLSetup Dimension codes
      GlobalDimNoOnInsertNewShortCutDimValue(0);
    END;

    [Test]
    PROCEDURE GlobalDimNoOnInsertNewShortCutDim1Value@1();
    BEGIN
      // [SCENARIO 376608] "Dimension Value"."Global Dimension No." = 1 OnInsert new Dim Value into Dimension.Code = GLSetup."Global Dimension 1 Code"
      GlobalDimNoOnInsertNewShortCutDimValue(1);
    END;

    [Test]
    PROCEDURE GlobalDimNoOnInsertNewShortCutDim2Value@33();
    BEGIN
      // [SCENARIO 376608] "Dimension Value"."Global Dimension No." = 2 OnInsert new Dim Value into Dimension.Code = GLSetup."Global Dimension 2 Code"
      GlobalDimNoOnInsertNewShortCutDimValue(2);
    END;

    [Test]
    PROCEDURE GlobalDimNoOnInsertNewShortCutDim3Value@32();
    BEGIN
      // [SCENARIO 376608] "Dimension Value"."Global Dimension No." = 3 OnInsert new Dim Value into Dimension.Code = GLSetup."Shortcut Dimension 3 Code"
      GlobalDimNoOnInsertNewShortCutDimValue(3);
    END;

    [Test]
    PROCEDURE GlobalDimNoOnInsertNewShortCutDim4Value@31();
    BEGIN
      // [SCENARIO 376608] "Dimension Value"."Global Dimension No." = 4 OnInsert new Dim Value into Dimension.Code = GLSetup."Shortcut Dimension 4 Code"
      GlobalDimNoOnInsertNewShortCutDimValue(4);
    END;

    [Test]
    PROCEDURE GlobalDimNoOnInsertNewShortCutDim5Value@30();
    BEGIN
      // [SCENARIO 376608] "Dimension Value"."Global Dimension No." = 5 OnInsert new Dim Value into Dimension.Code = GLSetup."Shortcut Dimension 5 Code"
      GlobalDimNoOnInsertNewShortCutDimValue(5);
    END;

    [Test]
    PROCEDURE GlobalDimNoOnInsertNewShortCutDim6Value@29();
    BEGIN
      // [SCENARIO 376608] "Dimension Value"."Global Dimension No." = 6 OnInsert new Dim Value into Dimension.Code = GLSetup."Shortcut Dimension 6 Code"
      GlobalDimNoOnInsertNewShortCutDimValue(6);
    END;

    [Test]
    PROCEDURE GlobalDimNoOnInsertNewShortCutDim7Value@28();
    BEGIN
      // [SCENARIO 376608] "Dimension Value"."Global Dimension No." = 7 OnInsert new Dim Value into Dimension.Code = GLSetup."Shortcut Dimension 7 Code"
      GlobalDimNoOnInsertNewShortCutDimValue(7);
    END;

    [Test]
    PROCEDURE GlobalDimNoOnInsertNewShortCutDim8Value@27();
    BEGIN
      // [SCENARIO 376608] "Dimension Value"."Global Dimension No." = 8 OnInsert new Dim Value into Dimension.Code = GLSetup."Shortcut Dimension 8 Code"
      GlobalDimNoOnInsertNewShortCutDimValue(8);
    END;

    LOCAL PROCEDURE GlobalDimNoOnInsertNewShortCutDimValue@16(ShortCutDimNo@1004 : Integer);
    VAR
      DimensionValue@1002 : Record 349;
    BEGIN
      CreateShortCutDimValue(DimensionValue,ShortCutDimNo);
      Assert.AreEqual(ShortCutDimNo,DimensionValue."Global Dimension No.",DimensionValue.FIELDCAPTION("Global Dimension No."));
    END;

    LOCAL PROCEDURE CreateShortCutDimValue@13(VAR DimensionValue@1001 : Record 349;ShortCutDimNo@1000 : Integer);
    VAR
      GeneralLedgerSetup@1003 : Record 98;
      Dimension@1002 : Record 348;
    BEGIN
      LibraryDimension.CreateDimension(Dimension);

      IF ShortCutDimNo <> 0 THEN BEGIN
        GeneralLedgerSetup.GET;
        CASE ShortCutDimNo OF
          1:
            GeneralLedgerSetup.VALIDATE("Global Dimension 1 Code",Dimension.Code);
          2:
            GeneralLedgerSetup.VALIDATE("Global Dimension 2 Code",Dimension.Code);
          3:
            GeneralLedgerSetup.VALIDATE("Shortcut Dimension 3 Code",Dimension.Code);
          4:
            GeneralLedgerSetup.VALIDATE("Shortcut Dimension 4 Code",Dimension.Code);
          5:
            GeneralLedgerSetup.VALIDATE("Shortcut Dimension 5 Code",Dimension.Code);
          6:
            GeneralLedgerSetup.VALIDATE("Shortcut Dimension 6 Code",Dimension.Code);
          7:
            GeneralLedgerSetup.VALIDATE("Shortcut Dimension 7 Code",Dimension.Code);
          8:
            GeneralLedgerSetup.VALIDATE("Shortcut Dimension 8 Code",Dimension.Code);
        END;
        GeneralLedgerSetup.MODIFY;
      END;

      LibraryDimension.CreateDimensionValue(DimensionValue,Dimension.Code);
    END;

    LOCAL PROCEDURE ClearShortCutDims@8();
    VAR
      GeneralLedgerSetup@1000 : Record 98;
    BEGIN
      WITH GeneralLedgerSetup DO BEGIN
        GET;
        VALIDATE("Shortcut Dimension 3 Code",'');
        VALIDATE("Shortcut Dimension 4 Code",'');
        VALIDATE("Shortcut Dimension 5 Code",'');
        VALIDATE("Shortcut Dimension 6 Code",'');
        VALIDATE("Shortcut Dimension 7 Code",'');
        VALIDATE("Shortcut Dimension 8 Code",'');
      END;
    END;

    LOCAL PROCEDURE VerifyDimValueGlobalDimNo@3(DimCode@1000 : Code[20];DimNo@1001 : Integer);
    VAR
      DimensionValue@1003 : Record 349;
    BEGIN
      IF DimCode = '' THEN
        EXIT;
      DimensionValue.SETRANGE("Dimension Code",DimCode);
      IF DimensionValue.FINDSET THEN
        REPEAT
          Assert.AreEqual(DimNo,DimensionValue."Global Dimension No.",'');
        UNTIL DimensionValue.NEXT = 0;
    END;

    BEGIN
    {
      // [FEATURE] [Dimension] [Shortcut]
    }
    END.
  }
}

