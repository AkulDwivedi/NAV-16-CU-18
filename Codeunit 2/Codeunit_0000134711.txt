OBJECT Codeunit 134711 Autom. Payment Registration.UX
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Assert@1006 : Codeunit 130000;
      LibraryVariableStorage@1003 : Codeunit 131004;
      TransactionAmountMustNotBeZeroErr@1002 : TextConst 'ENU=The Transaction Amount field must have a value different than 0.';

    [Test]
    [HandlerFunctions(UIConfirmHandler,ModalBasicBankAccountCardHandler)]
    PROCEDURE ImportNewStatementToNonSetBankAcc@7();
    VAR
      BankAccReconciliation@1001 : Record 273;
      BankAccNo@1000 : Code[20];
    BEGIN
      Initialize;

      BankAccNo := CreateBankAcc;
      BankAccReconciliation.INIT;
      BankAccReconciliation."Statement Type" := BankAccReconciliation."Statement Type"::"Payment Application";
      BankAccReconciliation."Bank Account No." := BankAccNo;

      BankAccReconciliation.ImportBankStatement;
    END;

    [Test]
    [HandlerFunctions(UIMessageHandler,ModalBasicBankAccountListHandler)]
    PROCEDURE ImportNewStatement_NoBankAcc@1();
    VAR
      BankAccReconciliation@1000 : Record 273;
    BEGIN
      Initialize;

      DeleteAllBankAcc;

      BankAccReconciliation.OpenNewWorksheet;

      // Validation for this case in HandlerFunctions
    END;

    [Test]
    PROCEDURE ImportNewStatement_Only1BankAcc_WithoutFileFormat@2();
    VAR
      BankAccReconciliation@1001 : Record 273;
      BankPaymentWorksheet@1000 : TestPage 1290;
    BEGIN
      Initialize;

      DeleteAllBankAcc;
      CreateBankAcc;

      BankPaymentWorksheet.TRAP;
      BankAccReconciliation.OpenNewWorksheet;

      BankPaymentWorksheet.CLOSE;
    END;

    [Test]
    PROCEDURE ImportNewStatement_StmntNo@8();
    VAR
      BankAccount@1003 : Record 270;
      BankAccReconciliation@1001 : Record 273;
      BankPaymentWorksheet@1000 : TestPage 1290;
      BankAccNo@1002 : Code[20];
    BEGIN
      Initialize;

      DeleteAllBankAcc;
      BankAccNo := CreateBankAcc;

      BankPaymentWorksheet.TRAP;
      BankAccReconciliation.OpenNewWorksheet;
      BankPaymentWorksheet.CLOSE;

      BankAccount.GET(BankAccNo);
      BankAccReconciliation.SETRANGE("Bank Account No.",BankAccNo);
      BankAccReconciliation.FINDFIRST;

      Assert.AreNotEqual('',BankAccount."Last Payment Statement No.",'1. Wrong "Last Payment Statement No." on Bank Account table.');
      Assert.AreEqual(
        BankAccReconciliation."Statement No.",BankAccount."Last Payment Statement No.",
        '2. Wrong Statement No on Bank Payment Application page.');
      Assert.AreEqual(
        '',BankAccount."Last Statement No.",'3. Wrong Last Statement No on Bank Account table.');
    END;

    [Test]
    [HandlerFunctions(UIConfirmHandler)]
    PROCEDURE Post_YesNo@6();
    VAR
      BankAccReconciliation@1000 : Record 273;
      BankAccReconciliationLine@1001 : Record 274;
      BankPaymentApplication@1002 : TestPage 1290;
    BEGIN
      Initialize;

      InsertDummyBankReconHeaderAndLine(1,'0',BankAccReconciliation,1);

      BankAccReconciliation.SetFiltersOnBankAccReconLineTable(
        BankAccReconciliation,BankAccReconciliationLine);
      BankAccReconciliationLine.FINDFIRST;

      BankPaymentApplication.OPENEDIT;
      BankPaymentApplication.GOTORECORD(BankAccReconciliationLine);
      ASSERTERROR BankPaymentApplication.Post.INVOKE;
      Assert.ExpectedError(BankAccReconciliationLine.FIELDCAPTION("Account No."));
    END;

    [Test]
    PROCEDURE StatementAmountMustNotBeZero@13();
    VAR
      BankAccReconciliation@1000 : Record 273;
      BankAccReconciliationLine@1001 : Record 274;
      BankPaymentApplication@1002 : TestPage 1290;
    BEGIN
      Initialize;

      InsertDummyBankReconHeaderAndLine(1,'0',BankAccReconciliation,0);

      BankAccReconciliation.SetFiltersOnBankAccReconLineTable(
        BankAccReconciliation,BankAccReconciliationLine);
      BankAccReconciliationLine.FINDFIRST;

      BankPaymentApplication.OPENEDIT;
      BankPaymentApplication.GOTORECORD(BankAccReconciliationLine);
      ASSERTERROR BankPaymentApplication.ApplyEntries.INVOKE;
      Assert.ExpectedError(TransactionAmountMustNotBeZeroErr);
    END;

    LOCAL PROCEDURE Initialize@4();
    BEGIN
      LibraryVariableStorage.Clear;
    END;

    LOCAL PROCEDURE InsertDummyBankReconHeaderAndLine@12(StatementType@1002 : Option;StatementNo@1003 : Code[20];VAR BankAccReconciliation@1001 : Record 273;StatementAmount@1004 : Decimal);
    VAR
      BankAccReconciliationLine@1000 : Record 274;
    BEGIN
      BankAccReconciliation.INIT;
      BankAccReconciliation."Statement Type" := StatementType;
      BankAccReconciliation."Bank Account No." := CreateBankAcc;
      BankAccReconciliation."Statement No." := StatementNo;
      BankAccReconciliation.INSERT;

      BankAccReconciliationLine.INIT;
      BankAccReconciliationLine."Statement Type" := StatementType;
      BankAccReconciliationLine."Bank Account No." := BankAccReconciliation."Bank Account No.";
      BankAccReconciliationLine."Statement No." := StatementNo;
      BankAccReconciliationLine."Statement Amount" := StatementAmount;
      BankAccReconciliationLine.INSERT;
    END;

    LOCAL PROCEDURE DeleteAllBankAcc@10();
    VAR
      BankAccount@1000 : Record 270;
    BEGIN
      BankAccount.DELETEALL;
    END;

    LOCAL PROCEDURE CreateBankAcc@9() : Code[20];
    VAR
      BankAccount@1000 : Record 270;
    BEGIN
      BankAccount.INIT;
      BankAccount."No." := COPYSTR(CREATEGUID,1,20);
      BankAccount.INSERT;

      EXIT(BankAccount."No.");
    END;

    [ConfirmHandler]
    PROCEDURE UIConfirmHandler@5(Question@1000 : Text[1024];VAR Reply@1001 : Boolean);
    BEGIN
      Reply := TRUE;
    END;

    [MessageHandler]
    PROCEDURE UIMessageHandler@18(Message@1000 : Text[1024]);
    BEGIN
    END;

    [ModalPageHandler]
    PROCEDURE ModalBasicBankAccountListHandler@3(VAR BasicBankAccountList@1000 : TestPage 1282);
    BEGIN
    END;

    [ModalPageHandler]
    PROCEDURE ModalBasicBankAccountCardHandler@17(VAR BasicBankAccountCard@1000 : TestPage 1283);
    BEGIN
      BasicBankAccountCard.OK.INVOKE;
    END;

    BEGIN
    {
      // [FEATURE] [Bank Reconciliation]
    }
    END.
  }
}

