OBJECT Table 16545 VAT Report
{
  OBJECT-PROPERTIES
  {
    Date=24-04-16;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.45778;
  }
  PROPERTIES
  {
    CaptionML=[ENU=VAT Report;
               ENN=VAT Report];
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Option        ;CaptionML=[ENU=Code;
                                                              ENN=Code];
                                                   OptionCaptionML=[ENU=Delhi_VAT,Maharashtra_VAT;
                                                                    ENN=Delhi_VAT,Maharashtra_VAT];
                                                   OptionString=Delhi_VAT,Maharashtra_VAT }
    { 2   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENN=Description] }
    { 3   ;   ;Template            ;BLOB          ;CaptionML=[ENU=Template;
                                                              ENN=Template] }
    { 4   ;   ;DataSource          ;BLOB          ;CaptionML=[ENU=DataSource;
                                                              ENN=DataSource] }
    { 5   ;   ;State Code          ;Code10        ;TableRelation=State;
                                                   CaptionML=[ENU=State Code;
                                                              ENN=State Code] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Description                         }
  }
  CODE
  {
    VAR
      Txt001@1500001 : TextConst 'ENU=Delete template ?;ENN=Delete template ?';
      Txt002@1500000 : TextConst 'ENU=Do you want to overwrite existing template ?;ENN=Do you want to overwrite existing template ?';
      DelhiVAT@1500002 : Report 16560;
      MaharashtraVAT@1500003 : Report 16561;
      Txt003@1500004 : TextConst 'ENU=Import Template;ENN=Import Template';
      Txt004@1500005 : TextConst 'ENU=Export Template;ENN=Export Template';

    PROCEDURE CreateDataSource@1500017() TmpHTMLFileName : Text;
    BEGIN
      CASE Code OF
        Code::Delhi_VAT:
          EXIT(DelhiVAT.CreateDataSource);
        Code::Maharashtra_VAT:
          EXIT(MaharashtraVAT.CreateDataSource);
      END;
    END;

    PROCEDURE CreateWordTemplate@13() NewAttachNo@1000 : Integer;
    VAR
      wrdApp@1009 : DotNet "'Microsoft.Office.Interop.Word, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Word.ApplicationClass" RUNONCLIENT;
      wrdDoc@1008 : DotNet "'Microsoft.Office.Interop.Word, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Word.Document" RUNONCLIENT;
      wrdHandler@1500008 : DotNet "'Microsoft.Dynamics.Nav.Integration.Office, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Integration.Office.Word.WordHandler" RUNONCLIENT;
      FileName@1500002 : Text;
      NewFileName@1500007 : Text;
      ServerFileName@1500005 : Text;
      HTMLFileName@1500001 : Text;
      ServerHTMLFileName@1500004 : Text;
      ParamInt@1500006 : Integer;
      FileMgmt@1500000 : Codeunit 419;
      WordHelper@1500003 : DotNet "'Microsoft.Dynamics.Nav.Integration.Office, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Integration.Office.Word.WordHelper" RUNONCLIENT;
    BEGIN
      CALCFIELDS(Template);
      IF Template.HASVALUE THEN
        IF NOT CONFIRM(Txt002) THEN
          EXIT;

      IF ISNULL(wrdApp) THEN
        wrdApp := wrdApp.ApplicationClass;

      HTMLFileName := FileMgmt.DownloadTempFile(CreateDataSource);

      FileName := FileMgmt.ClientTempFileName('doc');
      FileName := FileMgmt.GetDirectoryName(FileName) + '\' + FORMAT(Code) + '.doc';

      wrdDoc := WordHelper.AddDocument(wrdApp);
      wrdDoc.MailMerge.MainDocumentType := 0; // 0 = wdFormLetters

      ParamInt := 7; // 7 = HTML
      WordHelper.CallMailMergeOpenDataSource(wrdDoc,HTMLFileName,ParamInt);
      WordHelper.CallSaveAs(wrdDoc,FileName);

      wrdDoc.Application.Visible := TRUE; // Visible before WindowState KB176866 - http://support.microsoft.com/kb/176866
      wrdDoc.ActiveWindow.WindowState := 1; // 1 = wdWindowStateMaximize
      wrdDoc.Saved := TRUE;
      wrdDoc.Application.Activate;

      wrdHandler := wrdHandler.WordHandler;
      NewFileName := wrdHandler.WaitForDocument(wrdDoc);

      IF wrdHandler.IsDocumentClosed AND wrdHandler.HasDocumentChanged THEN BEGIN
        ServerFileName := FileMgmt.UploadFileSilent(NewFileName);
        Template.IMPORT(ServerFileName);
        ERASE(ServerFileName);

        ServerHTMLFileName := FileMgmt.UploadFileSilent(HTMLFileName);
        DataSource.IMPORT(ServerHTMLFileName);
        ERASE(ServerHTMLFileName);

        MODIFY;
      END;

      FileMgmt.DeleteClientFile(HTMLFileName);
      FileMgmt.DeleteClientFile(FileName);
      FileMgmt.DeleteClientFile(NewFileName);

      CLEAR(wrdHandler);
      CLEAR(wrdDoc);
      WordHelper.CallQuit(wrdApp,FALSE);
      CLEAR(wrdApp);
    END;

    PROCEDURE DeleteTemplate@1500000();
    BEGIN
      IF NOT CONFIRM(Txt001) THEN
        EXIT;
      CLEAR(Template);
      MODIFY;
    END;

    PROCEDURE ExportTemplate@1500001();
    VAR
      FileName@1500001 : Text[1024];
      ServerFileName@1500002 : Text[1024];
      FileMgmt@1500003 : Codeunit 419;
    BEGIN
      CALCFIELDS(Template,DataSource);
      IF NOT Template.HASVALUE THEN
        ERROR('Template not created.');

      IF FileName = '' THEN
        FileName := '.doc';
      FileName := FileMgmt.SaveFileDialog(Txt004,FileName,'');
      IF FileName = '' THEN
        EXIT;

      ServerFileName := FileMgmt.ServerTempFileName('doc');
      Template.EXPORT(ServerFileName);
      FileMgmt.DownloadToFile(ServerFileName,FileName);
      ERASE(ServerFileName);

      IF DataSource.HASVALUE THEN BEGIN
        ServerFileName := FileMgmt.ServerTempFileName('htm');
        DataSource.EXPORT(ServerFileName);
        FileName := FileMgmt.ClientTempFileName('htm');
        FileName := FileMgmt.GetDirectoryName(FileName) + '\' + FORMAT(Code) + '.htm';
        FileMgmt.DownloadToFile(ServerFileName,FileName);
        ERASE(ServerFileName);
      END
    END;

    PROCEDURE ImportTemplate@1500014();
    VAR
      FileName@1500000 : Text[1024];
      ServerFileName@1500003 : Text[1024];
      FileMgmt@1500002 : Codeunit 419;
    BEGIN
      CALCFIELDS(Template);
      IF Template.HASVALUE THEN
        IF NOT CONFIRM(Txt002) THEN
          EXIT;

      IF FileName = '' THEN
        FileName := '.doc';
      FileName := FileMgmt.OpenFileDialog(Txt003,FileName,'');
      IF FileName = '' THEN
        EXIT;
      CLEAR(Template);

      ServerFileName := FileMgmt.UploadFileSilent(FileName);
      Template.IMPORT(ServerFileName);
      ERASE(ServerFileName);

      MODIFY;
      IF Template.HASVALUE THEN
        MESSAGE('Template File ''%1'' imported successfully.',FileName);
    END;

    BEGIN
    END.
  }
}

