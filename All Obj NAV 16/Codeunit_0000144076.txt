OBJECT Codeunit 144076 e-TDS Challan Register
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CompanyInformation@1500000 : Record 79;
      NodNocHeader@1500027 : Record 13786;
      IncomeTaxPeriodSetup@1500030 : Record 16501;
      IncomeTaxAccountingPeriod@1500026 : Record 13724;
      TdsNatureOfDeduction@1500025 : Record 13726;
      TDSSetup@1500022 : Record 13728;
      GeneralLedgerSetup@1500016 : Record 98;
      LibraryERM@1500004 : Codeunit 131300;
      LibraryRandom@1500006 : Codeunit 130440;
      LibraryTDS@1500007 : Codeunit 143000;
      LibraryVariableStorage@1500009 : Codeunit 131004;
      LibraryUtility@1500010 : Codeunit 131000;
      LibraryReportDataset@1500011 : Codeunit 131007;
      LibrarySetupStorage@1500017 : Codeunit 131009;
      LibraryPurchase@1500005 : Codeunit 130512;
      ServiceTaxWithTDSHelper@1500013 : Codeunit 143005;
      Assert@1500021 : Codeunit 130000;
      TDSAccount@1500014 : Code[20];
      AmountErr@1500015 : TextConst '@@@="%1 and %2 = Amount and Amount";ENU=%1 is incorrect in %2.';
      ErrorTxt@1500003 : TextConst 'ENU=was not found';
      ErrorMisMatchTxt@1500002 : TextConst 'ENU=Error does not match';
      ValueNotFoundErr@1500023 : TextConst 'ENU=Value Not Found.';
      ValueErr@1500001 : TextConst 'ENU=Values Doesn''t Match';
      isInitialized@1500008 : Boolean;
      NocorrectionQFErr@1500012 : TextConst '@@@="%1 and %2 = Quarter and Financial year";ENU=No corrections have been made for Quarter %1, Financial Year %2.';
      CreditAmountErr@1500018 : TextConst '@@@="%1 and %2 = Amount and Amount";ENU=The Amount in GL Entry is %1 and the actual value is %2.';

    [Test]
    [HandlerFunctions(Form27QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler)]
    PROCEDURE VerifyModifedChallanRegisterAfterForm27AndFileeTds@1500046();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500001 : Record 81;
      ChallanNo@1500000 : Code[10];
      Amount@1500003 : Decimal;
    BEGIN
      // [SCENARIO 164311] Check if the system is modifying Challan details after generation of form 27Q and filing of e-TDS.
      // [FEATURE] [eTDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,Non Resident Payments,TDS Nature of deduction,Assesse Code,TDS Setup ,Foreign Currency
      Initialize(TRUE);

      // [WHEN] Create and Post General Journals,Pay TDS Payment
      CreateAndPostGenJnlLinesWithTDS(
        GenJournalLine,GenJournalLine."Document Type"::Invoice,-LibraryRandom.RandDec(7000,2));
      CreateGenJnlLinesWithPayTDS(GenJournalLine2,Amount);

      // [THEN] Verifieds the Payment journal Amount
      VerifyTDSAmtInPaymentJournal(GenJournalLine2."Document No.",Amount);

      // [WHEN] Report 27Q , Generate e-TDS ,Generate File e-TDS ,Update the register details
      LibraryERM.PostGeneralJnlLine(GenJournalLine2);
      ChallanNo :=
        LibraryTDS.UpdateChallanDetails(
          GenJournalLine."Document No.",GenJournalLine2."Document No.",IncomeTaxAccountingPeriod."Starting Date");
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandInt(2000));
      GenerateForm27AndeTdseFileTds(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(5,0),1,5));

      // [THEN] Cannot open the Update Challan Register window
      CheckUpdateChallanRegister(ChallanNo);
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler,GenerateReturnStatusModalPageHandler)]
    PROCEDURE VerifyReturnStatusWitheTDS@1500008();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500000 : Record 81;
      OriginalRRRNo@1500001 : Code[20];
    BEGIN
      // [SCENARIO 164296] Check if the system is making specific corrections in case of revised returns (26Q) and generating revised e-TDS returns.
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(FALSE);

      // [WHEN] Create and Post General Journals,Pay TDS Payment ,Update the register details , Report 27Q , Generate e-TDS and File e-TDS , Return Status
      CreateAndPostGenJnlLinesPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      OriginalRRRNo := COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(5,0),1,5);
      GenerateForm2627QAndeTDSReturnStatus(OriginalRRRNo);

      // [THEN] Return Status Value Financial Year ,Quarter ,Filing Date ,Original RRR No. has been Verified.
      VerifyReturnStatusInGeneratedFile(OriginalRRRNo);
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler,GenerateReturnStatusModalPageHandler,CorrectForm2627QRequestPageHandler,UpdateCorrectDeductorUsingPage,UpdateCorrectDeducteeUsingPage)]
    PROCEDURE VerifyReturnStatusWithCorrect26Q27QEntries@1500000();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500000 : Record 81;
    BEGIN
      // [SCENARIO 164296] Check if the system is making specific corrections in case of revised returns (26Q) and generating revised e-TDS returns.
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(FALSE);

      // [WHEN] Genrate e TDS Using Form 26 and e-TDS , Return Genrate Correct 26Q/27Q Entries Report using Correction Type Deductor and Deductee ,e-TDS Return Status
      CreateAndPostGenJnlLinesPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      GenerateForm2627QAndeTDSReturnStatus(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(5,0),1,5));
      GenerateCorrect2627AndReturnStatus;

      // [THEN] Return Status Value Revised , No. of Revision has been Verified .
      VerifyReturnStatusInGenerateeTdsFile;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler,GenerateReturnStatusModalPageHandler,CorrectForm2627QRequestPageHandler,UpdateCorrectDeductorUsingPage,UpdateCorrectDeducteeUsingPage,RevisedForm26QRequestPageHandler)]
    PROCEDURE VerifyReturnStatusWithRevisedeTDS@1500001();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500000 : Record 81;
      OriginalRRRNo@1500003 : Code[20];
    BEGIN
      // [SCENARIO 164296] Check if the system is making specific corrections in case of revised returns (26Q) and generating revised e-TDS returns.
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(FALSE);

      // [WHEN] Genrate e TDS Using Form 26 and e-TDS , Return Genrate Correct 26Q/27Q Entries Report using Correction Type Deductor and Deductee ,e-TDS Return Status
      CreateAndPostGenJnlLinesPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      OriginalRRRNo := COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(5,0),1,5);
      GenerateForm2627QAndeTDSReturnStatus(OriginalRRRNo);
      GenerateCorrect2627AndReturnStatus;
      REPORT.RUN(REPORT::"Revised Form 26Q");

      // [THEN] Verified Export File : "Batch Header"."Deductor Address"
      VerifyReportDetailRevisedForm26Q27Q;

      // [WHEN] Generate Revised e-TDS ,file e-TDS ,
      GenerateRevisedeTDSUsingPageforReturnStatus(TRUE);

      // [THEN] Return Status Value Filing Date ,Revised ,Original RRR No,Previous RRR No,No. of Revision has been Verified .
      VerifyReturnStatusInGenerateRevisedeTDSFile(OriginalRRRNo);
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler,GenerateReturnStatusModalPageHandler,CorrectForm2627QRequestPageHandler,UpdateCorrectDeductorUsingPage,UpdateCorrectDeducteeUsingPage,RevisedForm26QRequestPageHandler,GenerateRevisedeTDSRequestPageHandler,GenerateRevisedFileeTDSRequestPageHandler)]
    PROCEDURE VerifyReturnStatusWitheTDSAndRevisedeTDSAfterExecuteForm26@1500049();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500000 : Record 81;
      PreviousRRRNo@1500003 : Code[20];
      FormNo@1500001 : '26Q,27Q';
    BEGIN
      // [SCENARIO 164296] Check if the system is making specific corrections in case of revised returns (26Q) and generating revised e-TDS returns.
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(FALSE);

      // [WHEN] Genrate e TDS Using Form 26 and e-TDS , Return Correct 26Q/27Q Entries Report using Correction Type Deductor and Deductee ,e-TDS Return Status , Revised e-TDS ,file e-TDS
      CreateAndPostGenJnlLinesPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      GenerateForm2627QAndeTDSReturnStatus(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(5,0),1,5));
      GenerateCorrect2627AndReturnStatus;
      REPORT.RUN(REPORT::"Revised Form 26Q");
      PreviousRRRNo := COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(5,0),1,5);
      GenerateRevisedeTDSUsingPageforReturnStatus(TRUE);
      GenerateRevisedeTDSUsingPagefor2627QeTds(TRUE);

      // [THEN] Verified Export Txt file : "Batch Header"."Deductor T.A.N. No."
      VerifyValuesOnBatchHeader(FormNo::"26Q");

      // [WHEN] Generate Revised e-TDS ,Return Status
      GenerateRevisedeTDSUsingPagefor2627QFileeTds(TRUE,PreviousRRRNo);
      GenerateRevisedeTDSUsingPageforReturnStatus(TRUE);

      // [THEN] Created Return Status records with Revised eTDS Filing Date ,Previous RRR No.
      VerifyReturnStatusInGenerateRevisedeUpdateRevisedFillingStatus(PreviousRRRNo);
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateRevisedeTDSRequestPageHandler)]
    PROCEDURE VerifyGenerateRevisedeTDS26Q@1500031();
    VAR
      GenJournalLine@1500004 : Record 81;
      GenJournalLine2@1500003 : Record 81;
    BEGIN
      // [SCENARIO 164298] Check if the system is generating revised form 26Q/e-TDS if there are no corrections for the particular Quarter.
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(FALSE);

      // [WHEN] Create and Post General Journals Invoice,Run Report 26Q ,Update the register details, e TDS Using Form 26 and Generate e-TDS ,Return Status
      CreateAndPostGenJnlLinesPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 26Q");
      GenerateeTDSUsingPagefor2627QeTds(TRUE);
      ASSERTERROR GenerateRevisedeTDSUsingPagefor2627QeTds(TRUE);

      // [THEN] Expected Error for No corrections has been thrown : No corrections have been made for Quarter, Financial Year
      Assert.AreNotEqual(IncomeTaxPeriodSetup.Quarter,IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS",NocorrectionQFErr);
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler,CorrectForm2627QRequestPageHandler,UpdateCorrectDeductorUsingPage,RevisedForm26QRequestPageHandler)]
    PROCEDURE VerifyGenerateRevisedeForm26QWithMandatoryFields@1500013();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500000 : Record 81;
    BEGIN
      // [SCENARIO 164367] Validate generation of revised e-TDS 26Q in file format with the mandatory fields
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(FALSE);

      // [WHEN] Create and Post General Journals,Pay TDS Payment ,Report 26Q , Generate e-TDS and File e-TDS , Revised Form 26Q
      CreateAndPostGenJnlLinesPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      GenerateForm2627QAndeTDS(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(5,0),1,5));
      UpdateFormCorrect2627QEntries(1,TRUE);
      REPORT.RUN(REPORT::"Correct 26Q/27Q Entries");
      REPORT.RUN(REPORT::"Revised Form 26Q");

      // [THEN] Verified the Address of Deductor
      VerifyReportDetailRevisedForm26Q27Q;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler,CorrectForm2627QRequestPageHandler,UpdateCorrectDeductorUsingPage,RevisedForm26QRequestPageHandler,GenerateRevisedeTDSRequestPageHandler)]
    PROCEDURE VerifyGenerateRevisedeTDS26QWithMandatoryFields@1500028();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500000 : Record 81;
      FormNo@1500001 : '26Q,27Q';
    BEGIN
      // [SCENARIO 164367] Validate generation of revised e-TDS (26Q) in file format with the mandatory fields
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(FALSE);

      // [WHEN] Create and Post General Journals,Pay TDS Payment ,Report 26Q , Generate e-TDS and File e-TDS , Revised Form 26Q ,Revised TDS
      CreateAndPostGenJnlLinesPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      GenerateForm2627QAndeTDS(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(5,0),1,5));
      UpdateFormCorrect2627QEntries(1,TRUE);
      REPORT.RUN(REPORT::"Correct 26Q/27Q Entries");
      REPORT.RUN(REPORT::"Revised Form 26Q");
      GenerateRevisedeTDSUsingPagefor2627QeTds(TRUE);

      // [THEN] Verified Export Txt file : "Batch Header"."Deductor T.A.N. No."
      VerifyValuesOnBatchHeader(FormNo::"26Q");
    END;

    [Test]
    [HandlerFunctions(Form27QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler,GenerateReturnStatusModalPageHandler)]
    PROCEDURE VerifyReturnStatuseWithTDSForeignCurrency@1500027();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500000 : Record 81;
      OriginalRRRNo@1500001 : Code[20];
    BEGIN
      // [SCENARIO 164315] Check if the system is generating original e-TDS return after generating revised e-TDS return for the same Quarte
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(TRUE);

      // [WHEN] Create and Post General Journals,Pay TDS Payment ,Update the register details , Report 27Q , Generate e-TDS and File e-TDS , Return Status
      CreateAndPostGenJnlLinesPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      OriginalRRRNo := COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(5,0),1,5);
      GenerateForm27AndeTdseFileTds(OriginalRRRNo);
      GenerateeTDSUsingPageforReturnStatus(FALSE);

      // [THEN] Return Status Value Financial Year ,Quarter ,Filing Date ,Original RRR No has been Verified .
      VerifyReturnStatusInGeneratedFile(OriginalRRRNo);
    END;

    [Test]
    [HandlerFunctions(Form27QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler,GenerateReturnStatusModalPageHandler,CorrectForm2627QRequestPageHandler,UpdateCorrectDeductorUsingPage,RevisedForm27QRequestPageHandler)]
    PROCEDURE VerifyReturnStatusRevisedeTDSWithForeignCurrency@1500023();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500000 : Record 81;
      OriginalRRRNo@1500001 : Code[20];
    BEGIN
      // [SCENARIO 164315] Check if the system is generating original e-TDS return after generating revised e-TDS return for the same Quarte
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(TRUE);

      // [WHEN] Genrate e TDS Using Form 26 and e-TDS , Return Genrate Correct 26Q/27Q Entries Report using Correction Type Deductor and Deductee ,e-TDS Return Status
      CreateAndPostGenJnlLinesPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      OriginalRRRNo := COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(5,0),1,5);
      GenerateForm27AndRevisedForm27QWithReturnStatus(OriginalRRRNo);

      // [THEN] Return Status Value Financial Year ,Quarter ,Filing Date ,Original RRR No has been Verified .
      VerifyReturnStatusInGenerateRevisedeTDSFile(OriginalRRRNo);
    END;

    [Test]
    [HandlerFunctions(Form27QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler,GenerateReturnStatusModalPageHandler,CorrectForm2627QRequestPageHandler,UpdateCorrectDeductorUsingPage,RevisedForm27QRequestPageHandler,GenerateRevisedeTDSRequestPageHandler)]
    PROCEDURE VerifyReturnStatuseTDSAndRevisedeTDSAfterExecuteForm27@1500012();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500000 : Record 81;
      FormNo@1500001 : '26Q,27Q';
    BEGIN
      // [SCENARIO 164315] Check if the system is generating original e-TDS return after generating revised e-TDS return for the same Quarte
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(TRUE);

      // [WHEN] Genrate e TDS Using Form 27, Return Genrate Correct 26Q/27Q Entries Report using Correction Type Deductor and Deductee ,e-TDS Return Status
      CreateAndPostGenJnlLinesPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      GenerateForm27AndRevisedForm27QWithReturnStatus(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(5,0),1,5));
      GenerateRevisedeTDSUsingPagefor2627QeTds(FALSE);

      // [THEN] Verified Export Txt file : "Batch Header"."Deductor T.A.N. No."
      VerifyValuesOnBatchHeader(FormNo::"27Q");

      // [WHEN] Genrate e TDS Using Form 27
      ASSERTERROR GenerateeTDSUsingPagefor2627QeTds(FALSE);

      // [THEN]  System will throw error :: File Name not Found
      Assert.AreNotEqual(0,STRPOS(GETLASTERRORTEXT,ErrorTxt),ErrorMisMatchTxt);
    END;

    [Test]
    PROCEDURE VerifyTDSAmountInPurchaseOrderUsingItem@1500044();
    VAR
      PurchaseLine@1500003 : Record 39;
      ExpectedPurchaseLine@1500001 : Record 39;
    BEGIN
      // [SCENARIO 164235] Calculating TDS related amount successfully in the following forms in case of Foreign Currency:Invoice received from vendor in
      // [FEATURE] [eTDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,Non Resident Payments,TDS Nature of deduction,Assesse Code,TDS Setup ,Foreign Currency
      Initialize(TRUE);

      // [WHEN] Create Purchase Order With TDS using type Item
      CreatePurchaseOrder(PurchaseLine,PurchaseLine.Type::Item);
      CalcExpectedNonPanTDSAmount(ExpectedPurchaseLine,PurchaseLine.Amount);

      // [THEN] Verified Purchase Line All field Related to TDS
      VerifyTDSAmountsPurchaseDoc(ExpectedPurchaseLine,PurchaseLine."Document Type",PurchaseLine."Document No.");
    END;

    [Test]
    PROCEDURE VerifyTDSAmountInPurchaseOrderUsingGlAccount@1500042();
    VAR
      PurchaseLine@1500001 : Record 39;
      ExpectedPurchaseLine@1500000 : Record 39;
    BEGIN
      // [SCENARIO 164235] Calculating TDS related amount successfully in the following forms in case of Foreign Currency:Invoice received from vendor in
      // [FEATURE] [eTDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,Non Resident Payments,TDS Nature of deduction,Assesse Code,TDS Setup ,Foreign Currency
      Initialize(TRUE);

      // [WHEN] Create Purchase Order With TDS using type G/L Account
      CreatePurchaseOrder(PurchaseLine,PurchaseLine.Type::"G/L Account");
      CalcExpectedNonPanTDSAmount(ExpectedPurchaseLine,PurchaseLine.Amount);

      // [THEN] Verified Purchase Line All field Related to TDS
      VerifyTDSAmountsPurchaseDoc(ExpectedPurchaseLine,PurchaseLine."Document Type",PurchaseLine."Document No.");
    END;

    [Test]
    PROCEDURE VerifyTDSAmountInPurchaseOrderUsingFixasset@1500024();
    VAR
      PurchaseLine@1500001 : Record 39;
      ExpectedPurchaseLine@1500000 : Record 39;
    BEGIN
      // [SCENARIO 164235] Calculating TDS related amount successfully in the following forms in case of Foreign Currency:Invoice received from vendor in
      // [FEATURE] [eTDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,Non Resident Payments,TDS Nature of deduction,Assesse Code,TDS Setup ,Foreign Currency
      Initialize(TRUE);

      // [WHEN] Create Purchase Order With TDS using type Fixed Asset
      CreatePurchaseOrder(PurchaseLine,PurchaseLine.Type::"Fixed Asset");
      CalcExpectedNonPanTDSAmount(ExpectedPurchaseLine,PurchaseLine.Amount);

      // [THEN] Verified Purchase Line All field Related to TDS
      VerifyTDSAmountsPurchaseDoc(ExpectedPurchaseLine,PurchaseLine."Document Type",PurchaseLine."Document No.");
    END;

    [Test]
    PROCEDURE VerifyTDSAmountInPurchaseOrderUsingChargeItem@1500011();
    VAR
      PurchaseLine@1500003 : Record 39;
      ExpectedPurchaseLine@1500001 : Record 39;
    BEGIN
      // [SCENARIO 164235] Calculating TDS related amount successfully in the following forms in case of Foreign Currency:Invoice received from vendor in
      // [FEATURE] [eTDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,Non Resident Payments,TDS Nature of deduction,Assesse Code,TDS Setup ,Foreign Currency
      Initialize(TRUE);

      // [WHEN] Create Purchase Order With TDS using type Charge (Item)
      CreatePurchaseOrder(PurchaseLine,PurchaseLine.Type::"Charge (Item)");
      CalcExpectedNonPanTDSAmount(ExpectedPurchaseLine,PurchaseLine.Amount);

      // [THEN] Verified Purchase Line All field Related to TDS
      VerifyTDSAmountsPurchaseDoc(ExpectedPurchaseLine,PurchaseLine."Document Type",PurchaseLine."Document No.");
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler,GenerateReturnStatusModalPageHandler)]
    PROCEDURE VerifyReturnStatusWitheTDSAfterPayTDS@1500055();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500000 : Record 81;
      OriginalRRRNo@1500001 : Code[20];
    BEGIN
      // [SCENARIO 164299] Check if the system is generating original e-TDS return after generating revised e-TDS return for the same Quarter.
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(FALSE);

      // [WHEN] Create and Post General Journals,Pay TDS Payment ,Update the register details , Report 26Q , Generate e-TDS and File e-TDS , Return Status
      CreateAndPostGenJnlLinesPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      OriginalRRRNo := COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(5,0),1,5);
      GenerateForm2627QAndeTDSReturnStatus(OriginalRRRNo);

      // [THEN] Return Status Value Financial Year ,Quarter ,Filing Date ,Original RRR No has been Verified .
      VerifyReturnStatusInGeneratedFile(OriginalRRRNo);
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler,GenerateReturnStatusModalPageHandler,CorrectForm2627QRequestPageHandler,UpdateCorrectDeductorUsingPage)]
    PROCEDURE VerifyReturnStatusWithCorrect26Q27QEntriesAfterPayTDS@1500054();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500000 : Record 81;
      FormNo@1500001 : '26Q,27Q';
    BEGIN
      // [SCENARIO 164299] Check if the system is generating original e-TDS return after generating revised e-TDS return for the same Quarter.
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(FALSE);

      // [WHEN] Genrate e TDS Using Form 26 and e-TDS , Return Genrate Correct 26Q/27Q Entries Report using Correction Type Deductor ,e-TDS Return Status
      CreateAndPostGenJnlLinesPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      GenerateForm2627QAndeTDSReturnStatus(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(5,0),1,5));
      UpdateFormCorrect2627QEntries(1,TRUE);
      REPORT.RUN(REPORT::"Correct 26Q/27Q Entries");

      // [THEN] Verified Export File : "Batch Header"."Deductor Address"
      VerifyValuesOnBatchHeader(FormNo::"26Q");
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler,GenerateReturnStatusModalPageHandler,CorrectForm2627QRequestPageHandler,UpdateCorrectDeductorUsingPage,RevisedForm26QRequestPageHandler)]
    PROCEDURE VerifyReturnStatusWithRevisedeTDSPayTDS@1500053();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500000 : Record 81;
      OriginalRRRNo@1500003 : Code[20];
    BEGIN
      // [SCENARIO 164299] Check if the system is generating original e-TDS return after generating revised e-TDS return for the same Quarter.
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(FALSE);

      // [WHEN] Genrate e TDS Using Form 26 and e-TDS , Return Genrate Correct 26Q/27Q Entries Report using Correction Type Deductor and Deductee ,e-TDS Return Status
      CreateAndPostGenJnlLinesPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      OriginalRRRNo := COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(5,0),1,5);
      GenerateReturnStatusTDSAndReturnStatusAndRevised26(OriginalRRRNo);

      // [THEN] Verified Export File : "Batch Header"."Deductor Address"
      VerifyReportDetailRevisedForm26Q27Q;

      // [WHEN] Generate Revised e-TDS ,file e-TDS ,
      GenerateRevisedeTDSUsingPageforReturnStatus(TRUE);

      // [THEN] Return Status Value Filing Date ,Revised ,Original RRR No,Previous RRR No,No. of Revision Verified .
      VerifyReturnStatusInGenerateRevisedeTDSFile(OriginalRRRNo);
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler,GenerateReturnStatusModalPageHandler,CorrectForm2627QRequestPageHandler,UpdateCorrectDeductorUsingPage,RevisedForm26QRequestPageHandler,GenerateRevisedeTDSRequestPageHandler)]
    PROCEDURE VerifyGenerateeTDSAfterGenerateRevisedeTDSReturn@1500056();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500000 : Record 81;
    BEGIN
      // [SCENARIO 164299] Check if the system is generating original e-TDS return after generating revised e-TDS return for the same Quarter.
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(FALSE);

      // [WHEN] Genrate e TDS Using Form 26 and e-TDS , Return Genrate Correct 26Q/27Q Entries Report using Correction Type Deductor and Deductee ,e-TDS Return Status
      CreateAndPostGenJnlLinesPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      GenerateReturnStatusTDSAndReturnStatusAndRevised26(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(5,0),1,5));
      GenerateRevisedeTDSUsingPageforReturnStatus(TRUE);
      GenerateRevisedeTDSUsingPagefor2627QeTds(TRUE);
      ASSERTERROR GenerateeTDSUsingPagefor2627QeTds(TRUE);

      // [THEN] System will not generate text file : File was not Found
      Assert.AreNotEqual(0,STRPOS(GETLASTERRORTEXT,ErrorTxt),ErrorMisMatchTxt);
    END;

    [Test]
    [HandlerFunctions(Form27QRequestPageHandler,GenerateeTDSRequestPageHandler)]
    PROCEDURE VerifyGenerateeTDSAfterExecuteForm27QWithUpdatedVendor@1500058();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500000 : Record 81;
      FormNo@1500001 : '26Q,27Q';
    BEGIN
      // [SCENARIO 164309] Verify the effect of rectification in Deductor records (any rectification in PAN, TAN, Address, Telephone Number in Company Information Card and Vendor Card) after generation of form 27Q and e-TDS
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period , NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(TRUE);

      // [WHEN] Create and Post General Journals,Pay TDS Payment ,Update the register details , Report 27Q , Generate e-TDS and File e-TDS , Return Status
      CreateAndPostGenJnlLinesPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 27Q");
      GenerateeTDSUsingPagefor2627QeTds(FALSE);
      UpdateCompanyAndVendorInformation(NodNocHeader."No.");
      REPORT.RUN(REPORT::"Form 27Q");

      // [THEN] Verify eTDS File With TANNo.
      VerifyValuesOnBatchHeader(FormNo::"27Q");

      // [WHEN] Generate e-TDS
      GenerateeTDSUsingPagefor2627QeTds(FALSE);

      // [THEN] Verify eTDS File With TANNo.
      VerifyValuesOnBatchHeader(FormNo::"27Q");
    END;

    [Test]
    PROCEDURE VerifyTDSAdjustedAmount@1500059();
    VAR
      GenJournalLine@1500007 : Record 81;
      TDSEntry@1500002 : Record 13729;
      TDSEntryNo@1500000 : Integer;
    BEGIN
      // [SCENARIO 163844] Validate form 26Q when TDS is adjusted in the subsequent quarter
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(FALSE);

      // [WHEN] Create and Post Multiple line General Journals , Edit TDS Journal
      CreateAndPostMultipleGenJnlLines(GenJournalLine,GenJournalLine."Document Type"::Payment);
      CreateTDSAdjustmentJournal(TDSEntry,TDSEntryNo);

      // [THEN] Verified The TDS Adjustment Journal Amount
      VerifyTDSJournalAmount(TDSEntryNo);
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler)]
    PROCEDURE VerifyForm26QAfterTDSAdjustedAmount@1500064();
    VAR
      GenJournalLine@1500007 : Record 81;
      GenJournalLine2@1500006 : Record 81;
      FormNo@1500002 : '26Q,27Q';
    BEGIN
      // [SCENARIO 163844] Validate form 26Q when TDS is adjusted in the subsequent quarter
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(FALSE);

      // [WHEN] Create and Post Multiple line General Journals ,  Genrate e TDS Using Form 26 and e-TDS
      CreateAndPostMultipleGenJnlLinesWithPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 26Q");
      GenerateeTDSUsingPagefor2627QeTds(TRUE);

      // [THEN] Verified Export Txt file : Company Information."T.A.N. No."
      VerifyValuesOnBatchHeader(FormNo::"26Q");
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler)]
    PROCEDURE Verify26QFileFormatAfterPayTDS@1500075();
    VAR
      GenJournalLine@1500007 : Record 81;
      GenJournalLine2@1500006 : Record 81;
      FormNo@1500002 : '26Q,27Q';
    BEGIN
      // [SCENARIO 164337] Validate whether transactions are marked with 'T' for transporter and properly exported in the 26 Q file format
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(FALSE);

      // [WHEN] Create and Post Multiple line General Journals ,  Genrate e TDS Using Form 26 and e-TDS
      CreateAndPostMultipleGenJnlLinesWithPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 26Q");
      GenerateeTDSUsingPagefor2627QeTds(TRUE);

      // [THEN] Verified Export Txt file : Company Information."T.A.N. No."
      VerifyValuesOnBatchHeader(FormNo::"26Q");
    END;

    [Test]
    [HandlerFunctions(Form27QRequestPageHandler,GenerateeTDSRequestPageHandler)]
    PROCEDURE Verify27QFileFormatAfterPayTDS@1500069();
    VAR
      GenJournalLine@1500004 : Record 81;
      GenJournalLine2@1500003 : Record 81;
      FormNo@1500000 : '26Q,27Q';
    BEGIN
      // [SCENARIO 164338] Validate whether transactions are marked with 'T' for transporter and properly exported in the 27 Q file format
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(TRUE);

      // [WHEN] Create and Post Multiple line General Journals ,  Genrate e TDS Using Form 27 and e-TDS
      CreateAndPostMultipleGenJnlLinesWithPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 27Q");
      GenerateeTDSUsingPagefor2627QeTds(FALSE);

      // [THEN] Verified Export Txt file : Company Information."T.A.N. No."
      VerifyValuesOnBatchHeader(FormNo::"27Q");
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler)]
    PROCEDURE Verify26QFileFormatWithBookEntryFlag@1500068();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500000 : Record 81;
      FormNo@1500001 : '26Q,27Q';
    BEGIN
      // [SCENARIO 163848] Verify book entry flag in case of C-5 correction
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(FALSE);
      UpdateVendorPANStatustoPANAPPLIED;

      // [WHEN] Create and Post Multiple line General Journals ,  Genrate e TDS Using Form 26 and e-TDS
      CreateAndPostMultipleGenJnlLinesWithPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 26Q");
      GenerateeTDSUsingPagefor2627QeTds(TRUE);

      // [THEN] Verified Export Txt file : Company Information."T.A.N. No."
      VerifyValuesOnBatchHeader(FormNo::"26Q");
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler,CorrectForm2627QRequestPageHandler,UpdateCorrectDeductorUsingPage,RevisedForm26QRequestPageHandler,GenerateRevisedeTDSRequestPageHandler)]
    PROCEDURE VerifyRevisedeTDSWithBookEntryFlag@1500080();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500000 : Record 81;
      FormNo@1500001 : '26Q,27Q';
    BEGIN
      // [SCENARIO 163848] Verify book entry flag in case of C-5 correction
      // [FEATURE] [e-TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NodNoc ,TDS Nature of deduction,Assesse Code,TDS Setup
      Initialize(FALSE);
      UpdateVendorPANStatustoPANAPPLIED;

      // [WHEN] Create and Post Multiple line General Journals ,  Genrate e TDS Using Form 26 and e-TDS , Correct 26Q/27Q Entries , Revised Form 26Q
      CreateAndPostMultipleGenJnlLinesWithPayTDSAndUpdateChallan(GenJournalLine,GenJournalLine2);
      GenerateForm2627QAndeTDS(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(5,0),1,5));
      UpdateFormCorrect2627QEntries(1,TRUE);
      REPORT.RUN(REPORT::"Correct 26Q/27Q Entries");
      REPORT.RUN(REPORT::"Revised Form 26Q");

      // [THEN] Verified Export File : "Batch Header"."Deductor Address"
      VerifyReportDetailRevisedForm26Q27Q;

      // [WHEN] Generate Revised eTDS
      GenerateRevisedeTDSUsingPagefor2627QeTds(TRUE);

      // [THEN]  Verified Export Txt file : "Batch Header"."Deductor T.A.N. No."
      VerifyValuesOnBatchHeader(FormNo::"26Q");
    END;

    [Test]
    PROCEDURE VerifyOfGLEntriesForPurchaseJournalWithFileValidation@1500073();
    VAR
      GenJournalLine@1500002 : Record 81;
    BEGIN
      // [SCENARIO 164352] Program eTDs file validates successfully by File Validation Utility after doing online application with payment and invoice
      // [FEATURE] [eTDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,Non Resident Payments,TDS Nature of deduction,Assesse Code,TDS Setup ,Foreign Currency
      Initialize(FALSE);

      // [WHEN] Create and Post General Journals
      CreateAndPostGenJnlLinesWithTDS(
        GenJournalLine,GenJournalLine."Document Type"::Payment,LibraryRandom.RandDec(7000,2));

      // [THEN] Verified Posted G/L entries
      VerifyGLEntryCount(GenJournalLine."Document No.",3);
      VerifyGLEntry(GenJournalLine."Document No.",GenJournalLine.Amount);
    END;

    [Test]
    PROCEDURE VerifyOfGLEntriesForPurchaseOrderWithFileValidation@1500067();
    VAR
      GenJournalLine@1500002 : Record 81;
      PurchaseHeader@1500006 : Record 38;
      DocumentNo@1500000 : Code[20];
    BEGIN
      // [SCENARIO 164352] Program eTDs file validates successfully by File Validation Utility after doing online application with payment and invoice
      // [FEATURE] [eTDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,Non Resident Payments,TDS Nature of deduction,Assesse Code,TDS Setup ,Foreign Currency
      Initialize(FALSE);

      // [WHEN] Create and Post General Journals
      CreateAndPostGenJnlLinesWithTDS(
        GenJournalLine,GenJournalLine."Document Type"::Payment,LibraryRandom.RandDec(7000,2));
      CreatePurchaseOrderUsingAppliedDocNo(PurchaseHeader,GenJournalLine."Document No.",LibraryERM.CreateGLAccountWithPurchSetup);
      PurchaseHeader.CALCFIELDS("Amount to Vendor");
      DocumentNo := LibraryPurchase.PostPurchaseDocument(PurchaseHeader,TRUE,TRUE);

      // [THEN] Verified Posted G/L entries
      VerifyGLEntryCount(DocumentNo,3);
      VerifyGLEntry(DocumentNo,PurchaseHeader."Amount to Vendor");
    END;

    [Test]
    PROCEDURE VerifyOfGLEntriesForPayTDSWithFileValidation@1500070();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500001 : Record 81;
      PurchaseHeader@1500006 : Record 38;
      Amount@1500003 : Decimal;
    BEGIN
      // [SCENARIO 164352] Program eTDs file validates successfully by File Validation Utility after doing online application with payment and invoice
      // [FEATURE] [eTDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,Non Resident Payments,TDS Nature of deduction,Assesse Code,TDS Setup ,Foreign Currency
      Initialize(FALSE);

      // [WHEN] Create and Post General Journals,Pay TDS Payment
      CreateAndPostGenJnlLinesWithTDS(
        GenJournalLine,GenJournalLine."Document Type"::Payment,LibraryRandom.RandDec(7000,2));
      CreatePurchaseOrderUsingAppliedDocNo(PurchaseHeader,GenJournalLine."Document No.",LibraryERM.CreateGLAccountWithPurchSetup);
      LibraryPurchase.PostPurchaseDocument(PurchaseHeader,TRUE,TRUE);
      CreateGenJnlLinesWithPayTDS(GenJournalLine2,Amount);
      LibraryERM.PostGeneralJnlLine(GenJournalLine2);

      // [THEN] Verified Posted G/L entries
      VerifyGLEntryCount(GenJournalLine2."Document No.",2);
      VerifyGLEntry(GenJournalLine2."Document No.",Amount);
    END;

    [Test]
    [HandlerFunctions(GenerateCertificateNosRequestPageHandler,Form26QRequestPageHandler,GenerateeTDSRequestPageHandler,ConfirmHandler,MessageHandler)]
    PROCEDURE VerifyFileValidationAfterOnlinePaymentAndInvoice@1500072();
    VAR
      GenJournalLine@1500002 : Record 81;
      GenJournalLine2@1500001 : Record 81;
      PurchaseHeader@1500006 : Record 38;
      Challanno@1500007 : Code[20];
      FormNo@1500008 : '26Q,27Q';
      Amount@1500003 : Decimal;
    BEGIN
      // [SCENARIO 164352] Program eTDs file validates successfully by File Validation Utility after doing online application with payment and invoice
      // [FEATURE] [eTDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,Non Resident Payments,TDS Nature of deduction,Assesse Code,TDS Setup ,Foreign Currency
      Initialize(FALSE);

      // [WHEN] Create and Post General Journals,Pay TDS Payment and Generate Certificate No , Form 26Q ,e TDS
      CreateAndPostGenJnlLinesWithTDS(
        GenJournalLine,GenJournalLine."Document Type"::Payment,LibraryRandom.RandDec(7000,2));
      CreatePurchaseOrderUsingAppliedDocNo(PurchaseHeader,GenJournalLine."Document No.",LibraryERM.CreateGLAccountWithPurchSetup);
      LibraryPurchase.PostPurchaseDocument(PurchaseHeader,TRUE,TRUE);
      CreateGenJnlLinesWithPayTDS(GenJournalLine2,Amount);
      LibraryERM.PostGeneralJnlLine(GenJournalLine2);
      Challanno :=
        LibraryTDS.UpdateChallanDetails(
          GenJournalLine."Document No.",GenJournalLine2."Document No.",IncomeTaxAccountingPeriod."Starting Date");
      LibraryTDS.RunUpdateChallanRegister(Challanno,LibraryRandom.RandInt(2000));
      RunGenerateCertificateNos;
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 26Q");
      GenerateeTDSUsingPagefor2627QeTds(TRUE);

      // [THEN] Verified Export Txt file : "Batch Header"."Deductor T.A.N. No."
      VerifyValuesOnBatchHeader(FormNo::"26Q");
    END;

    LOCAL PROCEDURE Initialize@1500041(ForeignVendor@1500004 : Boolean);
    BEGIN
      LibrarySetupStorage.Restore;
      CompanyInformation.GET;
      GeneralLedgerSetup.GET;
      RollbackChangesMadeToDataBase;
      InitializeSetup(ForeignVendor);
      IF isInitialized THEN
        EXIT;
      LibraryTDS.CreateDeductoryCodeAndUpdateOnCompanyInformation(CompanyInformation);
      isInitialized := TRUE;
      COMMIT;
    END;

    LOCAL PROCEDURE InitializeSetup@1500009(ForeignVendor@1500004 : Boolean);
    VAR
      Vendor@1500003 : Record 23;
      CountryRegion@1500002 : Record 9;
      CurrencyCode@1500001 : Code[10];
      VendorNo@1500000 : Code[20];
    BEGIN
      LibraryTDS.CreateIncomeTaxAccPeriod(IncomeTaxAccountingPeriod);
      LibraryTDS.CreateIncomeTaxPeriod(IncomeTaxPeriodSetup,IncomeTaxAccountingPeriod."No.",IncomeTaxPeriodSetup.Quarter::Q1);
      LibraryTDS.UpdateTDSNilChallanInGeneralLedgerSetup;
      IF ForeignVendor THEN BEGIN
        LibraryERM.CreateCountryRegion(CountryRegion);
        CurrencyCode :=
          LibraryERM.CreateCurrencyWithExchangeRate(IncomeTaxAccountingPeriod."Starting Date",LibraryRandom.RandDec(10,2),
            LibraryRandom.RandDec(10,2));
        LibraryTDS.CreateForeignVendorWithPANAPPLIED(Vendor,CurrencyCode,CountryRegion.Code);
        VendorNo := Vendor."No.";
      END ELSE
        VendorNo := ServiceTaxWithTDSHelper.CreateVendorWithPANNo;
      LibraryTDS.CreateAssesseeandNODNOCSetup(
        NodNocHeader,TdsNatureOfDeduction,TDSSetup,CountryRegion.Code,VendorNo,NodNocHeader.Type::Vendor,
        IncomeTaxAccountingPeriod."Starting Date");
      TDSAccount := LibraryTDS.CreateAndUpdateTDSAccNo(TDSSetup);
      WORKDATE := IncomeTaxAccountingPeriod."Starting Date";
    END;

    LOCAL PROCEDURE CreateAndPostGenJnlLinesWithTDS@1500006(VAR GenJournalLine@1500000 : Record 81;DocumentType@1500004 : Option;Amount@1500001 : Decimal);
    VAR
      GenJournalTemplate@1500005 : Record 80;
      GenJournalBatch@1500006 : Record 232;
    BEGIN
      LibraryERM.CreateGenJournalTemplate(GenJournalTemplate);
      LibraryERM.CreateGenJournalBatch(GenJournalBatch,GenJournalTemplate.Name);
      LibraryERM.CreateGeneralJnlLineWithBalAcc(
        GenJournalLine,GenJournalTemplate.Name,GenJournalBatch.Name,DocumentType,
        GenJournalLine."Account Type"::Vendor,NodNocHeader."No.",GenJournalLine."Bal. Account Type"::"G/L Account",
        LibraryERM.CreateGLAccountNo,Amount);
      WITH GenJournalLine DO BEGIN
        VALIDATE("Party Type","Party Type"::Vendor);
        VALIDATE("Party Code",NodNocHeader."No.");
        VALIDATE("Posting Date",IncomeTaxAccountingPeriod."Starting Date");
        VALIDATE("TDS Nature of Deduction",TdsNatureOfDeduction.Code);
        MODIFY(TRUE);
      END;
      LibraryERM.PostGeneralJnlLine(GenJournalLine);
    END;

    LOCAL PROCEDURE CreateAndPostGenJnlLinesPayTDS@1500003(VAR GenJournalLine@1500000 : Record 81;VAR GenJournalLine2@1500001 : Record 81);
    VAR
      Amount@1500002 : Decimal;
    BEGIN
      CreateAndPostGenJnlLinesWithTDS(
        GenJournalLine,GenJournalLine."Document Type"::Invoice,-LibraryRandom.RandDec(7000,2));
      CreateGenJnlLinesWithPayTDS(GenJournalLine2,Amount);
      VerifyTDSAmtInPaymentJournal(GenJournalLine2."Document No.",Amount);
      LibraryERM.PostGeneralJnlLine(GenJournalLine2);
    END;

    LOCAL PROCEDURE CreateGenJnlLinesWithPayTDS@1500007(VAR GenJournalLine@1500000 : Record 81;VAR Amount@1500002 : Decimal);
    VAR
      GenJournalTemplate@1500004 : Record 80;
      GenJournalBatch@1500005 : Record 232;
    BEGIN
      LibraryERM.CreateGenJournalTemplate(GenJournalTemplate);
      GenJournalTemplate.VALIDATE(Type,GenJournalTemplate.Type::Payments);
      GenJournalTemplate.MODIFY(TRUE);
      LibraryERM.CreateGenJournalBatch(GenJournalBatch,GenJournalTemplate.Name);
      WITH GenJournalLine DO BEGIN
        LibraryERM.CreateGeneralJnlLineWithBalAcc(
          GenJournalLine,GenJournalTemplate.Name,GenJournalBatch.Name,"Document Type"::Payment,
          "Account Type"::"G/L Account",TDSAccount,"Bal. Account Type"::"Bank Account",
          LibraryERM.CreateBankAccountNo,0);
        VALIDATE("Posting Date",IncomeTaxAccountingPeriod."Starting Date");
        VALIDATE("T.A.N. No.",CompanyInformation."T.A.N. No.");
        MODIFY(TRUE);
        LibraryTDS.PayTDS(GenJournalLine);
      END;
      Amount := LibraryTDS.GetPostedTDSAmount(GenJournalLine."Document No.",TDSAccount);
    END;

    LOCAL PROCEDURE CreateAndPostGenJnlLinesPayTDSAndUpdateChallan@1500052(VAR GenJournalLine@1500000 : Record 81;VAR GenJournalLine2@1500001 : Record 81);
    VAR
      Challanno@1500003 : Code[10];
    BEGIN
      CreateAndPostGenJnlLinesPayTDS(GenJournalLine,GenJournalLine2);
      Challanno :=
        LibraryTDS.UpdateChallanDetails(
          GenJournalLine."Document No.",GenJournalLine2."Document No.",IncomeTaxAccountingPeriod."Starting Date");
      LibraryTDS.RunUpdateChallanRegister(Challanno,LibraryRandom.RandInt(2000));
    END;

    LOCAL PROCEDURE CreateAndPostMultipleGenJnlLinesWithPayTDS@1500066(VAR GenJournalLine@1500000 : Record 81;VAR GenJournalLine2@1500001 : Record 81);
    VAR
      Amount@1500002 : Decimal;
    BEGIN
      CreateAndPostMultipleGenJnlLines(GenJournalLine,GenJournalLine."Document Type"::Payment);
      CreateGenJnlLinesWithPayTDS(GenJournalLine2,Amount);
      VerifyTDSAmtInPaymentJournal(GenJournalLine2."Document No.",Amount);
      LibraryERM.PostGeneralJnlLine(GenJournalLine2);
    END;

    LOCAL PROCEDURE CreateAndPostMultipleGenJnlLinesWithPayTDSAndUpdateChallan@1500065(VAR GenJournalLine@1500000 : Record 81;VAR GenJournalLine2@1500001 : Record 81);
    VAR
      Challanno@1500003 : Code[10];
    BEGIN
      CreateAndPostMultipleGenJnlLinesWithPayTDS(GenJournalLine,GenJournalLine2);
      Challanno :=
        LibraryTDS.UpdateChallanDetails(
          GenJournalLine."Document No.",GenJournalLine2."Document No.",IncomeTaxAccountingPeriod."Starting Date");
      LibraryTDS.RunUpdateChallanRegister(Challanno,LibraryRandom.RandInt(2000));
    END;

    LOCAL PROCEDURE CreatePurchaseOrder@1500062(VAR PurchaseLine@1500004 : Record 39;Type@1500000 : Option);
    VAR
      PurchaseHeader@1500001 : Record 38;
    BEGIN
      LibraryPurchase.CreatePurchHeader(PurchaseHeader,PurchaseHeader."Document Type"::Order,NodNocHeader."No.");
      WITH PurchaseHeader DO BEGIN
        VALIDATE("Posting Date",IncomeTaxAccountingPeriod."Starting Date");
        MODIFY(TRUE);
      END;
      CreatePurchaseLine(PurchaseLine,PurchaseHeader,Type);
      PurchaseLine.CalculateTDS(PurchaseHeader);
    END;

    LOCAL PROCEDURE CreatePurchaseLine@1500032(VAR PurchaseLine@1500004 : Record 39;VAR PurchaseHeader@1500000 : Record 38;Type@1500003 : ' ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)');
    BEGIN
      LibraryPurchase.CreatePurchaseLine(PurchaseLine,PurchaseHeader,Type,'',LibraryRandom.RandInt(10));
      WITH PurchaseLine DO BEGIN
        VALIDATE("Direct Unit Cost",LibraryRandom.RandInt(100000));
        VALIDATE("TDS Nature of Deduction",TdsNatureOfDeduction.Code);
        MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE CreatePurchaseLineUsingGLAccount@1500092(VAR PurchaseLine@1500004 : Record 39;VAR PurchaseHeader@1500000 : Record 38;GLAccountNo@1500001 : Code[20]);
    BEGIN
      LibraryPurchase.CreatePurchaseLine(
        PurchaseLine,PurchaseHeader,PurchaseLine.Type::"G/L Account",GLAccountNo,LibraryRandom.RandInt(10));
      WITH PurchaseLine DO BEGIN
        VALIDATE("Direct Unit Cost",LibraryRandom.RandInt(100000));
        VALIDATE("TDS Nature of Deduction",TdsNatureOfDeduction.Code);
        MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE CreatePurchaseOrderUsingAppliedDocNo@1500074(VAR PurchaseHeader@1500000 : Record 38;AppliedDocNo@1500004 : Code[20];GLAccountNo@1500002 : Code[20]);
    VAR
      PurchaseLine@1500001 : Record 39;
    BEGIN
      LibraryPurchase.CreatePurchHeader(PurchaseHeader,PurchaseHeader."Document Type"::Invoice,NodNocHeader."No.");
      WITH PurchaseHeader DO BEGIN
        VALIDATE("Posting Date",IncomeTaxAccountingPeriod."Starting Date");
        VALIDATE("Applies-to Doc. Type","Applies-to Doc. Type"::Payment);
        VALIDATE("Applies-to Doc. No.",AppliedDocNo);
        VALIDATE("Location Code",'');
        MODIFY(TRUE);
      END;
      CreatePurchaseLineUsingGLAccount(PurchaseLine,PurchaseHeader,GLAccountNo);
      PurchaseLine.CalculateTDS(PurchaseHeader);
    END;

    LOCAL PROCEDURE CreateAndPostMultipleGenJnlLines@1500061(VAR GenJournalLine@1500000 : Record 81;DocumentType@1500004 : Option);
    VAR
      GenJournalTemplate@1500005 : Record 80;
      GenJournalBatch@1500006 : Record 232;
      I@1500001 : Integer;
    BEGIN
      LibraryERM.CreateGenJournalTemplate(GenJournalTemplate);
      GenJournalTemplate.VALIDATE("Sub Type",GenJournalTemplate."Sub Type"::"Bank Payment Voucher");
      GenJournalTemplate.MODIFY(TRUE);
      LibraryERM.CreateGenJournalBatch(GenJournalBatch,GenJournalTemplate.Name);
      FOR I := 1 TO 2 DO BEGIN
        LibraryERM.CreateGeneralJnlLineWithBalAcc(
          GenJournalLine,GenJournalTemplate.Name,GenJournalBatch.Name,DocumentType,
          GenJournalLine."Account Type"::Vendor,NodNocHeader."No.",GenJournalLine."Bal. Account Type"::"G/L Account",
          LibraryERM.CreateGLAccountNo,LibraryRandom.RandDec(7000,2));
        ModifyGenJnlLines(GenJournalLine,I);
      END;
      LibraryERM.PostGeneralJnlLine(GenJournalLine);
    END;

    LOCAL PROCEDURE CreateTDSAdjustmentJournal@1500408(VAR TDSEntry@1500000 : Record 13729;VAR TDSEntryNo@1500002 : Integer) : Decimal;
    VAR
      TaxJournalTemplate@1500006 : Record 16585;
      TaxJournalBatch@1500004 : Record 16586;
      TDSAdjustmentJournal@1500001 : TestPage 13791;
      TDSAdjAmount@1500003 : Decimal;
    BEGIN
      LibraryTDS.CreateTaxJournalTemplateTDSAdj(TaxJournalTemplate);
      LibraryTDS.CreateTaxJournalBatchTDSAdj(TaxJournalBatch,TaxJournalTemplate.Name);
      TDSEntry.SETRANGE("Party Code",NodNocHeader."No.");
      TDSEntry.FINDLAST;
      COMMIT;
      WITH TDSAdjustmentJournal DO BEGIN
        OPENEDIT;
        CurrentJnlBatchName.SETVALUE(TaxJournalBatch.Name);
        "Transaction No".SETVALUE(TDSEntry."Entry No.");
        TDSEntryNo := TDSEntry."Entry No.";
        "TDS/TCS % Applied".SETVALUE(LibraryRandom.RandIntInRange(6,10));
        TDSAdjAmount := Amount.ASDECIMAL;
        OK.INVOKE;
      END;
      EXIT(TDSAdjAmount);
    END;

    PROCEDURE CalcExpectedNonPanTDSAmount@1500025(VAR ExpectedTDSAmtPurchaseLine@1500000 : Record 39;Amount1@1500003 : Decimal);
    BEGIN
      WITH ExpectedTDSAmtPurchaseLine DO BEGIN
        "TDS %" := TDSSetup."Non PAN TDS %";
        "Surcharge %" := TDSSetup."Surcharge %";
        "eCESS % on TDS" := TDSSetup."eCESS %";
        "SHE Cess % On TDS" := TDSSetup."SHE Cess %";
        "TDS Base Amount" := Amount1;
        "TDS Amount" := LibraryTDS.RoundTDS((TDSSetup."Non PAN TDS %" / 100 * "TDS Base Amount"));
        "Surcharge Amount" := LibraryTDS.RoundTDS((TDSSetup."Surcharge %" / 100 * "TDS Amount"));
        "eCESS on TDS Amount" := LibraryTDS.RoundTDS((TDSSetup."eCESS %" / 100 * ("TDS Amount" + "Surcharge Amount")));
        "SHE Cess on TDS Amount" := LibraryTDS.RoundTDS((TDSSetup."SHE Cess %" / 100 * ("TDS Amount" + "Surcharge Amount")));
        "Total TDS Including SHE CESS" :=
          LibraryTDS.RoundTDS("TDS Amount" + "eCESS on TDS Amount" + "SHE Cess on TDS Amount" + "Surcharge Amount");
      END;
    END;

    LOCAL PROCEDURE GenerateForm2627QAndeTDS@1500047(OriginalRRRNo@1500000 : Code[20]);
    BEGIN
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 26Q");
      GenerateeTDSUsingPagefor2627QeTds(TRUE);
      GenerateeTDSUsingPagefor2627QFileeTds(TRUE,OriginalRRRNo);
    END;

    LOCAL PROCEDURE GenerateForm2627QAndeTDSReturnStatus@1500048(OriginalRRRNo@1500000 : Code[20]);
    BEGIN
      GenerateForm2627QAndeTDS(OriginalRRRNo);
      GenerateeTDSUsingPageforReturnStatus(TRUE);
    END;

    LOCAL PROCEDURE GenerateForm27AndeTdseFileTds@1500051(OriginalRRRNo@1500001 : Code[20]);
    BEGIN
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 27Q");
      GenerateeTDSUsingPagefor2627QeTds(FALSE);
      GenerateeTDSUsingPagefor2627QFileeTds(FALSE,OriginalRRRNo);
    END;

    LOCAL PROCEDURE GenerateForm27AndRevisedForm27QWithReturnStatus@1500045(OriginalRRRNo@1500001 : Code[20]);
    BEGIN
      GenerateForm27AndeTdseFileTds(OriginalRRRNo);
      GenerateeTDSUsingPageforReturnStatus(FALSE);
      UpdateFormCorrect2627QEntries(1,FALSE);
      REPORT.RUN(REPORT::"Correct 26Q/27Q Entries");
      REPORT.RUN(REPORT::"Revised Form 27Q");
      GenerateRevisedeTDSUsingPageforReturnStatus(FALSE);
    END;

    LOCAL PROCEDURE GenerateReturnStatusTDSAndReturnStatusAndRevised26@1500057(OriginalRRRNo@1500000 : Code[20]);
    BEGIN
      GenerateForm2627QAndeTDSReturnStatus(OriginalRRRNo);
      UpdateFormCorrect2627QEntries(1,TRUE);
      REPORT.RUN(REPORT::"Correct 26Q/27Q Entries");
      GenerateeTDSUsingPageforReturnStatus(TRUE);
      REPORT.RUN(REPORT::"Revised Form 26Q");
    END;

    LOCAL PROCEDURE GenerateCorrect2627AndReturnStatus@1500050();
    BEGIN
      UpdateFormCorrect2627QEntries(1,TRUE);
      REPORT.RUN(REPORT::"Correct 26Q/27Q Entries");
      UpdateFormCorrect2627QEntries(2,TRUE);
      REPORT.RUN(REPORT::"Correct 26Q/27Q Entries");
      GenerateeTDSUsingPageforReturnStatus(TRUE);
    END;

    LOCAL PROCEDURE GenerateeTDSUsingPagefor2627QeTds@1500015(Resident@1500001 : Boolean);
    VAR
      GenerateeTDS@1500003 : TestPage 16507;
    BEGIN
      GenerateeTDS.OPENEDIT;
      GenerateeTDS.FormNo.SETVALUE(LibraryTDS.GetFormNo(Resident));
      GenerateeTDS.eTDS.INVOKE;
    END;

    LOCAL PROCEDURE GenerateeTDSUsingPagefor2627QFileeTds@1500016(Resident@1500001 : Boolean;OriginalRRRNo@1500000 : Code[20]);
    VAR
      GenerateeTDS@1500002 : TestPage 16507;
    BEGIN
      LibraryVariableStorage.Enqueue(OriginalRRRNo);
      GenerateeTDS.OPENEDIT;
      GenerateeTDS.FormNo.SETVALUE(LibraryTDS.GetFormNo(Resident));
      GenerateeTDS."File e-TDS".INVOKE;
    END;

    LOCAL PROCEDURE GenerateeTDSUsingPageforReturnStatus@1500017(Resident@1500001 : Boolean);
    VAR
      GenerateeTDS@1500000 : TestPage 16507;
    BEGIN
      GenerateeTDS.OPENEDIT;
      GenerateeTDS.FormNo.SETVALUE(LibraryTDS.GetFormNo(Resident));
      GenerateeTDS.Action1500008.INVOKE;
    END;

    LOCAL PROCEDURE GenerateRevisedeTDSUsingPagefor2627QeTds@1500081(Resident@1500005 : Boolean);
    VAR
      GenerateRevisedeTDS@1500001 : TestPage 16509;
    BEGIN
      GenerateRevisedeTDS.OPENEDIT;
      GenerateRevisedeTDS.FormNo.SETVALUE(LibraryTDS.GetFormNo(Resident));
      GenerateRevisedeTDS.Action1500006.INVOKE;
    END;

    LOCAL PROCEDURE GenerateRevisedeTDSUsingPagefor2627QFileeTds@1500036(Resident@1500005 : Boolean;PreviousRRRNo@1500000 : Code[20]);
    VAR
      GenerateRevisedeTDS@1500001 : TestPage 16509;
    BEGIN
      LibraryVariableStorage.Enqueue(PreviousRRRNo);
      GenerateRevisedeTDS.OPENEDIT;
      GenerateRevisedeTDS.FormNo.SETVALUE(LibraryTDS.GetFormNo(Resident));
      GenerateRevisedeTDS."File e-TDS".INVOKE;
    END;

    LOCAL PROCEDURE GenerateRevisedeTDSUsingPageforReturnStatus@1500035(Resident@1500005 : Boolean);
    VAR
      GenerateRevisedeTDS@1500001 : TestPage 16509;
    BEGIN
      GenerateRevisedeTDS.OPENEDIT;
      GenerateRevisedeTDS.FormNo.SETVALUE(LibraryTDS.GetFormNo(Resident));
      GenerateRevisedeTDS.Action1500008.INVOKE;
    END;

    LOCAL PROCEDURE VerifyTDSAmountsPurchaseDoc@1500078(ExpectedPurchaseLineTDSValue@1500005 : Record 39;DocumentType@1500007 : Option;DocumentNo@1500000 : Code[20]);
    VAR
      PurchLine@1500002 : Record 39;
    BEGIN
      PurchLine.SETRANGE("Document Type",DocumentType);
      PurchLine.SETRANGE("Document No.",DocumentNo);
      PurchLine.FINDFIRST;
      Assert.AreEqual(
        ExpectedPurchaseLineTDSValue."TDS %",PurchLine."TDS %",
        STRSUBSTNO(AmountErr,PurchLine.FIELDNAME("TDS %"),PurchLine.TABLECAPTION));
      Assert.AreNearlyEqual(
        ExpectedPurchaseLineTDSValue."TDS Amount",PurchLine."TDS Amount",GeneralLedgerSetup."TDS Rounding Precision",
        STRSUBSTNO(AmountErr,PurchLine.FIELDNAME("TDS Amount"),PurchLine.TABLECAPTION));
      Assert.AreNearlyEqual(
        ExpectedPurchaseLineTDSValue."TDS Base Amount",PurchLine.Amount,GeneralLedgerSetup."TDS Rounding Precision",
        STRSUBSTNO(AmountErr,PurchLine.FIELDNAME("TDS Base Amount"),PurchLine.TABLECAPTION));
      Assert.AreEqual(
        ExpectedPurchaseLineTDSValue."eCESS % on TDS",PurchLine."eCESS % on TDS",
        STRSUBSTNO(AmountErr,PurchLine.FIELDNAME("eCESS % on TDS"),PurchLine.TABLECAPTION));
      Assert.AreNearlyEqual(
        ExpectedPurchaseLineTDSValue."eCESS on TDS Amount",PurchLine."eCESS on TDS Amount",GeneralLedgerSetup."TDS Rounding Precision",
        STRSUBSTNO(AmountErr,PurchLine.FIELDNAME("eCESS on TDS Amount"),PurchLine.TABLECAPTION));
      Assert.AreEqual(
        ExpectedPurchaseLineTDSValue."SHE Cess % On TDS",PurchLine."SHE Cess % On TDS",
        STRSUBSTNO(AmountErr,PurchLine.FIELDNAME("SHE Cess % On TDS"),PurchLine.TABLECAPTION));
      Assert.AreNearlyEqual(
        ExpectedPurchaseLineTDSValue."SHE Cess on TDS Amount",PurchLine."SHE Cess on TDS Amount",
        GeneralLedgerSetup."TDS Rounding Precision",
        STRSUBSTNO(AmountErr,PurchLine.FIELDNAME("SHE Cess on TDS Amount"),PurchLine.TABLECAPTION));
      Assert.AreNearlyEqual(
        ExpectedPurchaseLineTDSValue."Total TDS Including SHE CESS",PurchLine."Total TDS Including SHE CESS",
        GeneralLedgerSetup."TDS Rounding Precision",
        STRSUBSTNO(AmountErr,PurchLine.FIELDNAME("Total TDS Including SHE CESS"),PurchLine.TABLECAPTION));
    END;

    LOCAL PROCEDURE VerifyTDSAmtInPaymentJournal@1500022(DocumentNo@1500000 : Code[20];TDSAmt@1500001 : Decimal);
    VAR
      GenJournalLine@1500002 : Record 81;
    BEGIN
      GenJournalLine.SETRANGE("Document No.",DocumentNo);
      GenJournalLine.FINDFIRST;
      GenJournalLine.TESTFIELD(Amount,TDSAmt);
    END;

    LOCAL PROCEDURE VerifyReportDetailRevisedForm26Q27Q@1500002();
    VAR
      BatchHeader@1500001 : Record 16503;
    BEGIN
      BatchHeader.SETRANGE("Financial Year",IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      BatchHeader.FINDLAST;
      LibraryReportDataset.LoadDataSetFile;
      LibraryReportDataset.AssertElementWithValueExists('Batch_Header__Deductor_Address_',
        BatchHeader."Deductor Address");
    END;

    LOCAL PROCEDURE VerifyValuesOnBatchHeader@1500034(FormNo@1500001 : '26Q,27Q');
    VAR
      BatchHeader@1500002 : Record 16503;
    BEGIN
      BatchHeader.SETRANGE("Form No.",FormNo);
      BatchHeader.FINDLAST;
      Assert.AreEqual(
        CompanyInformation."T.A.N. No.",BatchHeader."Deductor T.A.N. No.",STRSUBSTNO(
          CompanyInformation."T.A.N. No.",BatchHeader."Deductor T.A.N. No.",ValueNotFoundErr));
    END;

    LOCAL PROCEDURE VerifyGLEntry@1500225(DocumentNo@1500002 : Code[20];Amount@1500000 : Decimal);
    VAR
      GLEntry@1500003 : Record 17;
    BEGIN
      GLEntry.SETRANGE("Document No.",DocumentNo);
      GLEntry.SETFILTER(Amount,'>%1',0);
      GLEntry.FINDFIRST;
      Assert.AreEqual(ABS(GLEntry.Amount),Amount,STRSUBSTNO(CreditAmountErr,GLEntry.Amount,Amount));
    END;

    LOCAL PROCEDURE VerifyGLEntryCount@32(DocumentNo@1003 : Code[20];ExpectedCount@1001 : Integer);
    VAR
      DummyGLEntry@1000 : Record 17;
    BEGIN
      DummyGLEntry.SETRANGE("Document No.",DocumentNo);
      Assert.RecordCount(DummyGLEntry,ExpectedCount);
    END;

    LOCAL PROCEDURE VerifyReturnStatusInGeneratedFile@1500037(OriginalRRRNo@1500002 : Code[20]);
    VAR
      BatchHeader@1500001 : Record 16503;
    BEGIN
      BatchHeader.SETRANGE("Financial Year",IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      BatchHeader.FINDFIRST;
      Assert.AreEqual(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS",BatchHeader."Financial Year",ValueErr);
      Assert.AreEqual(TRUE,BatchHeader.Filed,ValueErr);
      Assert.AreEqual(IncomeTaxPeriodSetup.Quarter,BatchHeader.Quarter,ValueErr);
      Assert.AreEqual(0D,BatchHeader."Revised eTDS Filing Date",ValueErr);
      Assert.AreEqual(FALSE,BatchHeader.Revised,ValueErr);
      Assert.AreEqual(WORKDATE,BatchHeader."Filing Date",ValueErr);
      Assert.AreEqual(OriginalRRRNo,BatchHeader."Original RRR No.",ValueErr);
      Assert.AreEqual('',BatchHeader."Previous RRR No.",ValueErr);
      Assert.AreEqual(0,BatchHeader."No. of Revision",ValueErr);
    END;

    LOCAL PROCEDURE VerifyReturnStatusInGenerateeTdsFile@1500038();
    VAR
      BatchHeader@1500001 : Record 16503;
    BEGIN
      BatchHeader.SETRANGE("Financial Year",IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      BatchHeader.FINDFIRST;
      Assert.AreEqual(TRUE,BatchHeader.Revised,ValueErr);
      Assert.AreEqual(1,BatchHeader."No. of Revision",ValueErr);
    END;

    LOCAL PROCEDURE VerifyReturnStatusInGenerateRevisedeTDSFile@1500039(OriginalRRRNo@1500002 : Code[20]);
    VAR
      BatchHeader@1500001 : Record 16503;
    BEGIN
      BatchHeader.SETRANGE("Financial Year",IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      BatchHeader.FINDFIRST;
      Assert.AreEqual(WORKDATE,BatchHeader."Filing Date",ValueErr);
      Assert.AreEqual(0D,BatchHeader."Revised eTDS Filing Date",ValueErr);
      Assert.AreEqual(TRUE,BatchHeader.Revised,ValueErr);
      Assert.AreEqual(OriginalRRRNo,BatchHeader."Original RRR No.",ValueErr);
      Assert.AreEqual('',BatchHeader."Previous RRR No.",ValueErr);
      Assert.AreEqual(1,BatchHeader."No. of Revision",ValueErr);
    END;

    LOCAL PROCEDURE VerifyReturnStatusInGenerateRevisedeUpdateRevisedFillingStatus@1500043(PreviousRRRNo@1500000 : Code[20]);
    VAR
      BatchHeader@1500001 : Record 16503;
    BEGIN
      BatchHeader.SETRANGE("Financial Year",IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      BatchHeader.FINDFIRST;
      Assert.AreEqual(WORKDATE,BatchHeader."Revised eTDS Filing Date",ValueErr);
      Assert.AreEqual(PreviousRRRNo,BatchHeader."Previous RRR No.",ValueErr);
    END;

    LOCAL PROCEDURE VerifyTDSJournalAmount@1500063(TDSEntryNo@1500001 : Integer);
    VAR
      TaxJournalLine@1500002 : Record 16587;
    BEGIN
      TaxJournalLine.SETRANGE("TDS/TCS Transaction No.",TDSEntryNo);
      TaxJournalLine.FINDFIRST;
      TaxJournalLine.TESTFIELD(Amount,TaxJournalLine.Amount);
    END;

    LOCAL PROCEDURE CheckUpdateChallanRegister@1500217(ChallanNo@1501000 : Code[20]);
    VAR
      ChallanRegister@1500201 : Record 16504;
    BEGIN
      ChallanRegister.SETRANGE("Challan No.",ChallanNo);
      ChallanRegister.FINDFIRST;
      ChallanRegister.TESTFIELD(Filed,TRUE);
      ChallanRegister.TESTFIELD(Revised,FALSE);
      ChallanRegister.TESTFIELD("Correction-C9",FALSE);
    END;

    LOCAL PROCEDURE ModifyGenJnlLines@1500084(VAR GenJournalLine@1500000 : Record 81;FieldNumber@1500002 : Integer);
    BEGIN
      WITH GenJournalLine DO BEGIN
        VALIDATE("Party Type","Party Type"::Vendor);
        VALIDATE("Party Code",NodNocHeader."No.");
        VALIDATE("TDS Nature of Deduction",TdsNatureOfDeduction.Code);
        CASE FieldNumber OF
          1:
            BEGIN
              VALIDATE("Posting Date",IncomeTaxAccountingPeriod."Starting Date");
              VALIDATE(Amount,LibraryRandom.RandDec(9000,2));
              MODIFY(TRUE);
            END;
          2:
            BEGIN
              VALIDATE("Posting Date",CALCDATE('<' + FORMAT(1) + 'M>',IncomeTaxAccountingPeriod."Starting Date"));
              VALIDATE(Amount,LibraryRandom.RandDec(7000,2));
              MODIFY(TRUE);
            END;
        END;
      END;
    END;

    LOCAL PROCEDURE UpdateCompanyAndVendorInformation@1500060(VendNo@1500000 : Code[20]);
    VAR
      Vendor@1500001 : Record 23;
    BEGIN
      CompanyInformation.GET;
      WITH CompanyInformation DO BEGIN
        VALIDATE(Address,LibraryUtility.GenerateGUID);
        VALIDATE("P.A.N. No.",COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
        MODIFY(TRUE);
      END;
      WITH Vendor DO BEGIN
        GET(VendNo);
        VALIDATE(Address,COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
        VALIDATE("Phone No.",FORMAT(LibraryRandom.RandIntInRange(1000000000,2000000000)));
        VALIDATE("P.A.N. Status","P.A.N. Status"::PANINVALID);
        MODIFY(TRUE);
      END;
      COMMIT;
    END;

    LOCAL PROCEDURE UpdateVendorPANStatustoPANAPPLIED@1500071();
    VAR
      Vendor@1500000 : Record 23;
    BEGIN
      Vendor.GET(NodNocHeader."No.");
      WITH Vendor DO BEGIN
        VALIDATE("P.A.N. Status","P.A.N. Status"::PANAPPLIED);
        VALIDATE("P.A.N. Reference No.",
          LibraryUtility.GenerateRandomCode(FIELDNO("P.A.N. Reference No."),DATABASE::Vendor));
        MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE RunGenerateCertificateNos@1500441();
    BEGIN
      COMMIT;
      REPORT.RUN(REPORT::"Generate Certificate Nos.");
    END;

    LOCAL PROCEDURE RollbackChangesMadeToDataBase@1500040();
    VAR
      ChallanRegister@1500003 : Record 16504;
      TDSEntry@1500002 : Record 13729;
      BatchHeader@1500001 : Record 16503;
      Form26Q27QEntry@1500000 : Record 16505;
    BEGIN
      ChallanRegister.DELETEALL;
      BatchHeader.DELETEALL;
      TDSEntry.DELETEALL;
      Form26Q27QEntry.DELETEALL;
    END;

    [ModalPageHandler]
    PROCEDURE GenerateReturnStatusModalPageHandler@1500005(VAR ReturnStatus@1500000 : TestPage 16508);
    BEGIN
      ReturnStatus.OK.INVOKE;
    END;

    LOCAL PROCEDURE UpdateFormCorrect2627QEntries@1500026(FieldNumber@1500000 : Integer;Resident@1500001 : Boolean);
    VAR
      CorrectionType@1500002 : ' ,Deductor,Deductee';
      FormType@1500003 : Option;
    BEGIN
      CASE FieldNumber OF
        1:
          CorrectionType := CorrectionType::Deductor;
        2:
          CorrectionType := CorrectionType::Deductee;
      END;
      FormType := LibraryTDS.GetFormNo(Resident);
      LibraryVariableStorage.Enqueue(FormType);
      LibraryVariableStorage.Enqueue(CorrectionType);
    END;

    [ModalPageHandler]
    PROCEDURE UpdateCorrectDeductorUsingPage@1500029(VAR CorrectDeductorRecord@1500001 : TestPage 16503);
    BEGIN
      CorrectDeductorRecord."Deductor E-Mail".SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      CorrectDeductorRecord."Update Entries".INVOKE;
      CorrectDeductorRecord.OK.INVOKE;
    END;

    [ModalPageHandler]
    PROCEDURE UpdateCorrectDeducteeUsingPage@1500010(VAR CorrectDeducteeRecord@1500001 : TestPage 16505);
    BEGIN
      CorrectDeducteeRecord.OK.INVOKE;
    END;

    [RequestPageHandler]
    PROCEDURE CorrectForm2627QRequestPageHandler@1500021(VAR Correct26Q27QEntries@1500001 : TestRequestPage 16502);
    VAR
      CorrectionType@1500000 : Variant;
      FormType@1500004 : Variant;
    BEGIN
      LibraryVariableStorage.Dequeue(FormType);
      LibraryVariableStorage.Dequeue(CorrectionType);
      Correct26Q27QEntries.Control1500002.SETVALUE(IncomeTaxPeriodSetup.Quarter);
      Correct26Q27QEntries.Control1500003.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      Correct26Q27QEntries.Control1500004.SETVALUE(CorrectionType);
      Correct26Q27QEntries.Control1500006.SETVALUE(FormType);
      Correct26Q27QEntries.OK.INVOKE;
    END;

    [RequestPageHandler]
    PROCEDURE Form27QRequestPageHandler@1500018(VAR Form27Q@1500004 : TestRequestPage 16511);
    BEGIN
      Form27Q.TANLocation.SETVALUE(CompanyInformation."T.A.N. No.");
      Form27Q.ReportFrequency.SETVALUE(IncomeTaxPeriodSetup.Quarter);
      Form27Q.FinancialYear.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      Form27Q.FullName.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      Form27Q.Designation.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      Form27Q."PAN No.".SETVALUE(CompanyInformation."P.A.N. No.");
      Form27Q.PrintingDate.SETVALUE(WORKDATE);
      Form27Q.MobileNo.SETVALUE(LibraryRandom.RandIntInRange(1000000000,2000000000));
      Form27Q.SAVEASXML(LibraryReportDataset.GetParametersFileName,LibraryReportDataset.GetFileName);
    END;

    [RequestPageHandler]
    PROCEDURE Form26QRequestPageHandler@1500004(VAR Form26Q@1500004 : TestRequestPage 16505);
    BEGIN
      Form26Q.TANLocation.SETVALUE(CompanyInformation."T.A.N. No.");
      Form26Q.ReportFrequency.SETVALUE(IncomeTaxPeriodSetup.Quarter);
      Form26Q.FinancialYear.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      Form26Q.FullName.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      Form26Q.Designation.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      Form26Q."PAN No.".SETVALUE(CompanyInformation."P.A.N. No.");
      Form26Q.PrintingDate.SETVALUE(WORKDATE);
      Form26Q.MobileNo.SETVALUE(LibraryRandom.RandIntInRange(1000000000,2000000000));
      Form26Q.SAVEASXML(LibraryReportDataset.GetParametersFileName,LibraryReportDataset.GetFileName);
    END;

    [RequestPageHandler]
    PROCEDURE GenerateeTDSRequestPageHandler@1500019(VAR GenerateeTDS@1500104 : TestRequestPage 16508);
    VAR
      FileManagement@1500000 : Codeunit 419;
      FileName@1500001 : Text;
    BEGIN
      FileName := FileManagement.ServerTempFileName('.txt');
      GenerateeTDS.FileName.SETVALUE(FileName);
      GenerateeTDS.TANLocation.SETVALUE(CompanyInformation."T.A.N. No.");
      GenerateeTDS.ReportFrequency.SETVALUE(IncomeTaxPeriodSetup.Quarter);
      GenerateeTDS.FinancialYear.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      GenerateeTDS.FullName.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      GenerateeTDS.Designation.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      GenerateeTDS.PrintingDate.SETVALUE(WORKDATE);
      GenerateeTDS.NameOfReturnPreparationUtility.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      GenerateeTDS.Email.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      GenerateeTDS.MobileNo.SETVALUE(LibraryRandom.RandIntInRange(1000000000,2000000000));
      GenerateeTDS."PAN No.".SETVALUE(CompanyInformation."P.A.N. No.");
      GenerateeTDS.OK.INVOKE;
    END;

    [RequestPageHandler]
    PROCEDURE GenerateFileeTDSRequestPageHandler@1500020(VAR UpdateFilingStatus@1500000 : TestRequestPage 16501);
    VAR
      OriginalRRRNo@1500001 : Variant;
    BEGIN
      LibraryVariableStorage.Dequeue(OriginalRRRNo);
      UpdateFilingStatus.Control1500009.SETVALUE(CompanyInformation."T.A.N. No.");
      UpdateFilingStatus.Control1500000.SETVALUE(IncomeTaxPeriodSetup.Quarter);
      UpdateFilingStatus.Control1500002.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      UpdateFilingStatus.Control1500004.SETVALUE(WORKDATE);
      UpdateFilingStatus.Control1500006.SETVALUE(OriginalRRRNo);
      UpdateFilingStatus.OK.INVOKE;
    END;

    [RequestPageHandler]
    PROCEDURE GenerateRevisedeTDSRequestPageHandler@1500082(VAR RevisedeTDS@1500005 : TestRequestPage 16509);
    VAR
      FileManagement@1500000 : Codeunit 419;
      FileName@1500001 : Text;
    BEGIN
      FileName := FileManagement.ServerTempFileName('.txt');
      RevisedeTDS.FileName.SETVALUE(FileName);
      RevisedeTDS.Control1500012.SETVALUE(CompanyInformation."T.A.N. No.");
      RevisedeTDS.Control1500006.SETVALUE(IncomeTaxPeriodSetup.Quarter);
      RevisedeTDS.Control1500004.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      RevisedeTDS.Control1500000.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      RevisedeTDS.Control1500002.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      RevisedeTDS.Control1500010.SETVALUE(WORKDATE);
      RevisedeTDS.Control1.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      RevisedeTDS.Control1500015.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      RevisedeTDS.PANNo.SETVALUE(CompanyInformation."P.A.N. No.");
      RevisedeTDS.Control1500017.SETVALUE(LibraryRandom.RandIntInRange(1000000000,2000000000));
      RevisedeTDS.OK.INVOKE;
    END;

    [RequestPageHandler]
    PROCEDURE GenerateRevisedFileeTDSRequestPageHandler@1500030(VAR UpdateRevisedFilingStatus@1500000 : TestRequestPage 16510);
    VAR
      PreviousRRRNo@1500001 : Variant;
    BEGIN
      LibraryVariableStorage.Dequeue(PreviousRRRNo);
      UpdateRevisedFilingStatus.Control1500008.SETVALUE(CompanyInformation."T.A.N. No.");
      UpdateRevisedFilingStatus.Control1500000.SETVALUE(IncomeTaxPeriodSetup.Quarter);
      UpdateRevisedFilingStatus.Control1500002.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      UpdateRevisedFilingStatus.Control1500004.SETVALUE(WORKDATE);
      UpdateRevisedFilingStatus.Control1500006.SETVALUE(PreviousRRRNo);
      UpdateRevisedFilingStatus.OK.INVOKE;
    END;

    [RequestPageHandler]
    PROCEDURE GenerateCertificateNosRequestPageHandler@1500461(VAR GenerateCertificateNos@1500118 : TestRequestPage 13720);
    VAR
      PartyType@1500123 : ' ,Party,Customer,Vendor';
    BEGIN
      GenerateCertificateNos.PartyType.SETVALUE(PartyType::Vendor);
      GenerateCertificateNos.Party.SETVALUE(NodNocHeader."No.");
      GenerateCertificateNos.TDSGroup.SETVALUE(TdsNatureOfDeduction."TDS Group");
      GenerateCertificateNos.StartingDate.SETVALUE(IncomeTaxPeriodSetup."Starting Date");
      GenerateCertificateNos.EndingDate.SETVALUE(IncomeTaxPeriodSetup."Ending Date");
      GenerateCertificateNos.ReceiptNumber.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(8,0),1,8));
      GenerateCertificateNos.OK.INVOKE;
    END;

    [RequestPageHandler]
    PROCEDURE RevisedForm26QRequestPageHandler@1500033(VAR RevisedForm26Q@1500004 : TestRequestPage 16506);
    BEGIN
      RevisedForm26Q."PAN No.".SETVALUE(CompanyInformation."P.A.N. No.");
      RevisedForm26Q.Control1500008.SETVALUE(CompanyInformation."T.A.N. No.");
      RevisedForm26Q.Control1500015.SETVALUE(IncomeTaxPeriodSetup.Quarter);
      RevisedForm26Q.Control1500002.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      RevisedForm26Q.Control1500006.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      RevisedForm26Q.Control1500007.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      RevisedForm26Q.Control1500000.SETVALUE(WORKDATE);
      RevisedForm26Q.Control1500009.SETVALUE(LibraryRandom.RandIntInRange(1000000000,2000000000));
      RevisedForm26Q.SAVEASXML(LibraryReportDataset.GetParametersFileName,LibraryReportDataset.GetFileName);
    END;

    [RequestPageHandler]
    PROCEDURE RevisedForm27QRequestPageHandler@1500014(VAR RevisedForm27Q@1500004 : TestRequestPage 16504);
    BEGIN
      RevisedForm27Q."PAN No.".SETVALUE(CompanyInformation."P.A.N. No.");
      RevisedForm27Q.Control1500008.SETVALUE(CompanyInformation."T.A.N. No.");
      RevisedForm27Q.Control1500015.SETVALUE(IncomeTaxPeriodSetup.Quarter);
      RevisedForm27Q.Control1500002.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      RevisedForm27Q.Control1500006.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      RevisedForm27Q.Control1500007.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      RevisedForm27Q.Control1500000.SETVALUE(WORKDATE);
      RevisedForm27Q.Control1500009.SETVALUE(LibraryRandom.RandIntInRange(1000000000,2000000000));
      RevisedForm27Q.SAVEASXML(LibraryReportDataset.GetParametersFileName,LibraryReportDataset.GetFileName);
    END;

    [ConfirmHandler]
    PROCEDURE ConfirmHandler@1500501(Text@1500101 : Text;VAR Reply@1500102 : Boolean);
    BEGIN
      Reply := TRUE;
    END;

    [MessageHandler]
    PROCEDURE MessageHandler@1500502(Msg@1560501 : Text);
    BEGIN
    END;

    BEGIN
    END.
  }
}

