OBJECT Codeunit 137039 SCM Manuf Low Level Code
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ManufacturingSetup@1004 : Record 99000765;
      LibraryInventory@1003 : Codeunit 132201;
      LibraryManufacturing@1002 : Codeunit 132202;
      isInitialized@1000 : Boolean;

    [Test]
    PROCEDURE ItemWithLowLevelCodeZero@2();
    VAR
      TempManufacturingSetup@1002 : TEMPORARY Record 99000765;
      ItemNo@1000 : ARRAY [20] OF Code[20];
    BEGIN
      // Setup: Dynamic Low-Level Code set to true in Manufacturing setup.
      Initialize;
      UpdateManufacturingSetup(TempManufacturingSetup,TRUE);

      // Exercise: Create Item.
      CreateItems(ItemNo);

      // Verify: Verify Low Level code in all the Items must be zero.
      VerifyLowLevelCode(ItemNo[1],ItemNo[6],0);

      // Tear Down: Dynamic Low-Level Code set to Default in Manufacturing setup.
      RestoreManufacturingSetup(TempManufacturingSetup);
    END;

    [Test]
    PROCEDURE ItemWithLowLevelCodeTwo@3();
    VAR
      Item@1001 : Record 27;
      TempManufacturingSetup@1002 : TEMPORARY Record 99000765;
      ProductionBOMHeader@1003 : Record 99000771;
      ProductionBOMLine@1004 : Record 99000772;
      ItemNo@1000 : ARRAY [20] OF Code[20];
    BEGIN
      // Setup: Dynamic Low-Level Code set to true in Manufacturing setup.
      Initialize;
      UpdateManufacturingSetup(TempManufacturingSetup,TRUE);

      // Exercise: Create Item and Production BOM.Update Item with Production BOM.
      CreateItems(ItemNo);
      Item.GET(ItemNo[1]);
      CreateProdBOM(ProductionBOMHeader,ProductionBOMLine.Type::Item,ItemNo[1],'',Item."Base Unit of Measure",FALSE);
      UpdateItemProdBOM(ItemNo[3],ProductionBOMHeader."No.");
      CreateProdBOM(ProductionBOMHeader,ProductionBOMLine.Type::Item,ItemNo[2],'',Item."Base Unit of Measure",FALSE);
      UpdateItemProdBOM(ItemNo[4],ProductionBOMHeader."No.");
      CreateProdBOM(
        ProductionBOMHeader,ProductionBOMLine.Type::Item,ItemNo[5],ItemNo[6],Item."Base Unit of Measure",TRUE);
      UpdateItemProdBOM(ItemNo[1],ProductionBOMHeader."No.");

      // Verify: Verify Low Level code in all the Items with maximum of 2 levels.
      VerifyLowLevelCode(ItemNo[3],ItemNo[4],0);
      VerifyLowLevelCode(ItemNo[1],ItemNo[2],1);
      VerifyLowLevelCode(ItemNo[5],ItemNo[6],2);

      // Tear Down: Dynamic Low-Level Code set to Default in Manufacturing setup.
      RestoreManufacturingSetup(TempManufacturingSetup);
    END;

    [Test]
    PROCEDURE ItemWithLowLevelCodeThree@7();
    VAR
      Item@1001 : Record 27;
      TempManufacturingSetup@1002 : TEMPORARY Record 99000765;
      ProductionBOMHeader@1003 : Record 99000771;
      ProductionBOMLine@1004 : Record 99000772;
      ItemNo@1005 : ARRAY [20] OF Code[20];
    BEGIN
      // Setup: Dynamic Low-Level Code set to true in Manufacturing setup.
      Initialize;
      UpdateManufacturingSetup(TempManufacturingSetup,TRUE);

      // Exercise: Create Item and Production BOM.Update Item with Production BOM.
      CreateItems(ItemNo);
      Item.GET(ItemNo[1]);
      CreateProdBOM(ProductionBOMHeader,ProductionBOMLine.Type::Item,ItemNo[4],ItemNo[5],Item."Base Unit of Measure",TRUE);
      UpdateItemProdBOM(ItemNo[1],ProductionBOMHeader."No.");
      CreateProdBOM(ProductionBOMHeader,ProductionBOMLine.Type::Item,ItemNo[1],ItemNo[2],Item."Base Unit of Measure",TRUE);
      UpdateItemProdBOM(ItemNo[3],ProductionBOMHeader."No.");
      CreateProdBOM(ProductionBOMHeader,ProductionBOMLine.Type::Item,ItemNo[3],ItemNo[4],Item."Base Unit of Measure",TRUE);
      UpdateItemProdBOM(ItemNo[6],ProductionBOMHeader."No.");

      // Verify: Verify Low Level code in all the Items with maximum of three levels.
      VerifyLowLevelCode(ItemNo[1],ItemNo[2],2);
      VerifyLowLevelCode(ItemNo[3],'',1);
      VerifyLowLevelCode(ItemNo[4],ItemNo[5],3);
      VerifyLowLevelCode(ItemNo[6],'',0);

      // Tear Down: Dynamic Low-Level Code set to Default in Manufacturing setup.
      RestoreManufacturingSetup(TempManufacturingSetup);
    END;

    [Test]
    PROCEDURE ItemWithLowLevelCodeTypeBOM@6();
    VAR
      Item@1001 : Record 27;
      TempManufacturingSetup@1002 : TEMPORARY Record 99000765;
      ProductionBOMHeader@1003 : Record 99000771;
      ProductionBOMLine@1005 : Record 99000772;
      ProductionBOMNo@1004 : Code[20];
      ItemNo@1000 : ARRAY [20] OF Code[20];
    BEGIN
      // Setup: Dynamic Low-Level Code set to true in Manufacturing setup.
      Initialize;
      UpdateManufacturingSetup(TempManufacturingSetup,TRUE);

      // Exercise: Create Item and Production BOM one of them with line type as 'Production BOM'.
      // Update Item with Production BOM.
      CreateItems(ItemNo);
      Item.GET(ItemNo[1]);
      CreateProdBOM(ProductionBOMHeader,ProductionBOMLine.Type::Item,ItemNo[1],ItemNo[2],Item."Base Unit of Measure",TRUE);
      UpdateItemProdBOM(ItemNo[3],ProductionBOMHeader."No.");
      ProductionBOMNo := ProductionBOMHeader."No.";
      CreateProdBOM(ProductionBOMHeader,ProductionBOMLine.Type::"Production BOM",ProductionBOMNo,'',Item."Base Unit of Measure",FALSE);
      UpdateItemProdBOM(ItemNo[4],ProductionBOMHeader."No.");
      CreateProdBOM(
        ProductionBOMHeader,ProductionBOMLine.Type::Item,ItemNo[5],ItemNo[6],Item."Base Unit of Measure",TRUE);
      UpdateItemProdBOM(ItemNo[1],ProductionBOMHeader."No.");

      // Verify: Verify Low Level code in all the Items.
      VerifyLowLevelCode(ItemNo[1],ItemNo[2],1);
      VerifyLowLevelCode(ItemNo[3],ItemNo[4],0);
      VerifyLowLevelCode(ItemNo[5],ItemNo[6],2);

      // Tear Down: Dynamic Low-Level Code set to Default in Manufacturing setup.
      RestoreManufacturingSetup(TempManufacturingSetup);
    END;

    [Test]
    PROCEDURE ItemWithLowLevelCodeTypeBoth@10();
    VAR
      Item@1001 : Record 27;
      TempManufacturingSetup@1002 : TEMPORARY Record 99000765;
      ProductionBOMHeader@1003 : Record 99000771;
      ProductionBOMLine@1005 : Record 99000772;
      ProductionBOMNo@1004 : Code[20];
      ItemNo@1000 : ARRAY [20] OF Code[20];
    BEGIN
      // Setup: Dynamic Low-Level Code set to true in Manufacturing setup.
      Initialize;
      UpdateManufacturingSetup(TempManufacturingSetup,TRUE);

      // Exercise: Create Item and Production BOM one of them with line type as both 'Production BOM' and Item.
      // Update Item with Production BOM.
      CreateItems(ItemNo);
      Item.GET(ItemNo[1]);
      CreateProdBOM(ProductionBOMHeader,ProductionBOMLine.Type::Item,ItemNo[1],ItemNo[2],Item."Base Unit of Measure",TRUE);
      UpdateItemProdBOM(ItemNo[3],ProductionBOMHeader."No.");
      ProductionBOMNo := ProductionBOMHeader."No.";
      CreateProdBOM(
        ProductionBOMHeader,ProductionBOMLine.Type::"Production BOM",ProductionBOMNo,'',Item."Base Unit of Measure",FALSE);
      UpdateProductionBom(ProductionBOMHeader,ItemNo[3]);
      UpdateItemProdBOM(ItemNo[4],ProductionBOMHeader."No.");
      CreateProdBOM(ProductionBOMHeader,ProductionBOMLine.Type::Item,ItemNo[4],ItemNo[5],Item."Base Unit of Measure",TRUE);
      UpdateItemProdBOM(ItemNo[6],ProductionBOMHeader."No.");

      // Verify: Verify Low Level code in all the Items.
      VerifyLowLevelCode(ItemNo[1],ItemNo[2],3);
      VerifyLowLevelCode(ItemNo[3],'',2);
      VerifyLowLevelCode(ItemNo[4],ItemNo[5],1);
      VerifyLowLevelCode(ItemNo[6],'',0);

      // Tear Down: Dynamic Low-Level Code set to Default in Manufacturing setup.
      RestoreManufacturingSetup(TempManufacturingSetup);
    END;

    LOCAL PROCEDURE Initialize@4();
    VAR
      LibraryERMCountryData@1000 : Codeunit 131305;
    BEGIN
      ManufacturingSetup.GET;

      // Lazy Setup.
      IF isInitialized THEN
        EXIT;

      LibraryERMCountryData.UpdateGeneralPostingSetup;

      isInitialized := TRUE;
      COMMIT;
    END;

    [Normal]
    LOCAL PROCEDURE UpdateManufacturingSetup@34(VAR BaseManufacturingSetup@1001 : Record 99000765;DynamicLowLevelCode@1002 : Boolean);
    BEGIN
      ManufacturingSetup.GET;
      BaseManufacturingSetup := ManufacturingSetup;
      BaseManufacturingSetup.INSERT(TRUE);

      ManufacturingSetup.VALIDATE("Dynamic Low-Level Code",DynamicLowLevelCode);
      ManufacturingSetup.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE RestoreManufacturingSetup@56(TempManufacturingSetup@1001 : TEMPORARY Record 99000765);
    BEGIN
      ManufacturingSetup.GET;
      ManufacturingSetup.VALIDATE("Dynamic Low-Level Code",TempManufacturingSetup."Dynamic Low-Level Code");
      ManufacturingSetup.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE CreateItems@18(VAR ItemNo@1001 : ARRAY [20] OF Code[20]);
    VAR
      Item@1005 : Record 27;
      i@1000 : Integer;
    BEGIN
      FOR i := 1 TO 6 DO BEGIN
        LibraryInventory.CreateItem(Item);
        ItemNo[i] := Item."No.";
      END;
    END;

    LOCAL PROCEDURE CreateProdBOM@5(VAR ProductionBOMHeader@1000 : Record 99000771;Type@1008 : Option;No@1005 : Code[20];No2@1006 : Code[20];BaseUnitofMeasure@1002 : Code[10];MultipleBOMLine@1007 : Boolean);
    VAR
      ProductionBOMLine@1003 : Record 99000772;
    BEGIN
      LibraryManufacturing.CreateProductionBOMHeader(ProductionBOMHeader,BaseUnitofMeasure);
      LibraryManufacturing.CreateProductionBOMLine(ProductionBOMHeader,ProductionBOMLine,'',Type,No,1);
      IF MultipleBOMLine THEN
        LibraryManufacturing.CreateProductionBOMLine(ProductionBOMHeader,ProductionBOMLine,'',Type,No2,1);
      ProductionBOMHeader.VALIDATE(Status,ProductionBOMHeader.Status::Certified);
      ProductionBOMHeader.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE UpdateItemProdBOM@26(ItemNo@1000 : Code[20];ProductionBOMNo@1001 : Code[20]);
    VAR
      Item@1002 : Record 27;
    BEGIN
      Item.GET(ItemNo);
      Item.VALIDATE("Production BOM No.",ProductionBOMNo);
      Item.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE UpdateProductionBom@11(VAR ProductionBOMHeader@1001 : Record 99000771;ItemNo@1002 : Code[20]);
    VAR
      ProductionBOMLine@1000 : Record 99000772;
    BEGIN
      ProductionBOMHeader.VALIDATE(Status,ProductionBOMHeader.Status::"Under Development");
      ProductionBOMHeader.MODIFY(TRUE);

      ProductionBOMLine.SETRANGE("Production BOM No.",ProductionBOMHeader."No.");
      ProductionBOMLine.FINDLAST;

      LibraryManufacturing.CreateProductionBOMLine(ProductionBOMHeader,ProductionBOMLine,'',ProductionBOMLine.Type::Item,ItemNo,1);
      ProductionBOMHeader.VALIDATE(Status,ProductionBOMHeader.Status::Certified);
      ProductionBOMHeader.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE VerifyLowLevelCode@1(No@1001 : Code[20];No2@1000 : Code[20];LowLevelCode@1002 : Integer);
    VAR
      Item@1003 : Record 27;
    BEGIN
      IF No2 <> '' THEN
        Item.SETRANGE("No.",No,No2);
      Item.SETRANGE("No.",No);
      Item.FINDSET;
      REPEAT
        Item.TESTFIELD("Low-Level Code",LowLevelCode);
      UNTIL Item.NEXT = 0;
    END;

    BEGIN
    {
      // [FEATURE] [Manufacturing] [Item] [Low-Level Code] [SCM]
      Test for Manuf Low Level Code:
        1. Create Items.Verify Low Level Code at each Item as Zero.
        2. Create Items and Production BOM's.Update Production BOM with Maximum Low level Code as Two.
           Verify Low Level Code at each Item.
        3. Create Items and Production BOM's.Update Production BOM with Maximum Low level Code as Three.
           Verify Low Level Code at each Item.
        4. Create Items and Production BOM's.One BOM of with BOM Line as Type "Production BOM".
           Verify Low Level Code at each Item.
        5. Create Items and Production BOM's.One BOM of with BOM Line as Type "Production BOM".Update BOM Line Type as Item.
           Verify Low Level Code at each Item.

        Covers Test cases:
        --------------------------------------------------------------------------------------
        Test Function Name                TFS ID
        --------------------------------------------------------------------------------------
        ItemWithLowLevelCodeZero          184833,123515,123516
        ItemWithLowLevelCodeTwo           184834,123517,123518,123519,123520,123521,123522,123523,123524,123525,123526,123527,123528
        ItemWithLowLevelCodeThree         184835,123529,123530,123531,123532,123533,123534,123535,123536,123537,123538,123539,123540,
                                          184836,123541,123542,123543,123544,123545,123546,123547,123548,123549,123550,123551,123552,
                                          184837,123553,123554,123555,123556,123557,123558,123559,123560,123561,123562,123563,123564,
        ItemWithLowLevelCodeTypeBOM       184838,123565,123566,123567,123568,123569,123570,123571,123572,123573,123574,123575,123576,
        ItemWithLowLevelCodeTypeBoth      184839,123577,123578,123579,123580,123581,123582,123583,123584,123585,123586,123587,123588,
    }
    END.
  }
}

