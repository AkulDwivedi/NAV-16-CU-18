OBJECT Codeunit 16404 GST Returns Management
{
  OBJECT-PROPERTIES
  {
    Date=23-02-17;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.48067;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GSTINErr@1500006 : TextConst 'ENU=GSTIN of the location can not be blank.;ENN=GSTIN of the location can not be blank.';
      PersonNameErr@1500005 : TextConst 'ENU=Name of the Taxable Person can not be blank.;ENN=Name of the Taxable Person can not be blank.';
      AggregateTurnoverErr@1500004 : TextConst 'ENU=Aggregate Turnover of the Taxable Person can not be blank.;ENN=Aggregate Turnover of the Taxable Person can not be blank.';
      AuthorizedPersonErr@1500003 : TextConst 'ENU=Name of the Authorized Person can not be empty.;ENN=Name of the Authorized Person can not be empty.';
      PlaceErr@1500002 : TextConst 'ENU=Place can not be empty.;ENN=Place can not be empty.';
      DateErr@1500001 : TextConst 'ENU=Date can not be empty.;ENN=Date can not be empty.';

    PROCEDURE RequestPageFilters@1500000(GSTIN@1500000 : Code[15];TaxablePerson@1500001 : Text;AggregateTurnover@1500002 : Integer;PersonName@1500003 : Text;Place@1500004 : Text;Date@1500005 : Date);
    BEGIN
      IF GSTIN = '' THEN
        ERROR(GSTINErr);
      IF TaxablePerson = '' THEN
        ERROR(PersonNameErr);
      IF AggregateTurnover = 0 THEN
        ERROR(AggregateTurnoverErr);
      IF PersonName = '' THEN
        ERROR(AuthorizedPersonErr);
      IF Place = '' THEN
        ERROR(PlaceErr);
      IF Date = 0D THEN
        ERROR(DateErr);
    END;

    PROCEDURE PostingDateFilter@1500001(VAR DetailedGSTLedgerEntry@1500000 : Record 16419;Year@1500004 : Integer;LocationRegNo@1500001 : Code[15];SourceType@1500002 : Option;Period@1500003 : 'Jan,Feb,March,Apr,May,June,July,Agu,Sept,Oct,Nov,Dec');
    BEGIN
      WITH DetailedGSTLedgerEntry DO BEGIN
        SETCURRENTKEY("Location  Reg. No.","Source Type");
        SETRANGE("Location  Reg. No.",LocationRegNo);
        SETRANGE("Source Type",SourceType);
        CASE Period OF
          Period::Jan:
            SETRANGE("Posting Date",DMY2DATE(1,1,Year),DMY2DATE(31,1,Year));
          Period::Feb:
            SETRANGE("Posting Date",DMY2DATE(1,2,Year),DMY2DATE(28,2,Year));
          Period::March:
            SETRANGE("Posting Date",DMY2DATE(1,3,Year),DMY2DATE(31,3,Year));
          Period::Apr:
            SETRANGE("Posting Date",DMY2DATE(1,4,Year),DMY2DATE(30,4,Year));
          Period::May:
            SETRANGE("Posting Date",DMY2DATE(1,5,Year),DMY2DATE(31,5,Year));
          Period::June:
            SETRANGE("Posting Date",DMY2DATE(1,6,Year),DMY2DATE(30,6,Year));
          Period::July:
            SETRANGE("Posting Date",DMY2DATE(1,7,Year),DMY2DATE(31,7,Year));
          Period::Agu:
            SETRANGE("Posting Date",DMY2DATE(1,8,Year),DMY2DATE(31,8,Year));
          Period::Sept:
            SETRANGE("Posting Date",DMY2DATE(1,9,Year),DMY2DATE(30,9,Year));
          Period::Oct:
            SETRANGE("Posting Date",DMY2DATE(1,10,Year),DMY2DATE(31,10,Year));
          Period::Nov:
            SETRANGE("Posting Date",DMY2DATE(1,11,Year),DMY2DATE(30,3,Year));
          Period::Dec:
            SETRANGE("Posting Date",DMY2DATE(1,12,Year),DMY2DATE(31,12,Year));
        END;
      END;
    END;

    BEGIN
    END.
  }
}

