OBJECT Page 16511 Correct Deductor T.A.N.
{
  OBJECT-PROPERTIES
  {
    Date=23-09-13;
    Time=12:00:00 PM;
    Version List=NAVIN7.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Correct Deductor T.A.N.;
               ENN=Correct Deductor T.A.N.];
    SourceTable=Table16503;
    PageType=List;
    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1500016 ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENN=F&unctions];
                      Image=Action }
      { 1500019 ;2   ;Action    ;
                      Name=Update Entries;
                      CaptionML=[ENU=Update Entries;
                                 ENN=Update Entries];
                      OnAction=BEGIN
                                 UpdateBatchHeader;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1500000;1;Group     ;
                GroupType=Repeater }

    { 1500001;2;Field     ;
                SourceExpr="Financial Year";
                Editable=FALSE }

    { 1500003;2;Field     ;
                SourceExpr="Assessment Year";
                Editable=FALSE }

    { 1500005;2;Field     ;
                SourceExpr=Quarter;
                Editable=FALSE }

    { 1500007;2;Field     ;
                SourceExpr="Form No.";
                Editable=FALSE }

    { 1500009;2;Field     ;
                SourceExpr="Deductor T.A.N. No.";
                OnValidate=BEGIN
                             IF "Deductor T.A.N. No." <> xRec."Deductor T.A.N. No." THEN
                               Revised := TRUE;
                             IF Revised THEN
                               MARK(TRUE);
                           END;
                            }

    { 1500011;2;Field     ;
                SourceExpr="Deductor Name";
                Editable=FALSE }

    { 1500020;2;Field     ;
                SourceExpr=Revised;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      BatchHeader@1500000 : Record 16503;
      Form26Q27QEntry@1500002 : Record 16505;
      ChallanRegister@1500001 : Record 16504;

    LOCAL PROCEDURE UpdateBatchHeader@1500003();
    BEGIN
      MARKEDONLY(TRUE);
      IF FINDFIRST THEN
        REPEAT
          BatchHeader.GET("Entry No.");
          ChallanRegister.RESET;
          ChallanRegister.SETRANGE("Financial Year","Financial Year");
          ChallanRegister.SETRANGE(Quarter,Quarter);
          ChallanRegister.SETRANGE("T.A.N. No.","Deductor Last TAN");
          Form26Q27QEntry.RESET;
          Form26Q27QEntry.SETRANGE("Financial Year","Financial Year");
          Form26Q27QEntry.SETRANGE(Quarter,Quarter);
          Form26Q27QEntry.SETRANGE("T.A.N. No.","Deductor Last TAN");
          IF BatchHeader."Deductor T.A.N. No." <> "Deductor T.A.N. No." THEN BEGIN
            BatchHeader."Deductor Last TAN" := BatchHeader."Deductor T.A.N. No.";
            BatchHeader."Deductor T.A.N. No." := "Deductor T.A.N. No.";
            BatchHeader."Deductor Last Name" := BatchHeader."Deductor Name";
            IF BatchHeader.Filed THEN
              BatchHeader."No. of Revision" += 1;
            BatchHeader.Filed := FALSE;
            BatchHeader.Revised := TRUE;
            BatchHeader."Correction-Y" := TRUE;
            BatchHeader.MODIFY;
          END;
          IF ChallanRegister.FINDSET THEN
            REPEAT
              IF ChallanRegister."T.A.N. No." <> "Deductor T.A.N. No." THEN BEGIN
                ChallanRegister."T.A.N. No." := "Deductor T.A.N. No.";
                ChallanRegister.Revised := TRUE;
                ChallanRegister.MODIFY;
              END;
            UNTIL ChallanRegister.NEXT = 0;

          IF Form26Q27QEntry.FINDSET THEN
            REPEAT
              Form26Q27QEntry.Printed := FALSE;
              Form26Q27QEntry."T.A.N. No." := "Deductor T.A.N. No.";
              Form26Q27QEntry.Revised := TRUE;
              Form26Q27QEntry.MODIFY;
            UNTIL Form26Q27QEntry.NEXT = 0;
        UNTIL NEXT = 0;
      MARKEDONLY(FALSE);
    END;

    BEGIN
    END.
  }
}

