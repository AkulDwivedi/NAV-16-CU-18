OBJECT Table 16401 GST Accounting Period
{
  OBJECT-PROPERTIES
  {
    Date=27-04-17;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.48466;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               TESTFIELD("Year Closed",FALSE);
               GSTAccountingSubPeriod.SETRANGE("Accounting Period Start Date","Starting Date");
               IF GSTAccountingSubPeriod.FINDFIRST THEN
                 GSTAccountingSubPeriod.DELETEALL;
             END;

    OnRename=BEGIN
               TESTFIELD("Year Closed",FALSE);
             END;

    CaptionML=[ENU=GST Accounting Period;
               ENN=GST Accounting Period];
    LookupPageID=Page16401;
    DrillDownPageID=Page16401;
  }
  FIELDS
  {
    { 1   ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                CheckGSTAccountingPeriod;
                                                                VALIDATE("Ending Date",CALCDATE('<-1D>',CALCDATE('<12M>',"Starting Date")));
                                                                IF "Ending Date" <> 0D THEN
                                                                  CheckDates("Starting Date","Ending Date");
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              ENN=Starting Date];
                                                   NotBlank=Yes }
    { 2   ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                CheckGSTAccountingPeriod;
                                                                IF "Starting Date" <> 0D THEN
                                                                  CheckDates("Starting Date","Ending Date");
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              ENN=Ending Date];
                                                   NotBlank=Yes }
    { 3   ;   ;Year Closed         ;Boolean       ;CaptionML=[ENU=Year Closed;
                                                              ENN=Year Closed];
                                                   Editable=No }
    { 4   ;   ;Credit Memo Locking Date;Date      ;CaptionML=[ENU=Credit Memo Locking Date;
                                                              ENN=Credit Memo Locking Date] }
    { 5   ;   ;Annual Return Filed Date;Date      ;CaptionML=[ENU=Annual Return Filed Date;
                                                              ENN=Annual Return Filed Date] }
  }
  KEYS
  {
    {    ;Starting Date                           ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DateErr@1500000 : TextConst 'ENU=Ending Date must not be before Starting Date.;ENN=Ending Date must not be before Starting Date.';
      GSTAccountingSubPeriod@1500001 : Record 16402;
      PeriodSDateErr@1500003 : TextConst 'ENU=Starting Date must not lie in existing Accounting Period.;ENN=Starting Date must not lie in existing Accounting Period.';
      PeriodEDateErr@1500002 : TextConst 'ENU=Ending Date must not lie in existing Accounting Period.;ENN=Ending Date must not lie in existing Accounting Period.';

    PROCEDURE CheckDates@1500002(StartingDate@1500000 : Date;EndingDate@1500001 : Date);
    BEGIN
      IF EndingDate <= StartingDate THEN
        ERROR(DateErr);
    END;

    LOCAL PROCEDURE CheckGSTAccountingPeriod@1500001();
    VAR
      GSTAccountingPeriod@1500000 : Record 16401;
    BEGIN
      IF GSTAccountingPeriod.FINDSET THEN
        REPEAT
          IF ("Starting Date" >= GSTAccountingPeriod."Starting Date") AND ("Starting Date" <= GSTAccountingPeriod."Ending Date") THEN
            ERROR(PeriodSDateErr);
          IF ("Ending Date" >= GSTAccountingPeriod."Starting Date") AND ("Ending Date" <= GSTAccountingPeriod."Ending Date") THEN
            ERROR(PeriodEDateErr);
        UNTIL GSTAccountingPeriod.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

