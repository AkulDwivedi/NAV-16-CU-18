OBJECT Table 474 Job Queue Log Entry
{
  OBJECT-PROPERTIES
  {
    Date=24-04-16;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.45778;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Job Queue Log Entry;
               ENN=Job Queue Log Entry];
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=Entry No.;
                                                              ENN=Entry No.] }
    { 2   ;   ;ID                  ;GUID          ;CaptionML=[ENU=ID;
                                                              ENN=ID] }
    { 3   ;   ;User ID             ;Text65        ;TableRelation=User."User Name";
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              ENN=User ID] }
    { 4   ;   ;Start Date/Time     ;DateTime      ;CaptionML=[ENU=Start Date/Time;
                                                              ENN=Start Date/Time] }
    { 5   ;   ;End Date/Time       ;DateTime      ;CaptionML=[ENU=End Date/Time;
                                                              ENN=End Date/Time] }
    { 6   ;   ;Object Type to Run  ;Option        ;CaptionML=[ENU=Object Type to Run;
                                                              ENN=Object Type to Run];
                                                   OptionCaptionML=[ENU=,,,Report,,Codeunit;
                                                                    ENN=,,,Report,,Codeunit];
                                                   OptionString=,,,Report,,Codeunit }
    { 7   ;   ;Object ID to Run    ;Integer       ;CaptionML=[ENU=Object ID to Run;
                                                              ENN=Object ID to Run] }
    { 8   ;   ;Object Caption to Run;Text250      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=FIELD(Object Type to Run),
                                                                                                                Object ID=FIELD(Object ID to Run)));
                                                   CaptionML=[ENU=Object Caption to Run;
                                                              ENN=Object Caption to Run] }
    { 9   ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              ENN=Status];
                                                   OptionCaptionML=[ENU=Success,In Process,Error;
                                                                    ENN=Success,In Process,Error];
                                                   OptionString=Success,In Process,Error }
    { 10  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENN=Description] }
    { 11  ;   ;Error Message       ;Text250       ;CaptionML=[ENU=Error Message;
                                                              ENN=Error Message] }
    { 12  ;   ;Error Message 2     ;Text250       ;CaptionML=[ENU=Error Message 2;
                                                              ENN=Error Message 2] }
    { 13  ;   ;Error Message 3     ;Text250       ;CaptionML=[ENU=Error Message 3;
                                                              ENN=Error Message 3] }
    { 14  ;   ;Error Message 4     ;Text250       ;CaptionML=[ENU=Error Message 4;
                                                              ENN=Error Message 4] }
    { 15  ;   ;Job Queue Code      ;Code10        ;TableRelation="Job Queue";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Job Queue Code;
                                                              ENN=Job Queue Code] }
    { 16  ;   ;Processed by User ID;Text65        ;CaptionML=[ENU=Processed by User ID;
                                                              ENN=Processed by User ID] }
    { 17  ;   ;Job Queue Category Code;Code10     ;TableRelation="Job Queue Category";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Job Queue Category Code;
                                                              ENN=Job Queue Category Code] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;ID                                       }
    {    ;Start Date/Time,ID                       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=There is no error message.;ENN=There is no error message.';
      Text002@1000 : TextConst 'ENU=Are you sure that you want to delete job queue log entries?;ENN=Are you sure that you want to delete job queue log entries?';
      Text003@1002 : TextConst 'ENU=Marked as Error by %1.;ENN=Marked as Error by %1.';
      Text004@1003 : TextConst 'ENU=Only entries with status In Progress can be marked as Error.;ENN=Only entries with status In Progress can be marked as Error.';

    PROCEDURE GetErrorMessage@1() : Text;
    BEGIN
      EXIT("Error Message" + "Error Message 2" + "Error Message 3" + "Error Message 4");
    END;

    PROCEDURE SetErrorMessage@2(ErrorText@1000 : Text);
    BEGIN
      "Error Message 2" := '';
      "Error Message 3" := '';
      "Error Message 4" := '';
      "Error Message" := COPYSTR(ErrorText,1,250);
      IF STRLEN(ErrorText) > 250 THEN
        "Error Message 2" := COPYSTR(ErrorText,251,250);
      IF STRLEN(ErrorText) > 500 THEN
        "Error Message 3" := COPYSTR(ErrorText,501,250);
      IF STRLEN(ErrorText) > 750 THEN
        "Error Message 4" := COPYSTR(ErrorText,751,250);
    END;

    PROCEDURE DeleteEntries@3(DaysOld@1000 : Integer);
    BEGIN
      IF NOT CONFIRM(Text002) THEN
        EXIT;
      SETFILTER(Status,'<>%1',Status::"In Process");
      SETFILTER("End Date/Time",'<=%1',CREATEDATETIME(TODAY - DaysOld,TIME));
      DELETEALL;
      SETRANGE("End Date/Time");
      SETRANGE(Status);
    END;

    PROCEDURE ShowErrorMessage@8();
    VAR
      e@1000 : Text;
    BEGIN
      e := GetErrorMessage;
      IF e = '' THEN
        e := Text001;
      MESSAGE(e);
    END;

    PROCEDURE MarkAsError@4();
    VAR
      JobQueueEntry@1003 : Record 472;
      ErrorMessage@1002 : Text[1000];
    BEGIN
      IF Status <> Status::"In Process" THEN
        ERROR(Text004);

      ErrorMessage := STRSUBSTNO(Text003,USERID);

      IF JobQueueEntry.GET(ID) THEN
        JobQueueEntry.SetError(ErrorMessage);

      Status := Status::Error;
      SetErrorMessage(ErrorMessage);
      MODIFY;
    END;

    BEGIN
    END.
  }
}

