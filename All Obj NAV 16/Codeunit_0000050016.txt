OBJECT Codeunit 50016 Amount In Words
{
  OBJECT-PROPERTIES
  {
    Date=28-06-18;
    Time=11:43:50 AM;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            InitTextVariable;
            AmountInWords := NumberInWords(123456.78,'Cedis','Pesewas');
            MESSAGE(AmountInWords);
          END;

  }
  CODE
  {
    VAR
      OnesText@1000000000 : ARRAY [20] OF Text[90];
      TensText@1000000001 : ARRAY [20] OF Text[90];
      ThousText@1000000002 : ARRAY [5] OF Text[30];
      AmountInWords@1000000003 : Text[300];
      WholeInWords@1000000004 : Text[300];
      DecimalInWords@1000000005 : Text[300];
      WholePart@1000000006 : Integer;
      DecimalPart@1000000007 : Integer;

    PROCEDURE NumberInWords@1000000000(number@1000000000 : Decimal;CurrencyName@1000000001 : Text[30];DenomName@1000000002 : Text[30]) : Text[300];
    BEGIN
      WholePart := ROUND(ABS(number),1,'<');
      DecimalPart := ABS((ABS(number) - WholePart)*100);

      WholeInWords := NumberToWords(WholePart,CurrencyName);

      IF DecimalPart <> 0 THEN BEGIN
        DecimalInWords := NumberToWords(DecimalPart,DenomName);
        WholeInWords := WholeInWords + ' and ' + DecimalInWords;
      END;

      AmountInWords := '****' + WholeInWords + ' Only';
      EXIT (AmountInWords);
    END;

    PROCEDURE NumberToWords@1000000001(number@1000000000 : Decimal;appendScale@1000000001 : Text[30]) : Text[300];
    VAR
      numString@1000000002 : Text[300];
      pow@1000000003 : Integer;
      powStr@1000000004 : Text[50];
      log@1000000005 : Integer;
    BEGIN
      numString := '';
      IF number < 100 THEN
        IF number < 20 THEN BEGIN
          IF number <> 0 THEN numString := OnesText[number];
        END ELSE BEGIN
          numString := TensText[number DIV 10];
          IF (number MOD 10) > 0 THEN
            numString := numString + ' ' + OnesText[number MOD 10];
        END
      ELSE BEGIN
        pow := 0;
        powStr := '';
        IF number < 1000 THEN BEGIN // number is between 100 and 1000
          pow := 100;
          powStr := ThousText[1];
        END ELSE BEGIN // find the scale of the number
          log := ROUND(STRLEN(FORMAT(number DIV 1000))/3,1,'>');
          pow := POWER(1000, log);
          powStr := ThousText[log + 1];
        END;

        numString := NumberToWords(number DIV pow, powStr) + ' ' + NumberToWords(number MOD pow,'');
      END;

      EXIT(DELCHR(numString,'<>',' ') + ' ' + appendScale);
    END;

    PROCEDURE InitTextVariable@1000000002();
    BEGIN
      OnesText[1] := 'One';
      OnesText[2] := 'Two';
      OnesText[3] := 'Three';
      OnesText[4] := 'Four';
      OnesText[5] := 'Five';
      OnesText[6] := 'Six';
      OnesText[7] := 'Seven';
      OnesText[8] := 'Eight';
      OnesText[9] := 'Nine';
      OnesText[10] := 'Ten';
      OnesText[11] := 'Eleven';
      OnesText[12] := 'Twelve';
      OnesText[13] := 'Thirteen';
      OnesText[14] := 'Fourteen';
      OnesText[15] := 'Fifteen';
      OnesText[16] := 'Sixteen';
      OnesText[17] := 'Seventeen';
      OnesText[18] := 'Eighteen';
      OnesText[19] := 'Nineteen';

      TensText[1] := '';
      TensText[2] := 'Twenty';
      TensText[3] := 'Thirty';
      TensText[4] := 'Forty';
      TensText[5] := 'Fifty';
      TensText[6] := 'Sixty';
      TensText[7] := 'Seventy';
      TensText[8] := 'Eighty';
      TensText[9] := 'Ninety';

      ThousText[1] := 'Hundred';
      ThousText[2] := 'Thousand';
      ThousText[3] := 'Million';
      ThousText[4] := 'Billion';
      ThousText[5] := 'Trillion';
    END;

    BEGIN
    END.
  }
}

