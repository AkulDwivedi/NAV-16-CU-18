OBJECT Codeunit 134036 ERM Customer Balance Manl Appl
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
            IsInitialized := FALSE;
          END;

  }
  CODE
  {
    VAR
      LibraryERM@1002 : Codeunit 131300;
      LibraryRandom@1001 : Codeunit 130440;
      IsInitialized@1000 : Boolean;

    [Test]
    PROCEDURE CustomerWithBalancingAcc@1();
    VAR
      GenJournalLine@1000 : Record 81;
      InvoiceBalanceLCY@1005 : Decimal;
    BEGIN
      // Application using Applies to Document No. and Verify Balance LCY field on General Journal Line.

      // Setup.
      // Create and Post General Journal Line for Invoice and Payment.
      Initialize;
      CreateGeneralJournalLine(
        GenJournalLine,GenJournalLine."Document Type"::Invoice,GenJournalLine."Account Type"::Customer,CreateCustomer,
        GenJournalLine."Bal. Account Type"::"Bank Account",CreateBankAccount,LibraryRandom.RandDec(5,2));
      InvoiceBalanceLCY := GenJournalLine."Balance (LCY)";
      LibraryERM.PostGeneralJnlLine(GenJournalLine);
      CreateGeneralJournalLine(
        GenJournalLine,GenJournalLine."Document Type"::Payment,GenJournalLine."Bal. Account Type"::"Bank Account",
        GenJournalLine."Bal. Account No.",GenJournalLine."Account Type"::Customer,GenJournalLine."Account No.",GenJournalLine.Amount);
      InvoiceBalanceLCY += GenJournalLine."Balance (LCY)";

      // Exercise: Execute Application of Payment Entry to Invoice.
      UpdateGeneralJournalLine(GenJournalLine,GenJournalLine."Document No.");

      // Verify: Verify Balance LCY field on General Journal Line.
      GenJournalLine.TESTFIELD("Balance (LCY)",InvoiceBalanceLCY);

      // Teardown: Delete unposted General Journal Line for test case cleanup.
      GenJournalLine.DELETE(TRUE);
    END;

    [Test]
    PROCEDURE CustomerWithoutBalancingAcc@2();
    VAR
      GenJournalLine@1000 : Record 81;
      Assert@1001 : Codeunit 130000;
      InvoiceAmount@1004 : Decimal;
      BalanceLCY@1003 : Decimal;
    BEGIN
      // Create General Journal Lines for invoice and Payment and Verify Balance LCY field.

      // Setup.
      Initialize;

      // Exercise: Create General Journal Line for both Invoice and Payment.
      CreateGeneralJournalLine(
        GenJournalLine,GenJournalLine."Document Type"::Invoice,GenJournalLine."Account Type"::Customer,CreateCustomer,
        GenJournalLine."Bal. Account Type"::"Bank Account",'',LibraryRandom.RandDec(5,2));
      InvoiceAmount := GenJournalLine.Amount;
      BalanceLCY := GenJournalLine."Balance (LCY)";
      CreateGeneralJournalLine(
        GenJournalLine,GenJournalLine."Document Type"::Payment,GenJournalLine."Bal. Account Type"::"Bank Account",CreateBankAccount,
        GenJournalLine."Bal. Account Type"::"Bank Account",'',LibraryRandom.RandDec(5,2));
      InvoiceAmount += GenJournalLine.Amount;
      BalanceLCY += GenJournalLine."Balance (LCY)";

      // Verify: Verify Balance LCY field on General Journal Line.
      Assert.AreEqual(InvoiceAmount,BalanceLCY,'Amount Must be equal');

      // Teardown: Delete all unposted General Journal Lines for test case cleanup.
      GenJournalLine.DELETEALL(TRUE);
    END;

    LOCAL PROCEDURE Initialize@8();
    VAR
      LibraryERMCountryData@1000 : Codeunit 131305;
    BEGIN
      IF IsInitialized THEN
        EXIT;
      LibraryERMCountryData.CreateVATData;
      LibraryERMCountryData.UpdateGeneralPostingSetup;
      IsInitialized := TRUE;
      COMMIT;
    END;

    LOCAL PROCEDURE CreateCustomer@4() : Code[20];
    VAR
      Customer@1000 : Record 18;
      LibrarySales@1001 : Codeunit 130509;
    BEGIN
      LibrarySales.CreateCustomer(Customer);
      EXIT(Customer."No.");
    END;

    LOCAL PROCEDURE CreateBankAccount@15() : Code[20];
    VAR
      BankAccount@1000 : Record 270;
      BankAccountPostingGroup@1001 : Record 277;
    BEGIN
      BankAccountPostingGroup.FINDLAST;
      LibraryERM.CreateBankAccount(BankAccount);
      BankAccount.VALIDATE("Bank Acc. Posting Group",BankAccountPostingGroup.Code);
      BankAccount.MODIFY(TRUE);
      EXIT(BankAccount."No.");
    END;

    LOCAL PROCEDURE CreateGeneralJournalLine@14(VAR GenJournalLine@1000 : Record 81;DocumentType@1003 : Option;AccountType@1008 : Option;AccountNo@1007 : Code[20];BalAccountType@1006 : Option;BalAccountNo@1004 : Code[20];ApplicationAmount@1002 : Decimal);
    VAR
      GenJournalBatch@1009 : Record 232;
    BEGIN
      LibraryERM.SelectGenJnlBatch(GenJournalBatch);
      LibraryERM.ClearGenJournalLines(GenJournalBatch);
      LibraryERM.CreateGeneralJnlLine(
        GenJournalLine,GenJournalBatch."Journal Template Name",GenJournalBatch.Name,DocumentType,AccountType,
        AccountNo,ApplicationAmount);
      GenJournalLine.VALIDATE("Bal. Account Type",BalAccountType);
      GenJournalLine.VALIDATE("Bal. Account No.",BalAccountNo);
      GenJournalLine.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE UpdateGeneralJournalLine@13(GenJournalLine@1002 : Record 81;DocumentNo@1000 : Code[20]);
    BEGIN
      GenJournalLine.VALIDATE("Applies-to Doc. Type",GenJournalLine."Document Type"::Invoice);
      GenJournalLine.VALIDATE("Applies-to Doc. No.",DocumentNo);
      GenJournalLine.MODIFY(TRUE);
    END;

    BEGIN
    {
      // [FEATURE] [General Journal Line] [Balance (LCY)]
      Test Application using Applies to Document No. and Verify Balance LCY field on General Journal Line.
        1. Test Application of Invoice to a Payment using Applies-to-Doc.
        2. Test Balance LCY field on General Journal Line.

      Covers test cases:
            -------------------------------------------------------
            Test Function Name               Test TFS ID
            -------------------------------------------------------
            CustomerWithBalancingAcc         125859,125860,125861
            CustomerWithoutBalancingAcc      125859,125860
    }
    END.
  }
}

