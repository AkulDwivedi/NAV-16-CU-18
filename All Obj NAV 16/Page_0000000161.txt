OBJECT Page 161 Purchase Statistics
{
  OBJECT-PROPERTIES
  {
    Date=01-08-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.48992,NAVIN9.00.00.48992;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Purchase Statistics;
               ENN=Purchase Statistics];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table38;
    PageType=ListPlus;
    OnOpenPage=BEGIN
                 PurchSetup.GET;
                 AllowInvDisc :=
                   NOT (PurchSetup."Calc. Inv. Discount" AND VendInvDiscRecExists("Invoice Disc. Code"));
                 AllowVATDifference :=
                   PurchSetup."Allow VAT Difference" AND
                   NOT ("Document Type" IN ["Document Type"::Quote,"Document Type"::"Blanket Order"]);
                 CurrPage.EDITABLE := AllowVATDifference OR AllowInvDisc;
                 SetVATSpecification;
               END;

    OnAfterGetRecord=VAR
                       PurchLine@1000 : Record 39;
                       TempPurchLine@1001 : TEMPORARY Record 39;
                       GSTManagement@1500000 : Codeunit 16401;
                       Transactiontype@1500001 : 'Purchase,Sale';
                     BEGIN
                       CurrPage.CAPTION(STRSUBSTNO(Text000,"Document Type"));
                       IF PrevNo = "No." THEN BEGIN
                         GetVATSpecification;
                         EXIT;
                       END;
                       PrevNo := "No.";
                       FILTERGROUP(2);
                       SETRANGE("No.",PrevNo);
                       FILTERGROUP(0);
                       CLEAR(PurchLine);
                       CLEAR(TotalPurchLine);
                       CLEAR(TotalPurchLineLCY);
                       CLEAR(PurchPost);
                       CLEAR(TotalAdvGSTInvoiced);
                       CLEAR(TotalGSTInvoiced);
                       PurchPost.GetPurchLines(Rec,TempPurchLine,0);
                       CLEAR(PurchPost);
                       PurchPost.SumPurchLinesTemp(
                         Rec,TempPurchLine,0,TotalPurchLine,TotalPurchLineLCY,VATAmount,VATAmountText);

                       IF (TotalPurchLine."Service Tax Amount" = 0) AND
                          (TotalPurchLine."Service Tax eCess Amount" + TotalPurchLine."Service Tax SHE Cess Amount" <> 0) THEN BEGIN
                         TotalPurchLine."Line Amount" += TotalPurchLine."Service Tax eCess Amount" + TotalPurchLine."Service Tax SHE Cess Amount";
                         TotalPurchLine.Amount += TotalPurchLine."Service Tax eCess Amount" + TotalPurchLine."Service Tax SHE Cess Amount";
                         TotalPurchLine."Amount Including VAT" += TotalPurchLine."Service Tax eCess Amount" +
                         TotalPurchLine."Service Tax SHE Cess Amount";
                         TotalPurchLine."Service Tax eCess Amount" := 0;
                         TotalPurchLine."Service Tax SHE Cess Amount" := 0;
                         TotalPurchLine."Service Tax SBC Amount" := 0;
                       END;

                       IF "Prices Including VAT" THEN BEGIN
                         TotalAmount2 := TotalPurchLine.Amount;
                         TotalAmount1 := TotalAmount2 + VATAmount;
                         TotalPurchLine."Line Amount" := TotalAmount1 + TotalPurchLine."Inv. Discount Amount";
                       END ELSE BEGIN
                         TotalAmount1 := TotalPurchLine.Amount;
                         TotalAmount2 := TotalPurchLine."Amount Including VAT";
                       END;
                       ClearGSTStatisticsAmount;
                       PurchLine.SETRANGE("Document Type","Document Type");
                       PurchLine.SETRANGE("Document No.","No.");
                       PurchLine.SETFILTER(Quantity,'<>%1',0);
                       IF PurchLine.FINDSET THEN BEGIN
                         REPEAT
                           TotalGSTInvoiced += GSTManagement.RoundTotalGSTAmountQtyFactor(Transactiontype::Purchase,PurchLine."Document Type",
                             PurchLine."Document No.",PurchLine."Line No.",1,"Currency Code");
                         UNTIL PurchLine.NEXT = 0;
                         IF PurchLine."GST Reverse Charge" THEN
                             ReverseChargeGST := TotalGSTInvoiced;
                       END;
                       IF ("Applies-to Doc. No." <> '') OR ("Applies-to ID" <> '')THEN BEGIN
                         TotalAdvGSTInvoiced := GSTApplicationAmount;
                         TotalAmountApplied := GetApplicableAmount(TotalAdvGSTInvoiced,TotalGSTInvoiced);
                       END;

                       IF Vend.GET("Pay-to Vendor No.") THEN
                         Vend.CALCFIELDS("Balance (LCY)")
                       ELSE
                         CLEAR(Vend);

                       PurchLine.CalcVATAmountLines(0,Rec,TempPurchLine,TempVATAmountLine);
                       TempVATAmountLine.MODIFYALL(Modified,FALSE);
                       SetVATSpecification;
                     END;

    OnQueryClosePage=BEGIN
                       GetVATSpecification;
                       IF TempVATAmountLine.GetAnyLineModified THEN
                         UpdateVATOnPurchLines;
                       EXIT(TRUE);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ENN=General] }

    { 97  ;2   ;Field     ;
                Name=Amount;
                CaptionML=[ENU=Amount;
                           ENN=Amount];
                SourceExpr=TotalPurchLine."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,FALSE);
                Editable=FALSE }

    { 93  ;2   ;Field     ;
                Name=InvDiscountAmount;
                CaptionML=[ENU=Inv. Discount Amount;
                           ENN=Inv. Discount Amount];
                SourceExpr=TotalPurchLine."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                OnValidate=BEGIN
                             UpdateInvDiscAmount;
                           END;
                            }

    { 80  ;2   ;Field     ;
                CaptionML=[ENU=Total;
                           ENN=Total];
                SourceExpr=TotalAmount1;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text002,FALSE);
                OnValidate=BEGIN
                             UpdateTotalAmount;
                           END;
                            }

    { 1280001;2;Field     ;
                CaptionML=[ENU=Excise Amount;
                           ENN=Excise Amount];
                SourceExpr=TotalPurchLine."Excise Amount";
                Editable=FALSE }

    { 1280000;2;Field     ;
                CaptionML=[ENU=Tax Amount;
                           ENN=Tax Amount];
                SourceExpr=TotalPurchLine."Tax Amount";
                Editable=FALSE }

    { 1500000;2;Field     ;
                CaptionML=[ENU=GST Amount;
                           ENN=GST Amount];
                SourceExpr=ABS(TotalGSTInvoiced) -  TotalAdvGSTInvoiced;
                Editable=FALSE }

    { 1280012;2;Field     ;
                CaptionML=[ENU=Service Tax Amount;
                           ENN=Service Tax Amount];
                SourceExpr=TotalPurchLine."Service Tax Amount" + TotalPurchLine."Service Tax eCess Amount" + TotalPurchLine."Service Tax SHE Cess Amount" + TotalPurchLine."Service Tax SBC Amount" + TotalPurchLine."KK Cess Amount";
                Editable=FALSE }

    { 1280010;2;Field     ;
                CaptionML=[ENU=Charges;
                           ENN=Charges];
                SourceExpr=TotalPurchLine."Charges To Vendor";
                Editable=FALSE }

    { 1280006;2;Field     ;
                CaptionML=[ENU="TDS ";
                           ENN="TDS "];
                SourceExpr=TotalPurchLine."Bal. TDS Including SHE CESS";
                Editable=FALSE }

    { 1280008;2;Field     ;
                CaptionML=[ENU=Work Tax;
                           ENN=Work Tax];
                SourceExpr=TotalPurchLine."Work Tax Amount";
                Editable=FALSE }

    { 1280014;2;Field     ;
                CaptionML=[ENU=Net Total;
                           ENN=Net Total];
                SourceExpr=TotalPurchLine."Amount To Vendor" - ReverseChargeGST;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 95  ;2   ;Field     ;
                Name=Quantity;
                CaptionML=[ENU=Quantity;
                           ENN=Quantity];
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine.Quantity;
                Editable=FALSE }

    { 73  ;2   ;Field     ;
                CaptionML=[ENU=Parcels;
                           ENN=Parcels];
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine."Units per Parcel";
                Editable=FALSE }

    { 91  ;2   ;Field     ;
                CaptionML=[ENU=Net Weight;
                           ENN=Net Weight];
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine."Net Weight";
                Editable=FALSE }

    { 82  ;2   ;Field     ;
                CaptionML=[ENU=Gross Weight;
                           ENN=Gross Weight];
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine."Gross Weight";
                Editable=FALSE }

    { 71  ;2   ;Field     ;
                CaptionML=[ENU=Volume;
                           ENN=Volume];
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine."Unit Volume";
                Editable=FALSE }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=Purchase (LCY);
                           ENN=Purchase (LCY)];
                SourceExpr=TotalPurchLineLCY.Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 1901061301;1;Group  ;
                CaptionML=[ENU=Vendor;
                           ENN=Vendor] }

    { 67  ;2   ;Field     ;
                CaptionML=[ENU=Balance (LCY);
                           ENN=Balance (LCY)];
                SourceExpr=Vend."Balance (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Purchase %1 Statistics;ENN=Purchase %1 Statistics';
      Text001@1001 : TextConst 'ENU=Amount;ENN=Amount';
      Text002@1002 : TextConst 'ENU=Total;ENN=Total';
      Text003@1003 : TextConst 'ENU=%1 must not be 0.;ENN=%1 must not be 0.';
      Text004@1004 : TextConst 'ENU=%1 must not be greater than %2.;ENN=%1 must not be greater than %2.';
      Text005@1005 : TextConst 'ENU=You cannot change the invoice discount because a vendor invoice discount with the code %1 exists.;ENN=You cannot change the invoice discount because a vendor invoice discount with the code %1 exists.';
      TotalPurchLine@1006 : Record 39;
      TotalPurchLineLCY@1007 : Record 39;
      Vend@1008 : Record 23;
      TempVATAmountLine@1009 : TEMPORARY Record 290;
      PurchSetup@1010 : Record 312;
      PurchPost@1011 : Codeunit 90;
      TotalAmount1@1012 : Decimal;
      TotalAmount2@1013 : Decimal;
      VATAmount@1014 : Decimal;
      VATAmountText@1015 : Text[30];
      PrevNo@1016 : Code[20];
      AllowInvDisc@1017 : Boolean;
      AllowVATDifference@1018 : Boolean;
      TotalGSTInvoiced@1500000 : Decimal;
      TotalAdvGSTInvoiced@1500002 : Decimal;
      TotalAmountApplied@1500001 : Decimal;
      ReverseChargeGST@1500003 : Decimal;

    LOCAL PROCEDURE UpdateHeaderInfo@5();
    VAR
      CurrExchRate@1000 : Record 330;
      UseDate@1001 : Date;
    BEGIN
      TotalPurchLine."Inv. Discount Amount" := TempVATAmountLine.GetTotalInvDiscAmount;
      TotalAmount1 :=
        TotalPurchLine."Line Amount" - TotalPurchLine."Inv. Discount Amount";
      VATAmount := TempVATAmountLine.GetTotalVATAmount;
      IF "Prices Including VAT" THEN BEGIN
        TotalAmount1 := TempVATAmountLine.GetTotalAmountInclVAT;
        TotalAmount2 := TotalAmount1 - VATAmount;
        TotalPurchLine."Line Amount" := TotalAmount1 + TotalPurchLine."Inv. Discount Amount";
      END ELSE
        TotalAmount2 := TotalAmount1 + VATAmount;

      IF "Prices Including VAT" THEN
        TotalPurchLineLCY.Amount := TotalAmount2
      ELSE
        TotalPurchLineLCY.Amount := TotalAmount1;
      IF "Currency Code" <> '' THEN BEGIN
        IF ("Document Type" IN ["Document Type"::"Blanket Order","Document Type"::Quote]) AND
           ("Posting Date" = 0D)
        THEN
          UseDate := WORKDATE
        ELSE
          UseDate := "Posting Date";

        TotalPurchLineLCY.Amount :=
          CurrExchRate.ExchangeAmtFCYToLCY(
            UseDate,"Currency Code",TotalPurchLineLCY.Amount,"Currency Factor");
      END;
    END;

    LOCAL PROCEDURE GetVATSpecification@21();
    BEGIN
      // CurrForm.SubForm.PAGE.GetTempVATAmountLine(TempVATAmountLine);
      IF TempVATAmountLine.GetAnyLineModified THEN
        UpdateHeaderInfo;
    END;

    LOCAL PROCEDURE SetVATSpecification@11();
    BEGIN
      // CurrForm.SubForm.PAGE.SetTempVATAmountLine(TempVATAmountLine);
      // CurrForm.SubForm.PAGE.InitGlobals(
      // "Currency Code",AllowVATDifference,AllowVATDifference,
      // "Prices Including VAT",AllowInvDisc,"VAT Base Discount %");
    END;

    LOCAL PROCEDURE UpdateTotalAmount@16();
    VAR
      SaveTotalAmount@1000 : Decimal;
    BEGIN
      CheckAllowInvDisc;
      IF "Prices Including VAT" THEN BEGIN
        SaveTotalAmount := TotalAmount1;
        UpdateInvDiscAmount;
        TotalAmount1 := SaveTotalAmount;
      END;

      WITH TotalPurchLine DO
        "Inv. Discount Amount" := "Line Amount" - TotalAmount1;
      UpdateInvDiscAmount;
    END;

    LOCAL PROCEDURE UpdateInvDiscAmount@3();
    VAR
      InvDiscBaseAmount@1000 : Decimal;
    BEGIN
      CheckAllowInvDisc;
      InvDiscBaseAmount := TempVATAmountLine.GetTotalInvDiscBaseAmount(FALSE,"Currency Code");
      IF InvDiscBaseAmount = 0 THEN
        ERROR(Text003,TempVATAmountLine.FIELDCAPTION("Inv. Disc. Base Amount"));

      IF TotalPurchLine."Inv. Discount Amount" / InvDiscBaseAmount > 1 THEN
        ERROR(
          Text004,
          TotalPurchLine.FIELDCAPTION("Inv. Discount Amount"),
          TempVATAmountLine.FIELDCAPTION("Inv. Disc. Base Amount"));

      TempVATAmountLine.SetInvoiceDiscountAmount(
        TotalPurchLine."Inv. Discount Amount","Currency Code","Prices Including VAT","VAT Base Discount %");
      // CurrForm.SubForm.PAGE.SetTempVATAmountLine(TempVATAmountLine);
      UpdateHeaderInfo;

      "Invoice Discount Calculation" := "Invoice Discount Calculation"::Amount;
      "Invoice Discount Value" := TotalPurchLine."Inv. Discount Amount";
      MODIFY;
      UpdateVATOnPurchLines;
    END;

    LOCAL PROCEDURE GetCaptionClass@2(FieldCaption@1000 : Text[100];ReverseCaption@1001 : Boolean) : Text[80];
    BEGIN
      IF "Prices Including VAT" XOR ReverseCaption THEN
        EXIT('2,1,' + FieldCaption);

      EXIT('2,0,' + FieldCaption);
    END;

    LOCAL PROCEDURE UpdateVATOnPurchLines@1();
    VAR
      PurchLine@1000 : Record 39;
    BEGIN
      GetVATSpecification;
      IF TempVATAmountLine.GetAnyLineModified THEN BEGIN
        PurchLine.UpdateVATOnLines(0,Rec,PurchLine,TempVATAmountLine);
        PurchLine.UpdateVATOnLines(1,Rec,PurchLine,TempVATAmountLine);
      END;
      PrevNo := '';
    END;

    LOCAL PROCEDURE VendInvDiscRecExists@4(InvDiscCode@1000 : Code[20]) : Boolean;
    VAR
      VendInvDisc@1001 : Record 24;
    BEGIN
      VendInvDisc.SETRANGE(Code,InvDiscCode);
      EXIT(VendInvDisc.FINDFIRST);
    END;

    LOCAL PROCEDURE CheckAllowInvDisc@8();
    BEGIN
      IF NOT AllowInvDisc THEN
        ERROR(Text005,"Invoice Disc. Code");
    END;

    PROCEDURE GSTApplicationAmount@1500001() : Decimal;
    VAR
      VendorLedgerEntry@1500000 : Record 25;
      DetailedGSTLedgerEntry@1500001 : Record 16419;
      GSTApplicationBuffer@1500004 : Record 16423;
      TotalAdvAmount@1500002 : Decimal;
    BEGIN
      VendorLedgerEntry.SETCURRENTKEY("Document No.","Document Type","Buy-from Vendor No.");
      IF "Applies-to Doc. No." <> '' THEN
        VendorLedgerEntry.SETRANGE("Document No.","Applies-to Doc. No.");
      IF "Applies-to ID" <> '' THEN
        VendorLedgerEntry.SETRANGE("Applies-to ID","Applies-to ID");
      VendorLedgerEntry.SETRANGE("Document Type","Applies-to Doc. Type");
      VendorLedgerEntry.SETRANGE("Buy-from Vendor No.","Buy-from Vendor No.");
      VendorLedgerEntry.SETRANGE("GST on Advance Payment",TRUE);
      VendorLedgerEntry.SETRANGE(Open,TRUE);
      VendorLedgerEntry.SETRANGE("On Hold",'');
      VendorLedgerEntry.SETFILTER("Amount to Apply",'<>%1',0);
      IF VendorLedgerEntry.FINDSET THEN REPEAT
        GSTApplicationBuffer.SETRANGE("Transaction Type",GSTApplicationBuffer."Transaction Type"::Purchase);
        GSTApplicationBuffer.SETRANGE("Original Document Type",GSTApplicationBuffer."Original Document Type"::Payment);
        GSTApplicationBuffer.SETRANGE("Original Document No.",VendorLedgerEntry."Document No.");
        GSTApplicationBuffer.SETRANGE("GST Group Code",VendorLedgerEntry."GST Group Code");
        GSTApplicationBuffer.SETRANGE("CLE/VLE Entry No.",VendorLedgerEntry."Entry No.");
        IF GSTApplicationBuffer.FINDSET THEN REPEAT
          TotalAdvAmount += ABS(GSTApplicationBuffer."Applied Amount") ;//* QtyFactor;
        UNTIL GSTApplicationBuffer.NEXT = 0;
      UNTIL VendorLedgerEntry.NEXT = 0;
      EXIT(TotalAdvAmount);
    END;

    LOCAL PROCEDURE GetApplicableAmount@1500000(TotalAdvAmount@1500002 : Decimal;TotalGSTAmountInvShip@1500001 : Decimal) : Decimal;
    VAR
      TotalGSTAmountApplied@1500000 : Decimal;
    BEGIN
      IF ABS(TotalGSTAmountInvShip) > ABS(TotalAdvAmount) THEN
        TotalGSTAmountApplied := ABS(TotalAdvAmount)
      ELSE
        TotalGSTAmountApplied := ABS(TotalGSTAmountInvShip);
      EXIT(TotalGSTAmountApplied);
    END;

    LOCAL PROCEDURE ClearGSTStatisticsAmount@1500200();
    BEGIN
      TotalGSTInvoiced := 0;
      TotalAmountApplied := 0;
      TotalAdvGSTInvoiced := 0;
      ReverseChargeGST := 0;
    END;

    BEGIN
    END.
  }
}

