OBJECT Codeunit 136357 UT T Job WIP Total
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
            IsInitialized := FALSE;
          END;

  }
  CODE
  {
    VAR
      Text001@1000 : TextConst 'ENU=Rolling back changes...';
      Job@1004 : Record 167;
      JobTask@1003 : Record 1001;
      JobWIPTotal@1002 : Record 1021;
      Assert@1001 : Codeunit 130000;
      IsInitialized@1005 : Boolean;

    LOCAL PROCEDURE Initialize@3();
    VAR
      LibraryERMCountryData@1000 : Codeunit 131305;
    BEGIN
      IF IsInitialized THEN
        EXIT;

      LibraryERMCountryData.UpdateGeneralPostingSetup;

      IsInitialized := TRUE;
    END;

    [Normal]
    LOCAL PROCEDURE SetUp@1();
    VAR
      LibraryJob@1000 : Codeunit 131920;
    BEGIN
      LibraryJob.CreateJob(Job);
      Job.VALIDATE("Apply Usage Link",TRUE);
      Job.MODIFY;

      LibraryJob.CreateJobTask(Job,JobTask);

      JobWIPTotal.INIT;
      JobWIPTotal."Job No." := Job."No.";
      JobWIPTotal."Job Task No." := JobTask."Job Task No.";
      JobWIPTotal.INSERT;
    END;

    [Normal]
    LOCAL PROCEDURE TearDown@2();
    BEGIN
      CLEAR(Job);
      CLEAR(JobTask);
      CLEAR(JobWIPTotal);
      ASSERTERROR ERROR(Text001);
      IsInitialized := FALSE;
    END;

    [Test]
    PROCEDURE TestDeletion@4();
    VAR
      JobWIPWarning@1000 : Record 1007;
    BEGIN
      Initialize;
      SetUp;

      // Verify that a Job WIP Total can be deleted and that all Job WIP Warnings are deleted as well.
      JobWIPWarning.INIT;
      JobWIPWarning."Job WIP Total Entry No." := JobWIPTotal."Entry No.";
      JobWIPWarning.INSERT(TRUE);

      JobWIPWarning.SETRANGE("Job WIP Total Entry No.",JobWIPTotal."Entry No.");
      Assert.IsTrue(JobWIPWarning.FINDFIRST,'No Job WIP Warnings were found.');

      Assert.IsTrue(JobWIPTotal.DELETE(TRUE),'The Job WIP Total could not be deleted.');
      Assert.IsFalse(JobWIPWarning.FINDFIRST,'Job WIP Warnings still exist after deletion of Record.');

      TearDown;
    END;

    [Test]
    PROCEDURE TestFieldWIPWarnings@7();
    VAR
      JobWIPWarning@1000 : Record 1007;
    BEGIN
      Initialize;
      SetUp;

      // Verify that WIP Warnings is false when no warnings exist.
      Assert.IsFalse(JobWIPTotal."WIP Warnings",'WIP Warning is true, even if no warnings exist.');

      // Verify that WIP Warnings is true when warnings exist.
      JobWIPWarning.INIT;
      JobWIPWarning."Job No." := Job."No.";
      JobWIPWarning."Job Task No." := JobTask."Job Task No.";
      JobWIPWarning."Job WIP Total Entry No." := JobWIPTotal."Entry No.";
      JobWIPWarning.INSERT;
      JobWIPTotal.CALCFIELDS("WIP Warnings");
      Assert.IsTrue(JobWIPTotal."WIP Warnings",'WIP Warning is false, even if warnings exist.');

      TearDown;
    END;

    BEGIN
    {
      // [FEATURE] [WIP Total] [Job]
    }
    END.
  }
}

