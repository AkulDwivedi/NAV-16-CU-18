OBJECT Report 5692 Calculate Depreciation
{
  OBJECT-PROPERTIES
  {
    Date=23-09-13;
    Time=12:00:00 PM;
    Version List=NAVW17.10,NAVIN7.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Calculate Depreciation;
               ENN=Calculate Depreciation];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  DeprBook.GET(DeprBookCode);
                  IF DeprUntilDate = 0D THEN
                    ERROR(Text000,FAJnlLine.FIELDCAPTION("FA Posting Date"));
                  IF PostingDate = 0D THEN
                    PostingDate := DeprUntilDate;
                  IF UseForceNoOfDays AND (DaysInPeriod = 0) THEN
                    ERROR(Text001);

                  IF DeprBook."Use Same FA+G/L Posting Dates" AND (DeprUntilDate <> PostingDate) THEN
                    ERROR(
                      Text002,
                      FAJnlLine.FIELDCAPTION("FA Posting Date"),
                      FAJnlLine.FIELDCAPTION("Posting Date"),
                      DeprBook.FIELDCAPTION("Use Same FA+G/L Posting Dates"),
                      FALSE,
                      DeprBook.TABLECAPTION,
                      DeprBook.FIELDCAPTION(Code),
                      DeprBook.Code);

                  Window.OPEN(
                    Text003 +
                    Text004 +
                    Text005);
                END;

  }
  DATASET
  {
    { 3794;    ;DataItem;                    ;
               DataItemTable=Table5600;
               OnAfterGetRecord=BEGIN
                                  IF Inactive OR Blocked THEN
                                    CurrReport.SKIP;

                                  IF NOT CalculateFAShifts THEN BEGIN
                                    CalculateDepr.Calculate(
                                      DeprAmount,Custom1Amount,NumberOfDays,Custom1NumberOfDays,
                                      "No.",DeprBookCode,DeprUntilDate,EntryAmounts,0D,DaysInPeriod);
                                    InsertTempJournal(0);
                                  END;
                                  IF (DeprAmount <> 0) OR (Custom1Amount <> 0) THEN
                                    Window.UPDATE(1,"No.")
                                  ELSE
                                    Window.UPDATE(2,"No.");

                                  //IF Custom1Amount <> 0 THEN
                                  //  IF NOT DeprBook."G/L Integration - Custom 1" OR "Budgeted Asset" THEN BEGIN
                                  //    FAJnlLineTmp."FA No." := "No.";
                                  //    FAJnlLineTmp."FA Posting Type" := FAJnlLineTmp."FA Posting Type"::"Custom 1";
                                  //    FAJnlLineTmp.Amount := Custom1Amount;
                                  //    FAJnlLineTmp."No. of Depreciation Days" := Custom1NumberOfDays;
                                  //    FAJnlLineTmp."FA Error Entry No." := Custom1ErrorNo;
                                  //    FAJnlLineTmp."Line No." := FAJnlLineTmp."Line No." + 1;
                                  //    FAJnlLineTmp.INSERT;
                                  //  END ELSE BEGIN
                                  //    GenJnlLineTmp."Account No." := "No.";
                                  //    GenJnlLineTmp."FA Posting Type" := GenJnlLineTmp."FA Posting Type"::"Custom 1";
                                  //    GenJnlLineTmp.Amount := Custom1Amount;
                                  //    GenJnlLineTmp."No. of Depreciation Days" := Custom1NumberOfDays;
                                  //    GenJnlLineTmp."FA Error Entry No." := Custom1ErrorNo;
                                  //    GenJnlLineTmp."Line No." := GenJnlLineTmp."Line No." + 1;
                                  //    GenJnlLineTmp.INSERT;
                                  //  END;
                                  //
                                  //IF DeprAmount <> 0 THEN
                                  //  IF NOT DeprBook."G/L Integration - Depreciation" OR "Budgeted Asset" THEN BEGIN
                                  //    FAJnlLineTmp."FA No." := "No.";
                                  //    FAJnlLineTmp."FA Posting Type" := FAJnlLineTmp."FA Posting Type"::Depreciation;
                                  //    FAJnlLineTmp.Amount := DeprAmount;
                                  //    FAJnlLineTmp."No. of Depreciation Days" := NumberOfDays;
                                  //    FAJnlLineTmp."FA Error Entry No." := ErrorNo;
                                  //    FAJnlLineTmp."Line No." := FAJnlLineTmp."Line No." + 1;
                                  //    FAJnlLineTmp.INSERT;
                                  //  END ELSE BEGIN
                                  //    GenJnlLineTmp."Account No." := "No.";
                                  //    GenJnlLineTmp."FA Posting Type" := GenJnlLineTmp."FA Posting Type"::Depreciation;
                                  //    GenJnlLineTmp.Amount := DeprAmount;
                                  //    GenJnlLineTmp."No. of Depreciation Days" := NumberOfDays;
                                  //    GenJnlLineTmp."FA Error Entry No." := ErrorNo;
                                  //    GenJnlLineTmp."Line No." := GenJnlLineTmp."Line No." + 1;
                                  //    GenJnlLineTmp.INSERT;
                                  //  END;
                                END;

               OnPostDataItem=BEGIN
                                WITH FAJnlLine DO BEGIN
                                  IF FAJnlLineTmp.FIND('-') THEN BEGIN
                                    LOCKTABLE;
                                    FAJnlSetup.FAJnlName(DeprBook,FAJnlLine,FAJnlNextLineNo);
                                    NoSeries := FAJnlSetup.GetFANoSeries(FAJnlLine);
                                    IF DocumentNo = '' THEN
                                      DocumentNo2 := FAJnlSetup.GetFAJnlDocumentNo(FAJnlLine,DeprUntilDate,TRUE)
                                    ELSE
                                      DocumentNo2 := DocumentNo;
                                  END;
                                  IF FAJnlLineTmp.FIND('-') THEN
                                    REPEAT
                                      INIT;
                                      "Line No." := 0;
                                      FAJnlSetup.SetFAJnlTrailCodes(FAJnlLine);
                                      LineNo := LineNo + 1;
                                      Window.UPDATE(3,LineNo);
                                      "Posting Date" := PostingDate;
                                      "FA Posting Date" := DeprUntilDate;
                                      IF "Posting Date" = "FA Posting Date" THEN
                                        "Posting Date" := 0D;
                                      "FA Posting Type" := FAJnlLineTmp."FA Posting Type";
                                      VALIDATE("FA No.",FAJnlLineTmp."FA No.");
                                      "Document No." := DocumentNo2;
                                      "Posting No. Series" := NoSeries;
                                      Description := PostingDescription;
                                      VALIDATE("Depreciation Book Code",DeprBookCode);
                                      VALIDATE(Amount,FAJnlLineTmp.Amount);
                                      "No. of Depreciation Days" := FAJnlLineTmp."No. of Depreciation Days";
                                      "FA Error Entry No." := FAJnlLineTmp."FA Error Entry No.";
                                      FAJnlNextLineNo := FAJnlNextLineNo + 10000;
                                      "Line No." := FAJnlNextLineNo;
                                      "FA Shift Line No." := FAJnlLineTmp."FA Shift Line No.";  // INBlocking
                                      "Shift Type" := FAJnlLineTmp."Shift Type";
                                      "Industry Type" := FAJnlLineTmp."Industry Type";
                                      "No. of Days for Shift" := FAJnlLineTmp."No. of Days for Shift";
                                      INSERT(TRUE);
                                    UNTIL FAJnlLineTmp.NEXT = 0;
                                END;

                                WITH GenJnlLine DO BEGIN
                                  IF GenJnlLineTmp.FIND('-') THEN BEGIN
                                    LOCKTABLE;
                                    FAJnlSetup.GenJnlName(DeprBook,GenJnlLine,GenJnlNextLineNo);
                                    NoSeries := FAJnlSetup.GetGenNoSeries(GenJnlLine);
                                    IF DocumentNo = '' THEN
                                      DocumentNo2 := FAJnlSetup.GetGenJnlDocumentNo(GenJnlLine,DeprUntilDate,TRUE)
                                    ELSE
                                      DocumentNo2 := DocumentNo;
                                  END;
                                  IF GenJnlLineTmp.FIND('-') THEN
                                    REPEAT
                                      INIT;
                                      "Line No." := 0;
                                      FAJnlSetup.SetGenJnlTrailCodes(GenJnlLine);
                                      LineNo := LineNo + 1;
                                      Window.UPDATE(3,LineNo);
                                      "Posting Date" := PostingDate;
                                      "FA Posting Date" := DeprUntilDate;
                                      IF "Posting Date" = "FA Posting Date" THEN
                                        "FA Posting Date" := 0D;
                                      "FA Posting Type" := GenJnlLineTmp."FA Posting Type";
                                      "Account Type" := "Account Type"::"Fixed Asset";
                                      VALIDATE("Account No.",GenJnlLineTmp."Account No.");
                                      Description := PostingDescription;
                                      "Document No." := DocumentNo2;
                                      "Posting No. Series" := NoSeries;
                                      VALIDATE("Depreciation Book Code",DeprBookCode);
                                      VALIDATE(Amount,GenJnlLineTmp.Amount);
                                      "No. of Depreciation Days" := GenJnlLineTmp."No. of Depreciation Days";
                                      "FA Error Entry No." := GenJnlLineTmp."FA Error Entry No.";
                                      GenJnlNextLineNo := GenJnlNextLineNo + 1000;
                                      "Line No." := GenJnlNextLineNo;
                                      "FA Shift Line No." := GenJnlLineTmp."FA Shift Line No.";  // INBlocking
                                      "Shift Type" := GenJnlLineTmp."Shift Type";
                                      "Industry Type" := GenJnlLineTmp."Industry Type";
                                      "No. of Days for Shift" := GenJnlLineTmp."No. of Days for Shift";
                                      INSERT(TRUE);
                                      IF BalAccount THEN
                                        FAInsertGLAcc.GetBalAcc2(GenJnlLine,GenJnlNextLineNo);
                                    UNTIL GenJnlLineTmp.NEXT = 0;
                                END;
                              END;

               ReqFilterFields=No.,FA Class Code,FA Subclass Code,Budgeted Asset }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF DeprBookCode = '' THEN BEGIN
                     FASetup.GET;
                     DeprBookCode := FASetup."Default Depr. Book";
                   END;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENN=Options] }

      { 15  ;2   ;Field     ;
                  Name=DepreciationBook;
                  CaptionML=[ENU=Depreciation Book;
                             ENN=Depreciation Book];
                  SourceExpr=DeprBookCode;
                  TableRelation="Depreciation Book" }

      { 9   ;2   ;Field     ;
                  Name=FAPostingDate;
                  CaptionML=[ENU=FA Posting Date;
                             ENN=FA Posting Date];
                  SourceExpr=DeprUntilDate }

      { 8   ;2   ;Field     ;
                  Name=UseForceNoOfDays;
                  CaptionML=[ENU=Use Force No. of Days;
                             ENN=Use Force No. of Days];
                  SourceExpr=UseForceNoOfDays;
                  OnValidate=BEGIN
                               IF NOT UseForceNoOfDays THEN
                                 DaysInPeriod := 0;
                             END;
                              }

      { 5   ;2   ;Field     ;
                  Name=ForceNoOfDays;
                  CaptionML=[ENU=Force No. of Days;
                             ENN=Force No. of Days];
                  BlankZero=Yes;
                  SourceExpr=DaysInPeriod;
                  MinValue=0;
                  OnValidate=BEGIN
                               IF NOT UseForceNoOfDays AND (DaysInPeriod <> 0) THEN
                                 ERROR(Text006);
                             END;
                              }

      { 11  ;2   ;Field     ;
                  Name=PostingDate;
                  CaptionML=[ENU=Posting Date;
                             ENN=Posting Date];
                  SourceExpr=PostingDate }

      { 1   ;2   ;Field     ;
                  Name=DocumentNo;
                  CaptionML=[ENU=Document No.;
                             ENN=Document No.];
                  SourceExpr=DocumentNo }

      { 13  ;2   ;Field     ;
                  CaptionML=[ENU=Posting Description;
                             ENN=Posting Description];
                  SourceExpr=PostingDescription }

      { 3   ;2   ;Field     ;
                  Name=InsertBalAccount;
                  CaptionML=[ENU=Insert Bal. Account;
                             ENN=Insert Bal. Account];
                  SourceExpr=BalAccount }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You must specify %1.;ENN=You must specify %1.';
      Text001@1001 : TextConst 'ENU=Force No. of Days must be activated.;ENN=Force No. of Days must be activated.';
      Text002@1002 : TextConst 'ENU="%1 and %2 must be identical. %3 must be %4 in %5 %6 = %7.";ENN="%1 and %2 must be identical. %3 must be %4 in %5 %6 = %7."';
      Text003@1003 : TextConst 'ENU=Depreciating fixed asset      #1##########\;ENN=Depreciating fixed asset      #1##########\';
      Text004@1004 : TextConst 'ENU=Not depreciating fixed asset  #2##########\;ENN=Not depreciating fixed asset  #2##########\';
      Text005@1005 : TextConst 'ENU=Inserting journal lines       #3##########;ENN=Inserting journal lines       #3##########';
      Text006@1006 : TextConst 'ENU=Use Force No. of Days must be activated.;ENN=Use Force No. of Days must be activated.';
      GenJnlLine@1007 : Record 81;
      GenJnlLineTmp@1008 : TEMPORARY Record 81;
      FASetup@1009 : Record 5603;
      FAJnlLine@1010 : Record 5621;
      FAJnlLineTmp@1011 : TEMPORARY Record 5621;
      DeprBook@1012 : Record 5611;
      FAJnlSetup@1013 : Record 5605;
      CalculateDepr@1014 : Codeunit 5610;
      FAInsertGLAcc@1015 : Codeunit 5601;
      Window@1016 : Dialog;
      DeprAmount@1017 : Decimal;
      Custom1Amount@1018 : Decimal;
      NumberOfDays@1019 : Integer;
      Custom1NumberOfDays@1020 : Integer;
      DeprUntilDate@1021 : Date;
      UseForceNoOfDays@1022 : Boolean;
      DaysInPeriod@1023 : Integer;
      PostingDate@1024 : Date;
      DocumentNo@1025 : Code[20];
      DocumentNo2@1026 : Code[20];
      NoSeries@1027 : Code[10];
      PostingDescription@1028 : Text[50];
      DeprBookCode@1029 : Code[10];
      BalAccount@1030 : Boolean;
      ErrorNo@1031 : Integer;
      Custom1ErrorNo@1032 : Integer;
      FAJnlNextLineNo@1033 : Integer;
      GenJnlNextLineNo@1034 : Integer;
      EntryAmounts@1035 : ARRAY [4] OF Decimal;
      LineNo@1036 : Integer;
      FADateCalc@1500000 : Codeunit 5617;
      Text16500@1500002 : TextConst 'ENU=Define %1 in %2 in the %3.;ENN=Define %1 in %2 in the %3.';
      Text16501@1500001 : TextConst 'ENU=%1 %2 should not be defined for %3 %4 for asset %5.;ENN=%1 %2 should not be defined for %3 %4 for asset %5.';
      FAShift2@1500003 : Record 16520;

    PROCEDURE InitializeRequest@1(DeprBookCodeFrom@1007 : Code[10];DeprUntilDateFrom@1000 : Date;UseForceNoOfDaysFrom@1001 : Boolean;DaysInPeriodFrom@1002 : Integer;PostingDateFrom@1003 : Date;DocumentNoFrom@1004 : Code[20];PostingDescriptionFrom@1005 : Text[50];BalAccountFrom@1006 : Boolean);
    BEGIN
      DeprBookCode := DeprBookCodeFrom;
      DeprUntilDate := DeprUntilDateFrom;
      UseForceNoOfDays := UseForceNoOfDaysFrom;
      DaysInPeriod := DaysInPeriodFrom;
      PostingDate := PostingDateFrom;
      DocumentNo := DocumentNoFrom;
      PostingDescription := PostingDescriptionFrom;
      BalAccount := BalAccountFrom;
    END;

    LOCAL PROCEDURE CalculateFAShifts@1500000() : Boolean;
    VAR
      FAShift@1500006 : Record 16520;
      WrknDays@1500001 : Integer;
      TotalDeprAmt@1500000 : Decimal;
      SkipItteration@1500003 : Boolean;
      NonSeasonal@1500002 : Boolean;
      Seasonal@1500004 : Boolean;
      DepreciationCalc@1500005 : Codeunit 5616;
      FALedgEntry@1500007 : Record 5601;
      LastDeprDate@1500008 : Date;
      StartingDate@1500010 : Date;
      EndingDate@1500011 : Date;
    BEGIN
      WrknDays := 0;
      SkipItteration := FALSE;
      DeprBook.GET(DeprBookCode);
      IF DeprBook."FA Book Type" = DeprBook."FA Book Type" ::"Income Tax" THEN
        EXIT(FALSE);

      FALedgEntry.RESET;
      FALedgEntry.SETCURRENTKEY("FA No.","Depreciation Book Code","FA Posting Date");
      FALedgEntry.SETRANGE("FA No.", "Fixed Asset"."No.");
      FALedgEntry.SETRANGE("FA Posting Type",FALedgEntry."FA Posting Type"::Depreciation);
      FALedgEntry.SETRANGE("Depreciation Book Code",DeprBookCode);
      IF FALedgEntry.FINDLAST THEN
        LastDeprDate := FALedgEntry."FA Posting Date";

      IF LastDeprDate <> 0D THEN
        LastDeprDate := LastDeprDate + 1;

      FAShift.RESET;
      FAShift.SETCURRENTKEY("Industry Type","FA No.","Depreciation Book Code");
      FAShift.SETRANGE("FA No.","Fixed Asset"."No.");
      FAShift.SETRANGE("Depreciation Book Code",DeprBookCode);
      StartingDate := FADateCalc.GetFiscalYearStartDate(DeprUntilDate);
      EndingDate := FADateCalc.GetFiscalYearEndDate(DeprUntilDate);
      IF LastDeprDate < StartingDate THEN
        StartingDate := LastDeprDate;
      FAShift.SETFILTER("Depreciation Starting Date",'>=%1',StartingDate);
      FAShift.SETFILTER("Depreciation Ending Date",'<=%1',EndingDate);
      IF FAShift.FINDSET THEN
      REPEAT
        FAShift.TESTFIELD("Depreciation Ending Date");
        IF (FAShift."Shift Type" = FAShift."Shift Type"::Single) AND
         (FAShift."Industry Type" <> FAShift."Industry Type"::Normal) THEN
          ERROR(Text16501,FAShift.FIELDCAPTION("Shift Type"),FAShift."Shift Type",FAShift.FIELDCAPTION("Industry Type"),
           FAShift."Industry Type",FAShift."FA No.");
        IF (FAShift."Shift Type" <> FAShift."Shift Type"::Single) AND (FAShift."Industry Type" = FAShift."Industry Type"::Normal) THEN
          ERROR(Text16501,FAShift.FIELDCAPTION("Shift Type"),FAShift."Shift Type",FAShift.FIELDCAPTION("Industry Type"),
           FAShift."Industry Type",FAShift."FA No.");
        IF DeprUntilDate >= FAShift."Depreciation Ending Date" THEN BEGIN
          IF FAShift."Depreciation Method" IN
             [FAShift."Depreciation Method"::"Straight-Line",
             FAShift."Depreciation Method"::"DB1/SL",
             FAShift."Depreciation Method"::"DB2/SL"] THEN
            FAShift.TESTFIELD("Straight-Line %");
          IF FAShift."Depreciation Method" IN
             [FAShift."Depreciation Method"::"Declining-Balance 1",
             FAShift."Depreciation Method"::"Declining-Balance 2",
             FAShift."Depreciation Method"::"DB1/SL",
             FAShift."Depreciation Method"::"DB2/SL"] THEN
            FAShift.TESTFIELD("Declining-Balance %");

          CalculateDepr.SetFAShiftLineNo(FAShift."Line No.");
          CalculateDepr.Calculate(
            DeprAmount,Custom1Amount,NumberOfDays,Custom1NumberOfDays,
            "Fixed Asset"."No.",DeprBookCode,FAShift."Depreciation Ending Date",EntryAmounts,0D,FAShift."Used No. of Days");
          CalculateDepr.SetFAShiftLineNo(0);
          FAShift.CALCFIELDS("Book Value");
          TotalDeprAmt += -DeprAmount;
          IF TotalDeprAmt > FAShift."Book Value" THEN BEGIN
            DeprAmount := -(FAShift."Book Value" - (TotalDeprAmt+DeprAmount));
            SkipItteration := TRUE;
          END;
          FAShift2 := FAShift;
          InsertTempJournal(FAShift."Line No.");
          //IF FAShift."Used No. of Days" <> 0 THEN
          //  WrknDays += FAShift."Used No. of Days"
          //ELSE
          //  WrknDays += DepreciationCalc.DeprDays2(FAShift."Depreciation Starting Date",FAShift."Depreciation Ending Date");
          IF FAShift."Used No. of Days" <> 0 THEN
            WrknDays += FAShift."Used No. of Days"
          ELSE
            WrknDays += DepreciationCalc.DeprDays(FAShift."Depreciation Starting Date",FAShift."Depreciation Ending Date",
                          DeprBook."Fiscal Year 365 Days");
          IF FAShift."Industry Type" = FAShift."Industry Type"::"Non Seasonal" THEN
            NonSeasonal := TRUE;
          IF FAShift."Industry Type" = FAShift."Industry Type"::Seasonal THEN
            Seasonal := TRUE;
        END;
      UNTIL (FAShift.NEXT = 0) OR SkipItteration
      ELSE
        EXIT(FALSE);
      IF (WrknDays > DeprBook."No. of Days Non Seasonal") AND NonSeasonal THEN
        ERROR(Text16500,WrknDays,DeprBook.FIELDCAPTION("No. of Days Non Seasonal"),DeprBook.TABLECAPTION);
      IF (WrknDays > DeprBook."No. of Days Seasonal") AND Seasonal THEN
        ERROR(Text16500,WrknDays,DeprBook.FIELDCAPTION("No. of Days Seasonal"),DeprBook.TABLECAPTION);
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE InsertTempJournal@1500010(FAShiftLineNo@1500000 : Integer);
    BEGIN
      IF Custom1Amount <> 0 THEN
        IF NOT DeprBook."G/L Integration - Custom 1" OR "Fixed Asset"."Budgeted Asset" THEN BEGIN
          FAJnlLineTmp."FA No." := "Fixed Asset"."No.";
          FAJnlLineTmp."FA Posting Type" := FAJnlLineTmp."FA Posting Type"::"Custom 1";
          FAJnlLineTmp.Amount := Custom1Amount;
          FAJnlLineTmp."No. of Depreciation Days" := Custom1NumberOfDays;
          FAJnlLineTmp."FA Error Entry No." := Custom1ErrorNo;
          FAJnlLineTmp."Line No." := FAJnlLineTmp."Line No." + 1;
          FAJnlLineTmp."FA Shift Line No." := FAShiftLineNo;
          FAJnlLineTmp."Shift Type" := FAShift2."Shift Type";
          FAJnlLineTmp."Industry Type" := FAShift2."Industry Type";
          IF FAJnlLineTmp."Industry Type" = FAJnlLineTmp."Industry Type"::"Non Seasonal" THEN
            FAJnlLineTmp."No. of Days for Shift" := DeprBook."No. of Days Non Seasonal";
          IF FAJnlLineTmp."Industry Type" = FAJnlLineTmp."Industry Type"::Seasonal THEN
            FAJnlLineTmp."No. of Days for Shift" := DeprBook."No. of Days Seasonal";
          FAJnlLineTmp.INSERT;
        END ELSE BEGIN
          GenJnlLineTmp."Account No." := "Fixed Asset"."No.";
          GenJnlLineTmp."FA Posting Type" := GenJnlLineTmp."FA Posting Type"::"Custom 1";
          GenJnlLineTmp.Amount := Custom1Amount;
          GenJnlLineTmp."No. of Depreciation Days" := Custom1NumberOfDays;
          GenJnlLineTmp."FA Error Entry No." := Custom1ErrorNo;
          GenJnlLineTmp."Line No." := GenJnlLineTmp."Line No." + 1;
          GenJnlLineTmp."FA Shift Line No." := FAShiftLineNo;
          GenJnlLineTmp."Shift Type" := FAShift2."Shift Type";
          GenJnlLineTmp."Industry Type" := FAShift2."Industry Type";
          IF GenJnlLineTmp."Industry Type" = GenJnlLineTmp."Industry Type"::"Non Seasonal" THEN
            GenJnlLineTmp."No. of Days for Shift" := DeprBook."No. of Days Non Seasonal";
          IF GenJnlLineTmp."Industry Type" = GenJnlLineTmp."Industry Type"::Seasonal THEN
            GenJnlLineTmp."No. of Days for Shift" := DeprBook."No. of Days Seasonal";
          GenJnlLineTmp.INSERT;
        END;

      IF DeprAmount <> 0 THEN
        IF NOT DeprBook."G/L Integration - Depreciation" OR "Fixed Asset"."Budgeted Asset" THEN BEGIN
          FAJnlLineTmp."FA No." := "Fixed Asset"."No.";
          FAJnlLineTmp."FA Posting Type" := FAJnlLineTmp."FA Posting Type"::Depreciation;
          FAJnlLineTmp.Amount := DeprAmount;
          FAJnlLineTmp."No. of Depreciation Days" := NumberOfDays;
          FAJnlLineTmp."FA Error Entry No." := ErrorNo;
          FAJnlLineTmp."Line No." := FAJnlLineTmp."Line No." + 1;
          FAJnlLineTmp."FA Shift Line No." := FAShiftLineNo;
          FAJnlLineTmp."Shift Type" := FAShift2."Shift Type";
          FAJnlLineTmp."Industry Type" := FAShift2."Industry Type";
          IF FAJnlLineTmp."Industry Type" = FAJnlLineTmp."Industry Type"::"Non Seasonal" THEN
            FAJnlLineTmp."No. of Days for Shift" := DeprBook."No. of Days Non Seasonal";
          IF FAJnlLineTmp."Industry Type" = FAJnlLineTmp."Industry Type"::Seasonal THEN
            FAJnlLineTmp."No. of Days for Shift" := DeprBook."No. of Days Seasonal";
          FAJnlLineTmp.INSERT;
        END ELSE BEGIN
          GenJnlLineTmp."Account No." := "Fixed Asset"."No.";
          GenJnlLineTmp."FA Posting Type" := GenJnlLineTmp."FA Posting Type"::Depreciation;
          GenJnlLineTmp.Amount := DeprAmount;
          GenJnlLineTmp."No. of Depreciation Days" := NumberOfDays;
          GenJnlLineTmp."FA Error Entry No." := ErrorNo;
          GenJnlLineTmp."Line No." := GenJnlLineTmp."Line No." + 1;
          GenJnlLineTmp."FA Shift Line No." := FAShiftLineNo;
          GenJnlLineTmp."Shift Type" := FAShift2."Shift Type";
          GenJnlLineTmp."Industry Type" := FAShift2."Industry Type";
          IF GenJnlLineTmp."Industry Type" = GenJnlLineTmp."Industry Type"::"Non Seasonal" THEN
            GenJnlLineTmp."No. of Days for Shift" := DeprBook."No. of Days Non Seasonal";
          IF GenJnlLineTmp."Industry Type" = GenJnlLineTmp."Industry Type"::Seasonal THEN
            GenJnlLineTmp."No. of Days for Shift" := DeprBook."No. of Days Seasonal";
          GenJnlLineTmp.INSERT;
        END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

