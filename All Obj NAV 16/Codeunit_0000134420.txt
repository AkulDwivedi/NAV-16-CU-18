OBJECT Codeunit 134420 ERM Journal Posting
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
            isInitialized := FALSE;
          END;

  }
  CODE
  {
    VAR
      Assert@1007 : Codeunit 130000;
      LibraryERM@1005 : Codeunit 131300;
      LibraryRandom@1000 : Codeunit 130440;
      isInitialized@1001 : Boolean;
      MinRange@1002 : Decimal;
      MiddleRange@1003 : Decimal;
      MaxRange@1004 : Decimal;

    LOCAL PROCEDURE Initialize@2();
    VAR
      LibraryERMCountryData@1001 : Codeunit 131305;
    BEGIN
      IF isInitialized THEN
        EXIT;

      LibraryERMCountryData.CreateVATData;
      LibraryERMCountryData.UpdateGeneralPostingSetup;
      isInitialized := TRUE;
      MinRange := 0;
      MiddleRange := 100;
      MaxRange := 200;
      COMMIT;
    END;

    [Test]
    PROCEDURE PostOneGenJnLineWithQty@4();
    VAR
      Qty@1000 : Decimal;
      PostedQty@1001 : Decimal;
    BEGIN
      Initialize;
      Qty := LibraryRandom.RandDecInRange(MinRange,MaxRange,2);
      PostedQty := CreateAndPostGenJrnLine(Qty);

      Assert.AreEqual(
        Qty,PostedQty,'The Quantity on Entry must match the Quantity on the Journal');
    END;

    [Test]
    PROCEDURE NegativeTestForPostOneGenJnLineWithQty@7();
    VAR
      Qty@1000 : Decimal;
      PostedQty@1001 : Decimal;
    BEGIN
      Initialize;
      Qty := LibraryRandom.RandDecInRange(MinRange,MiddleRange,2);
      PostedQty := CreateAndPostGenJrnLine(Qty);

      Assert.AreNotEqual(
        LibraryRandom.RandDecInRange(MiddleRange,MaxRange,2),PostedQty,
        'The Quantity on Entry must match the Quantity on the Journal');
    END;

    [Test]
    PROCEDURE PostOneGenJnLineWithoutQty@10();
    VAR
      Qty@1000 : Decimal;
      PostedQty@1001 : Decimal;
    BEGIN
      Initialize;
      Qty := 0;
      PostedQty := CreateAndPostGenJrnLine(Qty);

      Assert.AreEqual(Qty,PostedQty,'The Quantity on Entry must match the Quantity on the Journal');
    END;

    [Test]
    PROCEDURE VerifyOmitDescOnJournal@1();
    VAR
      GenJournalLine@1000 : Record 81;
    BEGIN
      Initialize;
      CreateGenJrnLine(GenJournalLine,TRUE);
      Assert.IsTrue(DELCHR(GenJournalLine.Description,'=',' ') = '','Description most be blank');

      CreateGenJrnLine(GenJournalLine,FALSE);
      Assert.IsFalse(DELCHR(GenJournalLine.Description,'=',' ') = '','Description most not be blank');
    END;

    LOCAL PROCEDURE CreateAndPostGenJrnLine@46(Qty@1000 : Decimal) : Decimal;
    VAR
      GenJournalLine@1001 : Record 81;
      GLEntry@1004 : Record 17;
    BEGIN
      GenJournalLine.INIT;
      CreateGenJrnLine(GenJournalLine,FALSE);
      GenJournalLine.VALIDATE(Quantity,Qty);
      GenJournalLine.MODIFY(TRUE);

      LibraryERM.PostGeneralJnlLine(GenJournalLine);

      GLEntry.SETRANGE("Document No.",GenJournalLine."Document No.");
      GLEntry.FINDLAST;
      EXIT(GLEntry.Quantity);
    END;

    LOCAL PROCEDURE CreateGenJrnLine@3(VAR GenJournalLine@1001 : Record 81;OmitDesc@1000 : Boolean);
    VAR
      GenJournalBatch@1002 : Record 232;
      GLAccount@1003 : Record 15;
    BEGIN
      GenJournalLine.INIT;
      GenJournalBatch.INIT;
      GLAccount.INIT;
      LibraryERM.SelectGenJnlBatch(GenJournalBatch);
      LibraryERM.ClearGenJournalLines(GenJournalBatch);
      GenJournalLine."Account Type" := GenJournalLine."Account Type"::"G/L Account";
      FindGLAccount(GLAccount,OmitDesc);

      LibraryERM.CreateGeneralJnlLine(
        GenJournalLine,
        GenJournalBatch."Journal Template Name",
        GenJournalBatch.Name,
        GenJournalLine."Document Type",
        GenJournalLine."Account Type",
        GLAccount."No.",
        0);

      GenJournalLine.VALIDATE("Posting Date",CALCDATE('<+3Y>',TODAY));
      GenJournalLine.VALIDATE(Amount,LibraryRandom.RandDecInRange(MinRange,MaxRange,2));
      GenJournalLine.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE FindGLAccount@5(VAR GLAccount@1000 : Record 15;OmitDesc@1001 : Boolean);
    BEGIN
      LibraryERM.FindGLAccount(GLAccount);
      GLAccount.Name := 'Not Blank';
      GLAccount."Omit Default Descr. in Jnl." := OmitDesc;
      GLAccount.MODIFY;
    END;

    BEGIN
    {
      // [FEATURE] [General Journal]
    }
    END.
  }
}

