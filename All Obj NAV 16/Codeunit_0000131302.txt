OBJECT Codeunit 131302 Library - Fiscal Year
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      DateCompressErrorErr@1000 : TextConst '@@@="%1:FieldCaption1;%2:TableCaption;%3:FieldCaption2;%4:FieldValue";ENU="%1 must be equal to ''Yes''  in %2: %3=%4. Current value is ''No''."';
      Assert@1001 : Codeunit 130000;

    PROCEDURE CloseFiscalYear@2();
    VAR
      AccountingPeriod@1000 : Record 50;
      Counter@1002 : Integer;
    BEGIN
      // Close All opened Fiscal Years.
      AccountingPeriod.SETRANGE("New Fiscal Year",TRUE);
      AccountingPeriod.SETRANGE(Closed,FALSE);
      FOR Counter := 1 TO AccountingPeriod.COUNT - 1 DO BEGIN
        CODEUNIT.RUN(CODEUNIT::"Fiscal Year-Close",AccountingPeriod);
        IF Counter < AccountingPeriod.COUNT THEN
          AccountingPeriod.NEXT;
      END;
      COMMIT;  // Required because Modal Page Pops Up.
    END;

    PROCEDURE CloseAccountingPeriod@5();
    VAR
      AccountingPeriod@1000 : Record 50;
    BEGIN
      AccountingPeriod.SETRANGE(Closed,FALSE);
      AccountingPeriod.MODIFYALL(Closed,TRUE);
    END;

    PROCEDURE CreateFiscalYear@3();
    VAR
      Date@1000 : Record 2000000007;
      CreateFiscalYear@1001 : Report 93;
      PeriodLength@1002 : DateFormula;
    BEGIN
      // Find a Date to create a new Fiscal Year if no Fiscal Year exists in Demo Data.
      Date.SETRANGE("Period Type",Date."Period Type"::Year);
      Date.SETRANGE("Period No.",DATE2DMY(WORKDATE,3));
      Date.FINDFIRST;

      // Create a new Fiscal Year With Number of Periods = 12, Period Length = 1M.
      CLEAR(CreateFiscalYear);
      EVALUATE(PeriodLength,'<1M>');
      CreateFiscalYear.InitializeRequest(12,PeriodLength,Date."Period Start");
      CreateFiscalYear.USEREQUESTPAGE(FALSE);
      CreateFiscalYear.RUN;
    END;

    PROCEDURE CheckPostingDate@4(PostingDate@1001 : Date);
    VAR
      AccountingPeriod@1000 : Record 50;
    BEGIN
      // Check if Posting Date is outside the Accounting Period then Create New Fiscal Year and close it.
      AccountingPeriod.FINDLAST;
      IF PostingDate > AccountingPeriod."Starting Date" THEN BEGIN
        CreateFiscalYear;
        CloseFiscalYear;
      END;
    END;

    PROCEDURE GetFirstPostingDate@1(Closed@1001 : Boolean) : Date;
    VAR
      AccountingPeriod@1000 : Record 50;
    BEGIN
      AccountingPeriod.SETRANGE(Closed,Closed);
      AccountingPeriod.FINDFIRST;
      EXIT(AccountingPeriod."Starting Date");
    END;

    PROCEDURE GetLastPostingDate@8(Closed@1001 : Boolean) : Date;
    VAR
      AccountingPeriod@1000 : Record 50;
    BEGIN
      AccountingPeriod.SETRANGE(Closed,Closed);
      AccountingPeriod.FINDLAST;
      EXIT(AccountingPeriod."Starting Date");
    END;

    PROCEDURE GetStatisticsPeriod@6() : Text;
    BEGIN
      EXIT('<Year><Month,2>');
    END;

    PROCEDURE GetAccountingPeriodDate@7(PostingDate@1001 : Date) : Date;
    VAR
      AccountingPeriod@1000 : Record 50;
    BEGIN
      AccountingPeriod.SETRANGE("Starting Date",0D,PostingDate);
      AccountingPeriod.FINDLAST;
      EXIT(AccountingPeriod."Starting Date");
    END;

    PROCEDURE IdentifyOpenAccountingPeriod@65() : Date;
    VAR
      AccountingPeriod@1000 : Record 50;
    BEGIN
      CLEAR(AccountingPeriod);
      CloseAccountingPeriod;
      AccountingPeriod.INIT;
      AccountingPeriod.VALIDATE("Starting Date",CALCDATE('<+1M>',GetLastPostingDate(TRUE)));
      AccountingPeriod.INSERT(TRUE);
      EXIT(AccountingPeriod."Starting Date");
    END;

    PROCEDURE VerifyDateCompressFALedgerError@97();
    VAR
      AccountingPeriod@1000 : Record 50;
    BEGIN
      AccountingPeriod.SETRANGE("Date Locked",FALSE);
      AccountingPeriod.SETRANGE(Closed,FALSE);
      AccountingPeriod.SETRANGE("New Fiscal Year",TRUE);
      AccountingPeriod.FINDFIRST;
      Assert.ExpectedError(
        STRSUBSTNO(DateCompressErrorErr,AccountingPeriod.FIELDCAPTION("Date Locked"),AccountingPeriod.TABLECAPTION,
          AccountingPeriod.FIELDCAPTION("Starting Date"),AccountingPeriod."Starting Date"));
    END;

    PROCEDURE GetInitialPostingDate@1030() : Date;
    BEGIN
      EXIT(GetFirstPostingDate(TRUE));
    END;

    PROCEDURE FindAccountingPeirodStartEndDate@9(VAR StartDate@1001 : Date;VAR EndDate@1002 : Date;NumberOfPeriods@1003 : Integer);
    VAR
      AccountingPeriod@1000 : Record 50;
    BEGIN
      AccountingPeriod.FINDSET;
      StartDate := AccountingPeriod."Starting Date";
      AccountingPeriod.NEXT(NumberOfPeriods);
      EndDate := AccountingPeriod."Starting Date" - 1;
    END;

    BEGIN
    {
      Library Functions related to Fiscal Year.
    }
    END.
  }
}

