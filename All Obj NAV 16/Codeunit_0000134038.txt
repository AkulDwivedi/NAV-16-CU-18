OBJECT Codeunit 134038 ERM Purchase VAT Posting Group
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
            IsInitialized := FALSE;
          END;

  }
  CODE
  {
    VAR
      LibraryPurchase@1006 : Codeunit 130512;
      IsInitialized@1000 : Boolean;
      PostingGroupError@1005 : TextConst 'ENU=%1 must be %2 in %3: %4.';

    [Test]
    [HandlerFunctions(ConfirmHandler)]
    PROCEDURE VATPostingGroupSellToBuyFromNo@5();
    VAR
      GeneralLedgerSetup@1002 : Record 98;
      PurchaseHeader@1000 : Record 38;
      BillToSellToVATCalc@1001 : Option;
    BEGIN
      // Check that correct VAT Posting Group updated on Purchase Header when Bill To Sell To VAT Calc is Sell to Buy From No.

      // Update General Ledger Setup. Create Purchase Header and Update Pay To Vendor No.
      Initialize;
      UpdateGeneralLedgerSetup(BillToSellToVATCalc,GeneralLedgerSetup."Bill-to/Sell-to VAT Calc."::"Sell-to/Buy-from No.");
      CreateAndUpdatePurchaseHeader(PurchaseHeader);

      // Verify: Verify that correct VAT Business Posting Group Updated on Purchase Header.
      VerifyVendorVATPostingGroup(PurchaseHeader,PurchaseHeader."Buy-from Vendor No.");

      // Tear Down: Delete the earlier created Purchase Header and rollback General Ledger Setup.
      PurchaseHeader.DELETE(TRUE);
      UpdateGeneralLedgerSetup(BillToSellToVATCalc,BillToSellToVATCalc);
    END;

    [Test]
    [HandlerFunctions(ConfirmHandler)]
    PROCEDURE VATPostingGroupBillToPayToNo@1();
    VAR
      GeneralLedgerSetup@1005 : Record 98;
      PurchaseHeader@1004 : Record 38;
      PayToVendorNo@1001 : Code[20];
      BillToSellToVATCalc@1000 : Option;
    BEGIN
      // Check that correct VAT Posting Group updated on Purchase Header when Bill To Sell To VAT Calc is Bill To Pay To No.

      // Update General Ledger Setup. Create Purchase Header and Update Pay To Vendor No.
      Initialize;
      UpdateGeneralLedgerSetup(BillToSellToVATCalc,GeneralLedgerSetup."Bill-to/Sell-to VAT Calc."::"Bill-to/Pay-to No.");
      PayToVendorNo := CreateAndUpdatePurchaseHeader(PurchaseHeader);

      // Verify: Verify the VAT Business Posting Group on Purchase Header.
      VerifyVendorVATPostingGroup(PurchaseHeader,PayToVendorNo);

      // Tear Down: Delete the earlier created Purchase Header and rollback General Ledger Setup.
      PurchaseHeader.DELETE(TRUE);
      UpdateGeneralLedgerSetup(BillToSellToVATCalc,BillToSellToVATCalc);
    END;

    LOCAL PROCEDURE Initialize@8();
    VAR
      LibraryERMCountryData@1001 : Codeunit 131305;
    BEGIN
      IF IsInitialized THEN
        EXIT;
      LibraryERMCountryData.CreateVATData;
      IsInitialized := TRUE;
      COMMIT;
    END;

    LOCAL PROCEDURE CreateAndUpdatePurchaseHeader@15(VAR PurchaseHeader@1000 : Record 38) PayToVendorNo : Code[20];
    VAR
      Vendor@1005 : Record 23;
    BEGIN
      // Setup: Create a Purchase Header of Order Type.
      LibraryPurchase.CreateVendor(Vendor);
      LibraryPurchase.CreatePurchHeader(PurchaseHeader,PurchaseHeader."Document Type"::Order,Vendor."No.");
      PayToVendorNo := FindVendor(Vendor."VAT Bus. Posting Group");

      // Exercise: Update the Purchase Header with a new Pay To Vendor No.
      PurchaseHeader.VALIDATE("Pay-to Vendor No.",PayToVendorNo);
      PurchaseHeader.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE FindVendor@6(VATBusPostingGroup@1000 : Code[10]) : Code[20];
    VAR
      Vendor@1001 : Record 23;
    BEGIN
      // Find a Vendor with different VAT Business Posting Group.
      LibraryPurchase.CreateVendor(Vendor);
      Vendor.VALIDATE("VAT Bus. Posting Group",VATBusPostingGroup);
      Vendor.MODIFY(TRUE);
      EXIT(Vendor."No.");
    END;

    LOCAL PROCEDURE UpdateGeneralLedgerSetup@2(VAR BillToSellToVATCalcOld@1000 : Option;BillToSellToVATCalc@1002 : Option);
    VAR
      GeneralLedgerSetup@1001 : Record 98;
    BEGIN
      GeneralLedgerSetup.GET;
      BillToSellToVATCalcOld := GeneralLedgerSetup."Bill-to/Sell-to VAT Calc.";
      GeneralLedgerSetup.VALIDATE("Bill-to/Sell-to VAT Calc.",BillToSellToVATCalc);
      GeneralLedgerSetup.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE VerifyVendorVATPostingGroup@21(PurchaseHeader@1003 : Record 38;VendorNo@1000 : Code[20]);
    VAR
      Vendor@1001 : Record 23;
      Assert@1002 : Codeunit 130000;
    BEGIN
      Vendor.GET(VendorNo);
      Assert.AreEqual(
        Vendor."VAT Bus. Posting Group",PurchaseHeader."VAT Bus. Posting Group",
        STRSUBSTNO(PostingGroupError,PurchaseHeader.FIELDCAPTION("VAT Bus. Posting Group"),
          Vendor."VAT Bus. Posting Group",PurchaseHeader.TABLECAPTION,PurchaseHeader."No."));
    END;

    [ConfirmHandler]
    PROCEDURE ConfirmHandler@3(Question@1000 : Text[1024];VAR Reply@1001 : Boolean);
    BEGIN
      Reply := TRUE;
    END;

    BEGIN
    {
      // [FEATURE] [Bill-to/Sell-to VAT Calc.] [Purchase]
      Unsupported version tags:
      NA: Unable to Execute

      Test to verify correct VAT Business Posting Group updated on Purchase Order.
        1. Check VAT Business Posting Group on Purchase Header when Bill To Sell To VAT Calc is Sell to Buy From No.
        2. Check VAT Business Posting Group on Purchase Header when Bill To Sell To VAT Calc is Bill To Pay To No.

      Covers Test Cases:
        ------------------------------------------------------------
          Test Function Name                      TFS ID
        ------------------------------------------------------------
         VATPostingGroupSellToBuyFromNo           127225 to 127232
         VATPostingGroupBillToPayToNo             127233 to 127240
    }
    END.
  }
}

