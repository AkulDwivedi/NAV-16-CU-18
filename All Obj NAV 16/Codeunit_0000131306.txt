OBJECT Codeunit 131306 Library - Journals
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      LibraryUtility@1000 : Codeunit 131000;
      LibraryERM@1001 : Codeunit 131300;

    PROCEDURE CreateGenJournalLine@1(VAR GenJournalLine@1321 : Record 81;JournalTemplateName@1001 : Code[10];JournalBatchName@1003 : Code[10];DocumentType@1004 : Option;AccountType@1005 : Option;AccountNo@1006 : Code[20];BalAccountType@1002 : Option;BalAccountNo@1000 : Code[20];Amount@1007 : Decimal);
    VAR
      GenJournalBatch@1021 : Record 232;
      NoSeries@1022 : Record 308;
      NoSeriesMgt@1024 : Codeunit 396;
      RecRef@1027 : RecordRef;
    BEGIN
      // Find a balanced template/batch pair.
      GenJournalBatch.GET(JournalTemplateName,JournalBatchName);

      // Create a General Journal Entry.
      GenJournalLine.INIT;
      GenJournalLine.VALIDATE("Journal Template Name",JournalTemplateName);
      GenJournalLine.VALIDATE("Journal Batch Name",JournalBatchName);
      RecRef.GETTABLE(GenJournalLine);
      GenJournalLine.VALIDATE("Line No.",LibraryUtility.GetNewLineNo(RecRef,GenJournalLine.FIELDNO("Line No.")));
      GenJournalLine.INSERT(TRUE);
      GenJournalLine.VALIDATE("Posting Date",WORKDATE);  // Defaults to work date.
      GenJournalLine.VALIDATE("Document Type",DocumentType);
      GenJournalLine.VALIDATE("Account Type",AccountType);
      GenJournalLine.VALIDATE("Account No.",AccountNo);
      GenJournalLine.VALIDATE(Amount,Amount);
      IF NoSeries.GET(GenJournalBatch."No. Series") THEN
        GenJournalLine.VALIDATE("Document No.",NoSeriesMgt.GetNextNo(GenJournalBatch."No. Series",WORKDATE,FALSE)) // Unused but required field for posting.
      ELSE
        GenJournalLine.VALIDATE(
          "Document No.",LibraryUtility.GenerateRandomCode(GenJournalLine.FIELDNO("Document No."),DATABASE::"Gen. Journal Line"));
      GenJournalLine.VALIDATE("External Document No.",GenJournalLine."Document No.");  // Unused but required for vendor posting.
      GenJournalLine.VALIDATE("Source Code",LibraryERM.FindGeneralJournalSourceCode);  // Unused but required for AU, NZ builds
      GenJournalLine.VALIDATE("Bal. Account Type",BalAccountType);
      GenJournalLine.VALIDATE("Bal. Account No.",BalAccountNo);
      GenJournalLine.MODIFY(TRUE);
    END;

    PROCEDURE CreateGenJournalLine2@5(VAR GenJournalLine@1321 : Record 81;JournalTemplateName@1001 : Code[10];JournalBatchName@1003 : Code[10];DocumentType@1004 : Option;AccountType@1005 : Option;AccountNo@1006 : Code[20];BalAccountType@1002 : Option;BalAccountNo@1000 : Code[20];Amount@1007 : Decimal);
    VAR
      GenJournalBatch@1021 : Record 232;
      LastGenJnlLine@1008 : Record 81;
      RecRef@1027 : RecordRef;
      Balance@1009 : Decimal;
    BEGIN
      // This function should replace the one above, but it requires a lot of changes to existing tests so I'm keeping both for now and will refactor when time permits

      // Find a balanced template/batch pair.
      GenJournalBatch.GET(JournalTemplateName,JournalBatchName);

      // get the last Gen Jnl Line as template or insert a new doc no (to avoid CODEUNIT.RUN in WRITE transaction error)
      CLEAR(GenJournalLine);
      GenJournalLine.SETRANGE("Journal Template Name",JournalTemplateName);
      GenJournalLine.SETRANGE("Journal Batch Name",JournalBatchName);
      IF NOT GetLastGenJnlLineAndBalance(GenJournalLine,LastGenJnlLine,Balance,JournalTemplateName,JournalBatchName) THEN
        SetLastGenJnlLineFields(LastGenJnlLine,GenJournalBatch);

      // Create a General Journal Entry.
      GenJournalLine.VALIDATE("Journal Template Name",JournalTemplateName);
      GenJournalLine.VALIDATE("Journal Batch Name",JournalBatchName);
      RecRef.GETTABLE(GenJournalLine);
      GenJournalLine.VALIDATE("Line No.",LibraryUtility.GetNewLineNo(RecRef,GenJournalLine.FIELDNO("Line No.")));
      GenJournalLine.INSERT(TRUE);

      // Initialize the new line
      GenJournalLine.SetUpNewLine(LastGenJnlLine,Balance,TRUE);

      // fill in additional fields
      GenJournalLine.VALIDATE("Document Type",DocumentType);
      GenJournalLine.VALIDATE("Account Type",AccountType);
      GenJournalLine.VALIDATE("Account No.",AccountNo);
      GenJournalLine.VALIDATE(Amount,Amount);
      GenJournalLine.VALIDATE("External Document No.",GenJournalLine."Document No.");  // Unused but required for vendor posting.
      GenJournalLine.VALIDATE("Source Code",LibraryERM.FindGeneralJournalSourceCode);  // Unused but required for AU, NZ builds
      GenJournalLine.VALIDATE("Bal. Account Type",BalAccountType);
      GenJournalLine.VALIDATE("Bal. Account No.",BalAccountNo);
      GenJournalLine.MODIFY(TRUE);
    END;

    PROCEDURE CreateGenJournalLineWithBatch@6(VAR GenJournalLine@1003 : Record 81;DocumentType@1004 : Option;AccountType@1005 : Option;AccountNo@1006 : Code[20];LineAmount@1007 : Decimal);
    VAR
      GenJournalBatch@1001 : Record 232;
      GLAccount@1002 : Record 15;
    BEGIN
      CreateGenJournalBatch(GenJournalBatch);
      LibraryERM.CreateGLAccount(GLAccount);
      CreateGenJournalLine(
        GenJournalLine,
        GenJournalBatch."Journal Template Name",
        GenJournalBatch.Name,
        DocumentType,
        AccountType,
        AccountNo,
        GenJournalLine."Bal. Account Type"::"G/L Account",
        GLAccount."No.",
        LineAmount);
    END;

    PROCEDURE CreateGenJournalBatch@8(VAR GenJournalBatch@1000 : Record 232);
    VAR
      GenJournalTemplate@1001 : Record 80;
    BEGIN
      LibraryERM.CreateGenJournalTemplate(GenJournalTemplate);
      LibraryERM.CreateGenJournalBatch(GenJournalBatch,GenJournalTemplate.Name);
    END;

    PROCEDURE CreateGenJournalBatchWithType@7(VAR GenJournalBatch@1000 : Record 232;Type@1001 : Option);
    VAR
      GenJournalTemplate@1002 : Record 80;
    BEGIN
      LibraryERM.CreateGenJournalTemplate(GenJournalTemplate);
      GenJournalTemplate.VALIDATE(Type,Type);
      GenJournalTemplate.MODIFY(TRUE);
      LibraryERM.CreateGenJournalBatch(GenJournalBatch,GenJournalTemplate.Name);
    END;

    PROCEDURE SelectGenJournalBatch@2(VAR GenJournalBatch@1000 : Record 232;GenJournalTemplateCode@1001 : Code[10]);
    VAR
      GLAccount@1002 : Record 15;
    BEGIN
      // Select General Journal Batch Name for General Journal Line.
      GenJournalBatch.SETRANGE("Journal Template Name",GenJournalTemplateCode);
      GenJournalBatch.SETRANGE("Bal. Account Type",GenJournalBatch."Bal. Account Type"::"G/L Account");
      LibraryERM.CreateGLAccount(GLAccount);

      IF NOT GenJournalBatch.FINDFIRST THEN BEGIN
        // Create New General Journal Batch.
        LibraryERM.CreateGenJournalBatch(GenJournalBatch,GenJournalTemplateCode);
        GenJournalBatch.VALIDATE("No. Series",LibraryERM.CreateNoSeriesCode);
        GenJournalBatch.VALIDATE("Bal. Account Type",GenJournalBatch."Bal. Account Type"::"G/L Account");
      END;

      GenJournalBatch.VALIDATE("Bal. Account No.",GLAccount."No.");
      GenJournalBatch.MODIFY(TRUE);
    END;

    PROCEDURE SelectGenJournalTemplate@51(Type@1001 : Option;PageID@1002 : Integer) : Code[10];
    VAR
      GenJournalTemplate@1000 : Record 80;
    BEGIN
      GenJournalTemplate.SETRANGE(Type,Type);
      GenJournalTemplate.SETRANGE(Recurring,FALSE);
      GenJournalTemplate.SETRANGE("Page ID",PageID);

      IF NOT GenJournalTemplate.FINDFIRST THEN BEGIN
        GenJournalTemplate.INIT;
        GenJournalTemplate.VALIDATE(
          Name,LibraryUtility.GenerateRandomCode(GenJournalTemplate.FIELDNO(Name),DATABASE::"Gen. Journal Template"));
        GenJournalTemplate.VALIDATE(Type,Type);
        GenJournalTemplate.VALIDATE("Page ID",PageID);
        GenJournalTemplate.VALIDATE(Recurring,FALSE);
        GenJournalTemplate.INSERT(TRUE);
      END;

      EXIT(GenJournalTemplate.Name);
    END;

    LOCAL PROCEDURE GetLastGenJnlLineAndBalance@3(VAR GenJournalLine@1008 : Record 81;VAR LastGenJnlLine@1000 : Record 81;VAR Balance@1001 : Decimal;JournalTemplateName@1002 : Code[20];JournalBatchName@1003 : Code[20]) LineExists : Boolean;
    VAR
      GenJnlManagement@1004 : Codeunit 230;
      TotalBalance@1005 : Decimal;
      ShowBalance@1006 : Boolean;
      ShowTotalBalance@1007 : Boolean;
    BEGIN
      LastGenJnlLine.SETRANGE("Journal Template Name",JournalTemplateName);
      LastGenJnlLine.SETRANGE("Journal Batch Name",JournalBatchName);
      LineExists := LastGenJnlLine.FINDLAST;
      GenJnlManagement.CalcBalance(GenJournalLine,LastGenJnlLine,Balance,TotalBalance,ShowBalance,ShowTotalBalance);
      EXIT(LineExists);
    END;

    LOCAL PROCEDURE SetLastGenJnlLineFields@4(VAR LastGenJnlLine@1000 : Record 81;GenJournalBatch@1001 : Record 232);
    VAR
      NoSeriesMgt@1002 : Codeunit 396;
    BEGIN
      IF GenJournalBatch."No. Series" <> '' THEN
        LastGenJnlLine."Document No." := NoSeriesMgt.GetNextNo(GenJournalBatch."No. Series",WORKDATE,FALSE)
      ELSE
        LastGenJnlLine."Document No." :=
          LibraryUtility.GenerateRandomCode(LastGenJnlLine.FIELDNO("Document No."),DATABASE::"Gen. Journal Line");
      LastGenJnlLine."Posting Date" := WORKDATE;
    END;

    BEGIN
    {
      Library containing functions related to various Journals.
    }
    END.
  }
}

