OBJECT Codeunit 144013 eTDS Forms Validation
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GeneralLedgerSetup@1500016 : Record 98;
      NodNocHeader@1500014 : Record 13786;
      TDSNatureOfDeduction@1500013 : Record 13726;
      TDSSetup@1500012 : Record 13728;
      CompanyInformation@1500011 : Record 79;
      IncomeTaxAccountingPeriod@1500017 : Record 13724;
      IncomeTaxPeriodSetup@1500018 : Record 16501;
      LibraryERM@1500010 : Codeunit 131300;
      LibraryRandom@1500009 : Codeunit 130440;
      LibrarySetupStorage@1500006 : Codeunit 131009;
      LibraryVariableStorage@1500005 : Codeunit 131004;
      LibraryTDS@1500003 : Codeunit 143000;
      LibraryUtility@1500002 : Codeunit 131000;
      LibraryReportDataset@1500021 : Codeunit 131007;
      LibraryWarehouse@1500022 : Codeunit 132204;
      Assert@1500001 : Codeunit 130000;
      ServiceTaxWithTDSHelper@1500019 : Codeunit 143005;
      isInitialized@1500000 : Boolean;
      AmountErr@1500020 : TextConst '@@@="%1 and %2 = TDS% and TDS field Caption";ENU=%1 is incorrect in %2.';
      ValueNotFoundErr@1500024 : TextConst 'ENU=Value Not Found.';

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateETDSRequestPageHandler)]
    PROCEDURE Generate26QAndETDSAndValidate@1500019();
    VAR
      GenJournalLine@1500000 : Record 81;
      GenJournalTemplate@1500004 : Record 80;
      BatchHeader@1500008 : Record 16503;
      PayDocNo@1500005 : Code[20];
      FormNo@1500006 : '26Q,27Q';
      FileName@1500009 : Text;
      ChallanNo@1500001 : Code[5];
    BEGIN
      // [SCENARIO 164365] Generation of e-TDS (26Q) in file format
      // [FEATURE] [eTDS Transactions]

      // [GIVEN] Created TDS Setup
      Initialize;

      // [WHEN] Pay TDS and Generate Form 26Q and Generate E-TDS 26Q
      CreateJournalForTDSPaymentWithBalAcc(
        GenJournalLine,GenJournalTemplate.Type::General,GenJournalTemplate."Sub Type"::"Bank Payment Voucher");
      PayDocNo := PayTDSBank(GenJournalLine."Document No.");
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",PayDocNo,IncomeTaxAccountingPeriod."Starting Date");
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,
        LibraryRandom.RandIntInRange(10000,20000));
      UpdateCompanyEmailandLocation;
      COMMIT;
      REPORT.RUN(REPORT::"Form 26Q");
      FileName := TEMPORARYPATH + LibraryUtility.GenerateGUID + '.txt';
      LibraryVariableStorage.Enqueue(FileName);
      COMMIT;
      BatchHeader.SETRANGE("Form No.",FormNo);
      REPORT.RUN(REPORT::"Generate e-TDS",TRUE,FALSE,BatchHeader);

      // [THEN] Verify Generated Values
      VerifyValuesOnBatchHeader(FormNo::"26Q",CompanyInformation."T.A.N. No.");
    END;

    LOCAL PROCEDURE Initialize@1500004();
    BEGIN
      LibrarySetupStorage.Restore;
      IF isInitialized THEN
        EXIT;
      GeneralLedgerSetup.GET;
      CompanyInformation.GET;
      LibraryTDS.CreateDeductoryCodeAndUpdateOnCompanyInformation(CompanyInformation);
      LibraryTDS.UpdateTDSNilChallanInGeneralLedgerSetup;
      LibraryTDS.CreateIncomeTaxAccPeriod(IncomeTaxAccountingPeriod);
      LibraryTDS.CreateIncomeTaxPeriod(IncomeTaxPeriodSetup,IncomeTaxAccountingPeriod."No.",1);
      LibraryTDS.CreateAssesseeandNODNOCSetup(
        NodNocHeader,TDSNatureOfDeduction,TDSSetup,'',ServiceTaxWithTDSHelper.CreateVendorWithPANNo,NodNocHeader.Type::Vendor,
        IncomeTaxAccountingPeriod."Starting Date");
      isInitialized := TRUE;
      COMMIT;
      LibrarySetupStorage.Save(DATABASE::"Company Information");
    END;

    LOCAL PROCEDURE CreateGeneralJournalBatch@1500012(VAR GenJournalBatch@1500001 : Record 232;TemplateType@1500000 : Option;TemplateSubtype@1500003 : Option);
    VAR
      GenJournalTemplate@1500002 : Record 80;
    BEGIN
      LibraryERM.CreateGenJournalTemplate(GenJournalTemplate);
      GenJournalTemplate.VALIDATE(Type,TemplateType);
      GenJournalTemplate.VALIDATE("Sub Type",TemplateSubtype);
      GenJournalTemplate.MODIFY(TRUE);
      LibraryERM.CreateGenJournalBatch(GenJournalBatch,GenJournalTemplate.Name);
    END;

    LOCAL PROCEDURE CreateJournalForTDSPaymentWithBalAcc@1500017(VAR GenJournalLine@1500000 : Record 81;TemplateType@1500004 : Option;TemplateSubtype@1500003 : Option) : Code[20];
    VAR
      GenJournalBatch@1500001 : Record 232;
      IntCount@1500002 : Integer;
      BankAccNo@1500005 : Code[20];
      JournalDocNo@1500006 : Code[20];
    BEGIN
      CreateGeneralJournalBatch(GenJournalBatch,TemplateType,TemplateSubtype);
      BankAccNo := LibraryERM.CreateBankAccountNo;
      JournalDocNo := COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10);
      FOR IntCount := 1 TO 2 DO BEGIN
        LibraryERM.CreateGeneralJnlLine(GenJournalLine,GenJournalBatch."Journal Template Name",GenJournalBatch.Name,
          GenJournalLine."Document Type"::Payment,GenJournalLine."Account Type"::Vendor,
          NodNocHeader."No.",LibraryRandom.RandIntInRange(5000,6000));
        GenJournalLine.VALIDATE("Posting Date",IncomeTaxAccountingPeriod."Starting Date");
        GenJournalLine.VALIDATE("Document No.",JournalDocNo);
        GenJournalLine.VALIDATE("Party Type",GenJournalLine."Party Type"::Vendor);
        GenJournalLine.VALIDATE("Party Code",NodNocHeader."No.");
        GenJournalLine.VALIDATE("T.A.N. No.",CompanyInformation."T.A.N. No.");
        GenJournalLine.VALIDATE("TDS Nature of Deduction",TDSNatureOfDeduction.Code);
        GenJournalLine.VALIDATE("Bal. Account Type",GenJournalLine."Bal. Account Type"::"Bank Account");
        GenJournalLine.VALIDATE("Bal. Account No.",BankAccNo);
        GenJournalLine.MODIFY(TRUE);
        Assert.AreNotEqual(0,GenJournalLine."TDS/TCS Amount",AmountErr);
      END;
      LibraryERM.PostGeneralJnlLine(GenJournalLine);
      EXIT(GenJournalLine."Document No.");
    END;

    LOCAL PROCEDURE UpdateCompanyEmailandLocation@1500041();
    VAR
      Location@1500000 : Record 14;
    BEGIN
      CompanyInformation.VALIDATE("E-Mail",COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      CompanyInformation.VALIDATE("Location Code",LibraryWarehouse.CreateLocation(Location));
      CompanyInformation.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE PayTDSBank@1500043(JournalDocNo@1500002 : Code[20]) : Code[20];
    VAR
      TDSEntry@1500001 : Record 13729;
      GenJournalLine@1500006 : Record 81;
      GenJournalLine1@1500003 : Record 81;
      GenJournalBatch@1500008 : Record 232;
      TemplateType@1500005 : Option;
      TemplateSubtype@1500004 : Option;
      PayTDSAmount@1500000 : Decimal;
    BEGIN
      CreateGeneralJournalBatch(GenJournalBatch,TemplateType,TemplateSubtype);
      LibraryERM.CreateGeneralJnlLine(GenJournalLine,GenJournalBatch."Journal Template Name",GenJournalBatch.Name,
        GenJournalLine."Document Type"::Payment,GenJournalLine."Account Type"::"G/L Account",
        GetTDSAccount(TDSNatureOfDeduction."TDS Group"),LibraryRandom.RandIntInRange(5000,6000));
      GenJournalLine.VALIDATE("Posting Date",IncomeTaxAccountingPeriod."Starting Date");
      GenJournalLine.VALIDATE("T.A.N. No.",CompanyInformation."T.A.N. No.");
      GenJournalLine.VALIDATE("Bal. Account Type",GenJournalLine."Bal. Account Type"::"Bank Account");
      GenJournalLine.VALIDATE("Bal. Account No.",LibraryERM.CreateBankAccountNo);
      GenJournalLine.MODIFY(TRUE);
      LibraryTDS.PayTDS(GenJournalLine);
      TDSEntry.SETRANGE("Document No.",JournalDocNo);
      TDSEntry.FINDSET;
      REPEAT
        PayTDSAmount += TDSEntry."Total TDS Including SHE CESS";
      UNTIL TDSEntry.NEXT = 0;
      GenJournalLine1.SETRANGE("Document No.",GenJournalLine."Document No.");
      GenJournalLine1.FINDFIRST;
      Assert.AreEqual(PayTDSAmount,GenJournalLine1.Amount,AmountErr);
      LibraryERM.PostGeneralJnlLine(GenJournalLine1);
      EXIT(GenJournalLine1."Document No.");
    END;

    LOCAL PROCEDURE VerifyValuesOnBatchHeader@1500063(FormNo@1500001 : '26Q,27Q';TANNo@1500000 : Code[10]);
    VAR
      BatchHeader@1500002 : Record 16503;
    BEGIN
      BatchHeader.SETRANGE("Form No.",FormNo);
      BatchHeader.FINDLAST;
      Assert.AreEqual(
        TANNo,BatchHeader."Deductor T.A.N. No.",STRSUBSTNO(TANNo,
          BatchHeader."Deductor T.A.N. No.",ValueNotFoundErr));
    END;

    [RequestPageHandler]
    PROCEDURE Form26QRequestPageHandler@1500068(VAR Form26Q@1500004 : TestRequestPage 16505);
    BEGIN
      Form26Q.TANLocation.SETVALUE(CompanyInformation."T.A.N. No.");
      Form26Q.ReportFrequency.SETVALUE(IncomeTaxPeriodSetup.Quarter);
      Form26Q.FinancialYear.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      Form26Q.FullName.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(30,0),1,30));
      Form26Q.Designation.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      Form26Q."PAN No.".SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10));
      Form26Q.PrintingDate.SETVALUE(IncomeTaxAccountingPeriod."Starting Date");
      Form26Q.MobileNo.SETVALUE(LibraryRandom.RandIntInRange(1000000000,2000000000));
      Form26Q.SAVEASXML(LibraryReportDataset.GetParametersFileName,LibraryReportDataset.GetFileName);
    END;

    [RequestPageHandler]
    PROCEDURE GenerateETDSRequestPageHandler@1500490(VAR GenerateeTDS@1500104 : TestRequestPage 16508);
    VAR
      FileName@1500107 : Variant;
    BEGIN
      LibraryVariableStorage.Dequeue(FileName);
      GenerateeTDS.FileName.SETVALUE(FileName);
      GenerateeTDS.TANLocation.SETVALUE(CompanyInformation."T.A.N. No.");
      GenerateeTDS.ReportFrequency.SETVALUE(IncomeTaxPeriodSetup.Quarter);
      GenerateeTDS.FinancialYear.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      GenerateeTDS.FullName.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(30,0),1,30));
      GenerateeTDS.Designation.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(20,0),1,20));
      GenerateeTDS.PrintingDate.SETVALUE(WORKDATE);
      GenerateeTDS.NameOfReturnPreparationUtility.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(30,0),1,30));
      GenerateeTDS.Email.SETVALUE(COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(30,0),1,30));
      GenerateeTDS.MobileNo.SETVALUE(LibraryRandom.RandIntInRange(1000000000,2000000000));
      GenerateeTDS."PAN No.".SETVALUE(CompanyInformation."P.A.N. No.");
      GenerateeTDS.OK.INVOKE;
    END;

    LOCAL PROCEDURE GetTDSAccount@1500048(TDSGrp@1500000 : Option) : Code[10];
    VAR
      TDSGroup@1500001 : Record 13731;
    BEGIN
      TDSGroup.SETRANGE("TDS Group",TDSGrp);
      TDSGroup.SETFILTER("Effective Date",'<=%1',WORKDATE);
      TDSGroup.FINDFIRST;
      EXIT(TDSGroup."TDS Account");
    END;

    BEGIN
    END.
  }
}

