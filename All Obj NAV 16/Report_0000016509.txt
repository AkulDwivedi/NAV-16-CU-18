OBJECT Report 16509 Revised e-TDS
{
  OBJECT-PROPERTIES
  {
    Date=03-08-16;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.46621;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Revised e-TDS;
               ENN=Revised e-TDS];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  FileMgt@1500000 : Codeunit 419;
                BEGIN
                  FormNo := "Batch Header".GETRANGEMIN("Form No.");
                  IF FileName = '' THEN
                    ERROR(Text16500);
                  ServerFile := FileMgt.ServerTempFileName('txt');
                  OutFolderName := FileMgt.GetDirectoryName(ServerFile);
                  IF Quarter = 0 THEN
                    ERROR(Text16526);
                  IF FinancialYear = '' THEN
                    ERROR(Text16527);
                  IF TANLocation = '' THEN
                    ERROR(Text16528);
                  IF PersonName = '' THEN
                    ERROR(Text16529);
                  IF Designation = '' THEN
                    ERROR(Text16530);
                  IF CreationDate = 0D THEN
                    ERROR(Text16531);
                  IF NameofReturnPrepUtility = '' THEN
                    ERROR(Text16525);
                  IF PANNo = '' THEN
                    ERROR(PANNoEmptyErr);

                  IF (Quarter = 0) OR (FinancialYear = '') THEN
                    ERROR(Text16503);
                  IF NOT CheckRevisedEntries THEN
                    ERROR(Text16501,Quarter,FinancialYear);

                  CompanyInfo.GET;
                  CompanyInfo.TESTFIELD(State);

                  BatchHeader.RESET;
                  BatchHeader.SETRANGE("Financial Year",FinancialYear);
                  BatchHeader.SETRANGE(Quarter,Quarter);
                  BatchHeader.SETRANGE("Deductor T.A.N. No.",TANLocation);
                  BatchHeader.SETRANGE("Form No.",FormNo);
                  BatchHeader.SETRANGE(Revised,TRUE);
                  BatchHeader.FINDFIRST;

                  ChallanRegister.RESET;
                  ChallanRegister.SETRANGE("Financial Year",FinancialYear);
                  ChallanRegister.SETRANGE(Quarter,Quarter);
                  ChallanRegister.SETRANGE("T.A.N. No.",TANLocation);
                  IF ChallanRegister.FINDFIRST THEN
                    REPEAT
                      Form26Q27QEntry.RESET;
                      Form26Q27QEntry.SETRANGE("Financial Year",FinancialYear);
                      Form26Q27QEntry.SETRANGE(Quarter,Quarter);
                      Form26Q27QEntry.SETRANGE("Form No.",FormNo);
                      Form26Q27QEntry.SETRANGE("T.A.N. No.",TANLocation);
                      Form26Q27QEntry.SETRANGE(Printed,TRUE);
                      Form26Q27QEntry.SETRANGE("Challan Register Entry No.",ChallanRegister."Entry No.");
                      Execute += Form26Q27QEntry.COUNT;
                    UNTIL ChallanRegister.NEXT = 0;
                  IF Execute = 0 THEN
                    ERROR(Text16502,FormNo,Quarter,FinancialYear);
                  IF (CompanyInfo."Company Status" <> CompanyInfo."Company Status"::Government) AND
                     (STRLEN(FORMAT(MobileNo)) <> 10)
                  THEN
                    ERROR(Text16532);

                  SequenceNo := 1;
                  OutFile.CREATE(ServerFile);
                  OutFile.CREATEOUTSTREAM(OStream);
                  CreateFileHeader(FALSE);
                END;

    OnPostReport=VAR
                   FileMgt@1500001 : Codeunit 419;
                 BEGIN
                   OutFile.CLOSE;

                   FileMgt.DownloadToFile(ServerFile,FileName);
                 END;

  }
  DATASET
  {
    { 9960;    ;DataItem;                    ;
               DataItemTable=Table16503;
               ReqFilterFields=Form No. }

    { 5332;    ;DataItem;                    ;
               DataItemTable=Table16502;
               DataItemTableView=SORTING(Sorting Order)
                                 ORDER(Ascending);
               OnAfterGetRecord=BEGIN
                                  CASE "Correction Type" OF
                                    "Correction Type"::C1:
                                      ProcessC1;
                                    "Correction Type"::C2:
                                      ProcessC2;
                                    "Correction Type"::C3:
                                      ProcessC3;
                                    "Correction Type"::C5:
                                      ProcessC5;
                                  END;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENN=Options] }

      { 1500008;2;Field     ;
                  Name=FileName;
                  AssistEdit=Yes;
                  CaptionML=[ENU=File Name;
                             ENN=File Name];
                  SourceExpr=FileName;
                  OnAssistEdit=VAR
                                 FileMgt@1500000 : Codeunit 419;
                               BEGIN
                                 IF FileName = '' THEN
                                   FileName := '.txt';
                                 FileName := FileMgt.SaveFileDialog(Text16504,FileName,'');
                               END;
                                }

      { 1500012;2;Field     ;
                  CaptionML=[ENU=T.A.N. Location;
                             ENN=T.A.N. Location];
                  SourceExpr=TANLocation;
                  OnLookup=BEGIN
                             IF PAGE.RUNMODAL(13722,TANNos) = ACTION::LookupOK THEN
                               TANLocation := TANNos.Code;
                           END;
                            }

      { 1500006;2;Field     ;
                  CaptionML=[ENU=Report Frequency;
                             ENN=Report Frequency];
                  SourceExpr=Quarter }

      { 1500004;2;Field     ;
                  CaptionML=[ENU=Financial Year;
                             ENN=Financial Year];
                  SourceExpr=FinancialYear;
                  OnLookup=VAR
                             TDSAccountingPeriod@1500000 : Record 13724;
                           BEGIN
                             IF Quarter > 0 THEN BEGIN
                               TDSSetup.RESET;
                               TDSSetup.SETRANGE(Quarter,Quarter);
                               IF TDSSetup.FINDFIRST THEN BEGIN
                                 TDSAccountingPeriod.GET(TDSSetup."No.");
                                 IF PAGE.RUNMODAL(13721,TDSAccountingPeriod) = ACTION::LookupOK THEN
                                   FinancialYear := TDSAccountingPeriod."Financial Year for eTDS/TCS";
                               END;
                             END;
                           END;
                            }

      { 1500000;2;Field     ;
                  CaptionML=[ENU=Full Name;
                             ENN=Full Name];
                  SourceExpr=PersonName }

      { 1500002;2;Field     ;
                  CaptionML=[ENU="Designation ";
                             ENN="Designation "];
                  SourceExpr=Designation }

      { 1500003;2;Field     ;
                  Name=PANNo;
                  CaptionML=[ENU=P.A.N. No.;
                             ENN=P.A.N. No.];
                  SourceExpr=PANNo }

      { 1500010;2;Field     ;
                  CaptionML=[ENU=Printing Date;
                             ENN=Printing Date];
                  SourceExpr=CreationDate }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Name of Return Preparation Utility;
                             ENN=Name of Return Preparation Utility];
                  SourceExpr=NameofReturnPrepUtility }

      { 1500015;2;Field     ;
                  CaptionML=[ENU=Email;
                             ENN=Email];
                  SourceExpr=EMail }

      { 1500017;2;Field     ;
                  CaptionML=[ENU=Mobile No.;
                             ENN=Mobile No.];
                  Numeric=Yes;
                  SourceExpr=MobileNo }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInfo@1500062 : Record 79;
      ChallanRegister@1500074 : Record 16504;
      BatchHeader@1500023 : Record 16503;
      Form26Q27QEntry@1500006 : Record 16505;
      TDSSetup@1500003 : Record 16501;
      TANNos@1500001 : Record 13725;
      FileName@1500004 : Text[250];
      OutFolderName@1500012 : Text[250];
      PersonName@1500009 : Text[75];
      Designation@1500008 : Text[20];
      OutFile@1500055 : File;
      OutFile2@1500015 : File;
      OStream@1500053 : OutStream;
      Quarter@1500075 : ' ,Q1,Q2,Q3,Q4';
      CreationDate@1500007 : Date;
      Text16500@1500067 : TextConst 'ENU=Please enter the file name.;ENN=Please enter the file name.';
      Text16501@1500070 : TextConst 'ENU=No corrections have been made for Quarter %1, Financial Year %2.;ENN=No corrections have been made for Quarter %1, Financial Year %2.';
      Text16502@1500076 : TextConst 'ENU=Please print ''Revised Form'' %1 for Quarter %2 Financial Year %3.;ENN=Please print ''Revised Form'' %1 for Quarter %2 Financial Year %3.';
      Text16503@1500080 : TextConst 'ENU=No records found for %1.;ENN=No records found for %1.';
      Text16504@1500011 : TextConst 'ENU=Enter correction file name.;ENN=Enter correction file name.';
      DeducteeCounter@1500014 : Integer;
      LineNo@1500018 : Integer;
      BatchNo@1500017 : Integer;
      SequenceNo@1500016 : Integer;
      FinancialYear@1500013 : Code[6];
      TANLocation@1500010 : Code[10];
      Execute@1500005 : Integer;
      Text16505@1500019 : TextConst 'ENU=FH;ENN=FH';
      Text16506@1500020 : TextConst 'ENU=NS1;ENN=NS1';
      Text16507@1500021 : TextConst 'ENU=C;ENN=C';
      Text16508@1500022 : TextConst 'ENU=D;ENN=D';
      Text16509@1500024 : TextConst 'ENU=1^;ENN=1^';
      Text16510@1500025 : TextConst 'ENU=^;ENN=^';
      Text16511@1500026 : TextConst 'ENU=BH;ENN=BH';
      Text16513@1500028 : TextConst 'ENU=Y;ENN=Y';
      Text16514@1500029 : TextConst 'ENU=N;ENN=N';
      Text16515@1500030 : TextConst 'ENU=CD;ENN=CD';
      Text16516@1500031 : TextConst 'ENU=DD;ENN=DD';
      Text16517@1500032 : TextConst 'ENU=U;ENN=U';
      Text16518@1500033 : TextConst 'ENU=O;ENN=O';
      Text16519@1500034 : TextConst 'ENU=Y%1.txt;ENN=Y%1.txt';
      Text16520@1500035 : TextConst 'ENU=Y%1REG.txt;ENN=Y%1REG.txt';
      Text16521@1500036 : TextConst 'ENU=0.00;ENN=0.00';
      NameofReturnPrepUtility@1500098 : Text[75];
      Text16525@1000 : TextConst 'ENU=Enter Name of the Return Preparation Utility.;ENN=Enter Name of the Return Preparation Utility.';
      Text16526@1006 : TextConst 'ENU=Select Report Frequency.;ENN=Select Report Frequency.';
      Text16527@1005 : TextConst 'ENU=Select Financial Year.;ENN=Select Financial Year.';
      Text16528@1004 : TextConst 'ENU=Select T.A.N. No.;ENN=Select T.A.N. No.';
      Text16529@1003 : TextConst 'ENU=Enter Person Name.;ENN=Enter Person Name.';
      Text16530@1002 : TextConst 'ENU=Enter Designation.;ENN=Enter Designation.';
      Text16531@1001 : TextConst 'ENU=Enter Printing Date.;ENN=Enter Printing Date.';
      EMail@1500061 : Text[75];
      MobileNo@1500082 : Text[10];
      FormNo@1500063 : '26Q,27Q';
      ServerFile@1500064 : Text[1024];
      Text16532@1500052 : TextConst 'ENU=You must specify valid mobile number.Enter a 10 digit mobile number.;ENN=You must specify valid mobile number.Enter a 10 digit mobile number.';
      PANNo@1500000 : Code[10];
      PANNoEmptyErr@1500027 : TextConst 'ENU=Select P.A.N. No.;ENN=Select P.A.N. No.';

    PROCEDURE ProcessC1@1500109();
    BEGIN
      BatchHeader.RESET;
      BatchHeader.SETRANGE("Financial Year",FinancialYear);
      BatchHeader.SETRANGE(Quarter,Quarter);
      BatchHeader.SETRANGE("Deductor T.A.N. No.",TANLocation);
      BatchHeader.SETRANGE("Form No.",FormNo);
      BatchHeader.SETRANGE(Revised,TRUE);
      BatchHeader.SETRANGE("Correction-C1",TRUE);
      IF BatchHeader.FINDFIRST THEN
        IF BatchHeader."Batch Updation Indicator" = 0 THEN
          CreateBatchHeader(0,0,0);
      Form26Q27QEntry.RESET;
      Form26Q27QEntry.SETRANGE("Financial Year",FinancialYear);
      Form26Q27QEntry.SETRANGE("Reporting Quarter",Quarter);
      Form26Q27QEntry.SETRANGE("T.A.N. No.",TANLocation);
      Form26Q27QEntry.MODIFYALL("Revised eTDS Generated",TRUE,TRUE);
    END;

    PROCEDURE ProcessC2@1500008();
    VAR
      BatchAmount@1500000 : Decimal;
      ChallanCount@1500001 : Integer;
    BEGIN
      ChallanRegister.RESET;
      ChallanRegister.SETRANGE("Financial Year",FinancialYear);
      ChallanRegister.SETRANGE(Quarter,Quarter);
      ChallanRegister.SETRANGE("T.A.N. No.",TANLocation);
      ChallanRegister.SETRANGE("Non Resident Payment",InclNonResidentPmt);
      ChallanRegister.SETRANGE(Revised,TRUE);
      ChallanRegister.SETRANGE("Correction-C2",TRUE);
      IF ChallanRegister.FIND('-') THEN BEGIN
        REPEAT
          ChallanRegister.CALCFIELDS("Total TDS Including SHE Cess");
          BatchAmount +=
            ChallanRegister."Oltas Others" +
            ChallanRegister."Oltas Interest" +
            ChallanRegister."Total TDS Including SHE Cess";
          ChallanCount += 1;
        UNTIL ChallanRegister.NEXT = 0;
        CreateBatchHeader(1,ChallanCount,BatchAmount);
      END;

      IF ChallanRegister.FIND('-') THEN
        REPEAT
          CreateChallanDetails(1);
          ChallanRegister."Revised eTDS Generated" := TRUE;
          ChallanRegister.MODIFY(TRUE);
        UNTIL ChallanRegister.NEXT = 0;
      Form26Q27QEntry.RESET;
      Form26Q27QEntry.SETRANGE("Financial Year",FinancialYear);
      Form26Q27QEntry.SETRANGE("Reporting Quarter",Quarter);
      Form26Q27QEntry.SETRANGE("T.A.N. No.",TANLocation);
      Form26Q27QEntry.MODIFYALL("Revised eTDS Generated",TRUE,TRUE);
    END;

    PROCEDURE ProcessC3@1500029();
    VAR
      BatchAmount@1500000 : Decimal;
      ChallanCount@1500001 : Integer;
    BEGIN
      ChallanRegister.RESET;
      ChallanRegister.SETRANGE("Financial Year",FinancialYear);
      ChallanRegister.SETRANGE(Quarter,Quarter);
      ChallanRegister.SETRANGE("T.A.N. No.",TANLocation);
      ChallanRegister.SETRANGE("Non Resident Payment",InclNonResidentPmt);
      ChallanRegister.SETRANGE(Revised,TRUE);
      ChallanRegister.SETRANGE("Correction-C3",TRUE);
      IF ChallanRegister.FIND('-') THEN BEGIN
        REPEAT
          Form26Q27QEntry.RESET;
          Form26Q27QEntry.SETCURRENTKEY("Reporting Challan Entry No.","Correction-C3","Correction-C5","Correction-C9","Correction-Y");
          Form26Q27QEntry.SETRANGE("Reporting Challan Entry No.",ChallanRegister."Entry No.");
          Form26Q27QEntry.SETRANGE("Correction-C3",TRUE);
          Form26Q27QEntry.CALCSUMS("TDS Amount","Surcharge Amount","eCESS Amount","SHE Cess Amount");
          IF ChallanRegister."Challan Updation Indicator" = 0 THEN
            BatchAmount := BatchAmount + ChallanRegister."Last TDS Others" +
              ChallanRegister."Last TDS Interest" + Form26Q27QEntry."TDS Amount" +
              Form26Q27QEntry."Surcharge Amount" + Form26Q27QEntry."eCESS Amount" + Form26Q27QEntry."SHE Cess Amount"
          ELSE
            BatchAmount := BatchAmount + ChallanRegister."Oltas Others" +
              ChallanRegister."Oltas Interest" + Form26Q27QEntry."TDS Amount" +
              Form26Q27QEntry."Surcharge Amount" + Form26Q27QEntry."eCESS Amount" + Form26Q27QEntry."SHE Cess Amount";
          ChallanCount += 1;
        UNTIL ChallanRegister.NEXT = 0;
        CreateBatchHeader(2,ChallanCount,BatchAmount);
      END;

      IF ChallanRegister.FIND('-') THEN
        REPEAT
          CreateChallanDetails(2);
          Form26Q27QEntry.RESET;
          Form26Q27QEntry.SETRANGE("Reporting Challan Entry No.",ChallanRegister."Entry No.");
          Form26Q27QEntry.SETRANGE("Correction-C3",TRUE);
          IF Form26Q27QEntry.FIND('-') THEN
            REPEAT
              CreateDeducteeDetails(2);
              Form26Q27QEntry."Revised eTDS Generated" := TRUE;
              Form26Q27QEntry.MODIFY(TRUE);
            UNTIL Form26Q27QEntry.NEXT = 0 ;
          ChallanRegister."Revised eTDS Generated" := TRUE;
          ChallanRegister.MODIFY(TRUE);
        UNTIL ChallanRegister.NEXT = 0;
    END;

    PROCEDURE ProcessC5@1500012();
    BEGIN
      ChallanRegister.RESET;
      ChallanRegister.SETRANGE("Financial Year",FinancialYear);
      ChallanRegister.SETRANGE(Quarter,Quarter);
      ChallanRegister.SETRANGE("T.A.N. No.",TANLocation);
      ChallanRegister.SETRANGE("Non Resident Payment",InclNonResidentPmt);
      ChallanRegister.SETRANGE(Revised,TRUE);
      ChallanRegister.SETRANGE("Correction-C5",TRUE);
      IF ChallanRegister.FIND('-') THEN BEGIN
        BatchHeader.RESET;
        BatchHeader.SETRANGE("Financial Year",FinancialYear);
        BatchHeader.SETRANGE(Quarter,Quarter);
        BatchHeader.SETRANGE("Deductor T.A.N. No.",TANLocation);
        BatchHeader.SETRANGE("Form No.",FormNo);
        BatchHeader.SETRANGE(Revised,TRUE);
        BatchHeader.FINDFIRST;
        CreateBatchHeader(3,ChallanRegister.COUNT,0);
        REPEAT
          CreateChallanDetails(3);
          Form26Q27QEntry.RESET;
          Form26Q27QEntry.SETRANGE("Reporting Challan Entry No.",ChallanRegister."Entry No.");
          Form26Q27QEntry.SETRANGE("Correction-C5",TRUE);
          Form26Q27QEntry.FIND('-');
          REPEAT
            CreateDeducteeDetails(3);
            Form26Q27QEntry."Revised eTDS Generated" := TRUE;
            Form26Q27QEntry.MODIFY(TRUE);
          UNTIL Form26Q27QEntry.NEXT = 0 ;
          ChallanRegister."Revised eTDS Generated" := TRUE;
          ChallanRegister.MODIFY(TRUE);
        UNTIL ChallanRegister.NEXT = 0;
      END;
    END;

    PROCEDURE ProcessC9@1500030();
    VAR
      BatchAmount@1500000 : Decimal;
      ChallanCount@1500001 : Integer;
    BEGIN
      ChallanRegister.RESET;
      ChallanRegister.SETRANGE("Financial Year",FinancialYear);
      ChallanRegister.SETRANGE(Quarter,Quarter);
      ChallanRegister.SETRANGE("T.A.N. No.",TANLocation);
      ChallanRegister.SETRANGE("Non Resident Payment",InclNonResidentPmt);
      ChallanRegister.SETRANGE(Revised,TRUE);
      ChallanRegister.SETRANGE("Correction-C9",TRUE);
      IF ChallanRegister.FIND('-') THEN BEGIN
        REPEAT
          ChallanRegister.CALCFIELDS("Total TDS Including SHE Cess");
          BatchAmount := BatchAmount + ChallanRegister."Oltas Others" +
            ChallanRegister."Oltas Interest" + ChallanRegister."Total TDS Including SHE Cess";
          ChallanCount += 1;
        UNTIL ChallanRegister.NEXT = 0;
        CreateBatchHeader(4,ChallanCount,BatchAmount);
      END;
      IF ChallanRegister.FIND('-') THEN
        REPEAT
          CreateChallanDetails(4);
          Form26Q27QEntry.RESET;
          Form26Q27QEntry.SETRANGE("Reporting Challan Entry No.",ChallanRegister."Entry No.");
          Form26Q27QEntry.SETRANGE("Correction-C9",TRUE);
          Form26Q27QEntry.FIND('-');
          REPEAT
            CreateDeducteeDetails(4);
            Form26Q27QEntry."Revised eTDS Generated" := TRUE;
            Form26Q27QEntry.MODIFY(TRUE);
          UNTIL Form26Q27QEntry.NEXT = 0 ;
          ChallanRegister."Revised eTDS Generated" := TRUE;
          ChallanRegister.MODIFY(TRUE);
        UNTIL ChallanRegister.NEXT = 0;
    END;

    PROCEDURE ProcessY@1500007();
    VAR
      GenerateeTDS@1500008 : Report 16508;
    BEGIN
      IF BatchHeader."Correction-Y" THEN BEGIN
        LineNo := 0;
        BatchNo := 0;
        OutFile2.CREATE(OutFolderName + STRSUBSTNO(Text16519,FormNo));
        OutFile2.CREATEOUTSTREAM(OStream);
        CreateFileHeader(TRUE);
        CreateBatchHeader(5,0,0);
        OutFile2.CLOSE;
        GenerateeTDS.SetProperties(
          OutFolderName + STRSUBSTNO(Text16520,FormNo),
          TANLocation,Quarter,FinancialYear,
          PersonName,Designation,CreationDate,TRUE);
        GenerateeTDS.USEREQUESTPAGE := FALSE;
        GenerateeTDS.RUN;

        BatchHeader."Revised eTDS Generated" := TRUE;
        BatchHeader.MODIFY(TRUE);
        Form26Q27QEntry.RESET;
        Form26Q27QEntry.SETRANGE("Financial Year",FinancialYear);
        Form26Q27QEntry.SETRANGE("Reporting Quarter",Quarter);
        Form26Q27QEntry.SETRANGE("T.A.N. No.",TANLocation);
        Form26Q27QEntry.MODIFYALL("Revised eTDS Generated",TRUE,TRUE);
      END;
    END;

    PROCEDURE CreateFileHeader@1280000(C9Correction@1500001 : Boolean);
    VAR
      FieldText@1500000 : ARRAY [100] OF Text[250];
    BEGIN
      LineNo += 1;
      FieldText[1] := FORMAT(LineNo) + Text16510;
      FieldText[2] := Text16505 + Text16510;
      FieldText[3] := Text16506 + Text16510;
      FieldText[4] := Text16507 + Text16510;
      FieldText[5] := FORMAT(CreationDate,0,'<Day,2><Month,2><Year4>') + Text16510;
      FieldText[6] := FORMAT(SequenceNo) + Text16510;
      FieldText[7] := Text16508 + Text16510;
      FieldText[8] := BatchHeader."Deductor Last TAN" + Text16510;
      IF C9Correction THEN
        FieldText[9] := Text16509
      ELSE
        IF CalcBatchCount > 0 THEN
          FieldText[9] := FORMAT(CalcBatchCount) + Text16510
        ELSE
          FieldText[9] := Text16510;
      FieldText[10] := NameofReturnPrepUtility + Text16510;
      FieldText[11] := Text16510;
      FieldText[12] := Text16510;
      FieldText[13] := Text16510;
      FieldText[14] := Text16510;
      FieldText[15] := Text16510;
      FieldText[16] := Text16510;
      FieldText[17] := '';
      FieldText[18] := Text16510;
      WriteToStream(FieldText,18);
    END;

    PROCEDURE CreateBatchHeader@1280001(CorrectionType@1500001 : 'C1,C2,C3,C5,C9,Y';ChallanCount@1500000 : Integer;BatchAmount@1500003 : Decimal);
    VAR
      FieldText@1500004 : ARRAY [100] OF Text[250];
    BEGIN
      LineNo += 1;
      BatchNo += 1;
      WITH BatchHeader DO BEGIN
        TESTFIELD("Deductor State");
        TESTFIELD("Deductor Post Code");

        FieldText[1] := FORMAT(LineNo) + Text16510;
        FieldText[2] := Text16511 + Text16510;
        FieldText[3] := FORMAT(BatchNo) + Text16510;
        IF CorrectionType IN [CorrectionType::C1,CorrectionType::Y] THEN
          FieldText[4] := Text16510
        ELSE
          IF ChallanCount > 0 THEN
            FieldText[4] := FORMAT(ChallanCount) + Text16510
          ELSE
            FieldText[4] := Text16510;
        FieldText[5] := FORMAT(FormNo) + Text16510;
        FieldText[6] := FORMAT(CorrectionType) + Text16510;

        IF CorrectionType IN [0,3,4,5] THEN
          FieldText[7] := Text16510
        ELSE
          FieldText[7] := FORMAT("Batch Updation Indicator") + Text16510;
        FieldText[8] := "Original RRR No." + Text16510;
        IF "No. of Revision" > 1 THEN
          FieldText[9] := "Previous RRR No." + Text16510
        ELSE
          FieldText[9] := "Original RRR No." + Text16510;
        FieldText[10] := Text16510;
        FieldText[11] := Text16510;
        FieldText[12] := "Deductor Last TAN" + Text16510;
        IF CorrectionType <> CorrectionType::C5 THEN
          FieldText[13] := "Deductor Last TAN" + Text16510
        ELSE
          FieldText[13] := Text16510;
        FieldText[14] := Text16510;

        IF (CorrectionType = 0) OR ((CorrectionType IN [1,2]) AND ("Batch Updation Indicator" = 1)) THEN
          FieldText[15] := "Deductor P.A.N. No." + Text16510
        ELSE
          FieldText[15] := Text16510;
        FieldText[16] := "Assessment Year" + Text16510;
        FieldText[17] := FinancialYear + Text16510;
        FieldText[18] := FORMAT(Quarter) + Text16510;
        IF (CorrectionType IN [0,3,4,5]) OR ("Batch Updation Indicator" = 0) THEN
          FieldText[19] := "Deductor Last Name" + Text16510
        ELSE
          FieldText[19] := "Deductor Name" + Text16510;

        IF (CorrectionType = 0) OR (("Batch Updation Indicator" = 1) AND (CorrectionType IN [1,2])) THEN BEGIN
          IF "Deductor Branch/Division" = '' THEN
            FieldText[20] := CompanyInfo."Location Code" + Text16510
          ELSE
            FieldText[20] := "Deductor Branch/Division" + Text16510;
          FieldText[20] := "Deductor Branch/Division" + Text16510;
          FieldText[21] := "Deductor Address" + Text16510;
          FieldText[22] := "Deductor Address 2" + Text16510;
          FieldText[23] := "Deductor Address 3" + Text16510;
          FieldText[24] := "Deductor Address 4" + Text16510;
          FieldText[25] := "Deductor Address 5" + Text16510;
          FieldText[26] := "Deductor State" + Text16510;
          FieldText[27] := "Deductor Post Code" + Text16510;
          FieldText[28] := "Deductor E-Mail" + Text16510;
          IF ("Deductor STD Code" <> '') AND ("Deductor Phone No." <> '') THEN BEGIN
            FieldText[29] := "Deductor STD Code" + Text16510;
            FieldText[30] := "Deductor Phone No." + Text16510;
          END ELSE BEGIN
            FieldText[29] := Text16510;
            FieldText[30] := Text16510;
          END;
        END ELSE BEGIN
          FieldText[20] := Text16510;
          FieldText[21] := Text16510;
          FieldText[22] := Text16510;
          FieldText[23] := Text16510;
          FieldText[24] := Text16510;
          FieldText[25] := Text16510;
          FieldText[26] := Text16510;
          FieldText[27] := Text16510;
          FieldText[28] := Text16510;
          FieldText[29] := Text16510;
          FieldText[30] := Text16510;
        END;

        IF (CorrectionType = 0) OR ((CorrectionType IN [1,2]) AND ("Batch Updation Indicator" = 1)) THEN BEGIN
          IF "Change of Add of Deductor" THEN
            FieldText[31] := Text16513 + Text16510
          ELSE
            FieldText[31] := Text16514 + Text16510;
        END ELSE
          FieldText[31] := Text16510;
        FieldText[32] := FORMAT("Deductor Category") + Text16510;

        IF (CorrectionType = 0) OR ((CorrectionType IN [1,2]) AND ("Batch Updation Indicator" = 1)) THEN BEGIN
          FieldText[33] := PersonName + Text16510;
          FieldText[34] := Designation + Text16510;
          FieldText[35] := "Responsible Person Address" + Text16510;
          FieldText[36] := "Responsible Person Address 2" + Text16510;
          FieldText[37] := "Responsible Person Address 3" + Text16510;
          FieldText[38] := "Responsible Person Address 4" + Text16510;
          FieldText[39] := "Responsible Person Address 5" + Text16510;
          FieldText[40] := "Responsible Person State" + Text16510;
          FieldText[41] := "Responsible Person Post Code" + Text16510;
          IF EMail <> '' THEN
            FieldText[42] := EMail + Text16510
          ELSE
            FieldText[42] := "Responsible Person E-Mail" + Text16510;
          IF MobileNo <> '' THEN
            FieldText[43] := MobileNo + Text16510
          ELSE
            FieldText[43] := Text16510;
          IF ("Responsible Person STD Code" <> '') AND ("Responsible Person Phone No." <> '') THEN BEGIN
            FieldText[44] := "Responsible Person STD Code" + Text16510;
            FieldText[45] := "Responsible Person Phone No." + Text16510;
          END ELSE BEGIN
            FieldText[44] := Text16510;
            FieldText[45] := Text16510;
          END;
        END ELSE BEGIN
          FieldText[33] := Text16510;
          FieldText[34] := Text16510;
          FieldText[35] := Text16510;
          FieldText[36] := Text16510;
          FieldText[37] := Text16510;
          FieldText[38] := Text16510;
          FieldText[39] := Text16510;
          FieldText[40] := Text16510;
          FieldText[41] := Text16510;
          FieldText[42] := Text16510;
          FieldText[43] := Text16510;
          FieldText[44] := Text16510;
          FieldText[45] := Text16510;
        END;
        IF (CorrectionType = 0) OR (("Batch Updation Indicator" = 1) AND (CorrectionType IN [1,2])) THEN BEGIN
          IF "Change of Add of Deductor" THEN
            FieldText[46] := Text16513 + Text16510
          ELSE
            FieldText[46] := Text16514 + Text16510;
        END ELSE
          FieldText[46] := Text16510;
        IF CorrectionType IN [1,2,4] THEN
          FieldText[47] := FORMAT(BatchAmount,0,'<Sign><Integer><Decimals,3>') + Text16510
        ELSE
          FieldText[47] := Text16510;
        FieldText[48] := Text16510;
        FieldText[49] := Text16510;
        FieldText[50] := Text16510;
        FieldText[51] := Text16514 + Text16510;
        FieldText[52] := Text16510;
        IF (CorrectionType = 0) OR ((CorrectionType IN [1,2]) AND ("Batch Updation Indicator" = 1)) THEN
          FieldText[53] := "Deductor Category" + Text16510
        ELSE
          FieldText[53] := Text16510;
        FieldText[54] := "State Code" + Text16510;
        FieldText[55] := "PAO Code" + Text16510;
        FieldText[56] := "DDO Code" + Text16510;
        FieldText[57] := "Ministry Name Code" + Text16510;
        FieldText[58] := "Ministry Name Other" + Text16510;
        FieldText[59] := PANNo + Text16510;
        FieldText[60] := "PAO Registration No." + Text16510;
        FieldText[61] := "DDO Registration No." + Text16510;
        FieldText[62] := '';
      END;
      WriteToStream(FieldText,62);
      BatchHeader."Revised eTDS Generated" := TRUE;
      BatchHeader.MODIFY(TRUE);
    END;

    PROCEDURE CreateChallanDetails@1280002(CorrectionType@1500001 : 'C1,C2,C3,C5,C9,Y');
    VAR
      FieldText@1500003 : ARRAY [100] OF Text[250];
      TransactionType@1500000 : Integer;
      OltasAmount@1500002 : Decimal;
    BEGIN
      IF CorrectionType IN [0,5] THEN
        EXIT;

      IF CorrectionType = CorrectionType::C3 THEN
        TransactionType := 1;
      IF CorrectionType = CorrectionType::C5 THEN
        TransactionType := 2;
      IF CorrectionType = CorrectionType::C9 THEN
        TransactionType := 3;

      WITH ChallanRegister DO BEGIN
        CALCFIELDS("Total TDS Amount","Total Surcharge Amount","Total eCess Amount","Total SHE Cess Amount",
          "Total TDS Including SHE Cess");

        LineNo += 1;
        FieldText[1] := FORMAT(LineNo) + Text16510;
        FieldText[2] := Text16515 + Text16510;
        FieldText[3] := FORMAT(BatchNo) + Text16510;
        FieldText[4] := FORMAT("Challan-Detail Record No.") + Text16510;
        IF CorrectionType IN [2,3,4] THEN
          FieldText[5] := FORMAT(GetDedCount("Entry No.",FORMAT(CorrectionType))) + Text16510
        ELSE
          FieldText[5] := Text16510;
        IF "Nil Challan Indicator" THEN
          FieldText[6] := Text16513 + Text16510
        ELSE
          FieldText[6] := Text16514 + Text16510;
        IF CorrectionType = 2 THEN
          FieldText[7] := FORMAT("Challan Updation Indicator") + Text16510
        ELSE
          FieldText[7] := Text16510;
        FieldText[8] := Text16510;
        FieldText[9] := Text16510;
        FieldText[10] := Text16510;
        IF CorrectionType = 4 THEN
          FieldText[11] := Text16510
        ELSE
          FieldText[11] := "Last Bank Challan No." + Text16510;

        CASE CorrectionType OF
          1,4:
            BEGIN
              IF NOT "Nil Challan Indicator" OR NOT "Paid By Book Entry" THEN
                FieldText[12] := "Challan No." + Text16510
              ELSE
                FieldText[12] := Text16510;
            END;
          2:
            BEGIN
              IF "Challan Updation Indicator" = 1 THEN
                FieldText[12] := "Challan No." + Text16510
              ELSE
                FieldText[12] := "Last Bank Challan No." + Text16510;
            END;
          3:
            FieldText[12] := Text16510;
        END;
        IF CorrectionType IN [1,2,3] THEN BEGIN
          IF BatchHeader."Deductor Category" IN ['A,S'] THEN
            FieldText[13] := "Last Transfer Voucher No." + Text16510
          ELSE
            FieldText[13] := Text16510;
        END ELSE
          FieldText[13] := Text16510;

        IF (BatchHeader."Deductor Category" IN ['A,S']) AND
           ((CorrectionType = 1) OR ((CorrectionType = 4) AND (NOT "Nil Challan Indicator"))) OR
           ((CorrectionType = 2) AND ("Challan Updation Indicator" = 1))
        THEN
          FieldText[14] := "Transfer Voucher No." + Text16510
        ELSE
          IF (BatchHeader."Deductor Category" IN ['A,S']) AND (CorrectionType = 2) THEN
            FieldText[14] := "Last Transfer Voucher No." + Text16510
          ELSE
            FieldText[14] := Text16510;

        IF CorrectionType = 4 THEN
          FieldText[15] := Text16510
        ELSE
          FieldText[15] := "Last Bank-Branch Code" + Text16510;

        IF CorrectionType = 3 THEN
          FieldText[16] := Text16510
        ELSE
          IF (CorrectionType = 2) AND ("Challan Updation Indicator" = 1) THEN
            FieldText[16] := "BSR Code" + Text16510
          ELSE
            IF (CorrectionType = 2) AND ("Challan Updation Indicator" = 0) THEN
              FieldText[16] := "Last Bank-Branch Code" + Text16510
            ELSE
              IF (CorrectionType = 1) OR ((CorrectionType = 1) AND (NOT "Paid By Book Entry") AND
                                          (NOT "Nil Challan Indicator"))
              THEN
                FieldText[16] := "BSR Code" + Text16510
              ELSE
                IF CorrectionType = 4 THEN
                  FieldText[16] := "BSR Code" + Text16510
                ELSE
                  FieldText[16] := Text16510;

        IF CorrectionType = 4 THEN
          FieldText[17] := Text16510
        ELSE
          IF (CorrectionType = 1) OR (CorrectionType = 2) OR (CorrectionType = 3) THEN
            FieldText[17] := FORMAT("Last Date of Challan No.",0,'<Day,2><Month,2><Year4>') + Text16510;

        IF CorrectionType = 3 THEN
          FieldText[18] := Text16510
        ELSE
          IF (CorrectionType = 2) AND ("Challan Updation Indicator" = 0) THEN
            FieldText[18] := FORMAT("Last Date of Challan No.",0,'<Day,2><Month,2><Year4>') + Text16510
          ELSE
            FieldText[18] := FORMAT("Challan Date",0,'<Day,2><Month,2><Year4>') + Text16510;

        FieldText[19] := Text16510;
        FieldText[20] := Text16510;
        IF CorrectionType IN [1,4,2] THEN
          FieldText[21] := GetSection("TDS Section") + Text16510
        ELSE
          FieldText[21] := Text16510;

        CASE CorrectionType OF
          1:
            BEGIN
              FieldText[22] := FORMAT("Total TDS Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[23] := FORMAT("Total Surcharge Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[24] := FORMAT("Total eCess Amount" + "Total SHE Cess Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
            END;
          4:
            BEGIN
              FieldText[22] := FORMAT(GetDeducteeValues("Entry No.",TransactionType,1),0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[23] := FORMAT(GetDeducteeValues("Entry No.",TransactionType,2),0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[24] := FORMAT(GetDeducteeValues("Entry No.",TransactionType,3),0,'<Sign><Integer><Decimals,3>') + Text16510;
            END;
          2:
            IF "Challan Updation Indicator" = 0 THEN BEGIN
              FieldText[22] := Text16510;
              FieldText[23] := Text16510;
              FieldText[24] := Text16510;
            END ELSE BEGIN
              FieldText[22] := FORMAT(GetDeducteeValues("Entry No.",TransactionType,1),0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[23] := FORMAT(GetDeducteeValues("Entry No.",TransactionType,2),0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[24] := FORMAT(GetDeducteeValues("Entry No.",TransactionType,3),0,'<Sign><Integer><Decimals,3>') + Text16510;
            END;
          3:
            BEGIN
              FieldText[22] := Text16510;
              FieldText[23] := Text16510;
              FieldText[24] := Text16510;
            END;
        END;

        CASE CorrectionType OF
          1,4:
            BEGIN
              FieldText[25] := FORMAT("Oltas Interest",0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[26] := FORMAT("Oltas Others",0,'<Sign><Integer><Decimals,3>') + Text16510;
            END;
          2:
            IF "Challan Updation Indicator" = 1 THEN BEGIN
              FieldText[25] := FORMAT("Oltas Interest",0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[26] := FORMAT("Oltas Others",0,'<Sign><Integer><Decimals,3>') + Text16510;
            END ELSE BEGIN
              FieldText[25] := Text16510;
              FieldText[26] := Text16510;
            END;
          3:
            BEGIN
              FieldText[25] := Text16510;
              FieldText[26] := Text16510;
            END;
        END;

        IF CorrectionType IN [1,2,4] THEN BEGIN
          OltasAmount :=
            ROUND(GetDeducteeValues("Entry No.",TransactionType,4),1,'=') +
            ROUND("Oltas Interest",1,'=') +
            ROUND("Oltas Others",1,'=');
          FieldText[27] := FORMAT(OltasAmount,0,'<Sign><Integer><Decimals,3>') + Text16510;
        END ELSE
          FieldText[27] := Text16510;

        IF CorrectionType IN [1,2,3] THEN
          FieldText[28] := FORMAT(
              GetDeducteeValues("Entry No.",TransactionType,4) + "Oltas Interest" +
              "Oltas Others",0,'<Sign><Integer><Decimals,3>') + Text16510
        ELSE
          FieldText[28] := Text16510;

        IF CorrectionType IN [1,3] THEN BEGIN
          FieldText[29] := Text16510;
          FieldText[30] := Text16510;
          FieldText[31] := Text16510;
          FieldText[32] := Text16510;
          FieldText[33] := Text16510;
        END ELSE
          IF CorrectionType = 2 THEN BEGIN
            FieldText[29] := Text16521 + Text16510;
            FieldText[30] := Text16521 + Text16510;
            FieldText[31] := Text16521 + Text16510;
            FieldText[32] := Text16521 + Text16510;
            FieldText[33] := Text16521 + Text16510;
          END ELSE
            IF CorrectionType = 4 THEN BEGIN
              FieldText[29] := FORMAT(GetDeducteeValues("Entry No.",TransactionType,4) +
                  "Oltas Interest" + "Oltas Others",0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[30] := FORMAT(GetDeducteeValues("Entry No.",TransactionType,1),0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[31] := FORMAT(GetDeducteeValues("Entry No.",TransactionType,2),0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[32] := FORMAT(GetDeducteeValues("Entry No.",TransactionType,3),0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[33] := FORMAT(GetDeducteeValues("Entry No.",TransactionType,1) +
                  GetDeducteeValues("Entry No.",TransactionType,2) +
                  GetDeducteeValues("Entry No.",TransactionType,3),0,'<Sign><Integer><Decimals,3>') + Text16510;
            END;

        IF CorrectionType = 3 THEN BEGIN
          FieldText[34] := Text16510;
          FieldText[35] := Text16510;
        END ELSE
          IF CorrectionType = 4 THEN BEGIN
            FieldText[34] := FORMAT("Oltas Interest",0,'<Sign><Integer><Decimals,3>') + Text16510;
            FieldText[35] := FORMAT("Oltas Others",0,'<Sign><Integer><Decimals,3>') + Text16510;
          END ELSE
            IF CorrectionType IN [1,2] THEN BEGIN
              FieldText[34] := FORMAT("TDS Interest Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[35] := FORMAT("TDS Others",0,'<Sign><Integer><Decimals,3>') + Text16510;
            END;

        IF CorrectionType = 3 THEN
          FieldText[36] := Text16510
        ELSE
          IF (CorrectionType = 2) AND (("Challan Updation Indicator" = 0) OR
                                       "Paid By Book Entry" OR "Nil Challan Indicator")
          THEN
            FieldText[36] := Text16510
          ELSE
            IF (CorrectionType = 2) AND (("Challan Updation Indicator" = 1) AND
                                         (NOT "Paid By Book Entry") AND (NOT "Nil Challan Indicator"))
            THEN
              FieldText[36] := "Check / DD No." + Text16510
            ELSE
              IF (CorrectionType = 4) AND ("Paid By Book Entry" OR "Nil Challan Indicator") THEN
                FieldText[36] := Text16510
              ELSE
                IF (CorrectionType = 4) AND ((NOT "Paid By Book Entry") AND (NOT "Nil Challan Indicator")) THEN
                  FieldText[36] := "Check / DD No." + Text16510
                ELSE
                  IF (CorrectionType = 1) AND ("Paid By Book Entry" OR "Nil Challan Indicator") THEN
                    FieldText[36] := Text16510
                  ELSE
                    IF (CorrectionType = 1) AND ((NOT "Paid By Book Entry") AND (NOT "Nil Challan Indicator")) THEN
                      FieldText[36] := "Check / DD No." + Text16510;

        IF CorrectionType IN [1,2,3,4] THEN
          IF "Paid By Book Entry" THEN
            FieldText[37] := Text16513 + Text16510
          ELSE
            FieldText[37] := Text16514 + Text16510;
        FieldText[38] := Text16510;
        FieldText[39] := '';
      END;
      IF (ChallanRegister."Correction-C9" = FALSE) AND (ChallanRegister."Correction-Y" = FALSE) THEN
      WriteToStream(FieldText,39);
      DeducteeCounter := 0;
    END;

    PROCEDURE CreateDeducteeDetails@1280003(CorrectionType@1500005 : 'C1,C2,C3,C5,C9,Y');
    VAR
      Vendor@1500000 : Record 23;
      GenerateeTDSReport@1500001 : Report 16508;
      FieldText@1500006 : ARRAY [100] OF Text[250];
    BEGIN
      IF CorrectionType IN [0,1,5] THEN
        EXIT;

      WITH Form26Q27QEntry DO BEGIN
        LineNo += 1;
        DeducteeCounter += 1;
        FieldText[1] := FORMAT(LineNo) + Text16510;
        FieldText[2] := Text16516 + Text16510;
        FieldText[3] := FORMAT(BatchNo) + Text16510;
        FieldText[4] := FORMAT("Challan-Detail Record No.") + Text16510;
        FieldText[5] := FORMAT(DeducteeCounter) + Text16510;

        IF CorrectionType = 3 THEN
          FieldText[6] := Text16510
        ELSE
          IF CorrectionType = 2 THEN
            FieldText[6] := Text16517 + Text16510
          ELSE
            IF CorrectionType = 4 THEN
              FieldText[6] := Text16518 + Text16510;
        FieldText[7] := Text16510;

        IF CorrectionType = 3 THEN
          FieldText[8] := Text16510
        ELSE
          FieldText[8] := "Deductee Code" + Text16510;

        IF CorrectionType = 2 THEN
          FieldText[9] := "Last Emp. / Party P.A.N. No." + Text16510
        ELSE
          FieldText[9] := Text16510;
        FieldText[10] := "Deductee P.A.N. No." + Text16510;

        IF CorrectionType = 2 THEN
          FieldText[11] := "Last Emp. / Party P.A.N. No." + Text16510
        ELSE
          FieldText[11] := Text16510;

        IF CorrectionType IN [2,4] THEN
          FieldText[12] := "Deductee P.A.N. Ref. No." + Text16510
        ELSE
          FieldText[12] := Text16510;

        IF CorrectionType = 3 THEN BEGIN
          FieldText[13] := Text16510;
          FieldText[14] := Text16510;
          FieldText[15] := Text16510;
          FieldText[16] := Text16510;
          FieldText[17] := Text16510;
        END ELSE BEGIN
          FieldText[13] := "Deductee Name" + Text16510;
          FieldText[14] := FORMAT("TDS Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
          FieldText[15] := FORMAT("Surcharge Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
          FieldText[16] := FORMAT("eCESS Amount" + "SHE Cess Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
          FieldText[17] := FORMAT("TDS Amount" + "Surcharge Amount" + "eCESS Amount" + "SHE Cess Amount",
              0,'<Sign><Integer><Decimals,3>') + Text16510;
        END;

        IF CorrectionType = 4 THEN
          FieldText[18] := Text16510
        ELSE
          FieldText[18] := FORMAT("TDS Amount" + "Surcharge Amount" + "eCESS Amount" + "SHE Cess Amount",
              0,'<Sign><Integer><Decimals,3>') + Text16510;

        IF CorrectionType = 3 THEN
          FieldText[19] := Text16510
        ELSE
          IF CorrectionType = 4 THEN
            FieldText[19] := FORMAT("Total TDS Including SHE CESS",0,'<Sign><Integer><Decimals,3>') + Text16510
          ELSE
            IF CorrectionType = 2 THEN
              FieldText[19] := FORMAT("Total TDS Including SHE CESS",0,'<Sign><Integer><Decimals,3>') + Text16510;

        IF CorrectionType = 4 THEN
          FieldText[20] := Text16510
        ELSE
          FieldText[20] := FORMAT("Total TDS Including SHE CESS",0,'<Sign><Integer><Decimals,3>') + Text16510;
        FieldText[21] := Text16510;

        IF CorrectionType = 3 THEN BEGIN
          FieldText[22] := Text16510;
          FieldText[23] := Text16510;
          FieldText[24] := Text16510;
          FieldText[25] := Text16510;
          FieldText[26] := Text16510;
          FieldText[27] := Text16510;
          FieldText[28] := Text16510;
          FieldText[29] := Text16510;
          FieldText[30] := Text16510;
        END ELSE BEGIN
          CASE FormNo OF
            FormNo::"26Q":
              FieldText[22] := FORMAT("TDS Base Amount",0,'<Integer><Decimals,3>') + Text16510;
            FormNo::"27Q":
              FieldText[22] := FORMAT("Invoice Amount",0,'<Integer><Decimals,3>') + Text16510;
          END;
          FieldText[23] := FORMAT("Posting Date",0,'<Day,2><Month,2><Year4>') + Text16510;
          FieldText[24] := FORMAT("Posting Date",0,'<Day,2><Month,2><Year4>') + Text16510;
          FieldText[25] := Text16510;
          FieldText[26] :=
            FORMAT(ROUND(("TDS %" + ("TDS %" * "Surcharge %" / 100)) * (1 + ("eCESS %" + "SHE Cess %") / 100),0.0001,'='),
              0,'<Sign><Integer><Decimals,5>') + Text16510;
          FieldText[27] := Text16510;
          FieldText[28] := Text16514 + Text16510;
          FieldText[29] := Text16510;
          IF "NIL Challan Indicator" THEN
            FieldText[30] := GenerateeTDSReport.GetField30ForNilDeductee("Party Code","Concessional Code",FormNo) + Text16510
          ELSE BEGIN
          IF Vendor.GET("Party Code") THEN
            IF Vendor.Transporter THEN BEGIN
              IF (Vendor."P.A.N. Status" <> Vendor."P.A.N. Status"::" ") OR (Vendor."P.A.N. No." = '') THEN
                FieldText[30] := 'C' + Text16510
              ELSE
                CASE FormNo OF
                  FormNo::"26Q":
                    FieldText[30] := 'T' + Text16510;
                  FormNo::"27Q":
                    FieldText[30] := COPYSTR("Concessional Code",1,1) + Text16510;
                END;
            END ELSE
              IF (Vendor."P.A.N. Status" <> Vendor."P.A.N. Status"::" ") OR (Vendor."P.A.N. No." = '') THEN
                FieldText[30] := 'C' + Text16510
              ELSE
                FieldText[30] := COPYSTR("Concessional Code",1,1) + Text16510;
          IF ("Total TDS Including SHE CESS" = 0) AND (FormNo = FormNo::"26Q") THEN
            FieldText[30] := 'Y' + Text16510;
          END
        END;

        IF "NIL Challan Indicator" THEN
          FieldText[24] := Text16510;

        FieldText[31] := Text16510;
        FieldText[32] := Text16510;
        FieldText[33] := '';
      END;
      IF (Form26Q27QEntry."Correction-C9" = FALSE) AND (Form26Q27QEntry."Correction-Y" = FALSE) THEN
      WriteToStream(FieldText,33);
    END;

    PROCEDURE GetSection@1500000(Section@1500000 : ',194C,194G,194J,194A,194I,194,193,194B,194D,194EE,194F,194H,194K,194L,194BB,194E,195,196A,196B,196C,196D,194IA,194IB,197A1F,194LA,192A') : Text[3];
    BEGIN
      IF STRLEN(FORMAT(Section)) = 3 THEN
        EXIT(FORMAT(Section));
      IF FORMAT(Section) = '194LA' THEN
        EXIT(FORMAT(Section));
      EXIT(COPYSTR(FORMAT(Section),STRLEN(FORMAT(Section)) - 2,3));
    END;

    PROCEDURE CalcBatchCount@1500010() : Integer;
    VAR
      BatchCount@1500000 : Integer;
    BEGIN
      IF BatchHeader."Correction-C1" THEN
        BatchCount += 1;

      ChallanRegister.RESET;
      ChallanRegister.SETRANGE("Financial Year",FinancialYear);
      ChallanRegister.SETRANGE(Quarter,Quarter);
      ChallanRegister.SETRANGE("T.A.N. No.",TANLocation);
      ChallanRegister.SETRANGE("Non Resident Payment",InclNonResidentPmt);
      ChallanRegister.SETRANGE(Revised,TRUE);
      ChallanRegister.SETRANGE("Correction-C2",TRUE);
      IF ChallanRegister.FINDFIRST THEN
        BatchCount += 1;

      Form26Q27QEntry.RESET;
      Form26Q27QEntry.SETRANGE("Financial Year",FinancialYear);
      Form26Q27QEntry.SETRANGE(Quarter,Quarter);
      Form26Q27QEntry.SETRANGE("T.A.N. No.",TANLocation);
      Form26Q27QEntry.SETRANGE("Form No.",FormNo);
      Form26Q27QEntry.SETRANGE(Revised,TRUE);
      Form26Q27QEntry.SETRANGE("Correction-C3",TRUE);
      IF Form26Q27QEntry.FINDFIRST THEN
        BatchCount += 1;

      ChallanRegister.RESET;
      ChallanRegister.SETRANGE("Financial Year",FinancialYear);
      ChallanRegister.SETRANGE(Quarter,Quarter);
      ChallanRegister.SETRANGE("T.A.N. No.",TANLocation);
      ChallanRegister.SETRANGE("Non Resident Payment",InclNonResidentPmt);
      ChallanRegister.SETRANGE(Revised,TRUE);
      ChallanRegister.SETRANGE("Correction-C5",TRUE);
      IF ChallanRegister.FINDFIRST THEN
        BatchCount += 1;

      ChallanRegister.RESET;
      ChallanRegister.SETRANGE("Financial Year",FinancialYear);
      ChallanRegister.SETRANGE(Quarter,Quarter);
      ChallanRegister.SETRANGE("T.A.N. No.",TANLocation);
      ChallanRegister.SETRANGE("Non Resident Payment",InclNonResidentPmt);
      ChallanRegister.SETRANGE(Revised,TRUE);
      ChallanRegister.SETRANGE("Correction-C9",TRUE);
      IF ChallanRegister.FINDFIRST THEN
        BatchCount += 1;

      EXIT(BatchCount);
    END;

    PROCEDURE GetDedCount@1500005(ChlEntryNo@1500000 : Integer;TranType@1500001 : Code[2]) : Integer;
    VAR
      DeducteeRec@1500002 : Record 16505;
    BEGIN
      DeducteeRec.RESET;
      DeducteeRec.SETRANGE("Reporting Challan Entry No.",ChlEntryNo);
      IF TranType = 'C3' THEN
        DeducteeRec.SETRANGE("Correction-C3",TRUE)
      ELSE
        IF TranType = 'C5' THEN
          DeducteeRec.SETRANGE("Correction-C5",TRUE)
        ELSE
          IF TranType = 'C9' THEN
            DeducteeRec.SETRANGE("Correction-C9",TRUE);
      EXIT(DeducteeRec.COUNT);
    END;

    PROCEDURE CheckRevisedEntries@1500006() : Boolean;
    BEGIN
      ChallanRegister.SETRANGE("Financial Year",FinancialYear);
      ChallanRegister.SETRANGE(Quarter,Quarter);
      ChallanRegister.SETRANGE("T.A.N. No.",TANLocation);
      ChallanRegister.SETRANGE("Non Resident Payment",InclNonResidentPmt);
      ChallanRegister.SETRANGE(Revised,TRUE);
      IF  ChallanRegister.FIND('-') THEN
        EXIT(TRUE);

      Form26Q27QEntry.SETRANGE("Financial Year",FinancialYear);
      Form26Q27QEntry.SETRANGE(Quarter,Quarter);
      Form26Q27QEntry.SETRANGE("T.A.N. No.",TANLocation);
      Form26Q27QEntry.SETRANGE("Non Resident Payments",InclNonResidentPmt);
      Form26Q27QEntry.SETRANGE(Revised,TRUE);
      IF  Form26Q27QEntry.FIND('-') THEN
        EXIT(TRUE);

      BatchHeader.SETRANGE("Financial Year",FinancialYear);
      BatchHeader.SETRANGE(Quarter,Quarter);
      BatchHeader.SETRANGE("Deductor T.A.N. No.",TANLocation);
      BatchHeader.SETRANGE("Form No.",FormNo);
      BatchHeader.SETRANGE(Revised,TRUE);
      IF BatchHeader.FINDFIRST THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE GetDeducteeValues@1500011(EntryNo@1500000 : Integer;Correction@1500001 : ' ,C3,C5,C9,Y';AmountType@1500002 : ' ,TDS,Surcharge,eCess,TotTDSIncleCess') : Decimal;
    BEGIN
      Form26Q27QEntry.RESET;
      Form26Q27QEntry.SETCURRENTKEY("Reporting Challan Entry No.","Correction-C3","Correction-C5","Correction-C9","Correction-Y");
      Form26Q27QEntry.SETRANGE("Reporting Challan Entry No.",EntryNo);
      IF Correction = Correction::C3 THEN
        Form26Q27QEntry.SETRANGE("Correction-C3",TRUE);
      IF Correction = Correction::C5 THEN
        Form26Q27QEntry.SETRANGE("Correction-C5",TRUE);
      IF Correction = Correction::C9 THEN
        Form26Q27QEntry.SETRANGE("Correction-C9",TRUE);
      IF Correction = Correction::Y THEN
        Form26Q27QEntry.SETRANGE("Correction-Y",TRUE);

      Form26Q27QEntry.CALCSUMS("TDS Amount","Surcharge Amount","eCESS Amount","SHE Cess Amount","Total TDS Including SHE CESS");
      IF AmountType = AmountType::TDS THEN
        EXIT(Form26Q27QEntry."TDS Amount");
      IF AmountType = AmountType::Surcharge THEN
        EXIT(Form26Q27QEntry."Surcharge Amount");
      IF AmountType = AmountType::eCess THEN
        EXIT(Form26Q27QEntry."eCESS Amount" + Form26Q27QEntry."SHE Cess Amount");
      IF AmountType = AmountType::TotTDSIncleCess THEN
        EXIT(Form26Q27QEntry."Total TDS Including SHE CESS");
    END;

    LOCAL PROCEDURE WriteToStream@1500009(FieldText@1500000 : ARRAY [100] OF Text[250];FieldCount@1500001 : Integer);
    VAR
      x@1500002 : Integer;
    BEGIN
      FOR x := 1 TO FieldCount DO
        IF FieldText[x] <> '' THEN
          OStream.WRITETEXT(FieldText[x]);
      OStream.WRITETEXT;
    END;

    PROCEDURE InclNonResidentPmt@1500002() : Boolean;
    BEGIN
      CASE FormNo OF
        FormNo::"26Q":
          EXIT(FALSE);
        FormNo::"27Q":
          EXIT(TRUE);
      END;
    END;

    PROCEDURE FormatNoOfBatches@1500004(NoOfBatches@1500000 : Integer) : Text[30];
    BEGIN
      IF (FormNo = FormNo::"27Q") AND (NoOfBatches = 0) THEN
        EXIT('');
      EXIT(FORMAT(NoOfBatches))
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

