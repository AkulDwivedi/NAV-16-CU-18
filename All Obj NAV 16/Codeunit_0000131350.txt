OBJECT Codeunit 131350 Library - Finance Charge Memo
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      LibraryERM@1001 : Codeunit 131300;
      LibraryRandom@1000 : Codeunit 130440;
      BegininingText@1006 : TextConst 'ENU=Posting Date must be %9.';
      EndingText@1005 : TextConst 'ENU=Please pay the total of %7.';
      LineDescription@1004 : TextConst 'ENU=%4% finance Charge with Currency (%8) of %6.';
      LineDescriptionNew@1003 : TextConst 'ENU=%1% finance Charge with Currency (%2) of %3.';
      PrecisionText@1002 : TextConst 'ENU=<Precision,%1><Standard format,0>';

    PROCEDURE ComputeDescription@38(FinanceChargeTerms@1001 : Record 5;VAR Description@1003 : Text[100];VAR DocumentDate@1005 : Date;PostedDocumentNo@1006 : Code[20]);
    VAR
      Currency@1002 : Record 4;
      CustLedgerEntry@1000 : Record 21;
      Amount@1004 : Decimal;
    BEGIN
      // To fetch the Decimal Places from the computed Amount, used Format with Currency Decimal Precision.
      LibraryERM.FindCustomerLedgerEntry(CustLedgerEntry,CustLedgerEntry."Document Type"::Invoice,PostedDocumentNo);
      CustLedgerEntry.CALCFIELDS(Amount);
      Currency.GET(CustLedgerEntry."Currency Code");
      DocumentDate := CALCDATE('<1D>',CALCDATE(FinanceChargeTerms."Due Date Calculation",CustLedgerEntry."Due Date"));
      Amount :=
        ROUND(CustLedgerEntry.Amount * (DocumentDate - CustLedgerEntry."Due Date") / FinanceChargeTerms."Interest Period (Days)");
      Description :=
        STRSUBSTNO(
          LineDescriptionNew,FinanceChargeTerms."Interest Rate",Currency.Code,
          FORMAT(Amount,0,STRSUBSTNO(PrecisionText,Currency."Amount Decimal Places")));
    END;

    PROCEDURE CreateFinanceChargeTermAndText@14(VAR FinanceChargeTerms@1001 : Record 5);
    VAR
      FinanceChargeText@1000 : Record 301;
    BEGIN
      // Create Finance Charge Term with Random Interest Rate, Minimum Amount, Additional Amount, Grace Period, Interest Period and
      // Due Date Calculation. Add Beginning, Ending Text for it. Take Minimum Amount less so that Finance Charge Memo can generate.
      LibraryERM.CreateFinanceChargeTerms(FinanceChargeTerms);
      FinanceChargeTerms.VALIDATE("Interest Rate",LibraryRandom.RandInt(5));
      FinanceChargeTerms.VALIDATE("Minimum Amount (LCY)",1 + LibraryRandom.RandDec(1,2));
      FinanceChargeTerms.VALIDATE("Additional Fee (LCY)",LibraryRandom.RandInt(5));
      EVALUATE(FinanceChargeTerms."Grace Period",'<' + FORMAT(LibraryRandom.RandInt(5)) + 'D>');
      FinanceChargeTerms.VALIDATE("Interest Period (Days)",LibraryRandom.RandInt(30));
      EVALUATE(FinanceChargeTerms."Due Date Calculation",'<' + FORMAT(10 + LibraryRandom.RandInt(20)) + 'D>');
      FinanceChargeTerms.VALIDATE("Line Description",LineDescription);
      FinanceChargeTerms.VALIDATE("Post Additional Fee",TRUE);
      FinanceChargeTerms.VALIDATE("Post Interest",TRUE);
      FinanceChargeTerms.MODIFY(TRUE);
      LibraryERM.CreateFinanceChargeText(
        FinanceChargeText,FinanceChargeTerms.Code,FinanceChargeText.Position::Beginning,BegininingText);
      LibraryERM.CreateFinanceChargeText(FinanceChargeText,FinanceChargeTerms.Code,FinanceChargeText.Position::Ending,EndingText);
    END;

    BEGIN
    END.
  }
}

