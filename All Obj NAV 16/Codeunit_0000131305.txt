OBJECT Codeunit 131305 Library - ERM Country Data
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,NAVIN9.00.00,Test;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      LibraryERM@1500000 : Codeunit 131300;
      LibraryFiscalYear@1500001 : Codeunit 131302;
      LibraryInventory@1500002 : Codeunit 132201;

    PROCEDURE InitializeCountry@20();
    BEGIN
      EXIT;
    END;

    PROCEDURE CreateVATData@18();
    BEGIN
      CreateVATSetup;
    END;

    PROCEDURE SetupCostAccounting@19();
    BEGIN
      EXIT;
    END;

    PROCEDURE UpdateAccountInCustomerPostingGroup@1();
    BEGIN
      EXIT;
    END;

    PROCEDURE UpdateAccountInVendorPostingGroups@2();
    BEGIN
      EXIT;
    END;

    PROCEDURE UpdateAccountsInServiceContractAccountGroups@3();
    BEGIN
      EXIT;
    END;

    PROCEDURE UpdateAccountInServiceCosts@4();
    BEGIN
      EXIT;
    END;

    PROCEDURE UpdateCalendarSetup@9();
    BEGIN
      EXIT;
    END;

    PROCEDURE UpdateGeneralPostingSetup@5();
    BEGIN
      UpdateAccountsInGeneralPostingSetup;
    END;

    PROCEDURE UpdateInventoryPostingSetup@140();
    BEGIN
      EXIT;
    END;

    PROCEDURE UpdateGenJournalTemplate@6();
    BEGIN
      EXIT;
    END;

    PROCEDURE UpdateGeneralLedgerSetup@11();
    VAR
      GeneralLedgerSetup@1500000 : Record 98;
    BEGIN
      GeneralLedgerSetup.GET;
      GeneralLedgerSetup.VALIDATE("Activate Cheque No.",FALSE);
      GeneralLedgerSetup.MODIFY(TRUE);
    END;

    PROCEDURE UpdatePrepaymentAccounts@14();
    BEGIN
      EXIT;
    END;

    PROCEDURE UpdatePurchasesPayablesSetup@7();
    BEGIN
      EXIT;
    END;

    PROCEDURE UpdateSalesReceivablesSetup@8();
    BEGIN
      EXIT;
    END;

    PROCEDURE UpdateGenProdPostingGroup@13();
    BEGIN
      EXIT;
    END;

    PROCEDURE CreateGeneralPostingSetupData@10();
    BEGIN
      CreateMissingGeneralPostingSetup;
    END;

    PROCEDURE CreateUnitsOfMeasure@12();
    BEGIN
      EXIT;
    END;

    PROCEDURE CreateTransportMethodTableData@23();
    BEGIN
      EXIT;
    END;

    PROCEDURE UpdateFAPostingGroup@15();
    BEGIN
      EXIT;
    END;

    PROCEDURE UpdateFAPostingType@27();
    BEGIN
      EXIT;
    END;

    PROCEDURE UpdateFAJnlTemplateName@21();
    BEGIN
      EXIT;
    END;

    PROCEDURE CreateNewFiscalYear@16();
    BEGIN
      LibraryFiscalYear.CreateFiscalYear;
    END;

    PROCEDURE UpdateVATPostingSetup@17();
    BEGIN
      EXIT;
    END;

    PROCEDURE DisableActivateChequeNoOnGeneralLedgerSetup@22();
    VAR
      GeneralLedgerSetup@1500000 : Record 98;
    BEGIN
      GeneralLedgerSetup.GET;
      GeneralLedgerSetup.VALIDATE("Activate Cheque No.",FALSE);
      GeneralLedgerSetup.MODIFY(TRUE);
    END;

    PROCEDURE RemoveBlankGenJournalTemplate@24();
    BEGIN
      EXIT;
    END;

    PROCEDURE UpdateLocalPostingSetup@25();
    BEGIN
      EXIT;
    END;

    PROCEDURE UpdateLocalData@26();
    BEGIN
      EXIT;
    END;

    LOCAL PROCEDURE CreateVATSetup@1500009();
    VAR
      VATPostingSetup@1500012 : Record 325;
      VATPerc@1500013 : Integer;
    BEGIN
      VATPostingSetup.SETFILTER("VAT Prod. Posting Group",'<>%1','');
      IF VATPostingSetup.FINDSET THEN
      REPEAT
        VATPerc := GetVATPerc(VATPostingSetup."VAT Prod. Posting Group");
        IF VATPostingSetup."VAT %" <> VATPerc THEN BEGIN
          VATPostingSetup."VAT Identifier" := FORMAT(VATPerc);
          VATPostingSetup.VALIDATE("VAT %",VATPerc);
          VATPostingSetup."VAT %" := 0;
          VATPostingSetup.MODIFY(TRUE);
        END;
      UNTIL VATPostingSetup.NEXT = 0;
    END;

    LOCAL PROCEDURE CreateGLAccount@1500001() : Code[20];
    VAR
      GLAccount@1500007 : Record 15;
    BEGIN
      LibraryERM.CreateGLAccount(GLAccount);
      EXIT(GLAccount."No.");
    END;

    LOCAL PROCEDURE UpdateAccountsInGeneralPostingSetup@1500004();
    VAR
      NormalGenPostingSetup@1500002 : Record 252;
      GeneralPostingSetup@1500000 : Record 252;
      GLAccount@1500001 : Record 15;
    BEGIN
      LibraryInventory.SelectGenPostingSetup(NormalGenPostingSetup);
      WITH GeneralPostingSetup DO
        IF FINDSET(TRUE) THEN
          REPEAT
            IF "Purch. Account" = '' THEN
              VALIDATE("Purch. Account",NormalGenPostingSetup."Purch. Account");
            IF "Purch. Credit Memo Account" = '' THEN
              VALIDATE("Purch. Credit Memo Account",NormalGenPostingSetup."Purch. Credit Memo Account");
            IF "Inventory Adjmt. Account" = '' THEN
              VALIDATE("Inventory Adjmt. Account",NormalGenPostingSetup."Inventory Adjmt. Account");
            IF "COGS Account" = '' THEN
              VALIDATE("COGS Account",NormalGenPostingSetup."COGS Account");
            IF "Invt. Accrual Acc. (Interim)" = '' THEN
              VALIDATE("Invt. Accrual Acc. (Interim)",NormalGenPostingSetup."Invt. Accrual Acc. (Interim)");
            IF "COGS Account (Interim)" = '' THEN
              VALIDATE("COGS Account (Interim)",NormalGenPostingSetup."COGS Account (Interim)");
            IF "Purch. Prepayments Account" = '' THEN
              VALIDATE("Purch. Prepayments Account",NormalGenPostingSetup."Purch. Prepayments Account");
            IF "Sales Prepayments Account" = '' THEN
              VALIDATE("Sales Prepayments Account",NormalGenPostingSetup."Sales Prepayments Account");
            IF "Purch. Account (Trading)" = '' THEN
              VALIDATE("Purch. Account (Trading)",CreateGLAccount);
            IF "Purch. Account" = '' THEN
              VALIDATE("Purch. Account",CreateGLAccount);
            IF "Sales Account (Trading)" = '' THEN
              VALIDATE("Sales Account (Trading)",CreateGLAccount);
            IF "Sales Account" = '' THEN
              VALIDATE("Sales Account",CreateGLAccount);
            MODIFY(TRUE);
          UNTIL NEXT = 0;
    END;

    LOCAL PROCEDURE CreateMissingGeneralPostingSetup@1500010();
    VAR
      GeneralPostingSetup@1500005 : Record 252;
      GeneralBusinessPostingGroup@1500007 : Record 250;
      GeneralProductPostingGroup@1500008 : Record 251;
    BEGIN
      GeneralBusinessPostingGroup.FINDSET;
      REPEAT
        GeneralProductPostingGroup.FINDSET;
        REPEAT
          GeneralPostingSetup.RESET;
          IF NOT GeneralPostingSetup.GET(GeneralBusinessPostingGroup.Code,GeneralProductPostingGroup.Code) THEN
          BEGIN
            LibraryERM.CreateGeneralPostingSetup(GeneralPostingSetup,GeneralBusinessPostingGroup.Code,GeneralProductPostingGroup.Code);
            GeneralPostingSetup.VALIDATE("Sales Account",CreateGLAccount);
            GeneralPostingSetup.VALIDATE("Sales Line Disc. Account",GeneralPostingSetup."Sales Account");
            GeneralPostingSetup.VALIDATE("Sales Inv. Disc. Account",GeneralPostingSetup."Sales Account");
            GeneralPostingSetup.VALIDATE("Purch. Account",CreateGLAccount);
            GeneralPostingSetup.VALIDATE("Purch. Line Disc. Account",GeneralPostingSetup."Purch. Account");
            GeneralPostingSetup.VALIDATE("Purch. Inv. Disc. Account",GeneralPostingSetup."Purch. Account");
            GeneralPostingSetup.VALIDATE("Sales Credit Memo Account",GeneralPostingSetup."Sales Account");
            GeneralPostingSetup.VALIDATE("Purch. Credit Memo Account",GeneralPostingSetup."Purch. Account");
            GeneralPostingSetup.VALIDATE("Direct Cost Applied Account",CreateGLAccount);
            GeneralPostingSetup.VALIDATE("Overhead Applied Account",GeneralPostingSetup."Direct Cost Applied Account");
            GeneralPostingSetup.VALIDATE("Purchase Variance Account",GeneralPostingSetup."Purch. Account");
            GeneralPostingSetup.VALIDATE("COGS Account",GeneralPostingSetup."Overhead Applied Account");
            GeneralPostingSetup.VALIDATE("Inventory Adjmt. Account",GeneralPostingSetup."Overhead Applied Account");
            GeneralPostingSetup.MODIFY(TRUE);
          END;
        UNTIL  GeneralProductPostingGroup.NEXT = 0;
      UNTIL  GeneralBusinessPostingGroup.NEXT = 0;
    END;

    LOCAL PROCEDURE GetVATPerc@1500015(VATProdGroup@1170000000 : Code[10]) : Integer;
    VAR
      VATPerc@1500016 : Integer;
      i@1500017 : Integer;
      ValueFound@1500018 : Boolean;
    BEGIN
      i := 1;
      REPEAT
        ValueFound := EVALUATE(VATPerc,COPYSTR(VATProdGroup,i));
        i += 1;
      UNTIL (ValueFound AND (VATPerc <= 100)) OR (i > STRLEN(VATProdGroup));
      EXIT(VATPerc);
    END;

    PROCEDURE CreateGLAccountForPrepayment@1120000(GenBusPostingGroup@1120000 : Code[10];GenProdPostingGroup@1120001 : Code[10];GenPostingType@1120002 : Option) : Code[20];
    VAR
      GLAccount@1120003 : Record 15;
      VATPostingSetup@1120004 : Record 325;
    BEGIN
      LibraryERM.FindVATPostingSetup(VATPostingSetup,VATPostingSetup."VAT Calculation Type"::"Normal VAT");
      LibraryERM.CreateGLAccount(GLAccount);
      GLAccount.VALIDATE("Gen. Posting Type",GenPostingType);
      GLAccount.VALIDATE("Gen. Bus. Posting Group",GenBusPostingGroup);
      GLAccount.VALIDATE("Gen. Prod. Posting Group",GenProdPostingGroup);
      GLAccount.VALIDATE("VAT Bus. Posting Group",VATPostingSetup."VAT Bus. Posting Group");
      GLAccount.VALIDATE("VAT Prod. Posting Group",VATPostingSetup."VAT Prod. Posting Group");
      GLAccount.MODIFY(TRUE);
      EXIT(GLAccount."No.");
    END;

    BEGIN
    {
      Procedures to create demo data present in W1 but missing in countries
    }
    END.
  }
}

