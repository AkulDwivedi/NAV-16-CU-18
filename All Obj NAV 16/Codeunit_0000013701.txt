OBJECT Codeunit 13701 Excise Insert RG Registers
{
  OBJECT-PROPERTIES
  {
    Date=29-06-17;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.48822;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      RG23APartI@1280000 : Record 13719;
      RG23APartII@1280001 : Record 13720;
      RG23CPartI@1280004 : Record 13721;
      RG23CPartII@1280005 : Record 13722;
      RT12@1280006 : Record 13755;
      Location@1280003 : Record 14;
      CompanyInformation@1280002 : Record 79;
      PLAEntry@1280009 : Record 13723;
      ExcisePostingSetup@1280012 : Record 13711;
      RGEntryNo@1280007 : Integer;
      NextPLAEntryNo@1280010 : Integer;
      NextRGEntryNo@1280011 : Integer;
      ExciseCenvatClaim@1500010 : Record 16584;
      Text015@1280013 : TextConst 'ENU=You cannot reverse the transaction, because it has already been reversed.;ENN=You cannot reverse the transaction, because it has already been reversed.';
      Text16500@1500000 : TextConst 'ENU=Setup for %1 %2, %3 %4 does not exists.;ENN=Setup for %1 %2, %3 %4 does not exists.';
      Item@1500001 : Record 27;
      Text16501@1500003 : TextConst 'ENU=External Document No. %1 already exists for Sales Return.;ENN=External Document No. %1 already exists for Sales Return.';
      DetailedPLAEntry@1500007 : Record 16567;
      NextDetailedPLAEntryNo@1500006 : Integer;
      ECCNos@1500005 : Record 13708;
      Text16502@1500008 : TextConst 'ENU=E.C.C. No must not be blank.;ENN=E.C.C. No must not be blank.';
      Text16503@1500009 : TextConst 'ENU=The Entry No. selected in field %1 is either closed or does not exists.;ENN=The Entry No. selected in field %1 is either closed or does not exists.';
      Text16504@1500002 : TextConst 'ENU=Transaction cannot be completed because %1 cannot be negative in %2 table.;ENN=Transaction cannot be completed because %1 cannot be negative in %2 table.';
      GLSetup@1500013 : Record 98;
      SalesDocumentNo@1500011 : Code[20];
      SalesCancellation@1500012 : Boolean;
      RecItem@1500053 : Record 27;
      ItemLedgEntryNo@1500062 : Integer;
      RGSetOFfDate@1102601000 : Date;

    PROCEDURE InsertRG23APartIPurchase@1280000(PurchaseLine@1280000 : Record 39;PurchRcptHeader@1280001 : Record 120;ReturnShptHeader@1280002 : Record 6650);
    VAR
      NextRGEntryNo@1280003 : Integer;
      VENDor@1280006 : Record 23;
      RG23APartIRec@1280004 : Record 13719;
      PurchHeader@1500000 : Record 38;
    BEGIN
      WITH PurchaseLine DO BEGIN
        IF NOT "Excise Refund" THEN BEGIN
          PurchHeader.GET("Document Type","Document No.");
          IF PurchHeader.Trading THEN
            EXIT;
          RG23APartI.RESET;
          RG23APartI.LOCKTABLE;
          IF RG23APartI.FINDLAST THEN
            NextRGEntryNo := RG23APartI."Entry No." + 1
          ELSE
            NextRGEntryNo := 1;
          RG23APartI.INIT;
          RG23APartI."Entry No." := NextRGEntryNo;
          RG23APartI.Type := RG23APartI.Type::Purchase;
          RG23APartI."Item No." := "No.";
          RG23APartI.Description := Description;
          RecItem.GET("No.");
          RG23APartI."Base Unit Of Measure" := RecItem."Base Unit of Measure";
          RG23APartI."Line No." := "Line No.";
          IF "Qty. to Receive (Base)" <> 0 THEN BEGIN
            RG23APartI."Posting Date" := PurchRcptHeader."Posting Date";
            RG23APartI."Document No." := PurchRcptHeader."No.";
            RG23APartI."Order No." := PurchRcptHeader."Order No.";
            RG23APartI."Quantity Received" := "Qty. to Receive (Base)"
          END ELSE BEGIN
            RG23APartI."Posting Date" := ReturnShptHeader."Posting Date";
            RG23APartI."Document No." := ReturnShptHeader."No.";
            RG23APartI."Order No." := ReturnShptHeader."Return Order No.";
            RG23APartI."Quantity Received" := -"Return Qty. to Ship (Base)";
          END;
          RG23APartI."Quantity Consumed" := 0;
          RG23APartI."Quantity Sold" := 0;
          RG23APartI.Quantity := RG23APartI."Quantity Received";
          RG23APartI."Location Code" := "Location Code";
          CompanyInformation.GET;
          IF "Location Code" <> '' THEN BEGIN
            Location.GET("Location Code");
            RG23APartI."Location E.C.C. No." := Location."E.C.C. No."
          END ELSE
            RG23APartI."Location E.C.C. No." := CompanyInformation."E.C.C. No.";
          RG23APartI.Range := CompanyInformation."C.E. Range";
          RG23APartI.TESTFIELD("Location E.C.C. No.");
          IF ECCNos.GET(RG23APartI."Location E.C.C. No.") THEN
            RG23APartI."Type of Unit" := ECCNos."Type of Unit";

          RG23APartI."Sell-to/Buy-from No." := "Buy-from Vendor No.";
          IF VENDor.GET("Buy-from Vendor No.") THEN
            RG23APartI."Customer/Vendor E.C.C. No." := VENDor."E.C.C. No.";
          RG23APartI."External Document No." := PurchHeader."Vendor Invoice No.";
          RG23APartIRec.RESET;
          RG23APartIRec.SETCURRENTKEY("Location E.C.C. No.","Item No.");
          RG23APartIRec.SETRANGE("Location E.C.C. No.",RG23APartI."Location E.C.C. No.");
          RG23APartIRec.SETRANGE("Item No.","No.");
          RG23APartIRec.CALCSUMS(Quantity);
          RG23APartI."Opening Stock" := RG23APartIRec.Quantity;
          RG23APartI."Closing Stock" := RG23APartIRec.Quantity + RG23APartI.Quantity;
          GetRGEntryNo(RG23APartI."Posting Date",0,RG23APartI."Location E.C.C. No.",RG23APartI."Document No.",
            RG23APartI."RG Entry No.");
          RG23APartI.INSERT;
        END;
      END
    END;

    PROCEDURE InsertRG23APartIIPurchase@1280004(PurchLine@1280000 : Record 39;PurchRcptHeader@1280001 : Record 120;ReturnShptHeader@1280002 : Record 6650;ExciseDifference@1500010 : Boolean);
    VAR
      NextRGEntryNo@1280004 : Integer;
      ExcisePostingSetup@1280005 : Record 13711;
      TempRG23APartII@1280006 : Record 13720;
      PurchHeader@1500000 : Record 38;
      VENDor@1500001 : Record 23;
    BEGIN
      WITH PurchLine DO BEGIN
        IF NOT "Excise Refund" THEN BEGIN
          PurchHeader.GET("Document Type","Document No.");
          IF PurchHeader.Trading THEN
            EXIT;
          RG23APartII.LOCKTABLE;
          IF RG23APartII.FINDLAST THEN
            NextRGEntryNo := RG23APartII."Entry No." + 1
          ELSE
            NextRGEntryNo := 1;
          RG23APartII.INIT;
          RG23APartII."Entry No." := NextRGEntryNo;
          RG23APartII.Type := RG23APartII.Type::Purchase;
          RG23APartII."Line No." := "Line No.";
          RG23APartII."Location Code" := "Location Code";
          RG23APartII.CVD := CVD;
          IF "Location Code" <> '' THEN BEGIN
            Location.GET("Location Code");
            RG23APartII."Location E.C.C. No." := Location."E.C.C. No."
          END ELSE BEGIN
            CompanyInformation.GET;
            RG23APartII."Location E.C.C. No." := CompanyInformation."E.C.C. No.";
          END;
          RG23APartII.TESTFIELD("Location E.C.C. No.");
          RG23APartII."Vendor No." := "Buy-from Vendor No.";
          IF ECCNos.GET(RG23APartII."Location E.C.C. No.") THEN
            RG23APartII."Type of Unit" := ECCNos."Type of Unit";
          IF VENDor.GET("Buy-from Vendor No.") THEN
            RG23APartII."Vendor Type" := VENDor."Vendor Type";

          IF PurchHeader.GET("Document Type","Document No.") THEN BEGIN
            RG23APartII."Vendor Invoice No." := PurchHeader."Vendor Invoice No.";
            RG23APartII."Vendor Shipment No." := PurchHeader."Vendor Shipment No.";
            RG23APartII."Order No." := PurchHeader."No.";
          END;
          IF VENDor.GET("Buy-from Vendor No.") THEN
            RG23APartII."Vendor E.C.C. No." := VENDor."E.C.C. No.";
          IF "Qty. to Receive (Base)" <> 0 THEN BEGIN
            RG23APartII."Posting Date" := PurchRcptHeader."Posting Date";
            RG23APartII."Document No." := PurchRcptHeader."No.";
            IF "BED Amount" > 0 THEN
              RG23APartII."BED Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code","BED Amount",
                  PurchRcptHeader."Currency Factor")
            ELSE
              RG23APartII."BED Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("BED Amount"),
                  PurchRcptHeader."Currency Factor");

            IF "AED(GSI) Amount" > 0 THEN
              RG23APartII."AED(GSI) Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",
                  "AED(GSI) Amount",PurchRcptHeader."Currency Factor")
            ELSE
              RG23APartII."AED(GSI) Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",
                  ABS("AED(GSI) Amount"),PurchRcptHeader."Currency Factor");
            IF "AED(TTA) Amount" > 0 THEN
              RG23APartII."AED(TTA) Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",
                  "AED(TTA) Amount",PurchRcptHeader."Currency Factor")
            ELSE
              RG23APartII."AED(TTA) Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",
                  ABS("AED(TTA) Amount"),PurchRcptHeader."Currency Factor");
            IF  "SED Amount" > 0 THEN
              RG23APartII."SED Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code","SED Amount",
                  PurchRcptHeader."Currency Factor")
            ELSE
              RG23APartII."SED Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("SED Amount"),
                  PurchRcptHeader."Currency Factor");
            IF "SAED Amount" > 0 THEN
              RG23APartII."SAED Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code","SAED Amount",
                  PurchRcptHeader."Currency Factor")
            ELSE
              RG23APartII."SAED Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("SAED Amount"),
                  PurchRcptHeader."Currency Factor");
            IF "NCCD Amount" > 0 THEN
              RG23APartII."NCCD Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code","NCCD Amount",
                  PurchRcptHeader."Currency Factor")
            ELSE
              RG23APartII."NCCD Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("NCCD Amount"),
                  PurchRcptHeader."Currency Factor");
            IF "ADET Amount" > 0 THEN
              RG23APartII."ADET Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code","ADET Amount",
                  PurchRcptHeader."Currency Factor")
            ELSE
              RG23APartII."ADET Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("ADET Amount"),
                  PurchRcptHeader."Currency Factor");

            IF "ADE Amount" > 0 THEN
              RG23APartII."ADE Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code","ADE Amount",
                  PurchRcptHeader."Currency Factor")
            ELSE
              RG23APartII."ADE Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("ADE Amount"),
                  PurchRcptHeader."Currency Factor");
            IF "ADC VAT Amount" > 0 THEN
              RG23APartII."ADC VAT Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code","ADC VAT Amount",
                  PurchRcptHeader."Currency Factor")
            ELSE
              RG23APartII."ADC VAT Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("ADC VAT Amount"),
                  PurchRcptHeader."Currency Factor");

            IF "SetOff Available" THEN  BEGIN
              IF "eCess Amount" > 0 THEN
                RG23APartII."eCess Credit" :=
                  ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code","eCess Amount",
                    PurchRcptHeader."Currency Factor")
              ELSE
                RG23APartII."eCess Debit" :=
                  ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("eCess Amount"),
                    PurchRcptHeader."Currency Factor");
              IF "SHE Cess Amount" > 0 THEN
                RG23APartII."SHE Cess Credit" :=
                  ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("SHE Cess Amount"),
                    PurchRcptHeader."Currency Factor")
              ELSE
                RG23APartII."SHE Cess Debit" :=
                  ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("SHE Cess Amount"),
                    PurchRcptHeader."Currency Factor");
            END ELSE BEGIN
              RG23APartII."eCess Credit" := 0;
              RG23APartII."SHE Cess Credit" := 0;
            END;

            RG23APartII."Remaining BED Credit" := RG23APartII."BED Credit";
            RG23APartII."Remaining AED(GSI) Credit" := RG23APartII."AED(GSI) Credit";
            RG23APartII."Remaining SED Credit" := RG23APartII."SED Credit";
            RG23APartII."Remaining SAED Credit" := RG23APartII."SAED Credit";
            RG23APartII."Remaining NCCD Credit" := RG23APartII."NCCD Credit";
            RG23APartII."Remaining eCess Credit" := RG23APartII."eCess Credit";
            RG23APartII."Remaining ADET Credit" := RG23APartII."ADET Credit";
            RG23APartII."Remaining AED(TTA) Credit" := RG23APartII."AED(TTA) Credit";
            RG23APartII."Remaining ADE Credit" := RG23APartII."ADE Credit";
            RG23APartII."Remaining ADC VAT Credit" := RG23APartII."ADC VAT Credit";
            RG23APartII."Remaining SHECess Credit" := RG23APartII."SHE Cess Credit";
            RG23APartII."Remaining Excise Amount" := RG23APartII."Remaining BED Credit" + RG23APartII."Remaining AED(GSI) Credit" +
              RG23APartII."Remaining SED Credit" + RG23APartII."Remaining SAED Credit" + RG23APartII."Remaining NCCD Credit" +
              RG23APartII."Remaining eCess Credit" + RG23APartII."Remaining ADET Credit" + RG23APartII."Remaining AED(TTA) Credit" +
              RG23APartII."Remaining ADE Credit" + RG23APartII."Remaining ADC VAT Credit" +
              RG23APartII."Remaining SHECess Credit";
            IF ExciseDifference THEN
              AdjustCrEntriesRG23A(RG23APartII);
          END ELSE BEGIN
            RG23APartII."Posting Date" := ReturnShptHeader."Posting Date";
            RG23APartII."Document No." := ReturnShptHeader."No.";
            IF NOT ExciseDifference THEN BEGIN
              RG23APartII."BED Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("BED Amount"),
                  ReturnShptHeader."Currency Factor");
              RG23APartII."AED(GSI) Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",
                  ABS("AED(GSI) Amount"),ReturnShptHeader."Currency Factor");
              RG23APartII."AED(TTA) Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",
                  ABS("AED(TTA) Amount"),ReturnShptHeader."Currency Factor");
              RG23APartII."SED Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("SED Amount"),
                  ReturnShptHeader."Currency Factor");
              RG23APartII."SAED Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("SAED Amount"),
                  ReturnShptHeader."Currency Factor");
              RG23APartII."NCCD Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("NCCD Amount"),
                  ReturnShptHeader."Currency Factor");
              RG23APartII."ADET Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("ADET Amount"),
                  ReturnShptHeader."Currency Factor");
              RG23APartII."ADE Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("ADE Amount"),
                  ReturnShptHeader."Currency Factor");
              RG23APartII."ADC VAT Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("ADC VAT Amount"),
                  ReturnShptHeader."Currency Factor");
              IF "SetOff Available" THEN BEGIN
                RG23APartII."eCess Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("eCess Amount"),
                    ReturnShptHeader."Currency Factor");
                RG23APartII."SHE Cess Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("SHE Cess Amount"),
                    ReturnShptHeader."Currency Factor");
              END ELSE BEGIN
                RG23APartII."eCess Debit" := 0;
                RG23APartII."SHE Cess Debit" := 0;
              END;
              AdjustCrEntriesRG23A(RG23APartII);
            END ELSE BEGIN
              IF "BED Amount" > 0 THEN
                RG23APartII."BED Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("BED Amount"),
                    ReturnShptHeader."Currency Factor")
              ELSE
                RG23APartII."BED Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("BED Amount"),
                    ReturnShptHeader."Currency Factor");

              IF "AED(GSI) Amount" > 0 THEN
                RG23APartII."AED(GSI) Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",
                    ABS("AED(GSI) Amount"),ReturnShptHeader."Currency Factor")
              ELSE
                RG23APartII."AED(GSI) Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",
                    ABS("AED(GSI) Amount"),ReturnShptHeader."Currency Factor");
              IF "AED(TTA) Amount" > 0 THEN
                RG23APartII."AED(TTA) Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",
                    ABS("AED(TTA) Amount"),ReturnShptHeader."Currency Factor")
              ELSE
                RG23APartII."AED(TTA) Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",
                    ABS("AED(TTA) Amount"),ReturnShptHeader."Currency Factor");
              IF  "SED Amount" > 0 THEN
                RG23APartII."SED Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("SED Amount"),
                    ReturnShptHeader."Currency Factor")
              ELSE
                RG23APartII."SED Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("SED Amount"),
                    ReturnShptHeader."Currency Factor");
              IF "SAED Amount" > 0 THEN
                RG23APartII."SAED Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("SAED Amount"),
                    ReturnShptHeader."Currency Factor")
              ELSE
                RG23APartII."SAED Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("SAED Amount"),
                    ReturnShptHeader."Currency Factor");
              IF "NCCD Amount" > 0 THEN
                RG23APartII."NCCD Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("NCCD Amount"),
                    ReturnShptHeader."Currency Factor")
              ELSE
                RG23APartII."NCCD Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("NCCD Amount"),
                    ReturnShptHeader."Currency Factor");
              IF "ADET Amount" > 0 THEN
                RG23APartII."ADET Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("ADET Amount"),
                    ReturnShptHeader."Currency Factor")
              ELSE
                RG23APartII."ADET Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("ADET Amount"),
                    ReturnShptHeader."Currency Factor");

              IF "ADE Amount" > 0 THEN
                RG23APartII."ADE Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("ADE Amount"),
                    ReturnShptHeader."Currency Factor")
              ELSE
                RG23APartII."ADE Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("ADE Amount"),
                    ReturnShptHeader."Currency Factor");
              IF "ADC VAT Amount" > 0 THEN
                RG23APartII."ADC VAT Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("ADC VAT Amount"),
                    ReturnShptHeader."Currency Factor")
              ELSE
                RG23APartII."ADC VAT Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("ADC VAT Amount"),
                    ReturnShptHeader."Currency Factor");
              IF "SetOff Available" THEN  BEGIN
                IF "eCess Amount" > 0 THEN
                  RG23APartII."eCess Credit" :=
                    ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("eCess Amount"),
                      ReturnShptHeader."Currency Factor")
                ELSE
                  RG23APartII."eCess Debit" :=
                    ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("eCess Amount"),
                      ReturnShptHeader."Currency Factor");
                IF "SHE Cess Amount" > 0 THEN
                  RG23APartII."SHE Cess Credit" :=
                    ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("SHE Cess Amount"),
                      ReturnShptHeader."Currency Factor")
                ELSE
                  RG23APartII."SHE Cess Debit" :=
                    ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("SHE Cess Amount"),
                      ReturnShptHeader."Currency Factor");
              END ELSE BEGIN
                RG23APartII."eCess Debit" := 0;
                RG23APartII."SHE Cess Debit" := 0;
              END;
            END;
          END;

          TempRG23APartII.SETCURRENTKEY("Location E.C.C. No.");
          TempRG23APartII.SETRANGE("Location E.C.C. No.",RG23APartII."Location E.C.C. No.");
          IF TempRG23APartII.FINDLAST THEN BEGIN
            RG23APartII."Op. Bal. BED/AED" := TempRG23APartII."Total BED Amount" + TempRG23APartII."Total AED(GSI) Amount" +
              TempRG23APartII."Total AED(TTA) Amount";
            RG23APartII."Op. Bal. ODs" := TempRG23APartII."Total SED Amount" + TempRG23APartII."Total SAED Amount" +
              TempRG23APartII."Total NCCD Amount" + TempRG23APartII."Total eCess Amount" + TempRG23APartII."Total ADET Amount" +
              TempRG23APartII."Total ADE Amount" + TempRG23APartII."Total ADC VAT Amount" + TempRG23APartII."Total SHE Cess Amount";
            RG23APartII."Total BED Amount" := TempRG23APartII."Total BED Amount" + RG23APartII."BED Credit" - RG23APartII."BED Debit";
            RG23APartII."Total AED(GSI) Amount" :=
              TempRG23APartII."Total AED(GSI) Amount" + RG23APartII."AED(GSI) Credit" - RG23APartII."AED(GSI) Debit";
            RG23APartII."Total AED(TTA) Amount" :=
              TempRG23APartII."Total AED(TTA) Amount" + RG23APartII."AED(TTA) Credit" - RG23APartII."AED(TTA) Debit";
            RG23APartII."Total SED Amount" := TempRG23APartII."Total SED Amount" + RG23APartII."SED Credit" - RG23APartII."SED Debit";
            RG23APartII."Total SAED Amount" := TempRG23APartII."Total SAED Amount" + RG23APartII."SAED Credit" - RG23APartII.
              "SAED Debit";
            RG23APartII."Total CESS Amount" := TempRG23APartII."Total CESS Amount";
            RG23APartII."Total NCCD Amount" := TempRG23APartII."Total NCCD Amount" + RG23APartII."NCCD Credit" - RG23APartII.
              "NCCD Debit";
            RG23APartII."Total eCess Amount" :=
              TempRG23APartII."Total eCess Amount" + RG23APartII."eCess Credit" - RG23APartII."eCess Debit";
            RG23APartII."Total SHE Cess Amount" :=
              TempRG23APartII."Total SHE Cess Amount" + RG23APartII."SHE Cess Credit" - RG23APartII."SHE Cess Debit";
            RG23APartII."Total ADET Amount" :=
              TempRG23APartII."Total ADET Amount" + RG23APartII."ADET Credit" - RG23APartII."ADET Debit";
            RG23APartII."Total ADE Amount" := TempRG23APartII."Total ADE Amount" + RG23APartII."ADE Credit" - RG23APartII."ADE Debit";
            RG23APartII."Total ADC VAT Amount" := TempRG23APartII."Total ADC VAT Amount" + RG23APartII."ADC VAT Credit" -
              RG23APartII."ADC VAT Debit";
            RG23APartII."Closing Bal. BED/AED" :=
              RG23APartII."Op. Bal. BED/AED" + RG23APartII."BED Credit" + RG23APartII."AED(GSI) Credit" +
              RG23APartII."AED(TTA) Credit" - RG23APartII."BED Debit" - RG23APartII."AED(GSI) Debit" - RG23APartII."AED(TTA) Debit";
            RG23APartII."Closing Bal. Other Duties" :=
              RG23APartII."Op. Bal. ODs" + RG23APartII."SED Credit" + RG23APartII."SAED Credit" +
              RG23APartII."NCCD Credit" + RG23APartII."eCess Credit" - RG23APartII."SED Debit" - RG23APartII."SAED Debit" -
              RG23APartII."NCCD Debit" - RG23APartII."eCess Debit" + RG23APartII."ADET Credit" - RG23APartII."ADET Debit" +
              RG23APartII."ADE Credit" - RG23APartII."ADE Debit" + RG23APartII."ADC VAT Credit" - RG23APartII."ADC VAT Debit" +
              RG23APartII."SHE Cess Credit" - RG23APartII."SHE Cess Debit";
          END ELSE BEGIN
            RG23APartII."Op. Bal. BED/AED" := 0;
            RG23APartII."Op. Bal. ODs" := 0;
            RG23APartII."Total BED Amount" := RG23APartII."BED Credit" - RG23APartII."BED Debit";
            RG23APartII."Total AED(GSI) Amount" := RG23APartII."AED(GSI) Credit" - RG23APartII."AED(GSI) Debit";
            RG23APartII."Total AED(TTA) Amount" := RG23APartII."AED(TTA) Credit" - RG23APartII."AED(TTA) Debit";
            RG23APartII."Total SED Amount" := RG23APartII."SED Credit" - RG23APartII."SED Debit";
            RG23APartII."Total SAED Amount" := RG23APartII."SAED Credit" - RG23APartII."SAED Debit";
            RG23APartII."Total NCCD Amount" := RG23APartII."NCCD Credit" - RG23APartII."NCCD Debit";
            RG23APartII."Total eCess Amount" := RG23APartII."eCess Credit" - RG23APartII."eCess Debit";
            RG23APartII."Total SHE Cess Amount" := RG23APartII."SHE Cess Credit" - RG23APartII."SHE Cess Debit";
            RG23APartII."Total ADET Amount" := RG23APartII."ADET Credit" - RG23APartII."ADET Debit";
            RG23APartII."Total ADE Amount" := RG23APartII."ADE Credit" - RG23APartII."ADE Debit";
            RG23APartII."Total ADC VAT Amount" := RG23APartII."ADC VAT Credit" - RG23APartII."ADC VAT Debit";
            RG23APartII."Closing Bal. BED/AED" := RG23APartII."Op. Bal. BED/AED" + RG23APartII."BED Credit" + RG23APartII.
              "AED(GSI) Credit" + RG23APartII."AED(TTA) Credit" - RG23APartII."BED Debit" - RG23APartII."AED(GSI) Debit" -
              RG23APartII."AED(TTA) Debit";
            RG23APartII."Closing Bal. Other Duties" :=
              RG23APartII."Op. Bal. ODs" + RG23APartII."SED Credit" + RG23APartII."SAED Credit" +
              RG23APartII."NCCD Credit" + RG23APartII."eCess Credit" - RG23APartII."SED Debit" - RG23APartII."SAED Debit" -
              RG23APartII."NCCD Debit" - RG23APartII."eCess Debit" + RG23APartII."ADET Credit" - RG23APartII."ADET Debit" +
              RG23APartII."ADE Credit" - RG23APartII."ADE Debit" + RG23APartII."SHE Cess Credit" - RG23APartII."SHE Cess Debit";
          END;
          RG23APartII."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
          RG23APartII."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
          ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
          ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
          ExcisePostingSetup.SETRANGE("From Date",0D,RG23APartII."Posting Date");
          ExcisePostingSetup.FINDLAST;
          IF Subcontracting THEN
            RG23APartII."Cenvat Cr. Receivable Account" := "No."
          ELSE
            RG23APartII."Cenvat Cr. Receivable Account" := ExcisePostingSetup."Cenvat Cr. Receivable Account";
          RG23APartII.Supplementary := Supplementary;
          RG23APartII."Source Document Type" := "Source Document Type";
          RG23APartII."Source Document No." := "Source Document No.";
          GetRGEntryNo(RG23APartII."Posting Date",1,RG23APartII."Location E.C.C. No.",RG23APartII."Document No.",
            RG23APartII."RG Entry No.");
          GLSetup.GET;
          IF GLSetup."Check Negative RG Balance" THEN
            CheckNegativeBalance(1);
          RG23APartII.INSERT;
        END;
      END;
    END;

    PROCEDURE InsertRG23CPartIPurchase@1280005(PurchLine@1280000 : Record 39;PurchRcptHeader@1280001 : Record 120;ReturnShptHeader@1280002 : Record 6650);
    VAR
      VENDor@1280005 : Record 23;
      RG23CPartIRec@1280006 : Record 13721;
      NextRGEntryNo@1280004 : Integer;
      PurchHeader@1500000 : Record 38;
    BEGIN
      WITH PurchLine DO BEGIN
        IF NOT "Excise Refund" THEN BEGIN
          PurchHeader.GET("Document Type","Document No.");
          IF PurchHeader.Trading THEN
            EXIT;
          RG23CPartI.LOCKTABLE;
          IF RG23CPartI.FINDLAST THEN
            NextRGEntryNo := RG23CPartI."Entry No." + 1
          ELSE
            NextRGEntryNo := 1;
          RG23CPartI.INIT;
          RG23CPartI."Entry No." := NextRGEntryNo;
          RG23CPartI.Type := RG23CPartI.Type::Purchase;
          IF Type = Type::Item THEN
            RG23CPartI."Product Type" := RG23CPartI."Product Type"::Item;
          IF Type = Type::"Fixed Asset" THEN
            RG23CPartI."Product Type" := RG23CPartI."Product Type"::FA;
          RG23CPartI."FA No./ Item No." := "No.";
          RG23CPartI.Description := Description;
          RG23CPartI."Line No." := "Line No.";
          IF "Qty. to Receive (Base)" <> 0 THEN BEGIN
            RG23CPartI."Posting Date" := PurchRcptHeader."Posting Date";
            RG23CPartI."Document No." := PurchRcptHeader."No.";
            RG23CPartI."Order No." := PurchRcptHeader."Order No.";
            RG23CPartI."Quantity Received" := "Qty. to Receive (Base)";
          END ELSE BEGIN
            RG23CPartI."Posting Date" := ReturnShptHeader."Posting Date";
            RG23CPartI."Document No." := ReturnShptHeader."No.";
            RG23CPartI."Order No." := ReturnShptHeader."Return Order No.";
            RG23CPartI."Quantity Received" := -"Return Qty. to Ship (Base)";
          END;
          RG23CPartI."Quantity Sold" := 0;
          RG23CPartI."Quantity Consumed" := 0;
          RG23CPartI.Quantity := RG23CPartI."Quantity Received";
          RG23CPartI."Sell-to/Buy-from No." := "Buy-from Vendor No.";
          RG23CPartI."Vendor Shipment No." := "Vendor Shipment No.";
          IF VENDor.GET("Buy-from Vendor No.") THEN
            RG23CPartI."Customer/Vendor E.C.C. No." := VENDor."E.C.C. No.";
          RG23CPartI."Location Code" := "Location Code";
          IF "Location Code" <> '' THEN BEGIN
            Location.GET("Location Code");
            RG23CPartI."Location E.C.C. No." := Location."E.C.C. No."
          END ELSE BEGIN
            CompanyInformation.GET;
            RG23CPartI."Location E.C.C. No." := CompanyInformation."E.C.C. No.";
          END;
          RG23CPartI."Vendor Shipment No." := PurchHeader."Vendor Shipment No.";
          IF ECCNos.GET(RG23CPartI."Location E.C.C. No.") THEN
            RG23CPartI."Type of Unit" := ECCNos."Type of Unit";

          RG23CPartIRec.RESET;
          RG23CPartIRec.SETCURRENTKEY("Location E.C.C. No.","FA No./ Item No.");
          RG23CPartIRec.SETRANGE("Location E.C.C. No.",RG23CPartI."Location E.C.C. No.");
          RG23CPartIRec.SETRANGE("FA No./ Item No.","No.");
          RG23CPartIRec.CALCSUMS(Quantity);
          RG23CPartI."Opening Stock" := RG23CPartIRec.Quantity;
          RG23CPartI."Closing Stock" := RG23CPartIRec.Quantity + RG23CPartI.Quantity;
          GetRGEntryNo(RG23CPartI."Posting Date",2,RG23CPartI."Location E.C.C. No.",RG23CPartI."Document No.",
            RG23CPartI."RG Entry No.");
          RG23CPartI.INSERT;
        END;
      END;
    END;

    PROCEDURE InsertRG23CPartIIPurchase@1280011(PurchLine@1280000 : Record 39;PurchRcptHeader@1280001 : Record 120;ReturnShptHeader@1280002 : Record 6650;ExciseDifference@1500010 : Boolean);
    VAR
      NextRGEntryNo@1280004 : Integer;
      TempRG23CPartII@1280005 : Record 13722;
      ExcisePostingSetup@1280006 : Record 13711;
      PurchHeader@1500000 : Record 38;
      VENDor@1500001 : Record 23;
      TempRG23CPartII2@1500002 : TEMPORARY Record 13722;
    BEGIN
      WITH PurchLine DO BEGIN
        IF NOT "Excise Refund" THEN BEGIN
          PurchHeader.GET("Document Type","Document No.");
          IF PurchHeader.Trading THEN
            EXIT;
          RG23CPartII.LOCKTABLE;
          IF RG23CPartII.FINDLAST THEN
            NextRGEntryNo := RG23CPartII."Entry No." + 1
          ELSE
            NextRGEntryNo := 1;

          RG23CPartII.INIT;
          RG23CPartII."Entry No." := NextRGEntryNo;
          RG23CPartII.Type := RG23CPartII.Type::Purchase;
          RG23CPartII."Line No." := "Line No.";
          RG23CPartII.CVD := CVD;
          RG23CPartII."Location Code" := "Location Code";
          IF "Location Code" <> '' THEN BEGIN
            Location.GET("Location Code");
            RG23CPartII."Location E.C.C. No." := Location."E.C.C. No."
          END ELSE BEGIN
            CompanyInformation.GET;
            RG23CPartII."Location E.C.C. No." := CompanyInformation."E.C.C. No.";
          END;
          RG23CPartII.TESTFIELD("Location E.C.C. No.");
          IF ECCNos.GET(RG23CPartII."Location E.C.C. No.") THEN
            RG23CPartII."Type of Unit" := ECCNos."Type of Unit";
          IF VENDor.GET("Buy-from Vendor No.") THEN
            RG23CPartII."Vendor Type" := VENDor."Vendor Type";

          RG23CPartII."Vendor No." := "Buy-from Vendor No.";
          IF PurchHeader.GET("Document Type","Document No.") THEN BEGIN
            RG23CPartII."Vendor Invoice No." := PurchHeader."Vendor Invoice No.";
            RG23CPartII."Vendor Shipment No." := PurchHeader."Vendor Shipment No.";
            RG23CPartII."Order no." := PurchHeader."No.";
          END;
          IF VENDor.GET("Buy-from Vendor No.") THEN
            RG23CPartII."Vendor E.C.C. No." := VENDor."E.C.C. No.";
          IF "Qty. to Receive (Base)" <> 0 THEN BEGIN
            RG23CPartII."Posting Date" := PurchRcptHeader."Posting Date";
            RG23CPartII."Document No." := PurchRcptHeader."No.";
            IF "BED Amount" > 0 THEN
              RG23CPartII."BED Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code","BED Amount",
                  PurchRcptHeader."Currency Factor")
            ELSE
              RG23CPartII."BED Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("BED Amount"),
                  PurchRcptHeader."Currency Factor");
            IF "AED(GSI) Amount" > 0 THEN
              RG23CPartII."AED(GSI) Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",
                  "AED(GSI) Amount",PurchRcptHeader."Currency Factor")
            ELSE
              RG23CPartII."AED(GSI) Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",
                  ABS("AED(GSI) Amount"),PurchRcptHeader."Currency Factor");
            IF  "AED(TTA) Amount" > 0 THEN
              RG23CPartII."AED(TTA) Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",
                  "AED(TTA) Amount",PurchRcptHeader."Currency Factor")
            ELSE
              RG23CPartII."AED(TTA) Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",
                  ABS("AED(TTA) Amount"),PurchRcptHeader."Currency Factor");
            IF "SED Amount" > 0 THEN
              RG23CPartII."SED Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code","SED Amount",
                  PurchRcptHeader."Currency Factor")
            ELSE
              RG23CPartII."SED Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("SED Amount"),
                  PurchRcptHeader."Currency Factor");
            IF "SAED Amount" > 0 THEN
              RG23CPartII."SAED Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code","SAED Amount",
                  PurchRcptHeader."Currency Factor")
            ELSE
              RG23CPartII."SAED Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("SAED Amount"),
                  PurchRcptHeader."Currency Factor");
            IF "NCCD Amount" > 0 THEN
              RG23CPartII."NCCD Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code","NCCD Amount",
                  PurchRcptHeader."Currency Factor")
            ELSE
              RG23CPartII."NCCD Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("NCCD Amount"),
                  PurchRcptHeader."Currency Factor");

            IF "ADET Amount" > 0 THEN
              RG23CPartII."ADET Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code","ADET Amount",
                  PurchRcptHeader."Currency Factor")
            ELSE
              RG23CPartII."ADET Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("ADET Amount"),
                  PurchRcptHeader."Currency Factor");

            IF "ADE Amount" > 0 THEN
              RG23CPartII."ADE Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code","ADE Amount",
                  PurchRcptHeader."Currency Factor")
            ELSE
              RG23CPartII."ADE Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("ADE Amount"),
                  PurchRcptHeader."Currency Factor");
            IF "ADC VAT Amount" > 0 THEN
              RG23CPartII."ADC VAT Credit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code","ADC VAT Amount",
                  PurchRcptHeader."Currency Factor")
            ELSE
              RG23CPartII."ADC VAT Debit" :=
                ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("ADC VAT Amount"),
                  PurchRcptHeader."Currency Factor");
            IF "SetOff Available" THEN BEGIN
              IF "eCess Amount" > 0 THEN
                RG23CPartII."eCess Credit" :=
                  ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code","eCess Amount",
                    PurchRcptHeader."Currency Factor")
              ELSE
                RG23CPartII."eCess Debit" :=
                  ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("eCess Amount"),
                    PurchRcptHeader."Currency Factor");
              IF "SHE Cess Amount" > 0 THEN
                RG23CPartII."SHE Cess Credit" :=
                  ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code","SHE Cess Amount",
                    PurchRcptHeader."Currency Factor")
              ELSE
                RG23CPartII."SHE Cess Debit" :=
                  ConvertAmountFCY2LCY(PurchRcptHeader."Posting Date",PurchRcptHeader."Currency Code",ABS("SHE Cess Amount"),
                    PurchRcptHeader."Currency Factor");
            END ELSE BEGIN
              RG23CPartII."eCess Credit" := 0;
              RG23CPartII."SHE Cess Credit" := 0;
            END;

            RG23CPartII."Remaining BED Credit" := ROUND(RG23CPartII."BED Credit" * 0.5);
            RG23CPartII."Remaining AED(GSI) Credit" := ROUND(RG23CPartII."AED(GSI) Credit" * 0.5);
            RG23CPartII."Remaining SED Credit" := ROUND(RG23CPartII."SED Credit" * 0.5);
            RG23CPartII."Remaining SAED Credit" := ROUND(RG23CPartII."SAED Credit" * 0.5);
            RG23CPartII."Remaining NCCD Credit" := ROUND(RG23CPartII."NCCD Credit" * 0.5);
            RG23CPartII."Remaining eCess Credit" := ROUND(RG23CPartII."eCess Credit" * 0.5);
            RG23CPartII."Remaining ADET Credit" := ROUND(RG23CPartII."ADET Credit" * 0.5);
            RG23CPartII."Remaining AED(TTA) Credit" := ROUND(RG23CPartII."AED(TTA) Credit" * 0.5);
            RG23CPartII."Remaining ADE Credit" := ROUND(RG23CPartII."ADE Credit" * 0.5);
            RG23CPartII."Remaining ADC VAT Credit" := ROUND(RG23CPartII."ADC VAT Credit");
            RG23CPartII."Remaining SHECess Credit" := ROUND(RG23CPartII."SHE Cess Credit" * 0.5);
            RG23CPartII."Remaining Excise Amount" := RG23CPartII."Remaining BED Credit" + RG23CPartII."Remaining AED(GSI) Credit" +
              RG23CPartII."Remaining SED Credit" + RG23CPartII."Remaining SAED Credit" + RG23CPartII."Remaining NCCD Credit" +
              RG23CPartII."Remaining eCess Credit" + RG23CPartII."Remaining ADET Credit" + RG23CPartII."Remaining AED(TTA) Credit" +
              RG23CPartII."Remaining ADE Credit" + RG23CPartII."Remaining ADC VAT Credit" +
              RG23CPartII."Remaining SHECess Credit";
            IF ExciseDifference THEN BEGIN
              TempRG23CPartII2.INIT;
              TempRG23CPartII2.TRANSFERFIELDS(RG23CPartII);
              TempRG23CPartII2."BED Debit" := ROUND(TempRG23CPartII2."BED Debit" * 0.5);
              TempRG23CPartII2."AED(GSI) Debit" := ROUND(TempRG23CPartII2."AED(GSI) Debit" * 0.5);
              TempRG23CPartII2."SAED Debit" := ROUND(TempRG23CPartII2."SAED Debit" * 0.5);
              TempRG23CPartII2."NCCD Debit" := ROUND(TempRG23CPartII2."NCCD Debit" * 0.5);
              TempRG23CPartII2."eCess Debit" := ROUND(TempRG23CPartII2."eCess Debit" * 0.5);
              TempRG23CPartII2."SED Debit" := ROUND(TempRG23CPartII2."SED Debit" * 0.5);
              TempRG23CPartII2."ADET Debit" := ROUND(TempRG23CPartII2."ADET Debit" * 0.5);
              TempRG23CPartII2."AED(TTA) Debit" := ROUND(TempRG23CPartII2."AED(TTA) Debit" * 0.5);
              TempRG23CPartII2."ADE Debit" := ROUND(TempRG23CPartII2."ADE Debit" * 0.5);
              TempRG23CPartII2."SHE Cess Debit" := ROUND(TempRG23CPartII2."SHE Cess Debit" * 0.5);
              TempRG23CPartII2."ADC VAT Debit" := ROUND(TempRG23CPartII2."ADC VAT Debit" * 0.5);
              AdjustCrEntriesRG23C(TempRG23CPartII2);
            END;
          END ELSE BEGIN
            RG23CPartII."Posting Date" := ReturnShptHeader."Posting Date";
            RG23CPartII."Document No." := ReturnShptHeader."No.";
            IF NOT ExciseDifference THEN BEGIN
              RG23CPartII."BED Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("BED Amount"),
                  ReturnShptHeader."Currency Factor");
              RG23CPartII."AED(GSI) Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",
                  ABS("AED(GSI) Amount"),ReturnShptHeader."Currency Factor");
              RG23CPartII."AED(TTA) Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",
                  ABS("AED(TTA) Amount"),ReturnShptHeader."Currency Factor");
              RG23CPartII."SED Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("SED Amount"),
                  ReturnShptHeader."Currency Factor");
              RG23CPartII."SAED Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("SAED Amount"),
                  ReturnShptHeader."Currency Factor");
              RG23CPartII."NCCD Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("NCCD Amount"),
                  ReturnShptHeader."Currency Factor");
              RG23CPartII."ADET Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("ADET Amount"),
                  ReturnShptHeader."Currency Factor");
              RG23CPartII."ADE Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("ADE Amount"),
                  ReturnShptHeader."Currency Factor");
              RG23CPartII."ADC VAT Debit" :=
                ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("ADC VAT Amount"),
                  ReturnShptHeader."Currency Factor");
              IF "SetOff Available" THEN BEGIN
                RG23CPartII."eCess Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("eCess Amount"),
                    ReturnShptHeader."Currency Factor");
                RG23CPartII."SHE Cess Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("SHE Cess Amount"),
                    ReturnShptHeader."Currency Factor");
              END ELSE BEGIN
                RG23CPartII."eCess Debit" := 0;
                RG23CPartII."SHE Cess Debit" := 0;
              END;
              AdjustCrEntriesRG23C(RG23CPartII);
            END ELSE BEGIN
              IF "BED Amount" > 0 THEN
                RG23CPartII."BED Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code","BED Amount",
                    ReturnShptHeader."Currency Factor")
              ELSE
                RG23CPartII."BED Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("BED Amount"),
                    ReturnShptHeader."Currency Factor");
              IF "AED(GSI) Amount" > 0 THEN
                RG23CPartII."AED(GSI) Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",
                    "AED(GSI) Amount",ReturnShptHeader."Currency Factor")
              ELSE
                RG23CPartII."AED(GSI) Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",
                    ABS("AED(GSI) Amount"),ReturnShptHeader."Currency Factor");
              IF  "AED(TTA) Amount" > 0 THEN
                RG23CPartII."AED(TTA) Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",
                    "AED(TTA) Amount",ReturnShptHeader."Currency Factor")
              ELSE
                RG23CPartII."AED(TTA) Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",
                    ABS("AED(TTA) Amount"),ReturnShptHeader."Currency Factor");
              IF "SED Amount" > 0 THEN
                RG23CPartII."SED Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code","SED Amount",
                    ReturnShptHeader."Currency Factor")
              ELSE
                RG23CPartII."SED Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("SED Amount"),
                    ReturnShptHeader."Currency Factor");
              IF "SAED Amount" > 0 THEN
                RG23CPartII."SAED Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code","SAED Amount",
                    ReturnShptHeader."Currency Factor")
              ELSE
                RG23CPartII."SAED Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("SAED Amount"),
                    ReturnShptHeader."Currency Factor");
              IF "NCCD Amount" > 0 THEN
                RG23CPartII."NCCD Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code","NCCD Amount",
                    ReturnShptHeader."Currency Factor")
              ELSE
                RG23CPartII."NCCD Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("NCCD Amount"),
                    ReturnShptHeader."Currency Factor");

              IF "ADET Amount" > 0 THEN
                RG23CPartII."ADET Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code","ADET Amount",
                    ReturnShptHeader."Currency Factor")
              ELSE
                RG23CPartII."ADET Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("ADET Amount"),
                    ReturnShptHeader."Currency Factor");

              IF "ADE Amount" > 0 THEN
                RG23CPartII."ADE Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code","ADE Amount",
                    ReturnShptHeader."Currency Factor")
              ELSE
                RG23CPartII."ADE Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("ADE Amount"),
                    ReturnShptHeader."Currency Factor");
              IF "ADC VAT Amount" > 0 THEN
                RG23CPartII."ADC VAT Credit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code","ADC VAT Amount",
                    ReturnShptHeader."Currency Factor")
              ELSE
                RG23CPartII."ADC VAT Debit" :=
                  ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("ADC VAT Amount"),
                    ReturnShptHeader."Currency Factor");
              IF "SetOff Available" THEN BEGIN
                IF "eCess Amount" > 0 THEN
                  RG23CPartII."eCess Credit" :=
                    ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code","eCess Amount",
                      ReturnShptHeader."Currency Factor")
                ELSE
                  RG23CPartII."eCess Debit" :=
                    ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("eCess Amount"),
                      ReturnShptHeader."Currency Factor");
                IF "SHE Cess Amount" > 0 THEN
                  RG23CPartII."SHE Cess Credit" :=
                    ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code","SHE Cess Amount",
                      ReturnShptHeader."Currency Factor")
                ELSE
                  RG23CPartII."SHE Cess Debit" :=
                    ConvertAmountFCY2LCY(ReturnShptHeader."Posting Date",ReturnShptHeader."Currency Code",ABS("SHE Cess Amount"),
                      ReturnShptHeader."Currency Factor");
              END ELSE BEGIN
                RG23CPartII."eCess Debit" := 0;
                RG23CPartII."SHE Cess Debit" := 0;
              END;
            END;
          END;

          TempRG23CPartII.SETCURRENTKEY("Location E.C.C. No.");
          TempRG23CPartII.SETRANGE("Location E.C.C. No.",RG23CPartII."Location E.C.C. No.");
          IF TempRG23CPartII.FINDLAST THEN BEGIN
            RG23CPartII."Opening Balance Credit CY" :=
              TempRG23CPartII."Total BED for Current Year" +
              TempRG23CPartII."Total AED(GSI) for CY" + TempRG23CPartII."Total SED for Current Year" +
              TempRG23CPartII."Total SAED for Current Year" + TempRG23CPartII."Total eCess for Current Year" +
              TempRG23CPartII."Total NCCD for Current Year" + TempRG23CPartII."Total CESS for Current Year" +
              TempRG23CPartII."Total ADET for Current Year" + TempRG23CPartII."Total AED(TTA) for CY" +
              TempRG23CPartII."Total ADE for Current Year" + TempRG23CPartII."Total ADC VAT for CY" +
              TempRG23CPartII."Total SHECESS for Current Year";
            RG23CPartII."Total BED for Current Year" :=
              TempRG23CPartII."Total BED for Current Year" +
              ROUND(RG23CPartII."BED Credit" * 0.5) - ROUND(RG23CPartII."BED Debit" * 0.5
                );
            RG23CPartII."Total BED for Next Year" :=
              TempRG23CPartII."Total BED for Next Year" + ROUND(RG23CPartII."BED Credit" * 0.5) - ROUND(RG23CPartII."BED Debit" * 0.5);
            RG23CPartII."Total AED(GSI) for CY" :=
              TempRG23CPartII."Total AED(GSI) for CY" + ROUND(RG23CPartII."AED(GSI) Credit" * 0.5) -
              ROUND(RG23CPartII."AED(GSI) Debit" * 0.5);
            RG23CPartII."Total AED(GSI) for Next Year" :=
              TempRG23CPartII."Total AED(GSI) for Next Year" + ROUND(RG23CPartII."AED(GSI) Credit" * 0.5) -
              ROUND(RG23CPartII."AED(GSI) Debit" * 0.5);
            RG23CPartII."Total AED(TTA) for CY" :=
              TempRG23CPartII."Total AED(TTA) for CY" + ROUND(RG23CPartII."AED(TTA) Credit" * 0.5) -
              ROUND(RG23CPartII."AED(TTA) Debit" * 0.5);
            RG23CPartII."Total AED(TTA) for Next Year" :=
              TempRG23CPartII."Total AED(TTA) for Next Year" + ROUND(RG23CPartII."AED(TTA) Credit" * 0.5) -
              ROUND(RG23CPartII."AED(TTA) Debit" * 0.5);
            RG23CPartII."Total SED for Current Year" :=
              TempRG23CPartII."Total SED for Current Year" +
              ROUND(RG23CPartII."SED Credit" * 0.5) - ROUND(RG23CPartII."SED Debit" * 0.5
                );
            RG23CPartII."Total SED for Next Year" :=
              TempRG23CPartII."Total SED for Next Year" + ROUND(RG23CPartII."SED Credit" * 0.5) - ROUND(RG23CPartII."SED Debit" * 0.5);
            RG23CPartII."Total SAED for Current Year" :=
              TempRG23CPartII."Total SAED for Current Year" + ROUND(RG23CPartII."SAED Credit" * 0.5) -
              ROUND(RG23CPartII."SAED Debit" * 0.5);
            RG23CPartII."Total SAED for Next Year" :=
              TempRG23CPartII."Total SAED for Next Year" +
              ROUND(RG23CPartII."SAED Credit" * 0.5) - ROUND(RG23CPartII."SAED Debit" * 0.5
                );
            RG23CPartII."Total NCCD for Current Year" :=
              TempRG23CPartII."Total NCCD for Current Year" + ROUND(RG23CPartII."NCCD Credit" * 0.5) -
              ROUND(RG23CPartII."NCCD Debit" * 0.5);
            RG23CPartII."Total NCCD for Next Year" :=
              TempRG23CPartII."Total NCCD for Next Year" +
              ROUND(RG23CPartII."NCCD Credit" * 0.5) - ROUND(RG23CPartII."NCCD Debit" * 0.5
                );
            RG23CPartII."Total ADET for Current Year" :=
              TempRG23CPartII."Total ADET for Current Year" + ROUND(RG23CPartII."ADET Credit" * 0.5) -
              ROUND(RG23CPartII."ADET Debit" * 0.5);
            RG23CPartII."Total ADET for Next Year" :=
              TempRG23CPartII."Total ADET for Next Year" +
              ROUND(RG23CPartII."ADET Credit" * 0.5) - ROUND(RG23CPartII."ADET Debit" * 0.5
                );
            RG23CPartII."Total ADE for Current Year" :=
              TempRG23CPartII."Total ADE for Current Year" + ROUND(RG23CPartII."ADE Credit" * 0.5) -
              ROUND(RG23CPartII."ADE Debit" * 0.5);
            RG23CPartII."Total ADE for Next Year" :=
              TempRG23CPartII."Total ADE for Next Year" + ROUND(RG23CPartII."ADE Credit" * 0.5) - ROUND(RG23CPartII."ADE Debit" * 0.5);
            RG23CPartII."Total ADC VAT for CY" :=
              TempRG23CPartII."Total ADC VAT for CY" + ROUND(RG23CPartII."ADC VAT Credit") - ROUND(RG23CPartII."ADC VAT Debit");

            IF "SetOff Available" THEN BEGIN
              RG23CPartII."Total eCess for Current Year" :=
                TempRG23CPartII."Total eCess for Current Year" + ROUND(RG23CPartII."eCess Credit" * 0.5) -
                ROUND(RG23CPartII."eCess Debit" * 0.5);
              RG23CPartII."Total eCess for Next Year" :=
                TempRG23CPartII."Total eCess for Next Year" + ROUND(RG23CPartII."eCess Credit" * 0.5) -
                ROUND(RG23CPartII."eCess Debit" * 0.5);
              RG23CPartII."Total SHECESS for Current Year" :=
                TempRG23CPartII."Total SHECESS for Current Year" + ROUND(RG23CPartII."SHE Cess Credit" * 0.5) -
                ROUND(RG23CPartII."SHE Cess Debit" * 0.5);
              RG23CPartII."Total SHECESS for Next Year" :=
                TempRG23CPartII."Total SHECESS for Next Year" + ROUND(RG23CPartII."SHE Cess Credit" * 0.5) -
                ROUND(RG23CPartII."SHE Cess Debit" * 0.5);
            END ELSE BEGIN
              RG23CPartII."Total eCess for Current Year" := TempRG23CPartII."Total eCess for Current Year";
              RG23CPartII."Total eCess for Next Year" := TempRG23CPartII."Total eCess for Next Year";
              RG23CPartII."Total SHECESS for Current Year" := TempRG23CPartII."Total SHECESS for Current Year";
              RG23CPartII."Total SHECESS for Next Year" := TempRG23CPartII."Total SHECESS for Next Year";
            END;
            RG23CPartII."Closing Balance Credit CY" :=
              RG23CPartII."Total BED for Current Year" +
              RG23CPartII."Total AED(GSI) for CY" + RG23CPartII."Total AED(TTA) for CY" +
              RG23CPartII."Total SED for Current Year" + RG23CPartII."Total SAED for Current Year" +
              RG23CPartII."Total eCess for Current Year" + RG23CPartII."Total NCCD for Current Year" +
              RG23CPartII."Total CESS for Current Year" + RG23CPartII."Total ADET for Current Year" +
              RG23CPartII."Total ADE for Current Year" + RG23CPartII."Total ADC VAT for CY" +
              RG23CPartII."Total SHECESS for Current Year";
          END ELSE BEGIN
            RG23CPartII."Opening Balance Credit CY" := 0;
            RG23CPartII."Total BED for Current Year" := ROUND(RG23CPartII."BED Credit" * 0.5) -
              ROUND(RG23CPartII."BED Debit" * 0.5);
            RG23CPartII."Total BED for Next Year" := ROUND(RG23CPartII."BED Credit" * 0.5) -
              ROUND(RG23CPartII."BED Debit" * 0.5);
            RG23CPartII."Total AED(GSI) for CY" := ROUND(RG23CPartII."AED(GSI) Credit" * 0.5) -
              ROUND(RG23CPartII."AED(GSI) Debit" * 0.5);
            RG23CPartII."Total AED(GSI) for Next Year" := ROUND(RG23CPartII."AED(GSI) Credit" * 0.5) -
              ROUND(RG23CPartII."AED(GSI) Debit" * 0.5);
            RG23CPartII."Total AED(TTA) for CY" := ROUND(RG23CPartII."AED(TTA) Credit" * 0.5) -
              ROUND(RG23CPartII."AED(TTA) Debit" * 0.5);
            RG23CPartII."Total AED(TTA) for Next Year" := ROUND(RG23CPartII."AED(TTA) Credit" * 0.5) -
              ROUND(RG23CPartII."AED(TTA) Debit" * 0.5);
            RG23CPartII."Total SED for Current Year" := ROUND(RG23CPartII."SED Credit" * 0.5) -
              ROUND(RG23CPartII."SED Debit" * 0.5);
            RG23CPartII."Total SED for Next Year" := ROUND(RG23CPartII."SED Credit" * 0.5) -
              ROUND(RG23CPartII."SED Debit" * 0.5);
            RG23CPartII."Total SAED for Current Year" := ROUND(RG23CPartII."SAED Credit" * 0.5) -
              ROUND(RG23CPartII."SAED Debit" * 0.5);
            RG23CPartII."Total SAED for Next Year" := ROUND(RG23CPartII."SAED Credit" * 0.5) -
              ROUND(RG23CPartII."SAED Debit" * 0.5);
            RG23CPartII."Total NCCD for Current Year" := ROUND(RG23CPartII."NCCD Credit" * 0.5) -
              ROUND(RG23CPartII."NCCD Debit" * 0.5);
            RG23CPartII."Total NCCD for Next Year" := ROUND(RG23CPartII."NCCD Credit" * 0.5) -
              ROUND(RG23CPartII."NCCD Debit" * 0.5);
            RG23CPartII."Total ADET for Current Year" := ROUND(RG23CPartII."ADET Credit" * 0.5) -
              ROUND(RG23CPartII."ADET Debit" * 0.5);
            RG23CPartII."Total ADET for Next Year" := ROUND(RG23CPartII."ADET Credit" * 0.5) -
              ROUND(RG23CPartII."ADET Debit" * 0.5);
            RG23CPartII."Total ADE for Current Year" := ROUND(RG23CPartII."ADE Credit" * 0.5) -
              ROUND(RG23CPartII."ADE Debit" * 0.5);
            RG23CPartII."Total ADE for Next Year" := ROUND(RG23CPartII."ADE Credit" * 0.5) -
              ROUND(RG23CPartII."ADE Debit" * 0.5);
            IF "SetOff Available" THEN BEGIN
              RG23CPartII."Total eCess for Current Year" := ROUND(RG23CPartII."eCess Credit" * 0.5) -
                ROUND(RG23CPartII."eCess Debit" * 0.5);
              RG23CPartII."Total eCess for Next Year" := ROUND(RG23CPartII."eCess Credit" * 0.5) -
                ROUND(RG23CPartII."eCess Debit" * 0.5);
              RG23CPartII."Total SHECESS for Current Year" := ROUND(RG23CPartII."SHE Cess Credit" * 0.5) -
                ROUND(RG23CPartII."SHE Cess Debit" * 0.5);
              RG23CPartII."Total SHECESS for Next Year" := ROUND(RG23CPartII."SHE Cess Credit" * 0.5) -
                ROUND(RG23CPartII."SHE Cess Debit" * 0.5);
            END ELSE BEGIN
              RG23CPartII."Total eCess for Current Year" := 0;
              RG23CPartII."Total eCess for Next Year" := 0;
              RG23CPartII."Total SHECESS for Current Year" := 0;
              RG23CPartII."Total SHECESS for Next Year" := 0;
            END;
            RG23CPartII."Closing Balance Credit CY" :=
              RG23CPartII."Total BED for Current Year" +
              RG23CPartII."Total AED(GSI) for CY" + RG23CPartII."Total SED for Current Year" +
              RG23CPartII."Total SAED for Current Year" + RG23CPartII."Total eCess for Current Year" +
              RG23CPartII."Total NCCD for Current Year" + RG23CPartII."Total CESS for Current Year" +
              RG23CPartII."Total ADET for Current Year" + RG23CPartII."Total AED(TTA) for CY" +
              RG23CPartII."Total ADE for Current Year" + RG23CPartII."Total ADC VAT for CY" +
              RG23CPartII."Total SHECESS for Current Year";
          END;

          RG23CPartII."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
          RG23CPartII."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
          ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
          ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
          ExcisePostingSetup.SETRANGE("From Date",0D,RG23CPartII."Posting Date");
          ExcisePostingSetup.FINDLAST;
          IF Subcontracting THEN
            RG23CPartII."Cenvat Cr. Receivable Acc." := "No."
          ELSE
            RG23CPartII."Cenvat Cr. Receivable Acc." := ExcisePostingSetup."Cenvat Cr. Receivable Account";
          RG23CPartII.Supplementary := Supplementary;
          RG23CPartII."Source Document Type" := "Source Document Type";
          RG23CPartII."Source Document No." := "Source Document No.";
          GetRGEntryNo(RG23CPartII."Posting Date",3,RG23CPartII."Location E.C.C. No.",RG23CPartII."Document No.",
            RG23CPartII."RG Entry No.");
          GLSetup.GET;
          IF GLSetup."Check Negative RG Balance" THEN
            CheckNegativeBalance(2);
          RG23CPartII.INSERT;
        END;
      END;
    END;

    PROCEDURE InsertRG23APartISale@1280002(SalesLine@1280002 : Record 37;SalesShptHeader@1280000 : Record 110;ReturnRcptHeader@1280001 : Record 6660);
    VAR
      NextRGEntryNo@1280007 : Integer;
      Customer@1280004 : Record 18;
      RG23APartIRec@1280003 : Record 13719;
      SalesHeader@1500000 : Record 36;
    BEGIN
      WITH SalesLine DO BEGIN
        SalesHeader.GET("Document Type","Document No.");
        IF SalesHeader.Trading THEN
          EXIT;
        RG23APartI.RESET;
        RG23APartI.LOCKTABLE;
        IF RG23APartI.FINDLAST THEN
          NextRGEntryNo := RG23APartI."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23APartI.INIT;
        RG23APartI."Entry No." := NextRGEntryNo;
        RG23APartI."Item No." := "No.";
        RG23APartI.Description := Description;
        RecItem.GET("No.");
        RG23APartI."Base Unit Of Measure" := RecItem."Base Unit of Measure";
        RG23APartI."Line No." := "Line No.";
        IF "Qty. to Ship (Base)" <> 0 THEN BEGIN
          RG23APartI."Posting Date" := SalesShptHeader."Posting Date";
          RG23APartI."Document No." := SalesShptHeader."No.";
          RG23APartI."Order No." := SalesShptHeader."Order No.";
          RG23APartI.Type := RG23APartI.Type::Sale;
          RG23APartI."Quantity Sold" := "Qty. to Ship (Base)";
          RG23APartI.Quantity := -RG23APartI."Quantity Sold";
          RG23APartI."Quantity Received" := 0;
        END ELSE BEGIN
          RG23APartI."Posting Date" := ReturnRcptHeader."Posting Date";
          RG23APartI."Document No." := ReturnRcptHeader."No.";
          RG23APartI."Order No." := ReturnRcptHeader."Return Order No.";
          IF "Document Type" = "Document Type"::"Return Order" THEN BEGIN
            IF ReturnRcptHeader."Sales Return Type" <> ReturnRcptHeader."Sales Return Type"::"Sales Cancellation" THEN
              RG23APartI.Type := RG23APartI.Type::Purchase
            ELSE
              RG23APartI.Type := RG23APartI.Type::Sale
          END ELSE
            IF "Document Type" = "Document Type"::"Credit Memo" THEN BEGIN
              IF ReturnRcptHeader."Sales Return Type" <> ReturnRcptHeader."Sales Return Type"::"Sales Cancellation" THEN
                RG23APartI.Type := RG23APartI.Type::Purchase
              ELSE
                RG23APartI.Type := RG23APartI.Type::Sale;
            END ELSE
              RG23APartI.Type := RG23APartI.Type::Sale;
          IF ReturnRcptHeader."Sales Return Type" = ReturnRcptHeader."Sales Return Type"::"Sales Cancellation" THEN BEGIN
            RG23APartI."Quantity Sold" := -"Return Qty. to Receive (Base)";
            RG23APartI."Quantity Received" := 0;
            RG23APartI.Quantity := -RG23APartI."Quantity Sold";
          END ELSE BEGIN
            RG23APartI."Quantity Received" := "Return Qty. to Receive (Base)";
            RG23APartI."Quantity Sold" := 0;
            RG23APartI.Quantity := RG23APartI."Quantity Received";
          END
        END;
        RG23APartI."Quantity Consumed" := 0;
        RG23APartI."Location Code" := "Location Code";
        CompanyInformation.GET;
        IF "Location Code" <> '' THEN BEGIN
          Location.GET("Location Code");
          RG23APartI."Location E.C.C. No." := Location."E.C.C. No."
        END ELSE
          RG23APartI."Location E.C.C. No." := CompanyInformation."E.C.C. No.";
        RG23APartI.Range := CompanyInformation."C.E. Range";
        RG23APartI.TESTFIELD("Location E.C.C. No.");
        IF ECCNos.GET(RG23APartI."Location E.C.C. No.") THEN
          RG23APartI."Type of Unit" := ECCNos."Type of Unit";

        RG23APartI."Sell-to/Buy-from No." := "Sell-to Customer No.";
        IF Customer.GET("Sell-to Customer No.") THEN
          RG23APartI."Customer/Vendor E.C.C. No." := Customer."E.C.C. No.";
        RG23APartI."External Document No." := SalesHeader."External Document No.";
        RG23APartIRec.RESET;
        RG23APartIRec.SETCURRENTKEY("Location E.C.C. No.","Item No.");
        RG23APartIRec.SETRANGE("Location E.C.C. No.",RG23APartI."Location E.C.C. No.");
        RG23APartIRec.SETRANGE("Item No.","No.");
        RG23APartIRec.CALCSUMS(Quantity);
        RG23APartI."Opening Stock" := RG23APartIRec.Quantity;
        RG23APartI."Closing Stock" := RG23APartIRec.Quantity + RG23APartI.Quantity;
        GetRGEntryNo(RG23APartI."Posting Date",0,RG23APartI."Location E.C.C. No.",RG23APartI."Document No.",
          RG23APartI."RG Entry No.");
        RG23APartI.INSERT;
      END
    END;

    PROCEDURE InsertRG23CPartISale@1280006(SalesLine@1280000 : Record 37;SalesShptHeader@1280001 : Record 110;ReturnRcptHeader@1280002 : Record 6660);
    VAR
      Customer@1280005 : Record 18;
      RG23CPartIRec@1280006 : Record 13721;
      NextRGEntryNo@1280004 : Integer;
      SalesHeader@1500000 : Record 36;
    BEGIN
      WITH SalesLine DO BEGIN
        SalesHeader.GET("Document Type","Document No.");
        IF SalesHeader.Trading THEN
          EXIT;
        RG23CPartI.LOCKTABLE;
        IF RG23CPartI.FINDLAST THEN
          NextRGEntryNo := RG23CPartI."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23CPartI.INIT;
        RG23CPartI."Entry No." := NextRGEntryNo;
        RG23CPartI."FA No./ Item No." := "No.";
        RG23CPartI.Description := Description;
        RG23CPartI."Line No." := "Line No.";
        IF "Qty. to Ship (Base)" <> 0 THEN BEGIN
          RG23CPartI."Posting Date" := SalesShptHeader."Posting Date";
          RG23CPartI."Document No." := SalesShptHeader."No.";
          RG23CPartI."Order No." := SalesShptHeader."Order No.";
          RG23CPartI.Type := RG23CPartI.Type::Sale;
          RG23CPartI."Quantity Sold" := "Qty. to Ship (Base)";
          RG23CPartI.Quantity := -RG23CPartI."Quantity Sold";
          RG23CPartI."Quantity Received" := 0;
        END ELSE BEGIN
          RG23CPartI."Posting Date" := ReturnRcptHeader."Posting Date";
          RG23CPartI."Document No." := ReturnRcptHeader."No.";
          RG23CPartI."Order No." := ReturnRcptHeader."Return Order No.";
          IF "Document Type" = "Document Type"::"Return Order" THEN BEGIN
            IF ReturnRcptHeader."Sales Return Type" <> ReturnRcptHeader."Sales Return Type"::"Sales Cancellation" THEN
              RG23CPartI.Type := RG23CPartI.Type::Purchase
            ELSE
              RG23CPartI.Type := RG23CPartI.Type::Sale
          END ELSE
            IF "Document Type" = "Document Type"::"Credit Memo" THEN BEGIN
              IF ReturnRcptHeader."Sales Return Type" <> ReturnRcptHeader."Sales Return Type"::"Sales Cancellation" THEN
                RG23CPartI.Type := RG23CPartI.Type::Purchase
              ELSE
                RG23CPartI.Type := RG23CPartI.Type::Sale;
            END ELSE
              RG23CPartI.Type := RG23CPartI.Type::Sale;
          IF ReturnRcptHeader."Sales Return Type" = ReturnRcptHeader."Sales Return Type"::"Sales Cancellation" THEN BEGIN
            RG23CPartI."Quantity Sold" := -"Return Qty. to Receive (Base)";
            RG23CPartI."Quantity Received" := 0;
            RG23CPartI.Quantity := -RG23CPartI."Quantity Sold";
          END ELSE BEGIN
            RG23CPartI."Quantity Received" := "Return Qty. to Receive (Base)";
            RG23CPartI."Quantity Sold" := 0;
            RG23CPartI.Quantity := "Return Qty. to Receive (Base)";
          END
        END;
        IF Type = Type::Item THEN
          RG23CPartI."Product Type" := RG23CPartI."Product Type"::Item;
        IF Type = Type::"Fixed Asset" THEN
          RG23CPartI."Product Type" := RG23CPartI."Product Type"::FA;
        RG23CPartI."Quantity Consumed" := 0;
        RG23CPartI."Sell-to/Buy-from No." := "Sell-to Customer No.";
        IF Customer.GET("Sell-to Customer No.") THEN
          RG23CPartI."Customer/Vendor E.C.C. No." := Customer."E.C.C. No.";
        RG23CPartI."Location Code" := "Location Code";
        IF "Location Code" <> '' THEN BEGIN
          Location.GET("Location Code");
          RG23CPartI."Location E.C.C. No." := Location."E.C.C. No."
        END ELSE BEGIN
          CompanyInformation.GET;
          RG23CPartI."Location E.C.C. No." := CompanyInformation."E.C.C. No.";
        END;
        RG23CPartI."Vendor Shipment No." := SalesHeader."External Document No.";
        IF ECCNos.GET(RG23CPartI."Location E.C.C. No.") THEN
          RG23CPartI."Type of Unit" := ECCNos."Type of Unit";

        RG23CPartIRec.RESET;
        RG23CPartIRec.SETCURRENTKEY("Location E.C.C. No.","FA No./ Item No.");
        RG23CPartIRec.SETRANGE("Location E.C.C. No.",RG23CPartI."Location E.C.C. No.");
        RG23CPartIRec.SETRANGE("FA No./ Item No.","No.");
        RG23CPartIRec.CALCSUMS(Quantity);
        RG23CPartI."Opening Stock" := RG23CPartIRec.Quantity;
        RG23CPartI."Closing Stock" := RG23CPartIRec.Quantity + RG23CPartI.Quantity;
        GetRGEntryNo(RG23CPartI."Posting Date",2,RG23CPartI."Location E.C.C. No.",RG23CPartI."Document No.",
          RG23CPartI."RG Entry No.");
        RG23CPartI.INSERT;
      END;
    END;

    PROCEDURE InsertRG23APartIIReturnSale@1280031(SalesLine@1280000 : Record 37;ReturnRcptHeader@1280001 : Record 6660);
    VAR
      NextRGEntryNo@1280004 : Integer;
      ExcisePostingSetup@1280005 : Record 13711;
      TempRG23APartII@1280006 : Record 13720;
      SalesHeader@1500000 : Record 36;
      Customer@1500001 : Record 18;
    BEGIN
      WITH SalesLine DO BEGIN
        SalesHeader.GET("Document Type","Document No.");
        IF SalesHeader.Trading THEN
          EXIT;
        RG23APartII.LOCKTABLE;
        IF RG23APartII.FINDLAST THEN
          NextRGEntryNo := RG23APartII."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23APartII.INIT;
        RG23APartII."Entry No." := NextRGEntryNo;
        IF "Document Type" = "Document Type"::"Return Order" THEN BEGIN
          IF ReturnRcptHeader."Sales Return Type" <> ReturnRcptHeader."Sales Return Type"::"Sales Cancellation" THEN
            RG23APartII.Type := RG23APartII.Type::Purchase
          ELSE
            RG23APartII.Type := RG23APartII.Type::Sale
        END ELSE
          IF "Document Type" = "Document Type"::"Credit Memo" THEN BEGIN
            IF ReturnRcptHeader."Sales Return Type" <> ReturnRcptHeader."Sales Return Type"::"Sales Cancellation" THEN
              RG23APartII.Type := RG23APartII.Type::Purchase
            ELSE
              RG23APartII.Type := RG23APartII.Type::Sale;
          END ELSE
            RG23APartII.Type := RG23APartII.Type::Sale;
        RG23APartII."Line No." := "Line No.";
        RG23APartII."Posting Date" := ReturnRcptHeader."Posting Date";
        RG23APartII."Document No." := ReturnRcptHeader."No.";
        RG23APartII."Location Code" := "Location Code";
        IF "Location Code" <> '' THEN BEGIN
          Location.GET("Location Code");
          RG23APartII."Location E.C.C. No." := Location."E.C.C. No."
        END ELSE BEGIN
          CompanyInformation.GET;
          RG23APartII."Location E.C.C. No." := CompanyInformation."E.C.C. No.";
        END;
        RG23APartII.TESTFIELD("Location E.C.C. No.");
        IF SalesHeader.GET("Document Type","Document No.") THEN BEGIN
          RG23APartII."Vendor Invoice No." := SalesHeader."External Document No.";
          RG23APartII."Order No." := SalesHeader."No.";
        END;
        IF Customer.GET("Sell-to Customer No.") THEN
          RG23APartII."Customer E.C.C. No." := Customer."E.C.C. No.";
        IF ECCNos.GET(RG23APartII."Location E.C.C. No.") THEN
          RG23APartII."Type of Unit" := ECCNos."Type of Unit";

        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        ExcisePostingSetup.SETRANGE("From Date",0D,ReturnRcptHeader."Posting Date");
        ExcisePostingSetup.FINDLAST;
        IF "Return Qty. to Receive (Base)" <> 0 THEN BEGIN
          RG23APartII."BED Credit" :=
            ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code","BED Amount"
              ,
              ReturnRcptHeader."Currency Factor");
          RG23APartII."AED(GSI) Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
              "AED(GSI) Amount",ReturnRcptHeader."Currency Factor");
          RG23APartII."AED(TTA) Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
              "AED(TTA) Amount",ReturnRcptHeader."Currency Factor");
          RG23APartII."SED Credit" :=
            ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code","SED Amount"
              ,
              ReturnRcptHeader."Currency Factor");
          RG23APartII."SAED Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
              "SAED Amount",ReturnRcptHeader."Currency Factor");
          RG23APartII."NCCD Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
              "NCCD Amount",ReturnRcptHeader."Currency Factor");
          RG23APartII."ADET Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
              "ADET Amount",ReturnRcptHeader."Currency Factor");
          RG23APartII."ADE Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
              "ADE Amount",ReturnRcptHeader."Currency Factor");
          RG23APartII."ADC VAT Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
              "ADC VAT Amount",ReturnRcptHeader."Currency Factor");
          IF ExcisePostingSetup."Setoff available" THEN BEGIN
            RG23APartII."eCess Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
                "eCess Amount",ReturnRcptHeader."Currency Factor");
            RG23APartII."SHE Cess Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
                "SHE Cess Amount",ReturnRcptHeader."Currency Factor");
          END ELSE BEGIN
            RG23APartII."eCess Credit" := 0;
            RG23APartII."SHE Cess Credit" := 0;
          END;

          RG23APartII."Remaining BED Credit" := RG23APartII."BED Credit";
          RG23APartII."Remaining AED(GSI) Credit" := RG23APartII."AED(GSI) Credit";
          RG23APartII."Remaining SED Credit" := RG23APartII."SED Credit";
          RG23APartII."Remaining SAED Credit" := RG23APartII."SAED Credit";
          RG23APartII."Remaining NCCD Credit" := RG23APartII."NCCD Credit";
          RG23APartII."Remaining eCess Credit" := RG23APartII."eCess Credit";
          RG23APartII."Remaining ADET Credit" := RG23APartII."ADET Credit";
          RG23APartII."Remaining AED(TTA) Credit" := RG23APartII."AED(TTA) Credit";
          RG23APartII."Remaining ADE Credit" := RG23APartII."ADE Credit";
          RG23APartII."Remaining ADC VAT Credit" := RG23APartII."ADC VAT Credit";
          RG23APartII."Remaining SHECess Credit" := RG23APartII."SHE Cess Credit";
          RG23APartII."Remaining Excise Amount" := RG23APartII."Remaining BED Credit" + RG23APartII."Remaining AED(GSI) Credit" +
            RG23APartII."Remaining SED Credit" + RG23APartII."Remaining SAED Credit" + RG23APartII."Remaining NCCD Credit" +
            RG23APartII."Remaining eCess Credit" + RG23APartII."Remaining ADET Credit" + RG23APartII."Remaining AED(TTA) Credit" +
            RG23APartII."Remaining ADE Credit" + RG23APartII."Remaining ADC VAT Credit" + RG23APartII."Remaining SHECess Credit";
        END;

        TempRG23APartII.SETCURRENTKEY("Location E.C.C. No.");
        TempRG23APartII.SETRANGE("Location E.C.C. No.",RG23APartII."Location E.C.C. No.");
        IF TempRG23APartII.FINDLAST THEN BEGIN
          RG23APartII."Op. Bal. BED/AED" := TempRG23APartII."Total BED Amount" + TempRG23APartII."Total AED(GSI) Amount" +
            TempRG23APartII."Total AED(TTA) Amount";
          RG23APartII."Op. Bal. ODs" := TempRG23APartII."Total SED Amount" + TempRG23APartII."Total SAED Amount" +
            TempRG23APartII."Total NCCD Amount" + TempRG23APartII."Total eCess Amount" + TempRG23APartII."Total CESS Amount" +
            TempRG23APartII."Total ADC VAT Amount" + TempRG23APartII."Total SHE Cess Amount" + TempRG23APartII."Total ADET Amount" +
            TempRG23APartII."Total ADE Amount";
          RG23APartII."Total BED Amount" := TempRG23APartII."Total BED Amount" + RG23APartII."BED Credit" - RG23APartII."BED Debit";
          RG23APartII."Total AED(GSI) Amount" := TempRG23APartII."Total AED(GSI) Amount" + RG23APartII."AED(GSI) Credit" -
            RG23APartII."AED(GSI) Debit";
          RG23APartII."Total AED(TTA) Amount" := TempRG23APartII."Total AED(TTA) Amount" + RG23APartII."AED(TTA) Credit" -
            RG23APartII."AED(TTA) Debit";
          RG23APartII."Total SED Amount" := TempRG23APartII."Total SED Amount" + RG23APartII."SED Credit" - RG23APartII."SED Debit";
          RG23APartII."Total SAED Amount" :=
            TempRG23APartII."Total SAED Amount" + RG23APartII."SAED Credit" - RG23APartII."SAED Debit";
          RG23APartII."Total CESS Amount" := TempRG23APartII."Total CESS Amount";
          RG23APartII."Total NCCD Amount" :=
            TempRG23APartII."Total NCCD Amount" + RG23APartII."NCCD Credit" - RG23APartII."NCCD Debit";
          RG23APartII."Total eCess Amount" := TempRG23APartII."Total eCess Amount" + RG23APartII."eCess Credit" -
            RG23APartII."eCess Debit";
          RG23APartII."Total SHE Cess Amount" := TempRG23APartII."Total SHE Cess Amount" + RG23APartII."SHE Cess Credit" -
            RG23APartII."SHE Cess Debit";
          RG23APartII."Total ADET Amount" := TempRG23APartII."Total ADET Amount" + RG23APartII."ADET Credit" -
            RG23APartII."ADET Debit";
          RG23APartII."Total ADE Amount" := TempRG23APartII."Total ADE Amount" + RG23APartII."ADE Credit" -
            RG23APartII."ADE Debit";
          RG23APartII."Total ADC VAT Amount" := TempRG23APartII."Total ADC VAT Amount" + RG23APartII."ADC VAT Credit" -
            RG23APartII."ADC VAT Debit";
          RG23APartII."Closing Bal. BED/AED" := RG23APartII."Op. Bal. BED/AED" + RG23APartII."BED Credit" +
            RG23APartII."AED(GSI) Credit" + RG23APartII."AED(TTA) Credit" - RG23APartII."BED Debit" - RG23APartII."AED(GSI) Debit" -
            RG23APartII."AED(TTA) Debit";
          RG23APartII."Closing Bal. Other Duties" :=
            RG23APartII."Op. Bal. ODs" + RG23APartII."SED Credit" + RG23APartII."SAED Credit" +
            RG23APartII."NCCD Credit" + RG23APartII."eCess Credit" + RG23APartII."ADET Credit" + RG23APartII."ADC VAT Credit" -
            RG23APartII."SED Debit" - RG23APartII."SAED Debit" - RG23APartII."NCCD Debit" - RG23APartII."eCess Debit" -
            RG23APartII."ADET Debit" + RG23APartII."ADE Credit" - RG23APartII."ADE Debit" - RG23APartII."ADC VAT Debit" +
            RG23APartII."SHE Cess Credit" - RG23APartII."SHE Cess Debit";
          RG23APartII.CVD := CVD;
        END ELSE BEGIN
          RG23APartII."Op. Bal. BED/AED" := 0;
          RG23APartII."Op. Bal. ODs" := 0;
          RG23APartII."Total BED Amount" := RG23APartII."BED Credit";
          RG23APartII."Total AED(GSI) Amount" := RG23APartII."AED(GSI) Credit";
          RG23APartII."Total AED(TTA) Amount" := RG23APartII."AED(TTA) Credit";
          RG23APartII."Total SED Amount" := RG23APartII."SED Credit";
          RG23APartII."Total SAED Amount" := RG23APartII."SAED Credit";
          RG23APartII."Total NCCD Amount" := RG23APartII."NCCD Credit";
          RG23APartII."Total eCess Amount" := RG23APartII."eCess Credit";
          RG23APartII."Total SHE Cess Amount" := RG23APartII."SHE Cess Credit";
          RG23APartII."Total ADET Amount" := RG23APartII."ADET Credit";
          RG23APartII."Total ADE Amount" := RG23APartII."ADE Credit";
          RG23APartII."Total ADC VAT Amount" := RG23APartII."ADC VAT Credit";
          RG23APartII."Closing Bal. BED/AED" := RG23APartII."Op. Bal. BED/AED" + RG23APartII."BED Credit" + RG23APartII.
            "AED(GSI) Credit" + RG23APartII."AED(TTA) Credit";
          RG23APartII."Closing Bal. Other Duties" :=
            RG23APartII."Op. Bal. ODs" + RG23APartII."SED Credit" + RG23APartII."SAED Credit" +
            RG23APartII."NCCD Credit" + RG23APartII."eCess Credit" + RG23APartII."ADET Credit" + RG23APartII."ADE Credit" +
            RG23APartII."ADC VAT Credit" + RG23APartII."SHE Cess Credit";
          RG23APartII.CVD := CVD;
        END;
        RG23APartII."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
        RG23APartII."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        RG23APartII."Cenvat Cr. Receivable Account" := ExcisePostingSetup."Cenvat Cr. Receivable Account";
        RG23APartII.Supplementary := Supplementary;
        RG23APartII."Source Document Type" := "Source Document Type";
        RG23APartII."Source Document No." := "Source Document No.";
        GetRGEntryNo(RG23APartII."Posting Date",1,RG23APartII."Location E.C.C. No.",RG23APartII."Document No.",
          RG23APartII."RG Entry No.");
        GLSetup.GET;
        IF GLSetup."Check Negative RG Balance" THEN
          CheckNegativeBalance(1);
        RG23APartII.INSERT;
      END;
    END;

    PROCEDURE InsertRG23CPartIIReturnSale@1280016(SalesLine@1280000 : Record 37;ReturnRcptHeader@1280001 : Record 6660);
    VAR
      NextRGEntryNo@1280004 : Integer;
      TempRG23CPartII@1280005 : Record 13722;
      ExcisePostingSetup@1280006 : Record 13711;
      SalesHeader@1500000 : Record 36;
      Customer@1500001 : Record 18;
    BEGIN
      WITH SalesLine DO BEGIN
        SalesHeader.GET("Document Type","Document No.");
        IF SalesHeader.Trading THEN
          EXIT;
        RG23CPartII.LOCKTABLE;
        IF RG23CPartII.FINDLAST THEN
          NextRGEntryNo := RG23CPartII."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23CPartII.INIT;
        RG23CPartII."Entry No." := NextRGEntryNo;
        IF "Document Type" = "Document Type"::"Return Order" THEN BEGIN
          IF ReturnRcptHeader."Sales Return Type" <> ReturnRcptHeader."Sales Return Type"::"Sales Cancellation" THEN
            RG23CPartII.Type := RG23CPartII.Type::Purchase
          ELSE
            RG23CPartII.Type := RG23CPartII.Type::Sale
        END ELSE
          IF "Document Type" = "Document Type"::"Credit Memo" THEN BEGIN
            IF ReturnRcptHeader."Sales Return Type" <> ReturnRcptHeader."Sales Return Type"::"Sales Cancellation" THEN
              RG23CPartII.Type := RG23CPartII.Type::Purchase
            ELSE
              RG23CPartII.Type := RG23CPartII.Type::Sale;
          END ELSE
            RG23CPartII.Type := RG23CPartII.Type::Sale;
        RG23CPartII."Line No." := "Line No.";
        RG23CPartII."Posting Date" := ReturnRcptHeader."Posting Date";
        RG23CPartII."Document No." := ReturnRcptHeader."No.";
        RG23CPartII."Location Code" := "Location Code";
        RG23CPartII.CVD := CVD;
        IF "Location Code" <> '' THEN BEGIN
          Location.GET("Location Code");
          RG23CPartII."Location E.C.C. No." := Location."E.C.C. No."
        END ELSE BEGIN
          CompanyInformation.GET;
          RG23CPartII."Location E.C.C. No." := CompanyInformation."E.C.C. No.";
        END;
        IF SalesHeader.GET("Document Type","Document No.") THEN BEGIN
          RG23APartII."Vendor Invoice No." := SalesHeader."External Document No.";
          RG23APartII."Order No." := SalesHeader."No.";
        END;
        IF Customer.GET("Sell-to Customer No.") THEN
          RG23APartII."Customer E.C.C. No." := Customer."E.C.C. No.";
        IF ECCNos.GET(RG23CPartII."Location E.C.C. No.") THEN
          RG23CPartII."Type of Unit" := ECCNos."Type of Unit";

        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        ExcisePostingSetup.SETRANGE("From Date",0D,ReturnRcptHeader."Posting Date");
        ExcisePostingSetup.FINDLAST;
        RG23CPartII."BED Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code","BED Amount",
            ReturnRcptHeader."Currency Factor");
        RG23CPartII."AED(GSI) Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
            "AED(GSI) Amount",ReturnRcptHeader."Currency Factor");
        RG23CPartII."AED(TTA) Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
            "AED(TTA) Amount",ReturnRcptHeader."Currency Factor");
        RG23CPartII."SED Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code","SED Amount",
            ReturnRcptHeader."Currency Factor");
        RG23CPartII."SAED Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
            "SAED Amount",ReturnRcptHeader."Currency Factor");
        RG23CPartII."NCCD Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
            "NCCD Amount",ReturnRcptHeader."Currency Factor");
        RG23CPartII."ADET Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
            "ADET Amount",ReturnRcptHeader."Currency Factor");
        RG23CPartII."ADE Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
            "ADE Amount",ReturnRcptHeader."Currency Factor");
        RG23CPartII."ADC VAT Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
            "ADC VAT Amount",ReturnRcptHeader."Currency Factor");
        IF ExcisePostingSetup."Setoff available" THEN BEGIN
          RG23CPartII."eCess Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
              "eCess Amount",ReturnRcptHeader."Currency Factor");
          RG23CPartII."SHE Cess Credit" := ConvertAmountFCY2LCY(ReturnRcptHeader."Posting Date",ReturnRcptHeader."Currency Code",
              "SHE Cess Amount",ReturnRcptHeader."Currency Factor")
        END ELSE BEGIN
          RG23CPartII."eCess Credit" := 0;
          RG23CPartII."SHE Cess Credit" := 0;
        END;

        RG23CPartII."Remaining BED Credit" := ROUND(RG23CPartII."BED Credit" * 0.5);
        RG23CPartII."Remaining AED(GSI) Credit" := ROUND(RG23CPartII."AED(GSI) Credit" * 0.5);
        RG23CPartII."Remaining SED Credit" := ROUND(RG23CPartII."SED Credit" * 0.5);
        RG23CPartII."Remaining SAED Credit" := ROUND(RG23CPartII."SAED Credit" * 0.5);
        RG23CPartII."Remaining NCCD Credit" := ROUND(RG23CPartII."NCCD Credit" * 0.5);
        RG23CPartII."Remaining eCess Credit" := ROUND(RG23CPartII."eCess Credit" * 0.5);
        RG23CPartII."Remaining SHECess Credit" := ROUND(RG23CPartII."SHE Cess Credit" * 0.5);
        RG23CPartII."Remaining ADET Credit" := ROUND(RG23CPartII."ADET Credit" * 0.5);
        RG23CPartII."Remaining AED(TTA) Credit" := ROUND(RG23CPartII."AED(TTA) Credit" * 0.5);
        RG23CPartII."Remaining ADE Credit" := ROUND(RG23CPartII."ADE Credit" * 0.5);
        RG23CPartII."Remaining ADC VAT Credit" := ROUND(RG23CPartII."ADC VAT Credit" * 0.5);
        RG23CPartII."Remaining Excise Amount" := RG23CPartII."Remaining BED Credit" + RG23CPartII."Remaining AED(GSI) Credit" +
          RG23CPartII."Remaining SED Credit" + RG23CPartII."Remaining SAED Credit" + RG23CPartII."Remaining NCCD Credit" +
          RG23CPartII."Remaining eCess Credit" + RG23CPartII."Remaining ADET Credit" + RG23CPartII."Remaining AED(TTA) Credit" +
          RG23CPartII."Remaining ADE Credit" + RG23CPartII."Remaining ADC VAT Credit" + RG23CPartII."Remaining SHECess Credit";

        RG23CPartII.TESTFIELD("Location E.C.C. No.");

        TempRG23CPartII.SETCURRENTKEY("Location E.C.C. No.");
        TempRG23CPartII.SETRANGE("Location E.C.C. No.",RG23CPartII."Location E.C.C. No.");
        IF TempRG23CPartII.FINDLAST THEN BEGIN
          RG23CPartII."Opening Balance Credit CY" := TempRG23CPartII."Total BED for Current Year" +
            TempRG23CPartII."Total AED(GSI) for CY" + TempRG23CPartII."Total AED(TTA) for CY" +
            TempRG23CPartII."Total SED for Current Year" + TempRG23CPartII."Total CESS for Current Year" +
            TempRG23CPartII."Total SAED for Current Year" + TempRG23CPartII."Total eCess for Current Year" +
            TempRG23CPartII."Total ADET for Current Year" + TempRG23CPartII."Total ADE for Current Year" +
            TempRG23CPartII."Total ADC VAT for CY" + TempRG23CPartII."Total SHECESS for Current Year";
          RG23CPartII."Total BED for Current Year" :=
            TempRG23CPartII."Total BED for Current Year" + ROUND(RG23CPartII."BED Credit" * 0.5);
          RG23CPartII."Total BED for Next Year" :=
            TempRG23CPartII."Total BED for Next Year" + ROUND(RG23CPartII."BED Credit" * 0.5);
          RG23CPartII."Total AED(GSI) for CY" :=
            TempRG23CPartII."Total AED(GSI) for CY" + ROUND(RG23CPartII."AED(GSI) Credit" * 0.5);
          RG23CPartII."Total AED(GSI) for Next Year" :=
            TempRG23CPartII."Total AED(GSI) for Next Year" + ROUND(RG23CPartII."AED(GSI) Credit" * 0.5);
          RG23CPartII."Total AED(TTA) for CY" :=
            TempRG23CPartII."Total AED(TTA) for CY" + ROUND(RG23CPartII."AED(TTA) Credit" * 0.5);
          RG23CPartII."Total AED(TTA) for Next Year" :=
            TempRG23CPartII."Total AED(TTA) for Next Year" + ROUND(RG23CPartII."AED(TTA) Credit" * 0.5);
          RG23CPartII."Total SED for Current Year" :=
            TempRG23CPartII."Total SED for Current Year" + ROUND(RG23CPartII."SED Credit" * 0.5);
          RG23CPartII."Total SED for Next Year" :=
            TempRG23CPartII."Total SED for Next Year" + ROUND(RG23CPartII."SED Credit" * 0.5);
          RG23CPartII."Total SAED for Current Year" :=
            TempRG23CPartII."Total SAED for Current Year" + ROUND(RG23CPartII."SAED Credit" * 0.5);
          RG23CPartII."Total SAED for Next Year" :=
            TempRG23CPartII."Total SAED for Next Year" + ROUND(RG23CPartII."SAED Credit" * 0.5);
          RG23CPartII."Total NCCD for Current Year" :=
            TempRG23CPartII."Total NCCD for Current Year" + ROUND(RG23CPartII."NCCD Credit" * 0.5);
          RG23CPartII."Total NCCD for Next Year" :=
            TempRG23CPartII."Total NCCD for Next Year" + ROUND(RG23CPartII."NCCD Credit" * 0.5);
          RG23CPartII."Total ADET for Current Year" :=
            TempRG23CPartII."Total ADET for Current Year" + ROUND(RG23CPartII."ADET Credit" * 0.5);
          RG23CPartII."Total ADET for Next Year" :=
            TempRG23CPartII."Total ADET for Next Year" + ROUND(RG23CPartII."ADET Credit" * 0.5);
          RG23CPartII."Total ADE for Current Year" :=
            TempRG23CPartII."Total ADE for Current Year" + ROUND(RG23CPartII."ADE Credit" * 0.5);
          RG23CPartII."Total ADE for Next Year" :=
            TempRG23CPartII."Total ADE for Next Year" + ROUND(RG23CPartII."ADE Credit" * 0.5);
          RG23CPartII."Total ADC VAT for CY" :=
            TempRG23CPartII."Total ADC VAT for CY" + ROUND(RG23CPartII."ADC VAT Credit");
          IF ExcisePostingSetup."Setoff available" THEN BEGIN
            RG23CPartII."Total eCess for Current Year" :=
              TempRG23CPartII."Total eCess for Current Year" + ROUND(RG23CPartII."eCess Credit" * 0.5);
            RG23CPartII."Total eCess for Next Year" :=
              TempRG23CPartII."Total eCess for Next Year" + ROUND(RG23CPartII."eCess Credit" * 0.5);
            RG23CPartII."Total SHECESS for Current Year" :=
              TempRG23CPartII."Total SHECESS for Current Year" + ROUND(RG23CPartII."SHE Cess Credit" * 0.5);
            RG23CPartII."Total SHECESS for Next Year" :=
              TempRG23CPartII."Total SHECESS for Next Year" + ROUND(RG23CPartII."SHE Cess Credit" * 0.5);
          END ELSE BEGIN
            RG23CPartII."Total eCess for Current Year" := TempRG23CPartII."Total eCess for Current Year";
            RG23CPartII."Total eCess for Next Year" := TempRG23CPartII."Total eCess for Next Year";
            RG23CPartII."Total SHECESS for Current Year" := TempRG23CPartII."Total SHECESS for Current Year";
            RG23CPartII."Total SHECESS for Next Year" := TempRG23CPartII."Total SHECESS for Next Year";
          END;
          RG23CPartII."Closing Balance Credit CY" := RG23CPartII."Total BED for Current Year" +
            RG23CPartII."Total AED(GSI) for CY" + RG23CPartII."Total AED(TTA) for CY" +
            RG23CPartII."Total SED for Current Year" + RG23CPartII."Total SAED for Current Year" +
            RG23CPartII."Total eCess for Current Year" + RG23CPartII."Total NCCD for Current Year" +
            RG23CPartII."Total CESS for Current Year" + RG23CPartII."Total ADET for Current Year" +
            RG23CPartII."Total ADE for Current Year" + RG23CPartII."Total ADC VAT for CY" +
            RG23CPartII."Total SHECESS for Current Year";
        END ELSE BEGIN
          RG23CPartII."Total BED for Current Year" := ROUND(RG23CPartII."BED Credit" * 0.5);
          RG23CPartII."Total BED for Next Year" := ROUND(RG23CPartII."BED Credit" * 0.5);
          RG23CPartII."Total AED(GSI) for CY" := ROUND(RG23CPartII."AED(GSI) Credit" * 0.5);
          RG23CPartII."Total AED(GSI) for Next Year" := ROUND(RG23CPartII."AED(GSI) Credit" * 0.5);
          RG23CPartII."Total AED(TTA) for CY" := ROUND(RG23CPartII."AED(TTA) Credit" * 0.5);
          RG23CPartII."Total AED(TTA) for Next Year" := ROUND(RG23CPartII."AED(TTA) Credit" * 0.5);
          RG23CPartII."Total SED for Current Year" := ROUND(RG23CPartII."SED Credit" * 0.5);
          RG23CPartII."Total SED for Next Year" := ROUND(RG23CPartII."SED Credit" * 0.5);
          RG23CPartII."Total SAED for Current Year" := ROUND(RG23CPartII."SAED Credit" * 0.5);
          RG23CPartII."Total SAED for Next Year" := ROUND(RG23CPartII."SAED Credit" * 0.5);
          RG23CPartII."Total NCCD for Current Year" := ROUND(RG23CPartII."NCCD Credit" * 0.5);
          RG23CPartII."Total NCCD for Next Year" := ROUND(RG23CPartII."NCCD Credit" * 0.5);
          RG23CPartII."Total ADET for Current Year" := ROUND(RG23CPartII."ADET Credit" * 0.5);
          RG23CPartII."Total ADET for Next Year" := ROUND(RG23CPartII."ADET Credit" * 0.5);
          RG23CPartII."Total ADE for Current Year" := ROUND(RG23CPartII."ADE Credit" * 0.5);
          RG23CPartII."Total ADE for Next Year" := ROUND(RG23CPartII."ADE Credit" * 0.5);
          IF ExcisePostingSetup."Setoff available" THEN BEGIN
            RG23CPartII."Total eCess for Current Year" := ROUND(RG23CPartII."eCess Credit" * 0.5);
            RG23CPartII."Total eCess for Next Year" := ROUND(RG23CPartII."eCess Credit" * 0.5);
            RG23CPartII."Total SHECESS for Current Year" := ROUND(RG23CPartII."SHE Cess Credit" * 0.5);
            RG23CPartII."Total SHECESS for Next Year" := ROUND(RG23CPartII."SHE Cess Credit" * 0.5);
          END ELSE BEGIN
            RG23CPartII."Total eCess for Current Year" := 0;
            RG23CPartII."Total eCess for Next Year" := 0;
            RG23CPartII."Total SHECESS for Current Year" := 0;
            RG23CPartII."Total SHECESS for Next Year" := 0;
          END;
          RG23CPartII."Closing Balance Credit CY" := RG23CPartII."Total BED for Current Year" +
            RG23CPartII."Total AED(GSI) for CY" + RG23CPartII."Total AED(TTA) for CY" +
            RG23CPartII."Total SED for Current Year" + RG23CPartII."Total SAED for Current Year" +
            RG23CPartII."Total eCess for Current Year" + RG23CPartII."Total NCCD for Current Year" +
            RG23CPartII."Total CESS for Current Year" + RG23CPartII."Total ADET for Current Year" +
            RG23CPartII."Total ADE for Current Year" + RG23CPartII."Total ADC VAT for CY" +
            RG23CPartII."Total SHECESS for Current Year";
        END;
        RG23CPartII."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
        RG23CPartII."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        RG23CPartII."Cenvat Cr. Receivable Acc." := ExcisePostingSetup."Cenvat Cr. Receivable Account";
        RG23CPartII.Supplementary := Supplementary;
        RG23CPartII."Source Document Type" := "Source Document Type";
        RG23CPartII."Source Document No." := "Source Document No.";
        GetRGEntryNo(RG23CPartII."Posting Date",3,RG23CPartII."Location E.C.C. No.",RG23CPartII."Document No.",
          RG23CPartII."RG Entry No.");
        GLSetup.GET;
        IF GLSetup."Check Negative RG Balance" THEN
          CheckNegativeBalance(2);
        RG23CPartII.INSERT;
      END;
    END;

    PROCEDURE InsertRG23APartIConsumption@1280001(ItemJnlLine@1280000 : Record 83);
    VAR
      NextRGEntryNo@1280001 : Integer;
      RG23APartIRec@1280002 : Record 13719;
    BEGIN
      WITH ItemJnlLine DO BEGIN
        RG23APartI.LOCKTABLE;
        IF RG23APartI.FINDLAST THEN
          NextRGEntryNo := RG23APartI."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23APartI.INIT;
        RG23APartI."Entry No." := NextRGEntryNo;
        RG23APartI.Type := RG23APartI.Type::Consumption;
        RG23APartI."Posting Date" := "Posting Date";
        RG23APartI."Document No." := "Document No.";
        TESTFIELD("Order Type","Order Type"::Production);
        RG23APartI."Order No." := "Order No.";
        RG23APartI."Item No." := "Item No.";
        RG23APartI.Description := Description;
        RG23APartI."Base Unit Of Measure" := "Unit of Measure Code";
        RG23APartI."Quantity Consumed" := "Quantity (Base)";
        RG23APartI.Quantity := -RG23APartI."Quantity Consumed";
        RG23APartI."Quantity Sold" := 0;
        RG23APartI."Quantity Received" := 0;
        RG23APartI."Location Code" := "Location Code";
        IF "Location Code" <> '' THEN BEGIN
          Location.GET("Location Code");
          RG23APartI."Location E.C.C. No." := Location."E.C.C. No."
        END ELSE BEGIN
          CompanyInformation.GET;
          RG23APartI."Location E.C.C. No." := CompanyInformation."E.C.C. No.";
        END;
        IF ECCNos.GET(RG23APartI."Location E.C.C. No.") THEN
          RG23APartI."Type of Unit" := ECCNos."Type of Unit";

        RG23APartI."Line No." := "Line No.";
        RG23APartIRec.RESET;
        RG23APartIRec.SETCURRENTKEY("Location E.C.C. No.","Item No.");
        RG23APartIRec.SETRANGE("Location E.C.C. No.",RG23APartI."Location E.C.C. No.");
        RG23APartIRec.SETRANGE("Item No.",RG23APartI."Item No.");
        RG23APartIRec.CALCSUMS(Quantity);
        RG23APartI."Opening Stock" := RG23APartIRec.Quantity;
        RG23APartI."Closing Stock" := RG23APartIRec.Quantity + RG23APartI.Quantity;
        GetRGEntryNo(RG23APartI."Posting Date",0,RG23APartI."Location E.C.C. No.",RG23APartI."Document No.",
          RG23APartI."RG Entry No.");
        RG23APartI.INSERT;
      END;
    END;

    PROCEDURE InsertRG23CPartIConsumption@1280007(ItemJnlLine@1280000 : Record 83);
    VAR
      NextRGEntryNo@1280001 : Integer;
      RG23CPartIRec@1280002 : Record 13721;
    BEGIN
      WITH ItemJnlLine DO BEGIN
        RG23CPartI.LOCKTABLE;
        IF RG23CPartI.FINDLAST THEN
          NextRGEntryNo := RG23CPartI."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23CPartI.INIT;
        RG23CPartI."Entry No." := NextRGEntryNo;
        RG23CPartI.Type := RG23CPartI.Type::Consumption;
        RG23CPartI."Product Type" := RG23CPartI."Product Type"::Item;
        RG23CPartI."Posting Date" := "Posting Date";
        RG23CPartI."Document No." := "Document No.";
        TESTFIELD("Order Type","Order Type"::Production);
        RG23CPartI."Order No." := "Order No.";

        RG23CPartI."FA No./ Item No." := "Item No.";
        RG23CPartI.Description := Description;
        RG23CPartI."Line No." := "Line No.";
        RG23CPartI."Quantity Consumed" := "Quantity (Base)";
        RG23CPartI."Quantity Sold" := 0;
        RG23CPartI."Quantity Received" := 0;
        RG23CPartI.Quantity := -RG23CPartI."Quantity Consumed";

        RG23CPartI."Location Code" := "Location Code";
        IF "Location Code" <> '' THEN BEGIN
          Location.GET("Location Code");
          RG23CPartI."Location E.C.C. No." := Location."E.C.C. No."
        END ELSE BEGIN
          CompanyInformation.GET;
          RG23CPartI."Location E.C.C. No." := CompanyInformation."E.C.C. No.";
        END;
        IF ECCNos.GET(RG23CPartI."Location E.C.C. No.") THEN
          RG23CPartI."Type of Unit" := ECCNos."Type of Unit";

        RG23CPartIRec.RESET;
        RG23CPartIRec.SETCURRENTKEY("Location E.C.C. No.","FA No./ Item No.");
        RG23CPartIRec.SETRANGE("Location E.C.C. No.",RG23CPartI."Location E.C.C. No.");
        RG23CPartIRec.SETRANGE("FA No./ Item No.",RG23CPartI."FA No./ Item No.");
        RG23CPartIRec.CALCSUMS(Quantity);
        RG23CPartI."Opening Stock" := RG23CPartIRec.Quantity;
        RG23CPartI."Closing Stock" := RG23CPartIRec.Quantity + RG23CPartI.Quantity;
        GetRGEntryNo(RG23CPartI."Posting Date",2,RG23CPartI."Location E.C.C. No.",RG23CPartI."Document No.",
          RG23CPartI."RG Entry No.");
        RG23CPartI.INSERT;
      END;
    END;

    PROCEDURE InsertRG23APartITransferShip@1280003(TransferLine@1280000 : Record 5741;TransferShipHeader@1280001 : Record 5744);
    VAR
      NextRGEntryNo@1280004 : Integer;
      RG23APartIRec@1280003 : Record 13719;
    BEGIN
      WITH TransferLine DO BEGIN
        IF Location.GET("Transfer-from Code") AND Location."Trading Location" THEN
          EXIT;
        RG23APartI.LOCKTABLE;
        IF RG23APartI.FINDLAST THEN
          NextRGEntryNo := RG23APartI."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23APartI.INIT;
        RG23APartI."Entry No." := NextRGEntryNo;
        RG23APartI.Type := RG23APartI.Type::Transfer;
        RG23APartI."Posting Date" := TransferShipHeader."Posting Date";
        RG23APartI."Document No." := TransferShipHeader."No.";
        RG23APartI."Item No." := "Item No.";
        RG23APartI.Description := Description;
        RecItem.GET("Item No.");
        RG23APartI."Base Unit Of Measure" := RecItem."Base Unit of Measure";
        RG23APartI."Quantity Sold" := "Qty. to Ship (Base)";
        IF RG23APartI."Quantity Sold" <> 0 THEN BEGIN
          RG23APartI.Quantity := -RG23APartI."Quantity Sold";
          RG23APartI."Quantity Received" := 0;
          RG23APartI."Location Code" := "Transfer-from Code";
        END;
        RG23APartI."Quantity Consumed" := 0;
        IF RG23APartI."Location Code" <> '' THEN BEGIN
          Location.GET(RG23APartI."Location Code");
          Location.TESTFIELD("E.C.C. No.");
          RG23APartI."Location E.C.C. No." := Location."E.C.C. No.";
        END;
        IF ECCNos.GET(RG23APartI."Location E.C.C. No.") THEN
          RG23APartI."Type of Unit" := ECCNos."Type of Unit";

        RG23APartI."Line No." := "Line No.";

        RG23APartIRec.RESET;
        RG23APartIRec.SETCURRENTKEY("Location E.C.C. No.","Item No.");
        RG23APartIRec.SETRANGE("Location E.C.C. No.",RG23APartI."Location E.C.C. No.");
        RG23APartIRec.SETRANGE("Item No.","Item No.");
        RG23APartIRec.CALCSUMS(Quantity);
        RG23APartI."Opening Stock" := RG23APartIRec.Quantity;
        RG23APartI."Closing Stock" := RG23APartIRec.Quantity + RG23APartI.Quantity;
        GetRGEntryNo(RG23APartI."Posting Date",0,RG23APartI."Location E.C.C. No.",RG23APartI."Document No.",
          RG23APartI."RG Entry No.");
        RG23APartI.INSERT;
      END
    END;

    PROCEDURE InsertRG23CPartITransferShip@1280008(TransferLine@1280005 : Record 5741;TransferShipHeader@1280001 : Record 5744);
    VAR
      NextRGEntryNo@1280006 : Integer;
      RG23CPartIRec@1280000 : Record 13721;
    BEGIN
      WITH TransferLine DO BEGIN
        IF Location.GET("Transfer-from Code") AND Location."Trading Location" THEN
          EXIT;
        RG23CPartI.LOCKTABLE;
        IF RG23CPartI.FINDLAST THEN
          NextRGEntryNo := RG23CPartI."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23CPartI.INIT;
        RG23CPartI."Entry No." := NextRGEntryNo;
        RG23CPartI.Type := RG23CPartI.Type::Transfer;
        RG23CPartI."Product Type" := RG23CPartI."Product Type"::Item;
        RG23CPartI."Posting Date" := TransferShipHeader."Posting Date";
        RG23CPartI."Document No." := TransferShipHeader."No.";
        RG23CPartI."FA No./ Item No." := "Item No.";
        RG23CPartI.Description := Description;
        RG23CPartI."Quantity Sold" := "Qty. to Ship (Base)";
        IF RG23CPartI."Quantity Sold" <> 0 THEN BEGIN
          RG23CPartI.Quantity := -RG23CPartI."Quantity Sold";
          RG23CPartI."Quantity Received" := 0;
          RG23CPartI."Quantity Consumed" := 0;
          RG23CPartI."Location Code" := "Transfer-from Code";
        END;
        IF RG23CPartI."Location Code" <> '' THEN BEGIN
          Location.GET(RG23CPartI."Location Code");
          Location.TESTFIELD("E.C.C. No.");
          RG23CPartI."Location E.C.C. No." := Location."E.C.C. No."
        END;
        IF ECCNos.GET(RG23CPartI."Location E.C.C. No.") THEN
          RG23CPartI."Type of Unit" := ECCNos."Type of Unit";

        RG23CPartI."Line No." := "Line No.";

        RG23CPartIRec.RESET;
        RG23CPartIRec.SETCURRENTKEY("Location E.C.C. No.","FA No./ Item No.");
        RG23CPartIRec.SETRANGE("Location E.C.C. No.",RG23CPartI."Location E.C.C. No.");
        RG23CPartIRec.SETRANGE("FA No./ Item No.","Item No.");
        RG23CPartIRec.CALCSUMS(Quantity);
        RG23CPartI."Opening Stock" := RG23CPartIRec.Quantity;
        RG23CPartI."Closing Stock" := RG23CPartIRec.Quantity + RG23CPartI.Quantity;
        GetRGEntryNo(RG23CPartI."Posting Date",2,RG23CPartI."Location E.C.C. No.",RG23CPartI."Document No.",
          RG23CPartI."RG Entry No.");
        RG23CPartI.INSERT;
      END
    END;

    PROCEDURE InsertRG23APartITransferRecpt@1280037(TransferLine@1280000 : Record 5741;TransferRcptHeader@1280001 : Record 5746);
    VAR
      NextRGEntryNo@1280004 : Integer;
      RG23APartIRec@1280003 : Record 13719;
    BEGIN
      WITH TransferLine DO BEGIN
        IF Location.GET("Transfer-to Code") AND Location."Trading Location" THEN
          EXIT;
        RG23APartI.LOCKTABLE;
        IF RG23APartI.FINDLAST THEN
          NextRGEntryNo := RG23APartI."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23APartI.INIT;
        RG23APartI."Entry No." := NextRGEntryNo;
        RG23APartI.Type := RG23APartI.Type::Transfer;
        RG23APartI."Posting Date" := TransferRcptHeader."Posting Date";
        RG23APartI."Document No." := TransferRcptHeader."No.";
        RG23APartI."Item No." := "Item No.";
        RG23APartI.Description := Description;
        RecItem.GET("Item No.");
        RG23APartI."Base Unit Of Measure" := RecItem."Base Unit of Measure";
        RG23APartI."Quantity Received" := "Qty. to Receive (Base)";
        IF RG23APartI."Quantity Received" <> 0 THEN BEGIN
          RG23APartI.Quantity := RG23APartI."Quantity Received";
          RG23APartI."Quantity Sold" := 0;
          RG23APartI."Quantity Consumed" := 0;
          RG23APartI."Location Code" := "Transfer-to Code";
        END;
        IF RG23APartI."Location Code" <> '' THEN BEGIN
          Location.GET(RG23APartI."Location Code");
          Location.TESTFIELD("E.C.C. No.");
          RG23APartI."Location E.C.C. No." := Location."E.C.C. No."
        END;
        IF ECCNos.GET(RG23APartI."Location E.C.C. No.") THEN
          RG23APartI."Type of Unit" := ECCNos."Type of Unit";

        RG23APartI."Line No." := "Line No.";
        RG23APartIRec.RESET;
        RG23APartIRec.SETCURRENTKEY("Location E.C.C. No.","Item No.");
        RG23APartIRec.SETRANGE("Location E.C.C. No.",RG23APartI."Location E.C.C. No.");
        RG23APartIRec.SETRANGE("Item No.","Item No.");
        RG23APartIRec.CALCSUMS(Quantity);
        RG23APartI."Opening Stock" := RG23APartIRec.Quantity;
        RG23APartI."Closing Stock" := RG23APartIRec.Quantity + RG23APartI.Quantity;
        GetRGEntryNo(RG23APartI."Posting Date",0,RG23APartI."Location E.C.C. No.",RG23APartI."Document No.",
          RG23APartI."RG Entry No.");
        RG23APartI.INSERT;
      END
    END;

    PROCEDURE InsertRG23CPartITransferRecpt@1280036(TransferLine@1280005 : Record 5741;TransferRcptHeader@1280001 : Record 5746);
    VAR
      NextRGEntryNo@1280006 : Integer;
      RG23CPartIRec@1280000 : Record 13721;
    BEGIN
      WITH TransferLine DO BEGIN
        IF Location.GET("Transfer-to Code") AND Location."Trading Location" THEN
          EXIT;
        RG23CPartI.LOCKTABLE;
        IF RG23CPartI.FINDLAST THEN
          NextRGEntryNo := RG23CPartI."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23CPartI.INIT;
        RG23CPartI."Entry No." := NextRGEntryNo;
        RG23CPartI.Type := RG23CPartI.Type::Transfer;
        RG23CPartI."Product Type" := RG23CPartI."Product Type"::Item;
        RG23CPartI."Posting Date" := TransferRcptHeader."Posting Date";
        RG23CPartI."Document No." := TransferRcptHeader."No.";
        RG23CPartI."FA No./ Item No." := "Item No.";
        RG23CPartI.Description := Description;
        RG23CPartI."Quantity Received" := "Qty. to Receive (Base)";
        IF RG23CPartI."Quantity Received" <> 0 THEN BEGIN
          RG23CPartI.Quantity := RG23CPartI."Quantity Received";
          RG23CPartI."Quantity Sold" := 0;
          RG23CPartI."Quantity Consumed" := 0;
          RG23CPartI."Location Code" := "Transfer-to Code";
        END;
        IF RG23CPartI."Location Code" <> '' THEN BEGIN
          Location.GET(RG23CPartI."Location Code");
          Location.TESTFIELD("E.C.C. No.");
          RG23CPartI."Location E.C.C. No." := Location."E.C.C. No."
        END;
        IF ECCNos.GET(RG23CPartI."Location E.C.C. No.") THEN
          RG23CPartI."Type of Unit" := ECCNos."Type of Unit";

        RG23CPartI."Line No." := "Line No.";

        RG23CPartIRec.RESET;
        RG23CPartIRec.SETCURRENTKEY("Location E.C.C. No.","FA No./ Item No.");
        RG23CPartIRec.SETRANGE("Location E.C.C. No.",RG23CPartI."Location E.C.C. No.");
        RG23CPartIRec.SETRANGE("FA No./ Item No.","Item No.");
        RG23CPartIRec.CALCSUMS(Quantity);
        RG23CPartI."Opening Stock" := RG23CPartIRec.Quantity;
        RG23CPartI."Closing Stock" := RG23CPartIRec.Quantity + RG23CPartI.Quantity;
        GetRGEntryNo(RG23CPartI."Posting Date",2,RG23CPartI."Location E.C.C. No.",RG23CPartI."Document No.",
          RG23CPartI."RG Entry No.");
        RG23CPartI.INSERT;
      END
    END;

    PROCEDURE InsertRG23APartIITransferRcpt@1280041(TransferLine@1280000 : Record 5741;TransferRcptHeader@1280001 : Record 5746);
    VAR
      NextRGEntryNo@1280004 : Integer;
      ExcisePostingSetup@1280005 : Record 13711;
      TempRG23APartII@1280006 : Record 13720;
    BEGIN
      WITH TransferLine DO BEGIN
        IF Location.GET("Transfer-to Code") AND Location."Trading Location" THEN
          EXIT;
        RG23APartII.LOCKTABLE;
        IF RG23APartII.FINDLAST THEN
          NextRGEntryNo := RG23APartII."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23APartII.INIT;
        RG23APartII."Entry No." := NextRGEntryNo;
        RG23APartII.Type := RG23APartII.Type::Transfer;
        RG23APartII."Line No." := "Line No.";
        RG23APartII."Posting Date" := TransferRcptHeader."Posting Date";
        RG23APartII."Document No." := TransferRcptHeader."No.";
        RG23APartII."Location Code" := "Transfer-to Code";
        IF "Transfer-to Code" <> '' THEN BEGIN
          Location.GET("Transfer-to Code");
          Location.TESTFIELD("E.C.C. No.");
          RG23APartII."Location E.C.C. No." := Location."E.C.C. No."
        END;
        RG23APartII.TESTFIELD("Location E.C.C. No.");
        IF ECCNos.GET(RG23APartII."Location E.C.C. No.") THEN
          RG23APartII."Type of Unit" := ECCNos."Type of Unit";
        RG23APartII."BED Credit" := "BED Amount";
        RG23APartII."AED(GSI) Credit" := "AED(GSI) Amount";
        RG23APartII."AED(TTA) Credit" := "AED(TTA) Amount";
        RG23APartII."SED Credit" := "SED Amount";
        RG23APartII."SAED Credit" := "SAED Amount";
        RG23APartII."NCCD Credit" := "NCCD Amount";
        RG23APartII."eCess Credit" := "eCess Amount";
        RG23APartII."SHE Cess Credit" := "SHE Cess Amount";
        RG23APartII."ADET Credit" := "ADET Amount";
        RG23APartII."ADE Credit" := "ADE Amount";
        RG23APartII."ADC VAT Credit" := "ADC VAT Amount";
        RG23APartII.CVD := CVD;
        RG23APartII."Remaining BED Credit" := RG23APartII."BED Credit";
        RG23APartII."Remaining AED(GSI) Credit" := RG23APartII."AED(GSI) Credit";
        RG23APartII."Remaining SED Credit" := RG23APartII."SED Credit";
        RG23APartII."Remaining SAED Credit" := RG23APartII."SAED Credit";
        RG23APartII."Remaining NCCD Credit" := RG23APartII."NCCD Credit";
        RG23APartII."Remaining eCess Credit" := RG23APartII."eCess Credit";
        RG23APartII."Remaining SHECess Credit" := RG23APartII."SHE Cess Credit";
        RG23APartII."Remaining ADET Credit" := RG23APartII."ADET Credit";
        RG23APartII."Remaining AED(TTA) Credit" := RG23APartII."AED(TTA) Credit";
        RG23APartII."Remaining ADE Credit" := RG23APartII."ADE Credit";
        RG23APartII."Remaining ADC VAT Credit" := RG23APartII."ADC VAT Credit";
        RG23APartII."Remaining Excise Amount" := RG23APartII."Remaining BED Credit" + RG23APartII."Remaining AED(GSI) Credit" +
          RG23APartII."Remaining SED Credit" + RG23APartII."Remaining SAED Credit" + RG23APartII."Remaining NCCD Credit" +
          RG23APartII."Remaining eCess Credit" + RG23APartII."Remaining ADET Credit" + RG23APartII."Remaining AED(TTA) Credit" +
          RG23APartII."Remaining ADE Credit" + RG23APartII."Remaining ADC VAT Credit" + RG23APartII."Remaining SHECess Credit";
        TempRG23APartII.SETCURRENTKEY("Location E.C.C. No.");
        TempRG23APartII.SETRANGE("Location E.C.C. No.",RG23APartII."Location E.C.C. No.");
        IF TempRG23APartII.FINDLAST THEN BEGIN
          RG23APartII."Op. Bal. BED/AED" := TempRG23APartII."Total BED Amount" + TempRG23APartII."Total AED(GSI) Amount" +
            TempRG23APartII."Total AED(TTA) Amount";
          RG23APartII."Op. Bal. ODs" := TempRG23APartII."Total SED Amount" + TempRG23APartII."Total SAED Amount" +
            TempRG23APartII."Total NCCD Amount" + TempRG23APartII."Total eCess Amount" +
            TempRG23APartII."Total ADET Amount" + TempRG23APartII."Total ADE Amount" +
            TempRG23APartII."Total ADC VAT Amount" + TempRG23APartII."Total SHE Cess Amount";
          RG23APartII."Total BED Amount" := TempRG23APartII."Total BED Amount" + RG23APartII."BED Credit" - RG23APartII."BED Debit";
          RG23APartII."Total AED(GSI) Amount" := TempRG23APartII."Total AED(GSI) Amount" + RG23APartII."AED(GSI) Credit" -
            RG23APartII."AED(GSI) Debit";
          RG23APartII."Total AED(TTA) Amount" := TempRG23APartII."Total AED(TTA) Amount" + RG23APartII."AED(TTA) Credit" -
            RG23APartII."AED(TTA) Debit";
          RG23APartII."Total SED Amount" := TempRG23APartII."Total SED Amount" + RG23APartII."SED Credit" - RG23APartII."SED Debit";
          RG23APartII."Total SAED Amount" :=
            TempRG23APartII."Total SAED Amount" + RG23APartII."SAED Credit" - RG23APartII."SAED Debit";
          RG23APartII."Total CESS Amount" := TempRG23APartII."Total CESS Amount";
          RG23APartII."Total NCCD Amount" :=
            TempRG23APartII."Total NCCD Amount" + RG23APartII."NCCD Credit" - RG23APartII."NCCD Debit";
          RG23APartII."Total eCess Amount" := TempRG23APartII."Total eCess Amount" + RG23APartII."eCess Credit" -
            RG23APartII."eCess Debit";
          RG23APartII."Total SHE Cess Amount" := TempRG23APartII."Total SHE Cess Amount" + RG23APartII."SHE Cess Credit" -
            RG23APartII."SHE Cess Debit";
          RG23APartII."Total ADET Amount" := TempRG23APartII."Total ADET Amount" + RG23APartII."ADET Credit" -
            RG23APartII."ADET Debit";
          RG23APartII."Total ADE Amount" := TempRG23APartII."Total ADE Amount" + RG23APartII."ADE Credit" -
            RG23APartII."ADE Debit";
          RG23APartII."Total ADC VAT Amount" := TempRG23APartII."Total ADC VAT Amount" + RG23APartII."ADC VAT Credit" -
            RG23APartII."ADC VAT Debit";
          RG23APartII."Closing Bal. BED/AED" := RG23APartII."Op. Bal. BED/AED" + RG23APartII."BED Credit" + RG23APartII.
            "AED(GSI) Credit"
            + RG23APartII."AED(TTA) Credit" - RG23APartII."BED Debit" - RG23APartII."AED(GSI) Debit" - RG23APartII."AED(TTA) Debit";
          RG23APartII."Closing Bal. Other Duties" :=
            RG23APartII."Op. Bal. ODs" + RG23APartII."SED Credit" + RG23APartII."SAED Credit" +
            RG23APartII."NCCD Credit" + RG23APartII."eCess Credit" + RG23APartII."ADET Credit" + RG23APartII."ADC VAT Credit" -
            RG23APartII."SED Debit" - RG23APartII."SAED Debit" - RG23APartII."NCCD Debit" - RG23APartII."eCess Debit" +
            RG23APartII."ADET Debit" + RG23APartII."ADE Credit" - RG23APartII."ADE Debit" - RG23APartII."ADC VAT Debit" +
            RG23APartII."SHE Cess Credit" - RG23APartII."SHE Cess Debit";
        END ELSE BEGIN
          RG23APartII."Closing Bal. BED/AED" := RG23APartII."Op. Bal. BED/AED" + RG23APartII."BED Credit" + RG23APartII.
            "AED(GSI) Credit"
            + RG23APartII."AED(TTA) Credit" - RG23APartII."BED Debit" - RG23APartII."AED(GSI) Debit" - RG23APartII."AED(TTA) Debit";
          RG23APartII."Total BED Amount" := RG23APartII."BED Credit" - RG23APartII."BED Debit";
          RG23APartII."Total AED(GSI) Amount" := RG23APartII."AED(GSI) Credit" - RG23APartII."AED(GSI) Debit";
          RG23APartII."Total AED(TTA) Amount" := RG23APartII."AED(TTA) Credit" - RG23APartII."AED(TTA) Debit";
          RG23APartII."Total SED Amount" := RG23APartII."SED Credit" - RG23APartII."SED Debit";
          RG23APartII."Total SAED Amount" := RG23APartII."SAED Credit" - RG23APartII."SAED Debit";
          RG23APartII."Total NCCD Amount" := RG23APartII."NCCD Credit" - RG23APartII."NCCD Debit";
          RG23APartII."Total eCess Amount" := RG23APartII."eCess Credit" - RG23APartII."eCess Debit";
          RG23APartII."Total SHE Cess Amount" := RG23APartII."SHE Cess Credit" - RG23APartII."SHE Cess Debit";
          RG23APartII."Total ADET Amount" := RG23APartII."ADET Credit" - RG23APartII."ADET Debit";
          RG23APartII."Total ADE Amount" := RG23APartII."ADE Credit" - RG23APartII."ADE Debit";
          RG23APartII."Total ADC VAT Amount" := RG23APartII."ADC VAT Credit" - RG23APartII."ADC VAT Debit";
          RG23APartII."Closing Bal. Other Duties" :=
            RG23APartII."Op. Bal. ODs" + RG23APartII."SED Credit" + RG23APartII."SAED Credit" +
            RG23APartII."NCCD Credit" + RG23APartII."eCess Credit" + RG23APartII."ADC VAT Credit" + RG23APartII."ADET Credit" -
            RG23APartII."SED Debit" - RG23APartII."SAED Debit" - RG23APartII."NCCD Debit" - RG23APartII."eCess Debit" +
            RG23APartII."ADET Debit" + RG23APartII."ADE Credit" - RG23APartII."ADE Debit" - RG23APartII."ADC VAT Debit" +
            RG23APartII."SHE Cess Credit" - RG23APartII."SHE Cess Debit";
        END;
        RG23APartII."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
        RG23APartII."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        ExcisePostingSetup.SETRANGE("From Date",0D,TransferRcptHeader."Posting Date");
        ExcisePostingSetup.FINDLAST;
        RG23APartII."Cenvat Cr. Receivable Account" := ExcisePostingSetup."Cenvat Cr. Receivable Account";
        GetRGEntryNo(RG23APartII."Posting Date",1,RG23APartII."Location E.C.C. No.",RG23APartII."Document No.",
          RG23APartII."RG Entry No.");
        GLSetup.GET;
        IF GLSetup."Check Negative RG Balance" THEN
          CheckNegativeBalance(1);
        RG23APartII.INSERT;
      END;
    END;

    PROCEDURE InsertRG23CPartIITransferRcpt@1280040(TransferLine@1280000 : Record 5741;TransferRcptHeader@1280001 : Record 5746);
    VAR
      NextRGEntryNo@1280004 : Integer;
      TempRG23CPartII@1280005 : Record 13722;
      ExcisePostingSetup@1280006 : Record 13711;
    BEGIN
      WITH TransferLine DO BEGIN
        IF Location.GET("Transfer-to Code") AND Location."Trading Location" THEN
          EXIT;
        RG23CPartII.LOCKTABLE;
        IF RG23CPartII.FINDLAST THEN
          NextRGEntryNo := RG23CPartII."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23CPartII.INIT;
        RG23CPartII."Entry No." := NextRGEntryNo;
        RG23CPartII.Type := RG23CPartII.Type::Purchase;
        RG23CPartII."Line No." := "Line No.";
        RG23CPartII."Posting Date" := TransferRcptHeader."Posting Date";
        RG23CPartII."Document No." := TransferRcptHeader."No.";
        RG23CPartII."Location Code" := "Transfer-to Code";
        IF "Transfer-to Code" <> '' THEN BEGIN
          Location.GET("Transfer-to Code");
          Location.TESTFIELD("E.C.C. No.");
          RG23CPartII."Location E.C.C. No." := Location."E.C.C. No."
        END;
        RG23CPartII.TESTFIELD("Location E.C.C. No.");
        IF ECCNos.GET(RG23CPartII."Location E.C.C. No.") THEN
          RG23CPartII."Type of Unit" := ECCNos."Type of Unit";

        RG23CPartII."BED Credit" := "BED Amount";
        RG23CPartII."AED(GSI) Credit" := "AED(GSI) Amount";
        RG23CPartII."AED(TTA) Credit" := "AED(TTA) Amount";
        RG23CPartII."SED Credit" := "SED Amount";
        RG23CPartII."SAED Credit" := "SAED Amount";
        RG23CPartII."NCCD Credit" := "NCCD Amount";
        RG23CPartII."eCess Credit" := "eCess Amount";
        RG23CPartII."SHE Cess Credit" := "SHE Cess Amount";
        RG23CPartII."ADET Credit" := "ADET Amount";
        RG23CPartII."ADE Credit" := "ADE Amount";
        RG23CPartII."ADC VAT Credit" := "ADC VAT Amount";
        RG23CPartII.CVD := CVD;
        RG23CPartII."Remaining BED Credit" := ROUND(RG23CPartII."BED Credit" * 0.5);
        RG23CPartII."Remaining AED(GSI) Credit" := ROUND(RG23CPartII."AED(GSI) Credit" * 0.5);
        RG23CPartII."Remaining SED Credit" := ROUND(RG23CPartII."SED Credit" * 0.5);
        RG23CPartII."Remaining SAED Credit" := ROUND(RG23CPartII."SAED Credit" * 0.5);
        RG23CPartII."Remaining NCCD Credit" := ROUND(RG23CPartII."NCCD Credit" * 0.5);
        RG23CPartII."Remaining eCess Credit" := ROUND(RG23CPartII."eCess Credit" * 0.5);
        RG23CPartII."Remaining SHECess Credit" := ROUND(RG23CPartII."SHE Cess Credit" * 0.5);
        RG23CPartII."Remaining ADET Credit" := ROUND(RG23CPartII."ADET Credit" * 0.5);
        RG23CPartII."Remaining AED(TTA) Credit" := ROUND(RG23CPartII."AED(TTA) Credit" * 0.5);
        RG23CPartII."Remaining ADE Credit" := ROUND(RG23CPartII."ADE Credit" * 0.5);
        RG23CPartII."Remaining ADC VAT Credit" := ROUND(RG23CPartII."ADC VAT Credit");
        RG23CPartII."Remaining Excise Amount" := RG23CPartII."Remaining BED Credit" + RG23CPartII."Remaining AED(GSI) Credit" +
          RG23CPartII."Remaining SED Credit" + RG23CPartII."Remaining SAED Credit" + RG23CPartII."Remaining NCCD Credit" +
          RG23CPartII."Remaining eCess Credit" + RG23CPartII."Remaining ADET Credit" + RG23CPartII."Remaining AED(TTA) Credit" +
          RG23CPartII."Remaining ADE Credit" + RG23CPartII."Remaining ADC VAT Credit" + RG23CPartII."Remaining SHECess Credit";

        TempRG23CPartII.SETCURRENTKEY("Location E.C.C. No.");
        TempRG23CPartII.SETRANGE("Location E.C.C. No.",RG23CPartII."Location E.C.C. No.");
        IF TempRG23CPartII.FINDLAST THEN BEGIN
          RG23CPartII."Opening Balance Credit CY" := TempRG23CPartII."Total BED for Current Year" +
            TempRG23CPartII."Total AED(GSI) for CY" + TempRG23CPartII."Total ADET for Current Year" +
            TempRG23CPartII."Total SED for Current Year" + TempRG23CPartII."Total SAED for Current Year" +
            TempRG23CPartII."Total eCess for Current Year" + TempRG23CPartII."Total NCCD for Current Year" +
            TempRG23CPartII."Total CESS for Current Year" + TempRG23CPartII."Total AED(TTA) for CY" +
            TempRG23CPartII."Total ADE for Current Year" + TempRG23CPartII."Total ADC VAT for CY" +
            TempRG23CPartII."Total SHECESS for Current Year";
          RG23CPartII."Total ADC VAT for CY" :=
            TempRG23CPartII."Total ADC VAT for CY" + ROUND(RG23CPartII."ADC VAT Credit");
          RG23CPartII."Total BED for Current Year" :=
            TempRG23CPartII."Total BED for Current Year" + ROUND(RG23CPartII."BED Credit" * 0.5);
          RG23CPartII."Total BED for Next Year" :=
            TempRG23CPartII."Total BED for Next Year" + ROUND(RG23CPartII."BED Credit" * 0.5);
          RG23CPartII."Total AED(GSI) for CY" :=
            TempRG23CPartII."Total AED(GSI) for CY" + ROUND(RG23CPartII."AED(GSI) Credit" * 0.5);
          RG23CPartII."Total AED(GSI) for Next Year" :=
            TempRG23CPartII."Total AED(GSI) for Next Year" + ROUND(RG23CPartII."AED(GSI) Credit" * 0.5);
          RG23CPartII."Total AED(TTA) for CY" :=
            TempRG23CPartII."Total AED(TTA) for CY" + ROUND(RG23CPartII."AED(TTA) Credit" * 0.5);
          RG23CPartII."Total AED(TTA) for Next Year" :=
            TempRG23CPartII."Total AED(TTA) for Next Year" + ROUND(RG23CPartII."AED(TTA) Credit" * 0.5);
          RG23CPartII."Total SED for Current Year" :=
            TempRG23CPartII."Total SED for Current Year" + ROUND(RG23CPartII."SED Credit" * 0.5);
          RG23CPartII."Total SED for Next Year" :=
            TempRG23CPartII."Total SED for Next Year" + ROUND(RG23CPartII."SED Credit" * 0.5);
          RG23CPartII."Total SAED for Current Year" :=
            TempRG23CPartII."Total SAED for Current Year" + ROUND(RG23CPartII."SAED Credit" * 0.5);
          RG23CPartII."Total SAED for Next Year" :=
            TempRG23CPartII."Total SAED for Next Year" + ROUND(RG23CPartII."SAED Credit" * 0.5);
          RG23CPartII."Total NCCD for Current Year" :=
            TempRG23CPartII."Total NCCD for Current Year" + ROUND(RG23CPartII."NCCD Credit" * 0.5);
          RG23CPartII."Total NCCD for Next Year" :=
            TempRG23CPartII."Total NCCD for Next Year" + ROUND(RG23CPartII."NCCD Credit" * 0.5);
          RG23CPartII."Total eCess for Current Year" :=
            TempRG23CPartII."Total eCess for Current Year" + ROUND(RG23CPartII."eCess Credit" * 0.5);
          RG23CPartII."Total eCess for Next Year" :=
            TempRG23CPartII."Total eCess for Next Year" + ROUND(RG23CPartII."eCess Credit" * 0.5);
          RG23CPartII."Total SHECESS for Current Year" :=
            TempRG23CPartII."Total SHECESS for Current Year" + ROUND(RG23CPartII."SHE Cess Credit" * 0.5);
          RG23CPartII."Total SHECESS for Next Year" :=
            TempRG23CPartII."Total SHECESS for Next Year" + ROUND(RG23CPartII."SHE Cess Credit" * 0.5);
          RG23CPartII."Total ADET for Current Year" :=
            TempRG23CPartII."Total ADET for Current Year" + ROUND(RG23CPartII."ADET Credit" * 0.5);
          RG23CPartII."Total ADET for Next Year" :=
            TempRG23CPartII."Total ADET for Next Year" + ROUND(RG23CPartII."ADET Credit" * 0.5);
          RG23CPartII."Total ADE for Current Year" :=
            TempRG23CPartII."Total ADE for Current Year" + ROUND(RG23CPartII."ADE Credit" * 0.5);
          RG23CPartII."Total ADE for Next Year" :=
            TempRG23CPartII."Total ADE for Next Year" + ROUND(RG23CPartII."ADE Credit" * 0.5);
          RG23CPartII."Closing Balance Credit CY" := RG23CPartII."Total BED for Current Year" +
            RG23CPartII."Total AED(GSI) for CY" + RG23CPartII."Total ADET for Current Year" +
            RG23CPartII."Total SED for Current Year" + RG23CPartII."Total SAED for Current Year" +
            RG23CPartII."Total eCess for Current Year" + RG23CPartII."Total NCCD for Current Year" +
            RG23CPartII."Total CESS for Current Year" + RG23CPartII."Total AED(TTA) for CY" +
            RG23CPartII."Total ADE for Current Year" + RG23CPartII."Total ADC VAT for CY" +
            RG23CPartII."Total SHECESS for Current Year";
        END ELSE BEGIN
          RG23CPartII."Total BED for Current Year" := ROUND(RG23CPartII."BED Credit" * 0.5);
          RG23CPartII."Total BED for Next Year" := ROUND(RG23CPartII."BED Credit" * 0.5);
          RG23CPartII."Total AED(GSI) for CY" := ROUND(RG23CPartII."AED(GSI) Credit" * 0.5);
          RG23CPartII."Total AED(GSI) for Next Year" := ROUND(RG23CPartII."AED(GSI) Credit" * 0.5);
          RG23CPartII."Total AED(TTA) for CY" := ROUND(RG23CPartII."AED(TTA) Credit" * 0.5);
          RG23CPartII."Total AED(TTA) for Next Year" := ROUND(RG23CPartII."AED(TTA) Credit" * 0.5);
          RG23CPartII."Total SED for Current Year" := ROUND(RG23CPartII."SED Credit" * 0.5);
          RG23CPartII."Total SED for Next Year" := ROUND(RG23CPartII."SED Credit" * 0.5);
          RG23CPartII."Total SAED for Current Year" := ROUND(RG23CPartII."SAED Credit" * 0.5);
          RG23CPartII."Total SAED for Next Year" := ROUND(RG23CPartII."SAED Credit" * 0.5);
          RG23CPartII."Total NCCD for Current Year" := ROUND(RG23CPartII."NCCD Credit" * 0.5);
          RG23CPartII."Total NCCD for Next Year" := ROUND(RG23CPartII."NCCD Credit" * 0.5);
          RG23CPartII."Total eCess for Current Year" := ROUND(RG23CPartII."eCess Credit" * 0.5);
          RG23CPartII."Total eCess for Next Year" := ROUND(RG23CPartII."eCess Credit" * 0.5);
          RG23CPartII."Total SHECESS for Current Year" := ROUND(RG23CPartII."SHE Cess Credit" * 0.5);
          RG23CPartII."Total SHECESS for Next Year" := ROUND(RG23CPartII."SHE Cess Credit" * 0.5);
          RG23CPartII."Total ADET for Current Year" := ROUND(RG23CPartII."ADET Credit" * 0.5);
          RG23CPartII."Total ADET for Next Year" := ROUND(RG23CPartII."ADET Credit" * 0.5);
          RG23CPartII."Total ADE for Current Year" := ROUND(RG23CPartII."ADE Credit" * 0.5);
          RG23CPartII."Total ADE for Next Year" := ROUND(RG23CPartII."ADE Credit" * 0.5);
          RG23CPartII."Total ADC VAT for CY" := ROUND(RG23CPartII."ADC VAT Credit");
          RG23CPartII."Closing Balance Credit CY" := RG23CPartII."Total BED for Current Year" +
            RG23CPartII."Total AED(GSI) for CY" + RG23CPartII."Total ADET for Current Year" +
            RG23CPartII."Total SED for Current Year" + RG23CPartII."Total SAED for Current Year" +
            RG23CPartII."Total eCess for Current Year" + RG23CPartII."Total NCCD for Current Year" +
            RG23CPartII."Total CESS for Current Year" + RG23CPartII."Total AED(TTA) for CY" +
            RG23CPartII."Total ADE for Current Year" + RG23CPartII."Total ADC VAT for CY" +
            RG23CPartII."Total SHECESS for Current Year";
        END;

        RG23CPartII."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
        RG23CPartII."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        ExcisePostingSetup.SETRANGE("From Date",0D,TransferRcptHeader."Posting Date");
        ExcisePostingSetup.FINDLAST;
        RG23CPartII."Cenvat Cr. Receivable Acc." := ExcisePostingSetup."Cenvat Cr. Receivable Account";
        GetRGEntryNo(RG23CPartII."Posting Date",3,RG23CPartII."Location E.C.C. No.",RG23CPartII."Document No.",
          RG23CPartII."RG Entry No.");
        GLSetup.GET;
        IF GLSetup."Check Negative RG Balance" THEN
          CheckNegativeBalance(2);
        RG23CPartII.INSERT;
      END;
    END;

    PROCEDURE InsertRG23APartIICharges@1280010(GenJnlLine@1280000 : Record 81);
    VAR
      NextRGEntryNo@1280001 : Integer;
      TempRG23APartII@1280002 : Record 13720;
      ExcisePostingSetup@1280003 : Record 13711;
      TaxJnlLine@1500000 : Record 16587;
    BEGIN
      WITH GenJnlLine DO BEGIN
        RG23APartII.LOCKTABLE;
        IF RG23APartII.FINDLAST THEN
          NextRGEntryNo := RG23APartII."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23APartII.INIT;
        RG23APartII."Entry No." := NextRGEntryNo;
        RG23APartII."Line No." := "Line No.";
        RG23APartII."Posting Date" := "Posting Date";
        RG23APartII."Document No." := "Document No.";
        RG23APartII."Location Code" := "Location Code";
        RG23APartII."Location E.C.C. No." := "E.C.C. No.";
        RG23APartII.TESTFIELD("Location E.C.C. No.");
        IF ECCNos.GET(RG23APartII."Location E.C.C. No.") THEN
          RG23APartII."Type of Unit" := ECCNos."Type of Unit";

        TaxJnlLine.RESET;
        TaxJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
        TaxJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
        TaxJnlLine.SETRANGE("Line No.","Line No.");
        TaxJnlLine.SETRANGE("Document No.","Document No.");
        IF SalesDocumentNo <> '' THEN
          TaxJnlLine.SETRANGE("Document No.",SalesDocumentNo);
        TaxJnlLine.FINDFIRST;

        IF Amount > 0 THEN BEGIN
          RG23APartII.Type := RG23APartII.Type::Purchase;
          RG23APartII."BED Credit" := TaxJnlLine."BED Amount";
          RG23APartII."AED(GSI) Credit" := TaxJnlLine."AED(GSI) Amount";
          RG23APartII."AED(TTA) Credit" := TaxJnlLine."AED(TTA) Amount";
          RG23APartII."SED Credit" := TaxJnlLine."SED Amount";
          RG23APartII."SAED Credit" := TaxJnlLine."SAED Amount";
          RG23APartII."NCCD Credit" := TaxJnlLine."NCCD Amount";
          RG23APartII."eCess Credit" := TaxJnlLine."eCess Amount";
          RG23APartII."SHE Cess Credit" := TaxJnlLine."SHE Cess Amount";
          RG23APartII."ADET Credit" := TaxJnlLine."ADET Amount";
          RG23APartII."ADE Credit" := TaxJnlLine."ADE Amount";
          RG23APartII."ADC VAT Credit" := TaxJnlLine."ADC VAT Amount";

          RG23APartII."Remaining BED Credit" := RG23APartII."BED Credit";
          RG23APartII."Remaining AED(GSI) Credit" := RG23APartII."AED(GSI) Credit";
          RG23APartII."Remaining SED Credit" := RG23APartII."SED Credit";
          RG23APartII."Remaining SAED Credit" := RG23APartII."SAED Credit";
          RG23APartII."Remaining NCCD Credit" := RG23APartII."NCCD Credit";
          RG23APartII."Remaining eCess Credit" := RG23APartII."eCess Credit";
          RG23APartII."Remaining SHECess Credit" := RG23APartII."SHE Cess Credit";
          RG23APartII."Remaining ADET Credit" := RG23APartII."ADET Credit";
          RG23APartII."Remaining AED(TTA) Credit" := RG23APartII."AED(TTA) Credit";
          RG23APartII."Remaining ADE Credit" := RG23APartII."ADE Credit";
          RG23APartII."Remaining ADC VAT Credit" := RG23APartII."ADC VAT Credit";
          RG23APartII."Remaining Excise Amount" := RG23APartII."Remaining BED Credit" + RG23APartII."Remaining AED(GSI) Credit" +
            RG23APartII."Remaining SED Credit" + RG23APartII."Remaining SAED Credit" + RG23APartII."Remaining NCCD Credit" +
            RG23APartII."Remaining eCess Credit" + RG23APartII."Remaining ADET Credit" + RG23APartII."Remaining AED(TTA) Credit" +
            RG23APartII."Remaining ADE Credit" + RG23APartII."Remaining ADC VAT Credit" + RG23APartII."Remaining SHECess Credit";
        END ELSE BEGIN
          RG23APartII.Type := RG23APartII.Type::Sale;
          RG23APartII."BED Debit" := -TaxJnlLine."BED Amount";
          RG23APartII."AED(GSI) Debit" := -TaxJnlLine."AED(GSI) Amount";
          RG23APartII."AED(TTA) Debit" := -TaxJnlLine."AED(TTA) Amount";
          RG23APartII."SED Debit" := -TaxJnlLine."SED Amount";
          RG23APartII."SAED Debit" := -TaxJnlLine."SAED Amount";
          RG23APartII."NCCD Debit" := -TaxJnlLine."NCCD Amount";
          RG23APartII."eCess Debit" := -TaxJnlLine."eCess Amount";
          RG23APartII."SHE Cess Debit" := -TaxJnlLine."SHE Cess Amount";
          RG23APartII."ADET Debit" := -TaxJnlLine."ADET Amount";
          RG23APartII."ADE Debit" := -TaxJnlLine."ADE Amount";
          RG23APartII."ADC VAT Debit" := -TaxJnlLine."ADC VAT Amount";
          AdjustCrEntriesRG23A(RG23APartII);
        END;
        TempRG23APartII.SETCURRENTKEY("Location E.C.C. No.");
        TempRG23APartII.SETRANGE("Location E.C.C. No.",RG23APartII."Location E.C.C. No.");
        IF TempRG23APartII.FINDLAST THEN BEGIN
          RG23APartII."Op. Bal. BED/AED" := TempRG23APartII."Total BED Amount" + TempRG23APartII."Total AED(GSI) Amount" +
            TempRG23APartII."Total AED(TTA) Amount";
          RG23APartII."Op. Bal. ODs" := TempRG23APartII."Total SED Amount" + TempRG23APartII."Total SAED Amount" +
            TempRG23APartII."Total NCCD Amount" + TempRG23APartII."Total eCess Amount" + TempRG23APartII."Total ADET Amount" +
            TempRG23APartII."Total ADE Amount" + TempRG23APartII."Total ADC VAT Amount" + TempRG23APartII."Total SHE Cess Amount";
          RG23APartII."Total BED Amount" := TempRG23APartII."Total BED Amount" + RG23APartII."BED Credit" - RG23APartII."BED Debit";
          RG23APartII."Total AED(GSI) Amount" := TempRG23APartII."Total AED(GSI) Amount" + RG23APartII."AED(GSI) Credit" -
            RG23APartII."AED(GSI) Debit";
          RG23APartII."Total AED(TTA) Amount" := TempRG23APartII."Total AED(TTA) Amount" + RG23APartII."AED(TTA) Credit" -
            RG23APartII."AED(TTA) Debit";
          RG23APartII."Total SED Amount" := TempRG23APartII."Total SED Amount" + RG23APartII."SED Credit" - RG23APartII."SED Debit";
          RG23APartII."Total SAED Amount" :=
            TempRG23APartII."Total SAED Amount" + RG23APartII."SAED Credit" - RG23APartII."SAED Debit";
          RG23APartII."Total CESS Amount" := TempRG23APartII."Total CESS Amount";
          RG23APartII."Total NCCD Amount" :=
            TempRG23APartII."Total NCCD Amount" + RG23APartII."NCCD Credit" - RG23APartII."NCCD Debit";
          RG23APartII."Total eCess Amount" := TempRG23APartII."Total eCess Amount" + RG23APartII."eCess Credit" -
            RG23APartII."eCess Debit";
          RG23APartII."Total SHE Cess Amount" := TempRG23APartII."Total SHE Cess Amount" + RG23APartII."SHE Cess Credit" -
            RG23APartII."SHE Cess Debit";
          RG23APartII."Total ADET Amount" := TempRG23APartII."Total ADET Amount" + RG23APartII."ADET Credit" -
            RG23APartII."ADET Debit";
          RG23APartII."Total ADE Amount" := TempRG23APartII."Total ADE Amount" + RG23APartII."ADE Credit" -
            RG23APartII."ADE Debit";
          RG23APartII."Total ADC VAT Amount" := TempRG23APartII."Total ADC VAT Amount" + RG23APartII."ADC VAT Credit" -
            RG23APartII."ADC VAT Debit";
          RG23APartII."Closing Bal. BED/AED" := RG23APartII."Op. Bal. BED/AED" + RG23APartII."BED Credit" + RG23APartII.
            "AED(GSI) Credit"
            + RG23APartII."AED(TTA) Credit" - RG23APartII."BED Debit" - RG23APartII."AED(GSI) Debit" - RG23APartII."AED(TTA) Debit";
          RG23APartII."Closing Bal. Other Duties" :=
            RG23APartII."Op. Bal. ODs" + RG23APartII."SED Credit" + RG23APartII."SAED Credit" +
            RG23APartII."NCCD Credit" + RG23APartII."eCess Credit" + RG23APartII."ADET Credit" - RG23APartII."SED Debit" -
            RG23APartII."SAED Debit" - RG23APartII."NCCD Debit" - RG23APartII."eCess Debit" - RG23APartII."ADET Debit" +
            RG23APartII."ADE Credit" - RG23APartII."ADE Debit" - RG23APartII."ADC VAT Debit" +
            RG23APartII."SHE Cess Credit" - RG23APartII."SHE Cess Debit";
        END ELSE BEGIN
          RG23APartII."Total BED Amount" := RG23APartII."BED Credit";
          RG23APartII."Total AED(GSI) Amount" := RG23APartII."AED(GSI) Credit";
          RG23APartII."Total AED(TTA) Amount" := RG23APartII."AED(TTA) Credit";
          RG23APartII."Total SED Amount" := RG23APartII."SED Credit";
          RG23APartII."Total SAED Amount" := RG23APartII."SAED Credit";
          RG23APartII."Total NCCD Amount" := RG23APartII."NCCD Credit";
          RG23APartII."Total eCess Amount" := RG23APartII."eCess Credit";
          RG23APartII."Total SHE Cess Amount" := RG23APartII."SHE Cess Credit";
          RG23APartII."Total ADET Amount" := RG23APartII."ADET Credit";
          RG23APartII."Total ADE Amount" := RG23APartII."ADE Credit";
          RG23APartII."Total ADC VAT Amount" := RG23APartII."ADC VAT Credit";
          RG23APartII."Closing Bal. BED/AED" := RG23APartII."Op. Bal. BED/AED" + RG23APartII."BED Credit" +
            RG23APartII."AED(GSI) Credit" + RG23APartII."AED(TTA) Credit";
          RG23APartII."Closing Bal. Other Duties" :=
            RG23APartII."Op. Bal. ODs" + RG23APartII."SED Credit" + RG23APartII."SAED Credit" +
            RG23APartII."NCCD Credit" + RG23APartII."eCess Credit" + RG23APartII."ADET Credit" + RG23APartII."ADE Credit" +
            RG23APartII."ADC VAT Credit" + RG23APartII."SHE Cess Credit";
        END;

        RG23APartII."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
        RG23APartII."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        ExcisePostingSetup.SETRANGE("From Date",0D,"Posting Date");
        IF ExcisePostingSetup.FINDLAST THEN
          RG23APartII."Cenvat Cr. Receivable Account" := ExcisePostingSetup."Cenvat Cr. Receivable Account";
        GetRGEntryNo(RG23APartII."Posting Date",1,RG23APartII."Location E.C.C. No.",RG23APartII."Document No.",
          RG23APartII."RG Entry No.");
        GLSetup.GET;
        IF GLSetup."Check Negative RG Balance" THEN
          CheckNegativeBalance(1);
        RG23APartII.INSERT;
      END;
    END;

    PROCEDURE InsertRG23CPartIICharges@1280013(GenJnlLine@1280000 : Record 81);
    VAR
      NextRGEntryNo@1280005 : Integer;
      TempRG23CPartII@1280004 : Record 13722;
      ExcisePostingSetup@1280002 : Record 13711;
      TaxJnlLine@1500000 : Record 16587;
    BEGIN
      WITH GenJnlLine DO BEGIN
        RG23CPartII.LOCKTABLE;
        IF RG23CPartII.FINDLAST THEN
          NextRGEntryNo := RG23CPartII."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23CPartII.INIT;
        RG23CPartII."Entry No." := NextRGEntryNo;
        RG23CPartII."Line No." := "Line No.";
        RG23CPartII."Posting Date" := "Posting Date";
        RG23CPartII."Document No." := "Document No.";
        RG23CPartII."Location E.C.C. No." := "E.C.C. No.";
        RG23CPartII."Location Code" := "Location Code";
        RG23CPartII.TESTFIELD("Location E.C.C. No.");
        IF ECCNos.GET(RG23CPartII."Location E.C.C. No.") THEN
          RG23CPartII."Type of Unit" := ECCNos."Type of Unit";

        TaxJnlLine.RESET;
        TaxJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
        TaxJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
        TaxJnlLine.SETRANGE("Line No.","Line No.");
        TaxJnlLine.SETRANGE("Document No.","Document No.");
        IF SalesDocumentNo <> '' THEN
          TaxJnlLine.SETRANGE("Document No.",SalesDocumentNo);
        TaxJnlLine.FINDFIRST;

        IF Amount > 0 THEN BEGIN
          RG23CPartII.Type := RG23CPartII.Type::Purchase;
          RG23CPartII."BED Credit" := TaxJnlLine."BED Amount";
          RG23CPartII."AED(GSI) Credit" := TaxJnlLine."AED(GSI) Amount";
          RG23CPartII."AED(TTA) Credit" := TaxJnlLine."AED(TTA) Amount";
          RG23CPartII."SED Credit" := TaxJnlLine."SED Amount";
          RG23CPartII."SAED Credit" := TaxJnlLine."SAED Amount";
          RG23CPartII."NCCD Credit" := TaxJnlLine."NCCD Amount";
          RG23CPartII."eCess Credit" := TaxJnlLine."eCess Amount";
          RG23CPartII."SHE Cess Credit" := TaxJnlLine."SHE Cess Amount";
          RG23CPartII."CESS Credit" := TaxJnlLine."CESS Amount";
          RG23CPartII."ADET Credit" := TaxJnlLine."ADET Amount";
          RG23CPartII."ADE Credit" := TaxJnlLine."ADE Amount";
          RG23CPartII."ADC VAT Credit" := TaxJnlLine."ADC VAT Amount";

          IF NOT Deferred THEN BEGIN
            RG23CPartII."Remaining BED Credit" := RG23CPartII."BED Credit";
            RG23CPartII."Remaining AED(GSI) Credit" := RG23CPartII."AED(GSI) Credit";
            RG23CPartII."Remaining SED Credit" := RG23CPartII."SED Credit";
            RG23CPartII."Remaining SAED Credit" := RG23CPartII."SAED Credit";
            RG23CPartII."Remaining NCCD Credit" := RG23CPartII."NCCD Credit";
            RG23CPartII."Remaining eCess Credit" := RG23CPartII."eCess Credit";
            RG23CPartII."Remaining SHECess Credit" := RG23CPartII."SHE Cess Credit";
            RG23CPartII."Remaining ADET Credit" := RG23CPartII."ADET Credit";
            RG23CPartII."Remaining AED(TTA) Credit" := RG23CPartII."AED(TTA) Credit";
            RG23CPartII."Remaining ADE Credit" := RG23CPartII."ADE Credit";
            RG23CPartII."Remaining ADC VAT Credit" := RG23CPartII."ADC VAT Credit";
            RG23CPartII."Remaining Excise Amount" := RG23CPartII."Remaining BED Credit" + RG23CPartII."Remaining AED(GSI) Credit" +
              RG23CPartII."Remaining SED Credit" + RG23CPartII."Remaining SAED Credit" + RG23CPartII."Remaining NCCD Credit" +
              RG23CPartII."Remaining eCess Credit" + RG23CPartII."Remaining ADET Credit" + RG23CPartII."Remaining AED(TTA) Credit" +
              RG23CPartII."Remaining ADE Credit" + RG23CPartII."Remaining ADC VAT Credit" + RG23CPartII."Remaining SHECess Credit";
          END;
        END ELSE BEGIN
          RG23CPartII.Type := RG23CPartII.Type::Sale;
          RG23CPartII."BED Debit" := -TaxJnlLine."BED Amount";
          RG23CPartII."AED(GSI) Debit" := -TaxJnlLine."AED(GSI) Amount";
          RG23CPartII."AED(TTA) Debit" := -TaxJnlLine."AED(TTA) Amount";
          RG23CPartII."SED Debit" := -TaxJnlLine."SED Amount";
          RG23CPartII."SAED Debit" := -TaxJnlLine."SAED Amount";
          RG23CPartII."NCCD Debit" := -TaxJnlLine."NCCD Amount";
          RG23CPartII."eCess Debit" := -TaxJnlLine."eCess Amount";
          RG23CPartII."SHE Cess Debit" := -TaxJnlLine."SHE Cess Amount";
          RG23CPartII."CESS Debit" := -TaxJnlLine."CESS Amount";
          RG23CPartII."ADET Debit" := -TaxJnlLine."ADET Amount";
          RG23CPartII."ADE Debit" := -TaxJnlLine."ADE Amount";
          RG23CPartII."ADC VAT Debit" := -TaxJnlLine."ADC VAT Amount";
          AdjustCrEntriesRG23C(RG23CPartII);
        END;

        TempRG23CPartII.SETCURRENTKEY("Location E.C.C. No.");
        TempRG23CPartII.SETRANGE("Location E.C.C. No.",RG23CPartII."Location E.C.C. No.");
        IF TempRG23CPartII.FINDLAST THEN BEGIN
          IF NOT Deferred THEN BEGIN
            RG23CPartII."Opening Balance Credit CY" := TempRG23CPartII."Total BED for Current Year" + TempRG23CPartII.
              "Total AED(GSI) for CY" + TempRG23CPartII."Total ADET for Current Year" +
              TempRG23CPartII."Total SED for Current Year" + TempRG23CPartII."Total SAED for Current Year" +
              TempRG23CPartII."Total eCess for Current Year" + TempRG23CPartII."Total NCCD for Current Year" +
              TempRG23CPartII."Total CESS for Current Year" + TempRG23CPartII."Total ADE for Current Year" +
              TempRG23CPartII."Total ADC VAT for CY" + TempRG23CPartII."Total SHECESS for Current Year";
            RG23CPartII."Total ADC VAT for CY" := TempRG23CPartII."Total ADC VAT for CY" + RG23CPartII."ADC VAT Credit" -
              RG23CPartII."ADC VAT Debit";
            RG23CPartII."Total BED for Current Year" :=
              TempRG23CPartII."Total BED for Current Year" + RG23CPartII."BED Credit" - RG23CPartII."BED Debit";
            RG23CPartII."Total AED(GSI) for CY" :=
              TempRG23CPartII."Total AED(GSI) for CY" + RG23CPartII."AED(GSI) Credit" - RG23CPartII."AED(GSI) Debit";
            RG23CPartII."Total AED(TTA) for CY" :=
              TempRG23CPartII."Total AED(TTA) for CY" + RG23CPartII."AED(TTA) Credit" - RG23CPartII."AED(TTA) Debit";
            RG23CPartII."Total SED for Current Year" :=
              TempRG23CPartII."Total SED for Current Year" + RG23CPartII."SED Credit" - RG23CPartII."SED Debit";
            RG23CPartII."Total SAED for Current Year" :=
              TempRG23CPartII."Total SAED for Current Year" + RG23CPartII."SAED Credit" - RG23CPartII."SAED Debit";
            RG23CPartII."Total eCess for Current Year" :=
              TempRG23CPartII."Total eCess for Current Year" + RG23CPartII."eCess Credit" - RG23CPartII."eCess Debit";
            RG23CPartII."Total SHECESS for Current Year" :=
              TempRG23CPartII."Total SHECESS for Current Year" + RG23CPartII."SHE Cess Credit" - RG23CPartII."SHE Cess Debit";
            RG23CPartII."Total CESS for Current Year" :=
              TempRG23CPartII."Total CESS for Current Year" + RG23CPartII."CESS Credit" - RG23CPartII."CESS Debit";
            RG23CPartII."Total NCCD for Current Year" :=
              TempRG23CPartII."Total NCCD for Current Year" + RG23CPartII."NCCD Credit" - RG23CPartII."NCCD Debit";
            RG23CPartII."Total ADET for Current Year" :=
              TempRG23CPartII."Total ADET for Current Year" + RG23CPartII."ADET Credit" - RG23CPartII."ADET Debit";
            RG23CPartII."Total ADE for Current Year" :=
              TempRG23CPartII."Total ADE for Current Year" + RG23CPartII."ADE Credit" - RG23CPartII."ADE Debit";
            RG23CPartII."Closing Balance Credit CY" := RG23CPartII."Total BED for Current Year" +
              RG23CPartII."Total AED(GSI) for CY" + RG23CPartII."Total ADET for Current Year" +
              RG23CPartII."Total SED for Current Year" + RG23CPartII."Total SAED for Current Year" +
              RG23CPartII."Total eCess for Current Year" + RG23CPartII."Total NCCD for Current Year" +
              RG23CPartII."Total CESS for Current Year" + RG23CPartII."Total AED(TTA) for CY" +
              RG23CPartII."Total ADE for Current Year" + RG23CPartII."Total ADC VAT for CY" +
              RG23CPartII."Total SHECESS for Current Year";
          END ELSE BEGIN
            RG23CPartII."Opening Balance Credit CY" := TempRG23CPartII."Total BED for Current Year" +
              TempRG23CPartII."Total AED(GSI) for CY" + TempRG23CPartII."Total ADET for Current Year" +
              TempRG23CPartII."Total SED for Current Year" + TempRG23CPartII."Total SAED for Current Year" +
              TempRG23CPartII."Total eCess for Current Year" + TempRG23CPartII."Total NCCD for Current Year" +
              TempRG23CPartII."Total CESS for Current Year" + TempRG23CPartII."Total AED(TTA) for CY" +
              TempRG23CPartII."Total ADE for Current Year" + TempRG23CPartII."Total ADC VAT for CY" +
              TempRG23CPartII."Total SHECESS for Current Year";
            RG23CPartII."Total ADC VAT for CY" := TempRG23CPartII."Total ADC VAT for CY";
            RG23CPartII."Total BED for Current Year" := TempRG23CPartII."Total BED for Current Year";
            RG23CPartII."Total AED(GSI) for CY" := TempRG23CPartII."Total AED(GSI) for CY";
            RG23CPartII."Total AED(TTA) for CY" := TempRG23CPartII."Total AED(TTA) for CY";
            RG23CPartII."Total SED for Current Year" := TempRG23CPartII."Total SED for Current Year";
            RG23CPartII."Total SAED for Current Year" := TempRG23CPartII."Total SAED for Current Year";
            RG23CPartII."Total eCess for Current Year" := TempRG23CPartII."Total eCess for Current Year";
            RG23CPartII."Total SHECESS for Current Year" := TempRG23CPartII."Total SHECESS for Current Year";
            RG23CPartII."Total CESS for Current Year" := TempRG23CPartII."Total CESS for Current Year";
            RG23CPartII."Total NCCD for Current Year" := TempRG23CPartII."Total NCCD for Current Year";
            RG23CPartII."Total ADET for Current Year" := TempRG23CPartII."Total ADET for Current Year";
            RG23CPartII."Total ADE for Current Year" := TempRG23CPartII."Total ADE for Current Year";
            RG23CPartII."Total BED for Next Year" :=
              TempRG23CPartII."Total BED for Next Year" + RG23CPartII."BED Credit" - RG23CPartII."BED Debit";
            RG23CPartII."Total AED(GSI) for Next Year" :=
              TempRG23CPartII."Total AED(GSI) for Next Year" + RG23CPartII."AED(GSI) Credit" - RG23CPartII."AED(GSI) Debit";
            RG23CPartII."Total AED(TTA) for Next Year" :=
              TempRG23CPartII."Total AED(TTA) for Next Year" + RG23CPartII."AED(TTA) Credit" - RG23CPartII."AED(TTA) Debit";
            RG23CPartII."Total SED for Next Year" :=
              TempRG23CPartII."Total SED for Next Year" + RG23CPartII."SED Credit" - RG23CPartII."SED Debit";
            RG23CPartII."Total SAED for Next Year" :=
              TempRG23CPartII."Total SAED for Next Year" + RG23CPartII."SAED Credit" - RG23CPartII."SAED Debit";
            RG23CPartII."Total eCess for Next Year" :=
              TempRG23CPartII."Total eCess for Next Year" + RG23CPartII."eCess Credit" - RG23CPartII."eCess Debit";
            RG23CPartII."Total SHECESS for Next Year" :=
              TempRG23CPartII."Total SHECESS for Next Year" + RG23CPartII."SHE Cess Credit" - RG23CPartII."SHE Cess Debit";
            RG23CPartII."Total CESS for Next Year" :=
              TempRG23CPartII."Total CESS for Next Year" + RG23CPartII."CESS Credit" - RG23CPartII."CESS Debit";
            RG23CPartII."Total NCCD for Next Year" :=
              TempRG23CPartII."Total NCCD for Next Year" + RG23CPartII."NCCD Credit" - RG23CPartII."NCCD Debit";
            RG23CPartII."Total ADET for Next Year" :=
              TempRG23CPartII."Total ADET for Next Year" + RG23CPartII."ADET Credit" - RG23CPartII."ADET Debit";
            RG23CPartII."Total ADE for Next Year" :=
              TempRG23CPartII."Total ADE for Next Year" + RG23CPartII."ADE Credit" - RG23CPartII."ADE Debit";
            RG23CPartII."Closing Balance Credit CY" := RG23CPartII."Total BED for Current Year" +
              RG23CPartII."Total AED(GSI) for CY" + RG23CPartII."Total ADET for Current Year" +
              RG23CPartII."Total SED for Current Year" + RG23CPartII."Total SAED for Current Year" +
              RG23CPartII."Total eCess for Current Year" + RG23CPartII."Total NCCD for Current Year" +
              RG23CPartII."Total CESS for Current Year" + RG23CPartII."Total AED(TTA) for CY" +
              RG23CPartII."Total ADE for Current Year" + RG23CPartII."Total ADC VAT for CY" +
              RG23CPartII."Total SHECESS for Current Year";
          END;
        END ELSE BEGIN
          IF NOT Deferred THEN BEGIN
            RG23CPartII."Opening Balance Credit CY" := 0;
            RG23CPartII."Total BED for Current Year" := RG23CPartII."BED Credit" - RG23CPartII."BED Debit";
            RG23CPartII."Total AED(GSI) for CY" := RG23CPartII."AED(GSI) Credit" - RG23CPartII."AED(GSI) Debit";
            RG23CPartII."Total AED(TTA) for CY" := RG23CPartII."AED(TTA) Credit" - RG23CPartII."AED(TTA) Debit";
            RG23CPartII."Total SED for Current Year" := RG23CPartII."SED Credit" - RG23CPartII."SED Debit";
            RG23CPartII."Total SAED for Current Year" := RG23CPartII."SAED Credit" - RG23CPartII."SAED Debit";
            RG23CPartII."Total eCess for Current Year" := RG23CPartII."eCess Credit" - RG23CPartII."eCess Debit";
            RG23CPartII."Total SHECESS for Current Year" := RG23CPartII."SHE Cess Credit" - RG23CPartII."SHE Cess Debit";
            RG23CPartII."Total CESS for Current Year" := RG23CPartII."CESS Credit" - RG23CPartII."CESS Debit";
            RG23CPartII."Total NCCD for Current Year" := RG23CPartII."NCCD Credit" - RG23CPartII."NCCD Debit";
            RG23CPartII."Total ADET for Current Year" := RG23CPartII."ADET Credit" - RG23CPartII."ADET Debit";
            RG23CPartII."Total ADE for Current Year" := RG23CPartII."ADE Credit" - RG23CPartII."ADE Debit";
            RG23CPartII."Total ADC VAT for CY" := RG23CPartII."ADC VAT Credit" - RG23CPartII."ADC VAT Debit";
            RG23CPartII."Closing Balance Credit CY" := RG23CPartII."Total BED for Current Year" +
              RG23CPartII."Total AED(GSI) for CY" + RG23CPartII."Total ADET for Current Year" +
              RG23CPartII."Total SED for Current Year" + RG23CPartII."Total SAED for Current Year" +
              RG23CPartII."Total eCess for Current Year" + RG23CPartII."Total NCCD for Current Year" +
              RG23CPartII."Total CESS for Current Year" + RG23CPartII."Total AED(TTA) for CY" +
              RG23CPartII."Total ADE for Current Year" + RG23CPartII."Total ADC VAT for CY" +
              RG23CPartII."Total SHECESS for Current Year";
          END ELSE BEGIN
            RG23CPartII."Opening Balance Credit CY" := 0;
            RG23CPartII."Total BED for Next Year" := RG23CPartII."BED Credit" - RG23CPartII."BED Debit";
            RG23CPartII."Total AED(GSI) for Next Year" := RG23CPartII."AED(GSI) Credit" - RG23CPartII."AED(GSI) Debit";
            RG23CPartII."Total SED for Next Year" := RG23CPartII."SED Credit" - RG23CPartII."SED Debit";
            RG23CPartII."Total SAED for Next Year" := RG23CPartII."SAED Credit" - RG23CPartII."SAED Debit";
            RG23CPartII."Total eCess for Next Year" := RG23CPartII."eCess Credit" - RG23CPartII."eCess Debit";
            RG23CPartII."Total SHECESS for Next Year" := RG23CPartII."SHE Cess Credit" - RG23CPartII."SHE Cess Debit";
            RG23CPartII."Total CESS for Next Year" := RG23CPartII."CESS Credit" - RG23CPartII."CESS Debit";
            RG23CPartII."Total NCCD for Next Year" := RG23CPartII."NCCD Credit" - RG23CPartII."NCCD Debit";
            RG23CPartII."Total ADET for Next Year" := RG23CPartII."ADET Credit" - RG23CPartII."ADET Debit";
            RG23CPartII."Total ADE for Next Year" := RG23CPartII."ADE Credit" - RG23CPartII."ADE Debit";
            RG23CPartII."Closing Balance Credit CY" := RG23CPartII."Total BED for Current Year" +
              RG23CPartII."Total AED(GSI) for CY" + RG23CPartII."Total ADET for Current Year" +
              RG23CPartII."Total SED for Current Year" + RG23CPartII."Total SAED for Current Year" +
              RG23CPartII."Total eCess for Current Year" + RG23CPartII."Total NCCD for Current Year" +
              RG23CPartII."Total CESS for Current Year" + RG23CPartII."Total AED(TTA) for CY" +
              RG23CPartII."Total ADE for Current Year" + RG23CPartII."Total ADC VAT for CY" +
              RG23CPartII."Total SHECESS for Current Year";
          END;
        END;
        RG23CPartII."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
        RG23CPartII."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        ExcisePostingSetup.SETRANGE("From Date",0D,"Posting Date");
        IF ExcisePostingSetup.FINDLAST THEN
          RG23CPartII."Cenvat Cr. Receivable Acc." := ExcisePostingSetup."Cenvat Cr. Receivable Account";
        GetRGEntryNo(RG23CPartII."Posting Date",3,RG23CPartII."Location E.C.C. No.",RG23CPartII."Document No.",
          RG23CPartII."RG Entry No.");
        GLSetup.GET;
        IF GLSetup."Check Negative RG Balance" THEN
          CheckNegativeBalance(2);
        RG23CPartII.INSERT;
      END;
    END;

    PROCEDURE InsertUndoReceiptRG23APartI@1280025(ItemJnlLine@1280004 : Record 83);
    VAR
      RG@1280000 : Record 13719;
      PurchRcptLine@1280001 : Record 121;
      SalesShptLine@1280003 : Record 111;
      LineNoSpacing@1280002 : Integer;
      RG23APartIRec@1280005 : Record 13719;
    BEGIN
      WITH ItemJnlLine DO BEGIN
        IF "RG23PartI Entry No." = 0 THEN
          EXIT;
        IF "Excise Record" = "Excise Record"::RG23C THEN
          EXIT;
        IF Return THEN
          EXIT;
        RG23APartI.LOCKTABLE;
        RG23APartI.FINDLAST;
        RGEntryNo := RG23APartI."Entry No." + 1;
        RG.GET("RG23PartI Entry No.");
        IF "RG Correction Type" = "RG Correction Type"::Purchase THEN BEGIN
          PurchRcptLine.SETRANGE("Document No.",RG."Document No.");
          PurchRcptLine."Document No." := RG."Document No.";
          PurchRcptLine."Line No." := RG."Line No.";
          PurchRcptLine.FIND('=');
          IF PurchRcptLine.FIND('>') THEN
            LineNoSpacing := (PurchRcptLine."Line No." - RG."Line No.") DIV 2
          ELSE
            LineNoSpacing := 10000;
        END ELSE BEGIN
          SalesShptLine.SETRANGE("Document No.",RG."Document No.");
          SalesShptLine."Document No." := RG."Document No.";
          SalesShptLine."Line No." := RG."Line No.";
          SalesShptLine.FIND('=');
          IF SalesShptLine.FIND('>') THEN
            LineNoSpacing := (SalesShptLine."Line No." - RG."Line No.") DIV 2
          ELSE
            LineNoSpacing := 10000;
        END;

        RG23APartI.INIT;
        RG23APartI.TRANSFERFIELDS(RG);
        RG23APartI."Entry No." := RGEntryNo;
        IF "RG Correction Type" = "RG Correction Type"::Purchase THEN BEGIN
          RG23APartI."Quantity Received" := -RG."Quantity Received";
          RG23APartI.Quantity := RG23APartI."Quantity Received";
        END ELSE BEGIN
          RG23APartI."Quantity Sold" := -RG."Quantity Sold";
          RG23APartI.Quantity := -RG23APartI."Quantity Sold";
        END;
        RG23APartI."Line No." := RG23APartI."Line No." + LineNoSpacing;
        RG23APartIRec.RESET;
        RG23APartIRec.SETCURRENTKEY("Location E.C.C. No.","Item No.");
        RG23APartIRec.SETRANGE("Location E.C.C. No.",RG23APartI."Location E.C.C. No.");
        RG23APartIRec.SETRANGE("Item No.",RG23APartI."Item No.");
        RG23APartIRec.CALCSUMS(Quantity);
        RG23APartI."Opening Stock" := RG23APartIRec.Quantity;
        RG23APartI."Closing Stock" := RG23APartIRec.Quantity + RG23APartI.Quantity;
        GetRGEntryNo(RG23APartI."Posting Date",0,RG23APartI."Location E.C.C. No.",RG23APartI."Document No.",
          RG23APartI."RG Entry No.");
        RG23APartI.INSERT;
      END;
    END;

    PROCEDURE InsertUndoReceiptRG23APartII@1280024(ItemJnlLine@1280004 : Record 83);
    VAR
      RG@1280003 : Record 13720;
      PurchRcptLine@1280002 : Record 121;
      TempRG23APartII@1280001 : Record 13720;
      LineNoSpacing@1280000 : Integer;
    BEGIN
      WITH ItemJnlLine DO BEGIN
        IF "RG23PartII Entry No." = 0 THEN
          EXIT;
        IF "RG Correction Type" = "RG Correction Type"::Sale THEN
          EXIT;
        IF "Excise Record" = "Excise Record"::RG23C THEN
          EXIT;
        IF Return THEN
          EXIT;
        RG23APartII.LOCKTABLE;
        RG23APartII.FINDLAST;
        RGEntryNo := RG23APartII."Entry No." + 1;

        RG.GET("RG23PartII Entry No.");

        PurchRcptLine.SETRANGE("Document No.",RG."Document No.");
        PurchRcptLine."Document No." := RG."Document No.";
        PurchRcptLine."Line No." := RG."Line No.";
        PurchRcptLine.FIND('=');
        IF PurchRcptLine.FIND('>') THEN
          LineNoSpacing := (PurchRcptLine."Line No." - RG."Line No.") DIV 2
        ELSE
          LineNoSpacing := 10000;

        RG23APartII.INIT;
        RG23APartII."Entry No." := RGEntryNo;
        RG23APartII.Type := RG23APartII.Type::Purchase;
        RG23APartII."Posting Date" := RG."Posting Date";
        RG23APartII."Document No." := RG."Document No.";
        RG23APartII."Location Code" := RG."Location Code";
        RG23APartII."Location E.C.C. No." := RG."Location E.C.C. No.";
        IF ECCNos.GET(RG23APartII."Location E.C.C. No.") THEN
          RG23APartII."Type of Unit" := ECCNos."Type of Unit";
        RG23APartII."Excise Prod. Posting Group" := RG."Excise Prod. Posting Group";
        RG23APartII."Excise Bus. Posting Group" := RG."Excise Bus. Posting Group";
        RG23APartII.TESTFIELD("Location E.C.C. No.");
        RG23APartII."BED Debit" := RG."BED Credit";
        RG23APartII."AED(GSI) Debit" := RG."AED(GSI) Credit";
        RG23APartII."AED(TTA) Debit" := RG."AED(TTA) Credit";
        RG23APartII."SED Debit" := RG."SED Credit";
        RG23APartII."SAED Debit" := RG."SAED Credit";
        RG23APartII."NCCD Debit" := RG."NCCD Credit";
        RG23APartII."eCess Debit" := RG."eCess Credit";
        RG23APartII."SHE Cess Debit" := RG."SHE Cess Credit";
        RG23APartII."ADET Debit" := RG."ADET Credit";
        RG23APartII."ADE Debit" := RG."ADE Credit";
        RG23APartII."ADC VAT Debit" := RG."ADC VAT Credit";

        TempRG23APartII.SETCURRENTKEY("Location E.C.C. No.");
        TempRG23APartII.SETRANGE("Location E.C.C. No.",RG23APartII."Location E.C.C. No.");
        IF TempRG23APartII.FINDLAST THEN BEGIN
          RG23APartII."Op. Bal. BED/AED" := TempRG23APartII."Total BED Amount" + TempRG23APartII."Total AED(GSI) Amount" +
            TempRG23APartII."Total AED(TTA) Amount";
          RG23APartII."Op. Bal. ODs" := TempRG23APartII."Total SED Amount" + TempRG23APartII."Total SAED Amount" +
            TempRG23APartII."Total NCCD Amount" + TempRG23APartII."Total eCess Amount" + TempRG23APartII."Total ADET Amount" +
            TempRG23APartII."Total ADE Amount" + TempRG23APartII."Total ADC VAT Amount" +
            TempRG23APartII."Total SHE Cess Amount";
          RG23APartII."Total BED Amount" := TempRG23APartII."Total BED Amount" - RG23APartII."BED Debit";
          RG23APartII."Total AED(GSI) Amount" := TempRG23APartII."Total AED(GSI) Amount" - RG23APartII."AED(GSI) Debit";
          RG23APartII."Total AED(TTA) Amount" := TempRG23APartII."Total AED(TTA) Amount" - RG23APartII."AED(TTA) Debit";
          RG23APartII."Total SED Amount" := TempRG23APartII."Total SED Amount" - RG23APartII."SED Debit";
          RG23APartII."Total SAED Amount" := TempRG23APartII."Total SAED Amount" - RG23APartII."SAED Debit";
          RG23APartII."Total CESS Amount" := TempRG23APartII."Total CESS Amount";
          RG23APartII."Total NCCD Amount" := TempRG23APartII."Total NCCD Amount" - RG23APartII."NCCD Debit";
          RG23APartII."Total eCess Amount" := TempRG23APartII."Total eCess Amount" - RG23APartII."eCess Debit";
          RG23APartII."Total SHE Cess Amount" := TempRG23APartII."Total SHE Cess Amount" - RG23APartII."SHE Cess Debit";
          RG23APartII."Total ADET Amount" := TempRG23APartII."Total ADET Amount" - RG23APartII."ADET Debit";
          RG23APartII."Total ADE Amount" := TempRG23APartII."Total ADE Amount" - RG23APartII."ADE Debit";
          RG23APartII."Total ADC VAT Amount" := TempRG23APartII."Total ADC VAT Amount" - RG23APartII."ADC VAT Debit";

          RG23APartII."Closing Bal. BED/AED" := RG23APartII."Op. Bal. BED/AED" - RG23APartII."BED Debit" - RG23APartII."AED(GSI) Debit"
            -
            RG23APartII."AED(TTA) Debit";
          RG23APartII."Closing Bal. Other Duties" := RG23APartII."Op. Bal. ODs" - RG23APartII."SED Debit" - RG23APartII."SAED Debit" -
            RG23APartII."NCCD Debit" - RG23APartII."eCess Debit" - RG23APartII."ADET Debit" - RG23APartII."ADE Debit"
            - RG23APartII."ADC VAT Debit" - RG23APartII."SHE Cess Debit";
        END;
        RG23APartII."Line No." := RG23APartII."Line No." + LineNoSpacing;
        RG23APartII.Supplementary := RG.Supplementary;
        RG23APartII."Source Document Type" := RG."Source Document Type";
        RG23APartII."Source Document No." := RG."Source Document No.";
        RG23APartII.CVD := RG.CVD;
        AdjustCrEntriesRG23A(RG23APartII);
        GetRGEntryNo(RG23APartII."Posting Date",1,RG23APartII."Location E.C.C. No.",RG23APartII."Document No.",
          RG23APartII."RG Entry No.");
        GLSetup.GET;
        IF GLSetup."Check Negative RG Balance" THEN
          CheckNegativeBalance(1);
        RG23APartII.INSERT;
      END;
    END;

    PROCEDURE InsertUndoReceiptRG23CPartI@1280023(ItemJnlLine@1280000 : Record 83);
    VAR
      RG@1280004 : Record 13721;
      PurchRcptLine@1280003 : Record 121;
      SalesShptLine@1280002 : Record 111;
      RG23CPartIRec@1280005 : Record 13721;
      LineNoSpacing@1280001 : Integer;
    BEGIN
      WITH ItemJnlLine DO BEGIN
        IF "RG23PartI Entry No." = 0 THEN
          EXIT;
        IF "Excise Record" = "Excise Record"::RG23A THEN
          EXIT;
        IF Return THEN
          EXIT;
        RG23CPartI.LOCKTABLE;
        RG23CPartI.FINDLAST;
        RGEntryNo := RG23CPartI."Entry No." + 1;
        RG.GET("RG23PartI Entry No.");
        IF "RG Correction Type" = "RG Correction Type"::Purchase THEN BEGIN
          PurchRcptLine.SETRANGE("Document No.",RG."Document No.");
          PurchRcptLine."Document No." := RG."Document No.";
          PurchRcptLine."Line No." := RG."Line No.";
          PurchRcptLine.FIND('=');
          IF PurchRcptLine.FIND('>') THEN
            LineNoSpacing := (PurchRcptLine."Line No." - RG."Line No.") DIV 2
          ELSE
            LineNoSpacing := 10000;
        END ELSE BEGIN
          SalesShptLine.SETRANGE("Document No.",RG."Document No.");
          SalesShptLine."Document No." := RG."Document No.";
          SalesShptLine."Line No." := RG."Line No.";
          SalesShptLine.FIND('=');
          IF SalesShptLine.FIND('>') THEN
            LineNoSpacing := (SalesShptLine."Line No." - RG."Line No.") DIV 2
          ELSE
            LineNoSpacing := 10000;
        END;

        RG23CPartI.INIT;
        RG23CPartI.TRANSFERFIELDS(RG);
        RG23CPartI."Entry No." := RGEntryNo;
        IF "RG Correction Type" = "RG Correction Type"::Purchase THEN BEGIN
          RG23CPartI."Quantity Received" := -RG."Quantity Received";
          RG23CPartI.Quantity := RG23CPartI."Quantity Received";
        END ELSE BEGIN
          RG23CPartI."Quantity Sold" := -RG."Quantity Sold";
          RG23CPartI.Quantity := -RG23CPartI."Quantity Sold";
        END;
        RG23CPartI."Line No." := RG23CPartI."Line No." + LineNoSpacing;
        RG23CPartIRec.RESET;
        RG23CPartIRec.SETCURRENTKEY("Location E.C.C. No.","FA No./ Item No.");
        RG23CPartIRec.SETRANGE("Location E.C.C. No.",RG23CPartI."Location E.C.C. No.");
        RG23CPartIRec.SETRANGE("FA No./ Item No.",RG23CPartI."FA No./ Item No.");
        RG23CPartIRec.CALCSUMS(Quantity);
        RG23CPartI."Opening Stock" := RG23CPartIRec.Quantity;
        RG23CPartI."Closing Stock" := RG23CPartIRec.Quantity + RG23CPartI.Quantity;
        GetRGEntryNo(RG23CPartI."Posting Date",2,RG23CPartI."Location E.C.C. No.",RG23CPartI."Document No.",
          RG23CPartI."RG Entry No.");
        RG23CPartI.INSERT;
      END;
    END;

    PROCEDURE InsertUndoReceiptRG23CPartII@1280022(ItemJnlLine@1280004 : Record 83);
    VAR
      RG@1280003 : Record 13722;
      PurchRcptLine@1280001 : Record 121;
      LineNoSpacing@1280000 : Integer;
      TempRG23CPartII@1280005 : Record 13722;
    BEGIN
      WITH ItemJnlLine DO BEGIN
        IF "RG23PartII Entry No." = 0 THEN
          EXIT;
        IF "RG Correction Type" = "RG Correction Type"::Sale THEN
          EXIT;
        IF "Excise Record" = "Excise Record"::RG23A THEN
          EXIT;
        IF Return THEN
          EXIT;
        RG23CPartII.LOCKTABLE;
        RG23CPartII.FINDLAST;
        RGEntryNo := RG23CPartII."Entry No." + 1;

        RG.GET("RG23PartII Entry No.");
        PurchRcptLine.SETRANGE("Document No.",RG."Document No.");
        PurchRcptLine."Document No." := RG."Document No.";
        PurchRcptLine."Line No." := RG."Line No.";
        PurchRcptLine.FIND('=');
        IF PurchRcptLine.FIND('>') THEN
          LineNoSpacing := (PurchRcptLine."Line No." - RG."Line No.") DIV 2
        ELSE
          LineNoSpacing := 10000;

        PurchRcptLine.GET(RG."Document No.","RG Line No.");
        RG23CPartII.INIT;
        RG23CPartII."Entry No." := RGEntryNo;
        RG23CPartII.Type := RG23CPartII.Type::Purchase;
        RG23CPartII."Posting Date" := RG."Posting Date";
        RG23CPartII."Document No." := RG."Document No.";
        RG23CPartII."Location Code" := RG."Location Code";
        RG23CPartII."Location E.C.C. No." := RG."Location E.C.C. No.";
        IF ECCNos.GET(RG23CPartII."Location E.C.C. No.") THEN
          RG23CPartII."Type of Unit" := ECCNos."Type of Unit";
        RG23CPartII.TESTFIELD("Location E.C.C. No.");
        RG23CPartII."BED Debit" := RG."BED Credit";
        RG23CPartII."AED(GSI) Debit" := RG."AED(GSI) Credit";
        RG23CPartII."AED(TTA) Debit" := RG."AED(TTA) Credit";
        RG23CPartII."SED Debit" := RG."SED Credit";
        RG23CPartII."SAED Debit" := RG."SAED Credit";
        RG23CPartII."CESS Debit" := RG."CESS Credit";
        RG23CPartII."NCCD Debit" := RG."NCCD Credit";
        RG23CPartII."eCess Debit" := RG."eCess Credit";
        RG23CPartII."ADC VAT Debit" := RG."ADC VAT Credit";
        RG23CPartII."SHE Cess Debit" := RG."SHE Cess Credit";
        TempRG23CPartII.SETRANGE("Location E.C.C. No.",RG."Location E.C.C. No.");
        TempRG23CPartII.FINDLAST;
        RG23CPartII."Opening Balance Credit CY" := TempRG23CPartII."Total BED for Current Year" +
          TempRG23CPartII."Total AED(GSI) for CY" + TempRG23CPartII."Total SED for Current Year" +
          TempRG23CPartII."Total SAED for Current Year" + TempRG23CPartII."Total CESS for Current Year" +
          TempRG23CPartII."Total eCess for Current Year" + TempRG23CPartII."Total NCCD for Current Year" +
          TempRG23CPartII."Total AED(TTA) for CY" + TempRG23CPartII."Total SHECESS for Current Year" +
          TempRG23CPartII."Total ADC VAT for CY";
        RG23CPartII."Total BED for Current Year" :=
          TempRG23CPartII."Total BED for Current Year" - ROUND(RG23CPartII."BED Debit" * 0.5);
        RG23CPartII."Total BED for Next Year" :=
          TempRG23CPartII."Total BED for Next Year" - ROUND(RG23CPartII."BED Debit" * 0.5);
        RG23CPartII."Total AED(GSI) for CY" :=
          TempRG23CPartII."Total AED(GSI) for CY" - ROUND(RG23CPartII."AED(GSI) Debit" * 0.5);
        RG23CPartII."Total AED(GSI) for Next Year" :=
          TempRG23CPartII."Total AED(GSI) for Next Year" - ROUND(RG23CPartII."AED(GSI) Debit" * 0.5);
        RG23CPartII."Total AED(TTA) for CY" :=
          TempRG23CPartII."Total AED(TTA) for CY" - ROUND(RG23CPartII."AED(TTA) Debit" * 0.5);
        RG23CPartII."Total AED(TTA) for Next Year" :=
          TempRG23CPartII."Total AED(TTA) for Next Year" - ROUND(RG23CPartII."AED(TTA) Debit" * 0.5);
        RG23CPartII."Total SED for Current Year" :=
          TempRG23CPartII."Total SED for Current Year" - ROUND(RG23CPartII."SED Debit" * 0.5);
        RG23CPartII."Total SED for Next Year" :=
          TempRG23CPartII."Total SED for Next Year" - ROUND(RG23CPartII."SED Debit" * 0.5);
        RG23CPartII."Total SAED for Current Year" :=
          TempRG23CPartII."Total SAED for Current Year" - ROUND(RG23CPartII."SAED Debit" * 0.5);
        RG23CPartII."Total SAED for Next Year" :=
          TempRG23CPartII."Total SAED for Next Year" - ROUND(RG23CPartII."SAED Debit" * 0.5);
        RG23CPartII."Total NCCD for Current Year" :=
          TempRG23CPartII."Total NCCD for Current Year" - ROUND(RG23CPartII."NCCD Debit" * 0.5);
        RG23CPartII."Total NCCD for Next Year" :=
          TempRG23CPartII."Total NCCD for Next Year" - ROUND(RG23CPartII."NCCD Debit" * 0.5);
        RG23CPartII."Total eCess for Current Year" :=
          TempRG23CPartII."Total eCess for Current Year" - ROUND(RG23CPartII."eCess Debit" * 0.5);
        RG23CPartII."Total eCess for Next Year" :=
          TempRG23CPartII."Total eCess for Next Year" - ROUND(RG23CPartII."eCess Debit" * 0.5);
        RG23CPartII."Total SHECESS for Current Year" :=
          TempRG23CPartII."Total SHECESS for Current Year" - ROUND(RG23CPartII."SHE Cess Debit" * 0.5);
        RG23CPartII."Total SHECESS for Next Year" :=
          TempRG23CPartII."Total SHECESS for Next Year" - ROUND(RG23CPartII."SHE Cess Debit" * 0.5);
        RG23CPartII."Total ADC VAT for CY" :=
          TempRG23CPartII."Total ADC VAT for CY" - ROUND(RG23CPartII."ADC VAT Debit");
        RG23CPartII."Closing Balance Credit CY" := RG23CPartII."Total BED for Current Year" +
          RG23CPartII."Total AED(GSI) for CY" + RG23CPartII."Total AED(TTA) for CY" +
          RG23CPartII."Total SED for Current Year" + RG23CPartII."Total SAED for Current Year" +
          RG23CPartII."Total eCess for Current Year" + RG23CPartII."Total NCCD for Current Year" +
          RG23CPartII."Total CESS for Current Year" + RG23CPartII."Total ADC VAT for CY" +
          RG23CPartII."Total SHECESS for Current Year";
        RG23CPartII."Line No." := RG23CPartII."Line No." + LineNoSpacing;
        RG23CPartII.Supplementary := RG.Supplementary;
        RG23CPartII."Source Document Type" := RG."Source Document Type";
        RG23CPartII."Source Document No." := RG."Source Document No.";
        RG23CPartII.CVD := RG.CVD;

        GetRGEntryNo(RG23CPartII."Posting Date",3,RG23CPartII."Location E.C.C. No.",RG23CPartII."Document No.",
          RG23CPartII."RG Entry No.");
        GLSetup.GET;
        IF GLSetup."Check Negative RG Balance" THEN
          CheckNegativeBalance(2);
        RG23CPartII.INSERT;
      END;
    END;

    PROCEDURE UndoReturnShipmentRG23APartI@1280021(ItemJnlLine@1280004 : Record 83);
    VAR
      RG@1280000 : Record 13719;
      RetShpt@1280001 : Record 6651;
      RetRcpt@1280003 : Record 6661;
      LineNoSpacing@1280002 : Integer;
      RG23APartIRec@1280005 : Record 13719;
    BEGIN
      WITH ItemJnlLine DO BEGIN
        IF "RG23PartI Entry No." = 0 THEN
          EXIT;
        IF "Excise Record" = "Excise Record"::RG23C THEN
          EXIT;
        IF NOT Return THEN
          EXIT;
        RG23APartI.LOCKTABLE;
        RG23APartI.FINDLAST;
        RGEntryNo := RG23APartI."Entry No." + 1;
        RG.GET("RG23PartI Entry No.");
        IF "RG Correction Type" = "RG Correction Type"::Purchase THEN BEGIN
          RetShpt.SETRANGE("Document No.",RG."Document No.");
          RetShpt."Document No." := RG."Document No.";
          RetShpt."Line No." := RG."Line No.";
          RetShpt.FIND('=');
          IF RetShpt.FIND('>') THEN
            LineNoSpacing := (RetShpt."Line No." - RG."Line No.") DIV 2
          ELSE
            LineNoSpacing := 10000;
        END ELSE BEGIN
          RetRcpt.SETRANGE("Document No.",RG."Document No.");
          RetRcpt."Document No." := RG."Document No.";
          RetRcpt."Line No." := RG."Line No.";
          RetRcpt.FIND('=');
          IF RetRcpt.FIND('>') THEN
            LineNoSpacing := (RetRcpt."Line No." - RG."Line No.") DIV 2
          ELSE
            LineNoSpacing := 10000;
        END;

        RG23APartI.INIT;
        RG23APartI.TRANSFERFIELDS(RG);
        RG23APartI."Entry No." := RGEntryNo;
        RG23APartI."Quantity Received" := -RG."Quantity Received";
        RG23APartI.Quantity := RG23APartI."Quantity Received";
        RG23APartI."Line No." := RG23APartI."Line No." + LineNoSpacing;

        RG23APartIRec.RESET;
        RG23APartIRec.SETCURRENTKEY("Location E.C.C. No.","Item No.");
        RG23APartIRec.SETRANGE("Location E.C.C. No.",RG23APartI."Location E.C.C. No.");
        RG23APartIRec.SETRANGE("Item No.","No.");
        RG23APartIRec.CALCSUMS(Quantity);
        RG23APartI."Opening Stock" := RG23APartIRec.Quantity;
        RG23APartI."Closing Stock" := RG23APartIRec.Quantity + RG23APartI.Quantity;
        GetRGEntryNo(RG23APartI."Posting Date",0,RG23APartI."Location E.C.C. No.",RG23APartI."Document No.",
          RG23APartI."RG Entry No.");
        RG23APartI.INSERT;
      END;
    END;

    PROCEDURE UndoReturnShipmentRG23APartII@1280020(ItemJnlLine@1280002 : Record 83);
    VAR
      RG@1280003 : Record 13720;
      RetShpt@1280004 : Record 6651;
      TempRG23APartII@1280005 : Record 13720;
      LineNoSpacing@1280000 : Integer;
    BEGIN
      WITH ItemJnlLine DO BEGIN
        IF "RG23PartII Entry No." = 0 THEN
          EXIT;
        IF "RG Correction Type" = "RG Correction Type"::Sale THEN
          EXIT;
        IF "Excise Record" = "Excise Record"::RG23C THEN
          EXIT;
        IF NOT Return THEN
          EXIT;

        RG23APartII.LOCKTABLE;
        RG23APartII.FINDLAST;
        RGEntryNo := RG23APartII."Entry No." + 1;
        RG.GET("RG23PartII Entry No.");
        RetShpt.SETRANGE("Document No.",RG."Document No.");
        RetShpt."Document No." := RG."Document No.";
        RetShpt."Line No." := RG."Line No.";
        RetShpt.FIND('=');
        IF RetShpt.FIND('>') THEN
          LineNoSpacing := (RetShpt."Line No." - RG."Line No.") DIV 2
        ELSE
          LineNoSpacing := 10000;
        RG23APartII.INIT;
        RG23APartII."Entry No." := RGEntryNo;
        RG23APartII.Type := RG23APartII.Type::Purchase;
        RG23APartII."Line No." := "Line No.";
        RG23APartII."Posting Date" := RG."Posting Date";
        RG23APartII."Document No." := RG."Document No.";
        RG23APartII."Location Code" := "Location Code";
        RG23APartII."Location E.C.C. No." := RG."Location E.C.C. No.";
        RG23APartII.TESTFIELD("Location E.C.C. No.");
        IF ECCNos.GET(RG23APartII."Location E.C.C. No.") THEN
          RG23APartII."Type of Unit" := ECCNos."Type of Unit";

        RG23APartII."BED Credit" := RetShpt."BED Amount";
        RG23APartII."AED(GSI) Credit" := RetShpt."AED(GSI) Amount";
        RG23APartII."AED(TTA) Credit" := RetShpt."AED(TTA) Amount";
        RG23APartII."SED Credit" := RetShpt."SED Amount";
        RG23APartII."SAED Credit" := RetShpt."SAED Amount";
        RG23APartII."NCCD Credit" := RetShpt."NCCD Amount";
        RG23APartII."eCess Credit" := RetShpt."eCess Amount";
        RG23APartII."SHE Cess Credit" := RetShpt."SHE Cess Amount";
        RG23APartII."ADET Credit" := RetShpt."ADET Amount";
        RG23APartII."ADE Credit" := RetShpt."ADE Amount";
        RG23APartII."ADC VAT Credit" := RetShpt."ADC VAT Amount";
        TempRG23APartII.SETCURRENTKEY("Location E.C.C. No.");
        TempRG23APartII.SETRANGE("Location E.C.C. No.",RG23APartII."Location E.C.C. No.");
        TempRG23APartII.FINDLAST;
        RG23APartII."Op. Bal. BED/AED" := TempRG23APartII."Total BED Amount" + TempRG23APartII."Total AED(GSI) Amount" +
          TempRG23APartII."Total AED(TTA) Amount";
        RG23APartII."Op. Bal. ODs" := TempRG23APartII."Total SED Amount" + TempRG23APartII."Total SAED Amount" +
          TempRG23APartII."Total NCCD Amount" + TempRG23APartII."Total eCess Amount" + TempRG23APartII."Total ADET Amount" +
          TempRG23APartII."Total ADE Amount" + TempRG23APartII."Total ADC VAT Amount" + TempRG23APartII."Total SHE Cess Amount";
        RG23APartII."Total BED Amount" := TempRG23APartII."Total BED Amount" + RG23APartII."BED Credit" - RG23APartII."BED Debit";
        RG23APartII."Total AED(GSI) Amount" := TempRG23APartII."Total AED(GSI) Amount" + RG23APartII."AED(GSI) Credit" -
          RG23APartII."AED(GSI) Debit";
        RG23APartII."Total AED(TTA) Amount" := TempRG23APartII."Total AED(TTA) Amount" + RG23APartII."AED(TTA) Credit" -
          RG23APartII."AED(TTA) Debit";
        RG23APartII."Total SED Amount" := TempRG23APartII."Total SED Amount" + RG23APartII."SED Credit" - RG23APartII."SED Debit";
        RG23APartII."Total SAED Amount" := TempRG23APartII."Total SAED Amount" + RG23APartII."SAED Credit" - RG23APartII."SAED Debit";
        RG23APartII."Total CESS Amount" := TempRG23APartII."Total CESS Amount";
        RG23APartII."Total NCCD Amount" := TempRG23APartII."Total NCCD Amount" + RG23APartII."NCCD Credit" - RG23APartII."NCCD Debit";
        RG23APartII."Total ADET Amount" := TempRG23APartII."Total ADET Amount" + RG23APartII."ADET Credit" - RG23APartII."ADET Debit";
        RG23APartII."Total ADE Amount" := TempRG23APartII."Total ADE Amount" + RG23APartII."ADE Credit" - RG23APartII."ADE Debit";
        RG23APartII."Total eCess Amount" := TempRG23APartII."Total eCess Amount" + RG23APartII."eCess Credit" -
          RG23APartII."eCess Debit";
        RG23APartII."Total SHE Cess Amount" := TempRG23APartII."Total SHE Cess Amount" + RG23APartII."SHE Cess Credit" -
          RG23APartII."SHE Cess Debit";
        RG23APartII."Total ADC VAT Amount" := TempRG23APartII."Total ADC VAT Amount" + RG23APartII."ADC VAT Credit" -
          RG23APartII."ADC VAT Debit";
        RG23APartII."Closing Bal. BED/AED" := RG23APartII."Op. Bal. BED/AED" + RG23APartII."BED Credit" + RG23APartII."AED(GSI) Credit"
          -
          RG23APartII."BED Debit" - RG23APartII."AED(GSI) Debit" + RG23APartII."AED(TTA) Credit" - RG23APartII."AED(TTA) Debit";
        RG23APartII."Closing Bal. Other Duties" := RG23APartII."Op. Bal. ODs" + RG23APartII."SED Credit" + RG23APartII."SAED Credit" +
          RG23APartII."NCCD Credit" + RG23APartII."eCess Credit" + RG23APartII."ADET Credit" - RG23APartII."SED Debit" -
          RG23APartII."SAED Debit" - RG23APartII."NCCD Debit" - RG23APartII."eCess Debit" - RG23APartII."ADET Debit" +
          RG23APartII."ADE Credit" - RG23APartII."ADE Debit" + RG23APartII."ADC VAT Credit" - RG23APartII."ADC VAT Debit" +
          RG23APartII."SHE Cess Credit" - RG23APartII."SHE Cess Debit";
        RG23APartII."Line No." := RG23APartII."Line No." + LineNoSpacing;
        RG23APartII.Supplementary := RG.Supplementary;
        RG23APartII."Source Document Type" := RG."Source Document Type";
        RG23APartII."Source Document No." := RG."Source Document No.";
        RG23APartII.CVD := RG.CVD;

        GetRGEntryNo(RG23APartII."Posting Date",1,RG23APartII."Location E.C.C. No.",RG23APartII."Document No.",
          RG23APartII."RG Entry No.");
        GLSetup.GET;
        IF GLSetup."Check Negative RG Balance" THEN
          CheckNegativeBalance(1);
        RG23APartII.INSERT;
      END;
    END;

    PROCEDURE UndoReturnShipmentRG23CPartI@1280019(ItemJnlLine@1280000 : Record 83);
    VAR
      RG@1280004 : Record 13721;
      LineNoSpacing@1280001 : Integer;
      RetShpt@1280003 : Record 6651;
      RetRcpt@1280002 : Record 6661;
      RG23CPartIRec@1280005 : Record 13721;
    BEGIN
      WITH ItemJnlLine DO BEGIN
        IF "RG23PartI Entry No." = 0 THEN
          EXIT;
        IF "Excise Record" = "Excise Record"::RG23A THEN
          EXIT;
        IF NOT Return THEN
          EXIT;
        RG.GET("RG23PartI Entry No.");
        RG23CPartI.LOCKTABLE;
        RG23CPartI.FINDLAST;
        RGEntryNo := RG23CPartI."Entry No." + 1;
        IF "RG Correction Type" = "RG Correction Type"::Purchase THEN BEGIN
          RetShpt.SETRANGE("Document No.",RG."Document No.");
          RetShpt."Document No." := RG."Document No.";
          RetShpt."Line No." := RG."Line No.";
          RetShpt.FIND('=');
          IF RetShpt.FIND('>') THEN
            LineNoSpacing := (RetShpt."Line No." - RG."Line No.") DIV 2
          ELSE
            LineNoSpacing := 10000;
        END ELSE BEGIN
          RetRcpt.SETRANGE("Document No.",RG."Document No.");
          RetRcpt."Document No." := RG."Document No.";
          RetRcpt."Line No." := RG."Line No.";
          RetRcpt.FIND('=');
          IF RetRcpt.FIND('>') THEN
            LineNoSpacing := (RetRcpt."Line No." - RG."Line No.") DIV 2
          ELSE
            LineNoSpacing := 10000;
        END;
        RG23CPartI.INIT;
        RG23CPartI.TRANSFERFIELDS(RG);
        RG23CPartI."Entry No." := RGEntryNo;
        RG23CPartI."Quantity Received" := -RG."Quantity Received";
        RG23CPartI.Quantity := RG23CPartI."Quantity Received";
        RG23CPartI."Line No." := RG23CPartI."Line No." + LineNoSpacing;
        RG23CPartIRec.RESET;
        RG23CPartIRec.SETCURRENTKEY("Location E.C.C. No.","FA No./ Item No.");
        RG23CPartIRec.SETRANGE("Location E.C.C. No.",RG23CPartI."Location E.C.C. No.");
        RG23CPartIRec.SETRANGE("FA No./ Item No.",RG23CPartI."FA No./ Item No.");
        RG23CPartIRec.CALCSUMS(Quantity);
        RG23CPartI."Opening Stock" := RG23CPartIRec.Quantity;
        RG23CPartI."Closing Stock" := RG23CPartIRec.Quantity + RG23CPartI.Quantity;
        GetRGEntryNo(RG23CPartI."Posting Date",2,RG23CPartI."Location E.C.C. No.",RG23CPartI."Document No.",
          RG23CPartI."RG Entry No.");
        RG23CPartI.INSERT;
      END;
    END;

    PROCEDURE UndoReturnShipmentRG23CPartII@1280018(ItemJnlLine@1280004 : Record 83);
    VAR
      RG@1280003 : Record 13722;
      RetShpt@1280001 : Record 6651;
      LineNoSpacing@1280000 : Integer;
      TempRG23CPartII@1280002 : Record 13722;
    BEGIN
      WITH ItemJnlLine DO BEGIN
        IF "RG23PartII Entry No." = 0 THEN
          EXIT;
        IF "RG Correction Type" = "RG Correction Type"::Sale THEN
          EXIT;
        IF "Excise Record" = "Excise Record"::RG23A THEN
          EXIT;
        IF NOT Return THEN
          EXIT;
        RG.GET("RG23PartII Entry No.");
        RG23CPartII.LOCKTABLE;
        RG23CPartII.FINDLAST;
        RGEntryNo := RG23CPartII."Entry No." + 1;

        RetShpt.SETRANGE("Document No.",RG."Document No.");
        RetShpt."Document No." := RG."Document No.";
        RetShpt."Line No." := RG."Line No.";
        RetShpt.FIND('=');
        IF RetShpt.FIND('>') THEN
          LineNoSpacing := (RetShpt."Line No." - RG."Line No.") DIV 2
        ELSE
          LineNoSpacing := 10000;

        RetShpt.GET(RG."Document No.","RG Line No.");
        RG23CPartII.INIT;
        RG23CPartII."Entry No." := RGEntryNo;
        RG23CPartII.Type := RG23CPartII.Type::Purchase;
        RG23CPartII."Line No." := "Line No.";
        RG23CPartII."Posting Date" := RG."Posting Date";
        RG23CPartII."Document No." := RG."Document No.";
        RG23CPartII."Location Code" := "Location Code";
        RG23CPartII."Location E.C.C. No." := RG."Location E.C.C. No.";
        RG23CPartII.TESTFIELD("Location E.C.C. No.");
        RG23CPartII."BED Credit" := RG."BED Debit";
        RG23CPartII."AED(GSI) Credit" := RG."AED(GSI) Debit";
        RG23CPartII."AED(TTA) Credit" := RG."AED(TTA) Debit";
        RG23CPartII."SED Credit" := RG."SED Debit";
        RG23CPartII."SAED Credit" := RG."SAED Debit";
        RG23CPartII."CESS Credit" := RG."CESS Debit";
        RG23CPartII."NCCD Credit" := RG."NCCD Debit";
        RG23CPartII."eCess Credit" := RG."eCess Debit";
        RG23CPartII."SHE Cess Credit" := RG."SHE Cess Debit";
        RG23CPartII."ADC VAT Credit" := RG."ADC VAT Debit";
        TempRG23CPartII.SETRANGE("Location E.C.C. No.",RG."Location E.C.C. No.");
        TempRG23CPartII.FINDLAST;
        RG23CPartII."Opening Balance Credit CY" := TempRG23CPartII."Total BED for Current Year" +
          TempRG23CPartII."Total AED(GSI) for CY" + TempRG23CPartII."Total SED for Current Year" +
          TempRG23CPartII."Total SAED for Current Year" + TempRG23CPartII."Total eCess for Current Year" +
          TempRG23CPartII."Total NCCD for Current Year" + TempRG23CPartII."Total CESS for Current Year" +
          TempRG23CPartII."Total AED(TTA) for CY" + TempRG23CPartII."Total ADC VAT for CY" +
          TempRG23CPartII."Total SHECESS for Current Year";
        RG23CPartII."Total BED for Current Year" :=
          TempRG23CPartII."Total BED for Current Year" + ROUND(RG23CPartII."BED Credit" * 0.5) - ROUND(RG23CPartII."BED Debit" * 0.5);
        RG23CPartII."Total BED for Next Year" :=
          TempRG23CPartII."Total BED for Next Year" + ROUND(RG23CPartII."BED Credit" * 0.5) - ROUND(RG23CPartII."BED Debit" * 0.5);
        RG23CPartII."Total AED(GSI) for CY" :=
          TempRG23CPartII."Total AED(GSI) for CY" + ROUND(RG23CPartII."AED(GSI) Credit" * 0.5) -
          ROUND(RG23CPartII."AED(GSI) Debit" * 0.5);
        RG23CPartII."Total AED(GSI) for Next Year" :=
          TempRG23CPartII."Total AED(GSI) for Next Year" + ROUND(RG23CPartII."AED(GSI) Credit" * 0.5) -
          ROUND(RG23CPartII."AED(GSI) Debit" * 0.5);
        RG23CPartII."Total AED(TTA) for CY" :=
          TempRG23CPartII."Total AED(TTA) for CY" + ROUND(RG23CPartII."AED(TTA) Credit" * 0.5) -
          ROUND(RG23CPartII."AED(TTA) Debit" * 0.5);
        RG23CPartII."Total AED(TTA) for Next Year" :=
          TempRG23CPartII."Total AED(TTA) for Next Year" + ROUND(RG23CPartII."AED(TTA) Credit" * 0.5) -
          ROUND(RG23CPartII."AED(TTA) Debit" * 0.5);
        RG23CPartII."Total SED for Current Year" :=
          TempRG23CPartII."Total SED for Current Year" + ROUND(RG23CPartII."SED Credit" * 0.5) - ROUND(RG23CPartII."SED Debit" * 0.5);
        RG23CPartII."Total SED for Next Year" :=
          TempRG23CPartII."Total SED for Next Year" + ROUND(RG23CPartII."SED Credit" * 0.5) - ROUND(RG23CPartII."SED Debit" * 0.5);
        RG23CPartII."Total SAED for Current Year" :=
          TempRG23CPartII."Total SAED for Current Year" + ROUND(RG23CPartII."SAED Credit" * 0.5) -
          ROUND(RG23CPartII."SAED Debit" * 0.5);
        RG23CPartII."Total SAED for Next Year" :=
          TempRG23CPartII."Total SAED for Next Year" + ROUND(RG23CPartII."SAED Credit" * 0.5) - ROUND(RG23CPartII."SAED Debit" * 0.5);
        RG23CPartII."Total NCCD for Current Year" :=
          TempRG23CPartII."Total NCCD for Current Year" + ROUND(RG23CPartII."NCCD Credit" * 0.5) -
          ROUND(RG23CPartII."NCCD Debit" * 0.5);
        RG23CPartII."Total NCCD for Next Year" :=
          TempRG23CPartII."Total NCCD for Next Year" + ROUND(RG23CPartII."NCCD Credit" * 0.5) - ROUND(RG23CPartII."NCCD Debit" * 0.5);
        RG23CPartII."Total eCess for Current Year" :=
          TempRG23CPartII."Total eCess for Current Year" + ROUND(RG23CPartII."eCess Credit" * 0.5) -
          ROUND(RG23CPartII."eCess Debit" * 0.5);
        RG23CPartII."Total eCess for Next Year" :=
          TempRG23CPartII."Total eCess for Next Year" + ROUND(RG23CPartII."eCess Credit" * 0.5) -
          ROUND(RG23CPartII."eCess Debit" * 0.5);
        RG23CPartII."Total SHECESS for Current Year" :=
          TempRG23CPartII."Total SHECESS for Current Year" + ROUND(RG23CPartII."SHE Cess Credit" * 0.5) -
          ROUND(RG23CPartII."SHE Cess Debit" * 0.5);
        RG23CPartII."Total SHECESS for Next Year" :=
          TempRG23CPartII."Total SHECESS for Next Year" + ROUND(RG23CPartII."SHE Cess Credit" * 0.5) -
          ROUND(RG23CPartII."SHE Cess Debit" * 0.5);
        RG23CPartII."Total ADC VAT for CY" :=
          TempRG23CPartII."Total ADC VAT for CY" + ROUND(RG23CPartII."ADC VAT Credit") -
          ROUND(RG23CPartII."ADC VAT Debit");
        RG23CPartII."Closing Balance Credit CY" := RG23CPartII."Total BED for Current Year" +
          RG23CPartII."Total AED(GSI) for CY" + RG23CPartII."Total CESS for Current Year" +
          RG23CPartII."Total SED for Current Year" + RG23CPartII."Total SAED for Current Year" +
          RG23CPartII."Total eCess for Current Year" + RG23CPartII."Total NCCD for Current Year" +
          RG23CPartII."Total AED(TTA) for CY" + RG23CPartII."Total ADC VAT for CY" +
          RG23CPartII."Total SHECESS for Current Year";
        RG23CPartII."Line No." := RG23CPartII."Line No." + LineNoSpacing;
        RG23CPartII.Supplementary := RG.Supplementary;
        RG23CPartII."Source Document Type" := RG."Source Document Type";
        RG23CPartII."Source Document No." := RG."Source Document No.";
        RG23CPartII.CVD := RG.CVD;
        GetRGEntryNo(RG23CPartII."Posting Date",3,RG23CPartII."Location E.C.C. No.",RG23CPartII."Document No.",
          RG23CPartII."RG Entry No.");
        GLSetup.GET;
        IF GLSetup."Check Negative RG Balance" THEN
          CheckNegativeBalance(2);
        RG23CPartII.INSERT;
      END;
    END;

    PROCEDURE InsertPLA@1280033(GenJnlLine@1280000 : Record 81;NextTransactionNo@1280002 : Integer);
    VAR
      PLARec@1280001 : Record 13723;
      TaxJnlLine@1500000 : Record 16587;
    BEGIN
      WITH GenJnlLine DO BEGIN
        PLAEntry.LOCKTABLE;
        IF PLAEntry.FINDLAST THEN
          NextPLAEntryNo := PLAEntry."Entry No." + 1
        ELSE
          NextPLAEntryNo := 1;
        PLAEntry.INIT;
        PLAEntry."Entry No." := NextPLAEntryNo;
        PLAEntry.Description := Description;
        PLAEntry."Document No." := "Document No.";
        PLAEntry."Posting Date" := "Posting Date";
        PLAEntry."Company E.C.C. No." := "E.C.C. No.";
        PLAEntry."Location E.C.C. No." := "E.C.C. No.";
        IF ECCNos.GET("E.C.C. No.") THEN
          PLAEntry."Type of Unit" := ECCNos."Type of Unit";

        TaxJnlLine.RESET;
        TaxJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
        TaxJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
        TaxJnlLine.SETRANGE("Line No.","Line No.");
        TaxJnlLine.SETRANGE("Document No.","Document No.");
        IF SalesDocumentNo <> '' THEN
          TaxJnlLine.SETRANGE("Document No.",SalesDocumentNo);
        TaxJnlLine.FINDFIRST;

        PLAEntry."Transaction No." := NextTransactionNo;
        PLAEntry."BED Credit Amount" := TaxJnlLine."PLA BED Amount";
        PLAEntry."Other Duties Credit" := TaxJnlLine."PLA AED(GSI) Amount" + TaxJnlLine."PLA SED Amount" +
          TaxJnlLine."PLA SAED Amount" + TaxJnlLine."PLA CESS Amount" +
          TaxJnlLine."PLA NCCD Amount" + TaxJnlLine."PLA eCess Amount" + TaxJnlLine."PLA ADET Amount" +
          TaxJnlLine."PLA AED(TTA) Amount" + TaxJnlLine."PLA ADE Amount" + TaxJnlLine."PLA SHE Cess Amount";
        PLAEntry."BED Credit" := TaxJnlLine."PLA BED Amount";
        PLAEntry."AED(GSI) Credit" := TaxJnlLine."PLA AED(GSI) Amount";
        PLAEntry."AED(TTA) Credit" := TaxJnlLine."PLA AED(TTA) Amount";
        PLAEntry."SED Credit" := TaxJnlLine."PLA SED Amount";
        PLAEntry."SAED Credit" := TaxJnlLine."PLA SAED Amount";
        PLAEntry."CESS Credit" := TaxJnlLine."PLA CESS Amount";
        PLAEntry."NCCD Credit" := TaxJnlLine."PLA NCCD Amount";
        PLAEntry."eCess Credit" := TaxJnlLine."PLA eCess Amount";
        PLAEntry."SHE Cess Credit" := TaxJnlLine."PLA SHE Cess Amount";
        PLAEntry."ADET Credit" := TaxJnlLine."PLA ADET Amount";
        PLAEntry."ADE Credit" := TaxJnlLine."PLA ADE Amount";
        PLAEntry."Excise Charges Credit" := TaxJnlLine."PLA Excise Charge Amount";
        PLARec.RESET;
        PLARec.SETRANGE("Location E.C.C. No.","E.C.C. No.");
        IF PLARec.FINDLAST THEN BEGIN
          PLAEntry."Opening Balance" := PLARec."Closing Balance";
          PLAEntry."Balance BED" := PLARec."Balance BED" + PLAEntry."BED Credit";
          PLAEntry."Balance AED(GSI)" := PLARec."Balance AED(GSI)" + PLAEntry."AED(GSI) Credit";
          PLAEntry."Balance AED(TTA)" := PLARec."Balance AED(TTA)" + PLAEntry."AED(TTA) Credit";
          PLAEntry."Balance SED" := PLARec."Balance SED" + PLAEntry."SED Credit";
          PLAEntry."Balance SAED" := PLARec."Balance SAED" + PLAEntry."SAED Credit";
          PLAEntry."Balance CESS" := PLARec."Balance CESS" + PLAEntry."CESS Credit";
          PLAEntry."Balance NCCD" := PLARec."Balance NCCD" + PLAEntry."NCCD Credit";
          PLAEntry."Balance eCess" := PLARec."Balance eCess" + PLAEntry."eCess Credit";
          PLAEntry."Balance SHE Cess" := PLARec."Balance SHE Cess" + PLAEntry."SHE Cess Credit";
          PLAEntry."Balance ADET" := PLARec."Balance ADET" + PLAEntry."ADET Credit";
          PLAEntry."Balance ADE" := PLARec."Balance ADE" + PLAEntry."ADE Credit";
          PLAEntry."Balance Excise Charges" := PLARec."Balance Excise Charges" + PLAEntry."Excise Charges Credit";
          PLAEntry."BED Balance" := PLARec."BED Balance" + PLAEntry."BED Credit Amount";
          PLAEntry."Other Duties Balance" := PLARec."Other Duties Balance" + PLAEntry."Other Duties Credit";
          PLAEntry."Closing Balance" := PLAEntry."Opening Balance" + PLAEntry."BED Credit" + PLAEntry."AED(GSI) Credit" +
            PLAEntry."SED Credit" + PLAEntry."SAED Credit" + PLAEntry."CESS Credit" + PLAEntry."NCCD Credit" + PLAEntry."eCess Credit"
            +
            PLAEntry."Excise Charges Credit" + PLAEntry."ADET Credit" + PLAEntry."AED(TTA) Credit" + PLAEntry."ADE Credit" +
            PLAEntry."SHE Cess Credit";
        END ELSE BEGIN
          PLAEntry."Opening Balance" := 0;
          PLAEntry."Balance BED" := PLAEntry."BED Credit";
          PLAEntry."Balance AED(GSI)" := PLAEntry."AED(GSI) Credit";
          PLAEntry."Balance AED(TTA)" := PLAEntry."AED(TTA) Credit";
          PLAEntry."Balance SED" := PLAEntry."SED Credit";
          PLAEntry."Balance SAED" := PLAEntry."SAED Credit";
          PLAEntry."Balance CESS" := PLAEntry."CESS Credit";
          PLAEntry."Balance NCCD" := PLAEntry."NCCD Credit";
          PLAEntry."Balance eCess" := PLAEntry."eCess Credit";
          PLAEntry."Balance SHE Cess" := PLAEntry."SHE Cess Credit";
          PLAEntry."Balance ADET" := PLAEntry."ADET Credit";
          PLAEntry."Balance ADE" := PLAEntry."ADE Credit";
          PLAEntry."Balance Excise Charges" := PLAEntry."Excise Charges Credit";
          PLAEntry."BED Balance" := PLAEntry."BED Credit Amount";
          PLAEntry."Other Duties Balance" := PLAEntry."Other Duties Credit";
          PLAEntry."Closing Balance" := PLAEntry."Opening Balance" + PLAEntry."BED Credit" + PLAEntry."AED(GSI) Credit" +
            PLAEntry."SED Credit" + PLAEntry."SAED Credit" + PLAEntry."CESS Credit" + PLAEntry."NCCD Credit" + PLAEntry."eCess Credit"
            +
            PLAEntry."Excise Charges Credit" + PLAEntry."ADET Credit" + PLAEntry."AED(TTA) Credit" + PLAEntry."ADE Credit" +
            PLAEntry."SHE Cess Credit";
        END;
        GetPLAEntryNo("Posting Date");
        DetailedPLAEntry.LOCKTABLE;
        IF DetailedPLAEntry.FINDLAST THEN
          NextDetailedPLAEntryNo := DetailedPLAEntry."Entry No." + 1
        ELSE
          NextDetailedPLAEntryNo := 1;
        DetailedPLAEntry.INIT;
        DetailedPLAEntry."Entry No." := NextDetailedPLAEntryNo;
        DetailedPLAEntry."PLA Entry No." := NextPLAEntryNo;
        DetailedPLAEntry."Application Date" := "Posting Date";
        DetailedPLAEntry."Document No." := "Document No.";
        DetailedPLAEntry."Location E.C.C. No." := "E.C.C. No.";
        DetailedPLAEntry."Entry Type" := DetailedPLAEntry."Entry Type"::"Initial Entry";
        DetailedPLAEntry."BED Amount" := TaxJnlLine."PLA BED Amount";
        DetailedPLAEntry."AED(GSI) Amount" := TaxJnlLine."PLA AED(GSI) Amount";
        DetailedPLAEntry."AED(TTA) Amount" := TaxJnlLine."PLA AED(TTA) Amount";
        DetailedPLAEntry."SED Amount" := TaxJnlLine."PLA SED Amount";
        DetailedPLAEntry."SAED Amount" := TaxJnlLine."PLA SAED Amount";
        DetailedPLAEntry."Cess Amount" := TaxJnlLine."PLA CESS Amount";
        DetailedPLAEntry."NCCD Amount" := TaxJnlLine."PLA NCCD Amount";
        DetailedPLAEntry."ADET Amount" := TaxJnlLine."PLA ADET Amount";
        DetailedPLAEntry."ADE Amount" := TaxJnlLine."PLA ADE Amount";
        DetailedPLAEntry."Excise Amount" := TaxJnlLine."PLA Excise Charge Amount";
        DetailedPLAEntry."eCess Amount" := TaxJnlLine."PLA eCess Amount";
        DetailedPLAEntry."SHE Cess Amount" := TaxJnlLine."PLA SHE Cess Amount";
        DetailedPLAEntry.INSERT;
        PLAEntry.CALCFIELDS("Remaining BED","Remaining AED(GSI)","Remaining SED","Remaining SAED","Remaining NCCD",
          "Remaining Cess","Remaining ADET","Remaining AED(TTA)","Remaining ADE","Remaining Excise Charge","Remaining eCess",
          "Remaining SHE Cess");
        PLAEntry."Total Remaining Excise Amount" := PLAEntry."Remaining BED" + PLAEntry."Remaining AED(GSI)" +
          PLAEntry."Remaining AED(TTA)" + PLAEntry."Remaining SED" + PLAEntry."Remaining SAED" +
          PLAEntry."Remaining Cess" + PLAEntry."Remaining NCCD" + PLAEntry."Remaining ADET" +
          PLAEntry."Remaining ADE" + PLAEntry."Remaining Excise Charge" + PLAEntry."Remaining eCess" +
          PLAEntry."Remaining SHE Cess";
        GLSetup.GET;
        IF GLSetup."Check Negative RG Balance" THEN
          CheckNegativeBalance(3);
        PLAEntry.INSERT;
      END;
    END;

    PROCEDURE ReversePLA@1280047(VAR PLAEntry@1280000 : Record 13723;NextPLAEntryNo@1280004 : Integer;NextTransactionNo@1280005 : Integer);
    VAR
      PLARec@1280001 : Record 13723;
      NewPLAEntry@1280003 : Record 13723;
      ReversedPLAEntry@1280002 : Record 13723;
    BEGIN
      IF PLAEntry.FIND('-') THEN
        REPEAT
          IF PLAEntry."Reversed by Entry No." <> 0 THEN
            ERROR(Text015);
          WITH NewPLAEntry DO BEGIN
            NewPLAEntry := PLAEntry;
            "Entry No." := NextPLAEntryNo;
            "BED Credit Amount" := -PLAEntry."BED Credit Amount";
            "Other Duties Credit" := -PLAEntry."Other Duties Credit";
            "BED Credit" := -PLAEntry."BED Credit";
            "AED(GSI) Credit" := -PLAEntry."AED(GSI) Credit";
            "AED(TTA) Credit" := -PLAEntry."AED(TTA) Credit";
            "SED Credit" := -PLAEntry."SED Credit";
            "SAED Credit" := -PLAEntry."SAED Credit";
            "CESS Credit" := -PLAEntry."CESS Credit";
            "NCCD Credit" := -PLAEntry."NCCD Credit";
            "eCess Credit" := -PLAEntry."eCess Credit";
            "SHE Cess Credit" := -PLAEntry."SHE Cess Credit";
            "ADET Credit" := -PLAEntry."ADET Credit";
            "ADE Credit" := -PLAEntry."ADE Credit";
            "Excise Charges Credit" := -PLAEntry."Excise Charges Credit";
            "Total Remaining Excise Amount" := -PLAEntry."Total Remaining Excise Amount";
            PLARec.RESET;
            PLARec.SETRANGE("Location E.C.C. No.","Location E.C.C. No.");
            IF PLARec.FINDLAST THEN BEGIN
              "Opening Balance" := PLARec."Closing Balance";
              "Balance BED" := PLARec."Balance BED" + "BED Credit";
              "Balance AED(GSI)" := PLARec."Balance AED(GSI)" + "AED(GSI) Credit";
              "Balance AED(TTA)" := PLARec."Balance AED(TTA)" + "AED(TTA) Credit";
              "Balance SED" := PLARec."Balance SED" + "SED Credit";
              "Balance SAED" := PLARec."Balance SAED" + "SAED Credit";
              "Balance CESS" := PLARec."Balance CESS" + "CESS Credit";
              "Balance NCCD" := PLARec."Balance NCCD" + "NCCD Credit";
              "Balance eCess" := PLARec."Balance eCess" + "eCess Credit";
              "Balance SHE Cess" := PLARec."Balance SHE Cess" + "SHE Cess Credit";
              "Balance ADET" := PLARec."Balance ADET" + "ADET Credit";
              "Balance ADE" := PLARec."Balance ADE" + "ADE Credit";
              "Balance Excise Charges" := PLARec."Balance Excise Charges" + "Excise Charges Credit";
              "BED Balance" := PLARec."BED Balance" + "BED Credit Amount";
              "Other Duties Balance" := PLARec."Other Duties Balance" + "Other Duties Credit";
              "Closing Balance" := "Opening Balance" + "BED Credit" + "AED(GSI) Credit" +
                "SED Credit" + "SAED Credit" + "CESS Credit" + "NCCD Credit" + "eCess Credit" +
                "Excise Charges Credit" + "ADET Credit" + "AED(TTA) Credit" + "ADE Credit" + "SHE Cess Credit";
            END;
            "Reversed Entry No." := PLAEntry."Entry No.";
            UpdateDetailedPLAEntry(NewPLAEntry);
            "Transaction No." := NextTransactionNo;
            Reversed := TRUE;
            // Reversal of Reversal
            IF PLAEntry."Reversed Entry No." <> 0 THEN BEGIN
              ReversedPLAEntry.GET(PLAEntry."Reversed Entry No.");
              ReversedPLAEntry."Reversed by Entry No." := 0;
              ReversedPLAEntry.Reversed := FALSE;
              ReversedPLAEntry.MODIFY;
              PLAEntry."Reversed Entry No." := "Entry No.";
              "Reversed by Entry No." := PLAEntry."Entry No.";
            END;
            PLAEntry."Reversed by Entry No." := "Entry No.";
            PLAEntry.Reversed := TRUE;
            PLAEntry.MODIFY;
            INSERT;
            NextPLAEntryNo := NextPLAEntryNo + 1;
          END;
        UNTIL PLAEntry.NEXT = 0;
    END;

    LOCAL PROCEDURE UpdateDetailedPLAEntry@1500032(VAR PLAEntry@1500000 : Record 13723);
    BEGIN
      WITH PLAEntry DO BEGIN
        DetailedPLAEntry.LOCKTABLE;
        IF DetailedPLAEntry.FINDLAST THEN
          NextDetailedPLAEntryNo := DetailedPLAEntry."Entry No." + 1
        ELSE
          NextDetailedPLAEntryNo := 1;
        DetailedPLAEntry.INIT;
        DetailedPLAEntry."Entry No." := NextDetailedPLAEntryNo;
        DetailedPLAEntry."PLA Entry No." := "Reversed Entry No.";
        DetailedPLAEntry."Application Date" := "Posting Date";
        DetailedPLAEntry."Document No." := "Document No.";
        DetailedPLAEntry."Location E.C.C. No." := "Location E.C.C. No.";
        DetailedPLAEntry."Entry Type" := DetailedPLAEntry."Entry Type"::Application;
        DetailedPLAEntry."BED Amount" := "BED Credit Amount" ;
        DetailedPLAEntry."AED(GSI) Amount" := "AED(GSI) Credit";
        DetailedPLAEntry."AED(TTA) Amount" := "AED(TTA) Credit";
        DetailedPLAEntry."SED Amount" := "SED Credit";
        DetailedPLAEntry."SAED Amount" := "SAED Credit";
        DetailedPLAEntry."Cess Amount" := "CESS Credit" ;
        DetailedPLAEntry."NCCD Amount" := "NCCD Credit" ;
        DetailedPLAEntry."ADET Amount" := "ADET Credit";
        DetailedPLAEntry."ADE Amount" := "ADE Credit";
        DetailedPLAEntry."Excise Amount" := "Excise Charges Credit" ;
        DetailedPLAEntry."eCess Amount" := "eCess Credit";
        DetailedPLAEntry."SHE Cess Amount" := "SHE Cess Credit";
        DetailedPLAEntry.INSERT;
      END;
    END;

    PROCEDURE InsertRG23APartIISale@1280043(GenJnlLine@1280001 : Record 81);
    VAR
      TempRG23APartII@1280002 : Record 13720;
    BEGIN
      WITH GenJnlLine DO BEGIN
        RGSetOFfDate := "RG/Service Tax Set Off Date";
        RG23APartII.LOCKTABLE;
        IF RG23APartII.FINDLAST THEN
          NextRGEntryNo := RG23APartII."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23APartII.INIT;
        RG23APartII."Entry No." := NextRGEntryNo;
        RG23APartII.Type := RG23APartII.Type::Sale;
        RG23APartII."Line No." := "Line No.";
        RG23APartII."Posting Date" := "Posting Date";
        RG23APartII."Document No." := "Document No.";
        RG23APartII."Location Code" := "Location Code";
        RG23APartII."Location E.C.C. No." := "E.C.C. No.";
        RG23APartII.TESTFIELD("Location E.C.C. No.");
        IF ECCNos.GET(RG23APartII."Location E.C.C. No.") THEN
          RG23APartII."Type of Unit" := ECCNos."Type of Unit";

        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        ExcisePostingSetup.SETRANGE("From Date",0D,"Posting Date");
        ExcisePostingSetup.FINDLAST;

        ExciseCenvatClaim.RESET;
        ExciseCenvatClaim.SETRANGE("Journal Template Name","Journal Template Name");
        ExciseCenvatClaim.SETRANGE("Journal Batch Name","Journal Batch Name");
        ExciseCenvatClaim.SETRANGE("Line No.","Line No.");
        ExciseCenvatClaim.SETRANGE("Document No.","Document No.");
        IF SalesDocumentNo <> '' THEN
          ExciseCenvatClaim.SETRANGE("Document No.",SalesDocumentNo);
        ExciseCenvatClaim.FINDFIRST;

        WITH ExciseCenvatClaim DO BEGIN
          RG23APartII."BED Debit" := "RG 23 A PART II BED Amount";
          RG23APartII."AED(GSI) Debit" := "RG 23A PART II AED(GSI) Amount";
          RG23APartII."AED(TTA) Debit" := "RG 23A PART II AED(TTA) Amount";
          RG23APartII."SED Debit" := "RG 23 A PART II SED Amount";
          RG23APartII."SAED Debit" := "RG 23 A PART II SAED Amount";
          RG23APartII."NCCD Debit" := "RG 23 A PART II NCCD Amount";
          RG23APartII."CESS Debit" := "RG 23 A PART II CESS Amount";
          RG23APartII."eCess Debit" := "RG 23 A PART II eCess Amount";
          RG23APartII."SHE Cess Debit" := "RG 23 A Part II SHECess Amount";
          RG23APartII."ADET Debit" := "RG 23 A Part II ADET Amount";
          RG23APartII."ADE Debit" := "RG 23 A Part II ADE Amount";
          RG23APartII."ADC VAT Debit" := "RG 23 A PART II ADC VAT Amount";
          RG23APartII."Excise Credit Availed as ST" := "Excise as Service Tax Credit";
        END;
        TempRG23APartII.SETCURRENTKEY("Location E.C.C. No.");
        TempRG23APartII.SETRANGE("Location E.C.C. No.",RG23APartII."Location E.C.C. No.");
        IF TempRG23APartII.FINDLAST THEN BEGIN
          RG23APartII."Op. Bal. BED/AED" := TempRG23APartII."Total BED Amount" + TempRG23APartII."Total AED(GSI) Amount" +
            TempRG23APartII."Total AED(TTA) Amount";
          RG23APartII."Op. Bal. ODs" := TempRG23APartII."Total SED Amount" + TempRG23APartII."Total SAED Amount" +
            TempRG23APartII."Total NCCD Amount" + TempRG23APartII."Total eCess Amount" + TempRG23APartII."Total ADET Amount" +
            TempRG23APartII."Total ADE Amount" + TempRG23APartII."Total ADC VAT Amount" + TempRG23APartII."Total SHE Cess Amount";
          RG23APartII."Total ADC VAT Amount" := TempRG23APartII."Total ADC VAT Amount" + RG23APartII."ADC VAT Credit" -
            RG23APartII."ADC VAT Debit";
          RG23APartII."Total BED Amount" := TempRG23APartII."Total BED Amount" + RG23APartII."BED Credit" - RG23APartII."BED Debit";
          RG23APartII."Total AED(GSI) Amount" := TempRG23APartII."Total AED(GSI) Amount" + RG23APartII."AED(GSI) Credit" -
            RG23APartII."AED(GSI) Debit";
          RG23APartII."Total AED(TTA) Amount" := TempRG23APartII."Total AED(TTA) Amount" + RG23APartII."AED(TTA) Credit" -
            RG23APartII."AED(TTA) Debit";
          RG23APartII."Total SED Amount" := TempRG23APartII."Total SED Amount" + RG23APartII."SED Credit" - RG23APartII."SED Debit";
          RG23APartII."Total SAED Amount" :=
            TempRG23APartII."Total SAED Amount" + RG23APartII."SAED Credit" - RG23APartII."SAED Debit";
          RG23APartII."Total CESS Amount" := TempRG23APartII."Total CESS Amount";
          RG23APartII."Total NCCD Amount" :=
            TempRG23APartII."Total NCCD Amount" + RG23APartII."NCCD Credit" - RG23APartII."NCCD Debit";
          RG23APartII."Total eCess Amount" := TempRG23APartII."Total eCess Amount" + RG23APartII."eCess Credit" -
            RG23APartII."eCess Debit";
          RG23APartII."Total SHE Cess Amount" := TempRG23APartII."Total SHE Cess Amount" + RG23APartII."SHE Cess Credit" -
            RG23APartII."SHE Cess Debit";
          RG23APartII."Total ADET Amount" := TempRG23APartII."Total ADET Amount" + RG23APartII."ADET Credit" -
            RG23APartII."ADET Debit";
          RG23APartII."Total ADE Amount" := TempRG23APartII."Total ADE Amount" + RG23APartII."ADE Credit" -
            RG23APartII."ADE Debit";
          RG23APartII."Closing Bal. BED/AED" := RG23APartII."Op. Bal. BED/AED" + RG23APartII."BED Credit" + RG23APartII.
            "AED(GSI) Credit"
            + RG23APartII."AED(TTA) Credit" - RG23APartII."BED Debit" - RG23APartII."AED(GSI) Debit" - RG23APartII."AED(TTA) Debit";
          RG23APartII."Closing Bal. Other Duties" :=
            RG23APartII."Op. Bal. ODs" + RG23APartII."SED Credit" + RG23APartII."SAED Credit" +
            RG23APartII."NCCD Credit" + RG23APartII."eCess Credit" + RG23APartII."ADET Credit" + RG23APartII."ADC VAT Credit" -
            RG23APartII."ADC VAT Debit" - RG23APartII."SED Debit" - RG23APartII."SAED Debit" - RG23APartII."NCCD Debit" -
            RG23APartII."eCess Debit" - RG23APartII."ADET Debit" + RG23APartII."ADE Credit" - RG23APartII."ADE Debit" +
            RG23APartII."SHE Cess Credit" - RG23APartII."SHE Cess Debit";
        END;
        RG23APartII."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
        RG23APartII."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        RG23APartII."Cenvat Cr. Receivable Account" := ExcisePostingSetup."Cenvat Cr. Receivable Account";
        AdjustCrEntriesRG23A(RG23APartII);
        GetRGEntryNo(RG23APartII."Posting Date",1,RG23APartII."Location E.C.C. No.",RG23APartII."Document No.",
          RG23APartII."RG Entry No.");
        GLSetup.GET;
        IF GLSetup."Check Negative RG Balance" THEN
          CheckNegativeBalance(1);
        RG23APartII.INSERT;
      END;
    END;

    PROCEDURE InsertRG23CPartIISale@1280042(GenJnlLine@1280001 : Record 81);
    VAR
      TempRG23CPartII@1280000 : Record 13722;
    BEGIN
      WITH GenJnlLine DO BEGIN
        RGSetOFfDate := "RG/Service Tax Set Off Date";
        RG23CPartII.LOCKTABLE;
        IF RG23CPartII.FINDLAST THEN
          NextRGEntryNo := RG23CPartII."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23CPartII.INIT;
        RG23CPartII."Entry No." := NextRGEntryNo;
        RG23CPartII.Type := RG23CPartII.Type::Sale;
        RG23CPartII."Line No." := "Line No.";
        RG23CPartII."Posting Date" := "Posting Date";
        RG23CPartII."Document No." := "Document No.";
        RG23CPartII."Location Code" := "Location Code";
        RG23CPartII."Location E.C.C. No." := "E.C.C. No.";
        RG23CPartII.TESTFIELD("Location E.C.C. No.");
        IF ECCNos.GET(RG23CPartII."Location E.C.C. No.") THEN
          RG23CPartII."Type of Unit" := ECCNos."Type of Unit";

        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        ExcisePostingSetup.SETRANGE("From Date",0D,"Posting Date");
        ExcisePostingSetup.FINDLAST;

        ExciseCenvatClaim.RESET;
        ExciseCenvatClaim.SETRANGE("Journal Template Name","Journal Template Name");
        ExciseCenvatClaim.SETRANGE("Journal Batch Name","Journal Batch Name");
        ExciseCenvatClaim.SETRANGE("Line No.","Line No.");
        ExciseCenvatClaim.SETRANGE("Document No.","Document No.");
        IF SalesDocumentNo <> '' THEN
          ExciseCenvatClaim.SETRANGE("Document No.",SalesDocumentNo);
        ExciseCenvatClaim.FINDFIRST;

        WITH ExciseCenvatClaim DO BEGIN
          RG23CPartII."BED Debit" := "RG 23 C PART II BED Amount";
          RG23CPartII."AED(GSI) Debit" := "RG 23C PART II AED(GSI) Amount";
          RG23CPartII."AED(TTA) Debit" := "RG 23C PART II AED(TTA) Amount";
          RG23CPartII."SED Debit" := "RG 23 C PART II SED Amount";
          RG23CPartII."SAED Debit" := "RG 23 C PART II SAED Amount";
          RG23CPartII."NCCD Debit" := "RG 23 C PART II NCCD Amount";
          RG23CPartII."eCess Debit" := "RG 23 C PART II eCess Amount";
          RG23CPartII."SHE Cess Debit" := "RG 23 C Part II SHECess Amount";
          RG23CPartII."CESS Debit" := "RG 23 C PART II CESS Amount";
          RG23CPartII."ADET Debit" := "RG 23 C Part II ADET Amount";
          RG23CPartII."ADE Debit" := "RG 23 C Part II ADE Amount";
          RG23CPartII."ADC VAT Debit" := "RG 23 C PART II ADC VAT Amount";
          RG23CPartII."Excise Credit Availed as ST" := "Excise as Service Tax Credit";
        END;
        TempRG23CPartII.SETCURRENTKEY("Location E.C.C. No.");
        TempRG23CPartII.SETRANGE("Location E.C.C. No.",RG23CPartII."Location E.C.C. No.");
        IF TempRG23CPartII.FINDLAST THEN BEGIN
          RG23CPartII."Opening Balance Credit CY" := TempRG23CPartII."Total BED for Current Year" +
            TempRG23CPartII."Total AED(GSI) for CY" + TempRG23CPartII."Total AED(TTA) for CY" +
            TempRG23CPartII."Total CESS for Current Year" + TempRG23CPartII."Total NCCD for Current Year" +
            TempRG23CPartII."Total SED for Current Year" + TempRG23CPartII."Total SAED for Current Year" +
            TempRG23CPartII."Total eCess for Current Year" + TempRG23CPartII."Total ADET for Current Year" +
            TempRG23CPartII."Total ADE for Current Year" + TempRG23CPartII."Total ADC VAT for CY" +
            TempRG23CPartII."Total SHECESS for Current Year";
          RG23CPartII."Total ADC VAT for CY" := TempRG23CPartII."Total ADC VAT for CY" -
            ROUND(RG23CPartII."ADC VAT Debit");
          RG23CPartII."Total BED for Current Year" :=
            TempRG23CPartII."Total BED for Current Year" - ROUND(RG23CPartII."BED Debit");
          RG23CPartII."Total BED for Next Year" := TempRG23CPartII."Total BED for Next Year";
          RG23CPartII."Total AED(GSI) for CY" :=
            TempRG23CPartII."Total AED(GSI) for CY" - ROUND(RG23CPartII."AED(GSI) Debit");
          RG23CPartII."Total AED(GSI) for Next Year" := TempRG23CPartII."Total AED(GSI) for Next Year" ;
          RG23CPartII."Total AED(TTA) for CY" :=
            TempRG23CPartII."Total AED(TTA) for CY" - ROUND(RG23CPartII."AED(TTA) Debit");
          RG23CPartII."Total AED(TTA) for Next Year" := TempRG23CPartII."Total AED(TTA) for Next Year";
          RG23CPartII."Total SED for Current Year" :=
            TempRG23CPartII."Total SED for Current Year" - ROUND(RG23CPartII."SED Debit");
          RG23CPartII."Total SED for Next Year" := TempRG23CPartII."Total SED for Next Year";
          RG23CPartII."Total SAED for Current Year" :=
            TempRG23CPartII."Total SAED for Current Year" - ROUND(RG23CPartII."SAED Debit");
          RG23CPartII."Total SAED for Next Year" := TempRG23CPartII."Total SAED for Next Year";
          RG23CPartII."Total NCCD for Current Year" :=
            TempRG23CPartII."Total NCCD for Current Year" - ROUND(RG23CPartII."NCCD Debit");
          RG23CPartII."Total NCCD for Next Year" := TempRG23CPartII."Total NCCD for Next Year";
          RG23CPartII."Total eCess for Current Year" :=
            TempRG23CPartII."Total eCess for Current Year" - ROUND(RG23CPartII."eCess Debit");
          RG23CPartII."Total eCess for Next Year" := TempRG23CPartII."Total eCess for Next Year";
          RG23CPartII."Total SHECESS for Current Year" :=
            TempRG23CPartII."Total SHECESS for Current Year" - ROUND(RG23CPartII."SHE Cess Debit");
          RG23CPartII."Total SHECESS for Next Year" := TempRG23CPartII."Total SHECESS for Next Year";
          RG23CPartII."Total ADET for Current Year" :=
            TempRG23CPartII."Total ADET for Current Year" - ROUND(RG23CPartII."ADET Debit");
          RG23CPartII."Total ADET for Next Year" := TempRG23CPartII."Total ADET for Next Year";
          RG23CPartII."Total ADE for Current Year" :=
            TempRG23CPartII."Total ADE for Current Year" - ROUND(RG23CPartII."ADE Debit");
          RG23CPartII."Total ADE for Next Year" := TempRG23CPartII."Total ADE for Next Year";
          RG23CPartII."Closing Balance Credit CY" := RG23CPartII."Total BED for Current Year" +
            RG23CPartII."Total AED(GSI) for CY" + RG23CPartII."Total ADET for Current Year" +
            RG23CPartII."Total SED for Current Year" + RG23CPartII."Total SAED for Current Year" +
            RG23CPartII."Total eCess for Current Year" + RG23CPartII."Total NCCD for Current Year" +
            RG23CPartII."Total CESS for Current Year" + RG23CPartII."Total AED(TTA) for CY" +
            RG23CPartII."Total ADE for Current Year" + RG23CPartII."Total ADC VAT for CY" +
            RG23CPartII."Total SHECESS for Current Year";
        END ELSE BEGIN
          RG23CPartII."Opening Balance Credit CY" := 0;
          RG23CPartII."Total BED for Current Year" := -RG23CPartII."BED Debit";
          RG23CPartII."Total AED(GSI) for CY" := -RG23CPartII."AED(GSI) Debit";
          RG23CPartII."Total AED(TTA) for CY" := -RG23CPartII."AED(TTA) Debit";
          RG23CPartII."Total SED for Current Year" := -RG23CPartII."SED Debit";
          RG23CPartII."Total SAED for Current Year" := -RG23CPartII."SAED Debit";
          RG23CPartII."Total NCCD for Current Year" := -RG23CPartII."NCCD Debit";
          RG23CPartII."Total eCess for Current Year" := -RG23CPartII."eCess Debit";
          RG23CPartII."Total SHECESS for Current Year" := -RG23CPartII."SHE Cess Debit";
          RG23CPartII."Total ADET for Current Year" := -RG23CPartII."ADET Debit";
          RG23CPartII."Total ADE for Current Year" := -RG23CPartII."ADE Debit";
          RG23CPartII."Total ADC VAT for CY" := -RG23CPartII."ADC VAT Debit";
          RG23CPartII."Closing Balance Credit CY" := RG23CPartII."Total BED for Current Year" +
            RG23CPartII."Total AED(GSI) for CY" + RG23CPartII."Total SED for Current Year" +
            RG23CPartII."Total SAED for Current Year" + RG23CPartII."Total eCess for Current Year" +
            RG23CPartII."Total NCCD for Current Year" + RG23CPartII."Total CESS for Current Year" +
            RG23CPartII."Total ADET for Current Year" + RG23CPartII."Total AED(TTA) for CY" +
            RG23CPartII."Total ADE for Current Year" + RG23CPartII."Total ADC VAT for CY" +
            RG23CPartII."Total SHECESS for Current Year";
        END;
        RG23CPartII."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
        RG23CPartII."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        RG23CPartII."Cenvat Cr. Receivable Acc." := ExcisePostingSetup."Cenvat Cr. Receivable Account";
        AdjustCrEntriesRG23C(RG23CPartII);
        GetRGEntryNo(RG23CPartII."Posting Date",3,RG23CPartII."Location E.C.C. No.",RG23CPartII."Document No.",
          RG23CPartII."RG Entry No.");
        GLSetup.GET;
        IF GLSetup."Check Negative RG Balance" THEN
          CheckNegativeBalance(2);
        RG23CPartII.INSERT;
      END;
    END;

    PROCEDURE InsertPLASales@1280039(GenJnlLine@1280000 : Record 81;NextTransactionNo@1280002 : Integer);
    VAR
      PLARec@1280001 : Record 13723;
      ExciseCenvatClaim@1500000 : Record 16584;
    BEGIN
      WITH GenJnlLine DO BEGIN
        PLAEntry.LOCKTABLE;
        IF PLAEntry.FINDLAST THEN
          NextPLAEntryNo := PLAEntry."Entry No." + 1
        ELSE
          NextPLAEntryNo := 1;

        ExciseCenvatClaim.RESET;
        ExciseCenvatClaim.SETRANGE("Journal Template Name","Journal Template Name");
        ExciseCenvatClaim.SETRANGE("Journal Batch Name","Journal Batch Name");
        ExciseCenvatClaim.SETRANGE("Line No.","Line No.");
        ExciseCenvatClaim.SETRANGE("Document No.","Document No.");
        IF SalesDocumentNo <> '' THEN
          ExciseCenvatClaim.SETRANGE("Document No.",SalesDocumentNo);
        ExciseCenvatClaim.FINDFIRST;

        PLAEntry.INIT;
        PLAEntry."Entry No." := NextPLAEntryNo;
        PLAEntry.Description := Description;
        PLAEntry."Document No." := "Document No.";
        PLAEntry."Posting Date" := "Posting Date";
        PLAEntry."Location E.C.C. No." := "E.C.C. No.";
        IF ECCNos.GET("E.C.C. No.") THEN
          PLAEntry."Type of Unit" := ECCNos."Type of Unit";

        PLAEntry."Transaction No." := NextTransactionNo;

        PLAEntry."BED Debit Amount" := ExciseCenvatClaim."PLA BED Amount";
        PLAEntry."Other Duties Debit" := ExciseCenvatClaim."PLA AED(GSI) Amount" + ExciseCenvatClaim."PLA SED Amount" +
          ExciseCenvatClaim."PLA SAED Amount" + ExciseCenvatClaim."PLA CESS Amount" +
          ExciseCenvatClaim."PLA NCCD Amount" + ExciseCenvatClaim."PLA AED(TTA) Amount" + ExciseCenvatClaim."PLA eCess Amount" +
          ExciseCenvatClaim."PLA ADET Amount" + ExciseCenvatClaim."PLA ADE Amount" + ExciseCenvatClaim."PLA SHE Cess Amount";
        PLAEntry."BED Debit" := ExciseCenvatClaim."PLA BED Amount";
        PLAEntry."AED(GSI) Debit" := ExciseCenvatClaim."PLA AED(GSI) Amount";
        PLAEntry."AED(TTA) Debit" := ExciseCenvatClaim."PLA AED(TTA) Amount";
        PLAEntry."SED Debit" := ExciseCenvatClaim."PLA SED Amount";
        PLAEntry."SAED Debit" := ExciseCenvatClaim."PLA SAED Amount";
        PLAEntry."CESS Debit" := ExciseCenvatClaim."PLA CESS Amount";
        PLAEntry."NCCD Debit" := ExciseCenvatClaim."PLA NCCD Amount";
        PLAEntry."eCess Debit" := ExciseCenvatClaim."PLA eCess Amount";
        PLAEntry."SHE Cess Debit" := ExciseCenvatClaim."PLA SHE Cess Amount";
        PLAEntry."ADET Debit" := ExciseCenvatClaim."PLA ADET Amount";
        PLAEntry."ADE Debit" := ExciseCenvatClaim."PLA ADE Amount";
        PLAEntry."Excise Charges Debit" := ExciseCenvatClaim."PLA Excise Charge Amount";
        PLAEntry."Debit Entry" := TRUE;
        PLARec.SETRANGE("Location E.C.C. No.","E.C.C. No.");
        IF PLARec.FINDLAST THEN BEGIN
          PLAEntry."Opening Balance" := PLARec."Closing Balance";
          PLAEntry."Balance BED" := PLARec."Balance BED" - PLAEntry."BED Debit";
          PLAEntry."Balance AED(GSI)" := PLARec."Balance AED(GSI)" - PLAEntry."AED(GSI) Debit";
          PLAEntry."Balance AED(TTA)" := PLARec."Balance AED(TTA)" - PLAEntry."AED(TTA) Debit";
          PLAEntry."Balance SED" := PLARec."Balance SED" - PLAEntry."SED Debit";
          PLAEntry."Balance SAED" := PLARec."Balance SAED" - PLAEntry."SAED Debit";
          PLAEntry."Balance CESS" := PLARec."Balance CESS" - PLAEntry."CESS Debit";
          PLAEntry."Balance NCCD" := PLARec."Balance NCCD" - PLAEntry."NCCD Debit";
          PLAEntry."Balance eCess" := PLARec."Balance eCess" - PLAEntry."eCess Debit";
          PLAEntry."Balance SHE Cess" := PLARec."Balance SHE Cess" - PLAEntry."SHE Cess Debit";
          PLAEntry."Balance ADET" := PLARec."Balance ADET" - PLAEntry."ADET Debit";
          PLAEntry."Balance ADE" := PLARec."Balance ADE" - PLAEntry."ADE Debit";
          PLAEntry."BED Balance" := PLARec."BED Balance" - PLAEntry."BED Debit";
          PLAEntry."Other Duties Balance" := PLARec."Other Duties Balance" - PLAEntry."Other Duties Debit";
          PLAEntry."Balance Excise Charges" := PLARec."Balance Excise Charges" - PLAEntry."Excise Charges Debit" ;
          PLAEntry."Closing Balance" := PLAEntry."Opening Balance" - PLAEntry."BED Debit" - PLAEntry."AED(GSI) Debit" -
            PLAEntry."SED Debit" - PLAEntry."SAED Debit" - PLAEntry."CESS Debit" - PLAEntry."NCCD Debit" - PLAEntry."eCess Debit" -
            PLAEntry."Excise Charges Debit" - PLAEntry."ADET Debit" - PLAEntry."AED(TTA) Debit" - PLAEntry."ADE Debit" -
            PLAEntry."SHE Cess Debit";
        END ELSE BEGIN
          PLAEntry."Opening Balance" := 0;
          PLAEntry."Balance BED" := -PLAEntry."BED Debit";
          PLAEntry."Balance AED(GSI)" := -PLAEntry."AED(GSI) Debit";
          PLAEntry."Balance AED(TTA)" := -PLAEntry."AED(TTA) Debit";
          PLAEntry."Balance SED" := -PLAEntry."SED Debit";
          PLAEntry."Balance SAED" := -PLAEntry."SAED Debit";
          PLAEntry."Balance CESS" := -PLAEntry."CESS Debit";
          PLAEntry."Balance NCCD" := -PLAEntry."NCCD Debit";
          PLAEntry."Balance eCess" := -PLAEntry."eCess Debit";
          PLAEntry."Balance SHE Cess" := -PLAEntry."SHE Cess Debit";
          PLAEntry."Balance ADET" := -PLAEntry."ADET Debit";
          PLAEntry."Balance ADE" := -PLAEntry."ADE Debit";
          PLAEntry."BED Balance" := -PLAEntry."BED Debit";
          PLAEntry."Other Duties Balance" := -PLAEntry."Other Duties Credit";
          PLAEntry."Balance Excise Charges" := -PLAEntry."Excise Charges Debit";
          PLAEntry."Closing Balance" := PLAEntry."Opening Balance" - PLAEntry."BED Debit" - PLAEntry."AED(GSI) Debit" -
            PLAEntry."SED Debit" - PLAEntry."SAED Debit" - PLAEntry."CESS Debit" - PLAEntry."NCCD Debit" - PLAEntry."eCess Debit" -
            PLAEntry."Excise Charges Debit" - PLAEntry."ADET Debit" - PLAEntry."AED(TTA) Debit" - PLAEntry."ADE Debit" -
            PLAEntry."SHE Cess Debit";
        END;
        GetPLAEntryNo("Posting Date");
        InsertInitDetailedPLAEntry(PLAEntry);
        InsertAdjustDetailedPLAEntry(PLAEntry);
        GLSetup.GET;
        IF GLSetup."Check Negative RG Balance" THEN
          CheckNegativeBalance(3);
        PLAEntry.INSERT;
      END;
    END;

    PROCEDURE InsertRT12Sale@1280035(SalesLine@1280000 : Record 37;SalesInvHeader@1280001 : Record 112;ReturnRcptHeader@1000 : Record 6660);
    VAR
      RT12Rec@1280002 : Record 13755;
      NextRT12EntryNo@1280006 : Integer;
      SalesCrMemoHeader@1500000 : Record 114;
    BEGIN
      WITH SalesLine DO BEGIN
        RT12.RESET;
        RT12.LOCKTABLE;
        IF RT12.FINDLAST THEN
          NextRT12EntryNo := RT12."Entry No." + 1
        ELSE
          NextRT12EntryNo := 1;
        RT12.INIT;
        RT12."Entry No." := NextRT12EntryNo;
        RT12."Item No." := "No.";
        RT12."Product Description" := Description;
        RT12."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        RT12."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
        RT12."Location Code" := "Location Code";
        IF "Location Code" <> '' THEN BEGIN
          Location.GET("Location Code");
          RT12."E.C.C No." := Location."E.C.C. No."
        END ELSE BEGIN
          CompanyInformation.GET;
          RT12."E.C.C No." := CompanyInformation."E.C.C. No.";
        END;
        RT12.TESTFIELD("E.C.C No.");
        RT12.Unit := "Unit of Measure Code";
        IF "Document Type" IN ["Document Type"::Order,"Document Type"::Invoice] THEN BEGIN
          RT12."Order No." := SalesInvHeader."No.";
          RT12."Posting Date" := SalesInvHeader."Posting Date";
          IF NOT (Type IN [Type::"G/L Account",Type::"Charge (Item)"]) THEN BEGIN
            IF "Amount Including Excise" - "Excise Base Amount" <> 0 THEN
              RT12."Quantity Removed(with duty)" := -"Qty. to Invoice (Base)"
            ELSE
              RT12."Quantity Removed(without duty)" := -"Qty. to Invoice (Base)";
          END;
        END ELSE BEGIN
          SalesCrMemoHeader.SETCURRENTKEY("Return Order No.");
          SalesCrMemoHeader.SETFILTER("Return Order No.",ReturnRcptHeader."Return Order No.");
          IF SalesCrMemoHeader.FINDFIRST THEN
            RT12."Order No." := SalesCrMemoHeader."No.";
          RT12."Posting Date" := ReturnRcptHeader."Posting Date";
          IF NOT (Type IN [Type::"G/L Account",Type::"Charge (Item)"]) THEN BEGIN
            IF "Amount Including Excise" - "Excise Base Amount" <> 0 THEN
              RT12."Quantity Removed(with duty)" := "Return Qty. to Receive (Base)"
            ELSE
              RT12."Quantity Removed(without duty)" := "Return Qty. to Receive (Base)";
            SalesCancellation := TRUE;
          END;
        END;
        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        ExcisePostingSetup.SETRANGE("From Date",0D,RT12."Posting Date");
        IF ExcisePostingSetup.FINDLAST THEN BEGIN
          RT12."Notification No." := ExcisePostingSetup."Notification No.";
          RT12."Notification Sl. No." := ExcisePostingSetup."Notification Sl. No.";
        END;

        RT12."BED %" := ExcisePostingSetup."BED %";
        RT12."AED(GSI) % / Amount" := ExcisePostingSetup."AED(GSI) %";
        RT12."AED (TTA) % / Amount" := ExcisePostingSetup."AED(TTA) %";
        RT12."SED % / Amount" := ExcisePostingSetup."SED %";
        RT12."SAED % / Amount" := ExcisePostingSetup."SAED %";
        RT12."CESS % / Amount" := ExcisePostingSetup."CESS %";
        RT12."NCCD % / Amount" := ExcisePostingSetup."NCCD %";
        RT12."eCess % / Amount" := ExcisePostingSetup."eCess %";
        RT12."SHE Cess % / Amount" := ExcisePostingSetup."SHE Cess %";
        RT12."ADET % / Amount" := ExcisePostingSetup."ADET %";
        RT12."ADE % / Amount" := ExcisePostingSetup."ADE %";
        IF SalesCancellation THEN BEGIN
          RT12."CENVAT Amount" := -"BED Amount";
          RT12."SED Amount" := -"SED Amount";
          RT12."AED (GSI) Amount" := -"AED(GSI) Amount";
          RT12."AED (TTA) Amount" := -"AED(TTA) Amount";
          RT12."SAED Amount" := -"SAED Amount";
          RT12."CESS Amount" := -"CESS Amount";
          RT12."NCCD Amount" := -"NCCD Amount";
          RT12."eCESS Amount" := -"eCess Amount";
          RT12."SHE Cess Amount" := -"SHE Cess Amount";
          RT12."ADET Amount" := -"ADET Amount";
          RT12."ADE Amount" := -"ADE Amount";
          RT12."Assessable Value" := -"Excise Base Amount";
        END ELSE BEGIN
          RT12."CENVAT Amount" := "BED Amount";
          RT12."SED Amount" := "SED Amount";
          RT12."AED (GSI) Amount" := "AED(GSI) Amount";
          RT12."AED (TTA) Amount" := "AED(TTA) Amount";
          RT12."SAED Amount" := "SAED Amount";
          RT12."CESS Amount" := "CESS Amount";
          RT12."NCCD Amount" := "NCCD Amount";
          RT12."eCESS Amount" := "eCess Amount";
          RT12."SHE Cess Amount" := "SHE Cess Amount";
          RT12."ADET Amount" := "ADET Amount";
          RT12."ADE Amount" := "ADE Amount";
          RT12."Assessable Value" := "Excise Base Amount";
        END;

        RT12."Quantity Removed" := RT12."Quantity Removed(with duty)" + RT12."Quantity Removed(without duty)";
        RT12."Quantity Manufactured" := 0;
        RT12."Quantity Received" := 0;
        RT12Rec.RESET;
        RT12Rec.SETRANGE("E.C.C No.",RT12."E.C.C No.");
        IF RT12Rec.FINDLAST THEN BEGIN
          RT12."Opening Balance" := RT12Rec."Closing Balance";
          RT12."Closing Balance" := RT12Rec."Closing Balance" + (RT12."Quantity Removed(with duty)" +
                                                                 RT12."Quantity Removed(without duty)");
        END ELSE BEGIN
          RT12."Opening Balance" := 0;
          RT12."Closing Balance" := RT12."Quantity Removed";
        END;
        // RT12."Assessable Value" := "Excise Base Amount";
        RT12."Rate of Duty %" := ExcisePostingSetup."BED %";
        RT12."Total Duty Payable" := "Amount Including Excise" - "Excise Base Amount";
        RT12."ADC VAT %" := ExcisePostingSetup."ADC VAT %";
        RT12."ADC VAT Amount" := "ADC VAT Amount";
        RT12.Supplementary := Supplementary;
        RT12."Source Document Type" := "Source Document Type";
        RT12."Source Document No." := "Source Document No.";
        RT12.INSERT;
      END;
    END;

    PROCEDURE InsertRT12Transfer@1280045(TransferLine@1280000 : Record 5741;TransferShptHeader@1280001 : Record 5744);
    VAR
      RT12Rec@1280002 : Record 13755;
      NextRT12EntryNo@1280006 : Integer;
    BEGIN
      WITH TransferLine DO BEGIN
        RT12.RESET;
        RT12.LOCKTABLE;
        IF RT12.FINDLAST THEN
          NextRT12EntryNo := RT12."Entry No." + 1
        ELSE
          NextRT12EntryNo := 1;
        RT12.INIT;
        RT12."Entry No." := NextRT12EntryNo;
        RT12."Item No." := "Item No.";
        RT12.Type := RT12.Type::Transfer;
        RT12."Product Description" := Description;
        RT12."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        RT12."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
        RT12."Location Code" := "Transfer-from Code";
        IF "Transfer-from Code" <> '' THEN BEGIN
          Location.GET("Transfer-from Code");
          RT12."E.C.C No." := Location."E.C.C. No."
        END ELSE BEGIN
          CompanyInformation.GET;
          RT12."E.C.C No." := CompanyInformation."E.C.C. No.";
        END;
        RT12.TESTFIELD("E.C.C No.");
        RT12.Unit := "Unit of Measure Code";

        IF "Excise Amount" <> 0 THEN
          RT12."Quantity Removed(with duty)" := -"Qty. to Ship (Base)"
        ELSE
          RT12."Quantity Removed(without duty)" := -"Qty. to Ship (Base)";
        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        // ExcisePostingSetup.SETRANGE("From Date",0D,RG23APartII."Posting Date");
        ExcisePostingSetup.SETRANGE("From Date",0D,TransferShptHeader."Posting Date");
        IF ExcisePostingSetup.FINDLAST THEN BEGIN
          RT12."Notification No." := ExcisePostingSetup."Notification No.";
          RT12."Notification Sl. No." := ExcisePostingSetup."Notification Sl. No.";
        END;
        RT12."BED %" := ExcisePostingSetup."BED %";
        RT12."AED(GSI) % / Amount" := ExcisePostingSetup."AED(GSI) %";
        RT12."AED (TTA) % / Amount" := ExcisePostingSetup."AED(TTA) %";
        RT12."SED % / Amount" := ExcisePostingSetup."SED %";
        RT12."SAED % / Amount" := ExcisePostingSetup."SAED %";
        RT12."CESS % / Amount" := ExcisePostingSetup."CESS %";
        RT12."NCCD % / Amount" := ExcisePostingSetup."NCCD %";
        RT12."eCess % / Amount" := ExcisePostingSetup."eCess %";
        RT12."SHE Cess % / Amount" := ExcisePostingSetup."SHE Cess %";
        RT12."ADET % / Amount" := ExcisePostingSetup."ADET %";
        RT12."ADE % / Amount" := ExcisePostingSetup."ADE %";
        RT12."CENVAT Amount" := "BED Amount";
        RT12."SED Amount" := "SED Amount";
        RT12."AED (GSI) Amount" := "AED(GSI) Amount";
        RT12."AED (TTA) Amount" := "AED(TTA) Amount";
        RT12."SAED Amount" := "SAED Amount";
        RT12."CESS Amount" := "CESS Amount";
        RT12."NCCD Amount" := "NCCD Amount";
        RT12."eCESS Amount" := "eCess Amount";
        RT12."SHE Cess Amount" := "SHE Cess Amount";
        RT12."ADET Amount" := "ADET Amount";
        RT12."ADE Amount" := "ADE Amount";
        RT12."Quantity Removed" := RT12."Quantity Removed(with duty)" + RT12."Quantity Removed(without duty)";
        RT12."Quantity Manufactured" := 0;
        RT12."Quantity Received" := 0;
        RT12Rec.RESET;
        RT12Rec.SETRANGE("E.C.C No.",RT12."E.C.C No.");
        IF RT12Rec.FINDLAST THEN BEGIN
          RT12."Opening Balance" := RT12Rec."Closing Balance";
          RT12."Closing Balance" := RT12Rec."Closing Balance" + (RT12."Quantity Removed(with duty)" +
                                                                 RT12."Quantity Removed(without duty)");
        END ELSE BEGIN
          RT12."Opening Balance" := 0;
          RT12."Closing Balance" := RT12."Quantity Removed";
        END;
        RT12."Assessable Value" := "Excise Base Amount";
        RT12."Rate of Duty %" := ExcisePostingSetup."BED %";
        RT12."Total Duty Payable" := "Excise Amount";
        RT12."ADC VAT %" := ExcisePostingSetup."ADC VAT %";
        RT12."ADC VAT Amount" := "ADC VAT Amount";
        RT12."Order No." := TransferShptHeader."No.";
        RT12."Posting Date" := TransferShptHeader."Posting Date";
        RT12.INSERT;
      END;
    END;

    PROCEDURE UpdateRT12ProdOutput@1280009(ItemJnlLine@1280001 : Record 83;Qty1@1280005 : Decimal);
    VAR
      RT12@1280000 : Record 13755;
      RT12Rec@1500000 : Record 13755;
      Location@1280003 : Record 14;
      Item@1280004 : Record 27;
      NextRGEntryNo@1500001 : Integer;
    BEGIN
      Item.GET(ItemJnlLine."Item No.");
      IF Item."Excise Prod. Posting Group" <> '' THEN BEGIN
        RT12.RESET;
        RT12.LOCKTABLE;
        IF RT12.FINDLAST THEN
          NextRGEntryNo := RT12."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;

        RT12.INIT;
        RT12."Entry No." := NextRGEntryNo;
        RT12."Location Code" := ItemJnlLine."Location Code";
        IF RT12."Location Code" <> '' THEN BEGIN
          Location.GET(RT12."Location Code");
          RT12."E.C.C No." := Location."E.C.C. No."
        END ELSE BEGIN
          CompanyInformation.GET;
          RT12."E.C.C No." := CompanyInformation."E.C.C. No.";
        END;
        RT12.TESTFIELD("E.C.C No.");
        RT12."Item No." := ItemJnlLine."Item No.";
        RT12.Type := RT12.Type::Output;
        IF Item.GET(RT12."Item No.") THEN BEGIN
          RT12."Product Description" := Item.Description;
          RT12."Excise Prod. Posting Group" := Item."Excise Prod. Posting Group";
        END;
        RT12.Unit := ItemJnlLine."Unit of Measure Code";
        RT12."Quantity Manufactured" := Qty1;
        RT12."Posting Date" := ItemJnlLine."Posting Date";

        ExcisePostingSetup.RESET;
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group",Item."Excise Prod. Posting Group");
        ExcisePostingSetup.SETRANGE("From Date",0D,ItemJnlLine."Posting Date");
        IF ExcisePostingSetup.FINDLAST THEN BEGIN
          RT12."BED %" := ExcisePostingSetup."BED %";
          RT12."AED(GSI) % / Amount" := ExcisePostingSetup."AED(GSI) %";
          RT12."AED (TTA) % / Amount" := ExcisePostingSetup."AED(TTA) %";
          RT12."SED % / Amount" := ExcisePostingSetup."SED %";
          RT12."SAED % / Amount" := ExcisePostingSetup."SAED %";
          RT12."CESS % / Amount" := ExcisePostingSetup."CESS %";
          RT12."NCCD % / Amount" := ExcisePostingSetup."NCCD %";
          RT12."eCess % / Amount" := ExcisePostingSetup."eCess %";
          RT12."SHE Cess % / Amount" := ExcisePostingSetup."SHE Cess %";
          RT12."ADET % / Amount" := ExcisePostingSetup."ADET %";
          RT12."ADE % / Amount" := ExcisePostingSetup."ADE %";
        END;

        RT12Rec.RESET;
        RT12Rec.SETRANGE("E.C.C No.",RT12."E.C.C No.");
        IF RT12Rec.FINDLAST THEN BEGIN
          RT12."Opening Balance" := RT12Rec."Closing Balance";
          RT12."Closing Balance" := RT12Rec."Closing Balance" + RT12."Quantity Manufactured"
        END ELSE BEGIN
          RT12."Opening Balance" := 0;
          RT12."Closing Balance" := RT12."Quantity Manufactured";
        END;
        RT12.INSERT;
      END;
    END;

    PROCEDURE ConvertAmountFCY2LCY@1280015(PostingDate@1280001 : Date;CurrencyCode@1280004 : Code[10];Amount@1280000 : Decimal;CurrencyFactor@1280002 : Decimal) ReturnAmount : Decimal;
    VAR
      CurrExchRate@1280003 : Record 330;
    BEGIN
      IF CurrencyCode <> '' THEN
        ReturnAmount := RoundExciseAmt(CurrExchRate.ExchangeAmtFCYToLCY(PostingDate,CurrencyCode,Amount,CurrencyFactor))
      ELSE
        ReturnAmount := RoundExciseAmt(Amount);
      EXIT(ReturnAmount);
    END;

    PROCEDURE GetPLAEntryNo@1500000(PostingDate@1500000 : Date);
    VAR
      PLAEntry1@1500005 : Record 13723;
      NoSeriesMgt@1500004 : Codeunit 396;
      ExciseNoSeries@1500003 : Record 16500;
      SalesInvHeader@1500002 : Record 112;
      Location@1500001 : Record 14;
    BEGIN
      SalesInvHeader.RESET;
      SalesInvHeader.SETRANGE("No.",PLAEntry."Document No.");
      IF SalesInvHeader.FINDFIRST THEN BEGIN
        IF SalesInvHeader."Location Code" <> '' THEN BEGIN
          Location.GET(SalesInvHeader."Location Code");
          ExciseNoSeries.GET(0,Location."E.C.C. No.");
          PLAEntry."Location E.C.C. No." := Location."E.C.C. No.";
        END ELSE BEGIN
          CompanyInformation.GET;
          ExciseNoSeries.GET(0,CompanyInformation."E.C.C. No.");
          PLAEntry."Location E.C.C. No." := CompanyInformation."E.C.C. No.";
        END;
      END ELSE
        ExciseNoSeries.GET(0,PLAEntry."Location E.C.C. No.");
      PLAEntry1.RESET;
      PLAEntry1.SETRANGE("Document No.",PLAEntry."Document No.");
      IF NOT PLAEntry1.FINDFIRST THEN BEGIN
        NoSeriesMgt.InitSeries(ExciseNoSeries."No. Series",ExciseNoSeries."No. Series",PostingDate,
          PLAEntry."PLA Entry No.",ExciseNoSeries."No. Series");
      END ELSE
        PLAEntry."PLA Entry No." := PLAEntry1."PLA Entry No.";
    END;

    PROCEDURE InitRG23DPurch@1500001(PurchLine@1500000 : Record 39;TransType@1500004 : ' ,Purchase,Sale';EntryType@1500005 : ' ,Transfer,Invoice,Return';SourceType@1500006 : ' ,Customer,VENDor,Item';SourceCode@1500007 : Code[20];DocNo@1500008 : Code[20];DocType@1500002 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order');
    VAR
      RG23D@1500001 : Record 16537;
      DetailRG23D@1500010 : Record 16533;
      PurchHeader@1500003 : Record 38;
      VENDor@1500009 : Record 23;
      CurrencyExchangeRate@1500011 : Record 330;
    BEGIN
      WITH PurchLine DO BEGIN
        PurchHeader.GET(DocType,"Document No.");
        IF (NOT PurchHeader.Trading) OR ("Qty. to Invoice" = 0) THEN
          EXIT;
        IF ("Excise Accounting Type" = "Excise Accounting Type"::"Without CENVAT") OR (Type <> Type::Item) THEN
          EXIT;
        // IF Item.GET("No.") AND (Item."Capital Item") AND (Item."Excise Accounting Type" = Item."Excise Accounting Type"::
        // "Without CENVAT")
        IF Item.GET("No.") AND ((Item."Capital Item" AND (Item."Excise Accounting Type" = Item."Excise Accounting Type"::
                                                          "Without CENVAT")) OR
                                (Item."Excise Accounting Type" = Item."Excise Accounting Type"::"Without CENVAT"))
        THEN
          EXIT;
        TESTFIELD("Excise Bus. Posting Group");
        TESTFIELD("Excise Prod. Posting Group");
        RG23D.INIT;
        RG23D."Entry No." := GetRG23DEntryNo;
        RG23D."Posting Date" := PurchHeader."Posting Date";
        RG23D."Document Type" := DocType;
        RG23D."Document No." := DocNo;
        RG23D."Item No." := "No.";
        RG23D."Line No." := "Line No.";
        RG23D."Transaction Type" := TransType;
        RG23D.Type := EntryType;
        RG23D."Location Code" := "Location Code";
        RG23D."Source Type" := SourceType;
        RG23D."Source Code" := SourceCode;
        RG23D.Quantity := "Qty. to Invoice (Base)";
        ExcisePostingSetup.RESET;
        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        ExcisePostingSetup.SETFILTER("From Date",'<=%1',PurchHeader."Posting Date");
        IF ExcisePostingSetup.FINDLAST THEN BEGIN
          RG23D."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
          RG23D."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        END ELSE
          ERROR(Text16500,FIELDCAPTION("Excise Bus. Posting Group"),"Excise Bus. Posting Group",FIELDCAPTION(
              "Excise Prod. Posting Group"),"Excise Prod. Posting Group");
        IF "Assessable Value" = 0 THEN BEGIN
          IF ("Excise Accounting Type" = "Excise Accounting Type"::"With CENVAT") THEN BEGIN
            RG23D."Excise Base Amt Per Unit" := (Amount + "CESS Amount");
            IF NOT ("SetOff Available") THEN
              RG23D."Excise Base Amt Per Unit" :=
                ( Amount + "CESS Amount" + "eCess Amount" + "SHE Cess Amount");
          END ELSE
            RG23D."Excise Base Amt Per Unit" := Amount + "Excise Amount";
        END;
        IF ("Assessable Value" <> 0) AND NOT CVD THEN
          RG23D."Excise Base Amt Per Unit" := "Assessable Value";
        IF CVD AND (("CIF Amount" <> 0) OR ("BCD Amount" <> 0)) THEN
          RG23D."Excise Base Amt Per Unit" := "CIF Amount" + "BCD Amount";
        RG23D.Amount := ("Excise Amount" - "CESS Amount") * "Qty. to Invoice (Base)";
        IF NOT ("SetOff Available") THEN
          RG23D.Amount := RG23D.Amount - (("eCess Amount" - "SHE Cess Amount") * "Qty. to Invoice (Base)");

        RG23D."Excise Base Amt Per Unit" :=
         CurrencyExchangeRate.ExchangeAmtFCYToLCY(
           PurchHeader."Posting Date",PurchHeader."Currency Code",
           RG23D."Excise Base Amt Per Unit",PurchHeader."Currency Factor");
        RG23D."Excise Amt Per Unit" :=
         CurrencyExchangeRate.ExchangeAmtFCYToLCY(
           PurchHeader."Posting Date",PurchHeader."Currency Code",
           RG23D.Amount / "Qty. to Invoice (Base)",PurchHeader."Currency Factor");
        RG23D.Amount :=
         CurrencyExchangeRate.ExchangeAmtFCYToLCY(
           PurchHeader."Posting Date",PurchHeader."Currency Code",
           RG23D.Amount,PurchHeader."Currency Factor");
        RG23D."Unit of Measure" := Item."Base Unit of Measure";
        RG23D."BED Amount Per Unit" :=
         CurrencyExchangeRate.ExchangeAmtFCYToLCY(
           PurchHeader."Posting Date",PurchHeader."Currency Code",
           "BED Amount",PurchHeader."Currency Factor");
        RG23D."eCess Amount Per Unit" :=
         CurrencyExchangeRate.ExchangeAmtFCYToLCY(
           PurchHeader."Posting Date",PurchHeader."Currency Code",
           "eCess Amount",PurchHeader."Currency Factor");
        RG23D."SHE Cess Amount Per Unit" :=
         CurrencyExchangeRate.ExchangeAmtFCYToLCY(
           PurchHeader."Posting Date",PurchHeader."Currency Code",
           "SHE Cess Amount",PurchHeader."Currency Factor");
        RG23D."AED(GSI) Amount Per Unit" :=
         CurrencyExchangeRate.ExchangeAmtFCYToLCY(
           PurchHeader."Posting Date",PurchHeader."Currency Code",
           "AED(GSI) Amount",PurchHeader."Currency Factor");
        RG23D."SED Amount Per Unit" :=
         CurrencyExchangeRate.ExchangeAmtFCYToLCY(
           PurchHeader."Posting Date",PurchHeader."Currency Code",
           "SED Amount",PurchHeader."Currency Factor");
        RG23D."SAED Amount Per Unit" :=
         CurrencyExchangeRate.ExchangeAmtFCYToLCY(
           PurchHeader."Posting Date",PurchHeader."Currency Code",
           "SAED Amount",PurchHeader."Currency Factor");
        RG23D."CESS Amount Per Unit" :=
         CurrencyExchangeRate.ExchangeAmtFCYToLCY(
           PurchHeader."Posting Date",PurchHeader."Currency Code",
            "CESS Amount",PurchHeader."Currency Factor");
        RG23D."NCCD Amount Per Unit" :=
         CurrencyExchangeRate.ExchangeAmtFCYToLCY(
           PurchHeader."Posting Date",PurchHeader."Currency Code",
           "NCCD Amount",PurchHeader."Currency Factor");
        RG23D."ADET Amount Per Unit" :=
         CurrencyExchangeRate.ExchangeAmtFCYToLCY(
           PurchHeader."Posting Date",PurchHeader."Currency Code",
           "ADET Amount",PurchHeader."Currency Factor");
        RG23D."AED(TTA) Amount Per Unit" :=
         CurrencyExchangeRate.ExchangeAmtFCYToLCY(
           PurchHeader."Posting Date",PurchHeader."Currency Code",
           "AED(TTA) Amount",PurchHeader."Currency Factor");
        RG23D."ADE Amount Per Unit" :=
         CurrencyExchangeRate.ExchangeAmtFCYToLCY(
           PurchHeader."Posting Date",PurchHeader."Currency Code",
           "ADE Amount",PurchHeader."Currency Factor");
        RG23D."ADC VAT Amount Per Unit" :=
         CurrencyExchangeRate.ExchangeAmtFCYToLCY(
           PurchHeader."Posting Date",PurchHeader."Currency Code",
           "ADC VAT Amount",PurchHeader."Currency Factor");
        RG23D.CVD := CVD;
        RG23D."Line Amount Per Unit" :=
         CurrencyExchangeRate.ExchangeAmtFCYToLCY(
           PurchHeader."Posting Date",PurchHeader."Currency Code",
           "Line Amount",PurchHeader."Currency Factor");
        RG23D.Year := DATE2DMY(RG23D."Posting Date",3);
        RG23D.Month := DATE2DMY(RG23D."Posting Date",2);

        RG23D."Order No." := "Document No.";
        IF Location.GET("Location Code") THEN
          RG23D."E.C.C. No." := Location."E.C.C. No."
        ELSE BEGIN
          CompanyInformation.GET;
          RG23D."E.C.C. No." := CompanyInformation."E.C.C. No."
        END;
        RG23D."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
        RG23D."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
        RG23D."Dimension Set ID" := "Dimension Set ID";
        RG23D."Gen. Bus. Posting Group" := "Gen. Bus. Posting Group";
        RG23D."Gen. Prod. Posting Group" := "Gen. Prod. Posting Group";

        DetailRG23D.INIT;
        DetailRG23D."Entry No." := GetDetailRG23DEntryNo;
        DetailRG23D."Document Type" := "Document Type";
        DetailRG23D."Order No." := "Document No.";
        DetailRG23D."Line No." := "Line No.";
        DetailRG23D.Quantity := "Qty. to Invoice (Base)";
        DetailRG23D."RG 23 D Entry No." := RG23D."Entry No.";
        DetailRG23D."Transaction Type" := DetailRG23D."Transaction Type"::Purchase;
        DetailRG23D."Document No." := DocNo;
        DetailRG23D."Document Line No." := "Line No.";
        DetailRG23D."Quantity Invoiced" := "Qty. to Invoice";
        DetailRG23D."Completely Invoiced" := TRUE;
        DetailRG23D.INSERT(TRUE);

        RG23D."Vendor Invoice No." := PurchHeader."Vendor Invoice No.";
        RG23D."Detail RG 23 D Entry No." := DetailRG23D."Entry No.";
        VENDor.GET("Buy-from Vendor No.");
        RG23D."Vendor Type" := VENDor."Vendor Type";
        RG23D."Setoff Available" := "SetOff Available";
        GetRGEntryNo(RG23D."Posting Date",4,RG23D."E.C.C. No.",RG23D."Document No.",RG23D."RG Entry No.");
        RG23D."Item Ledg. Entry No." := ItemLedgEntryNo;
        RG23D.INSERT(TRUE);
      END;
    END;

    PROCEDURE InitRG23DSales@1500002(SalesLine@1500000 : Record 37;TransType@1500004 : ' ,Purchase,Sale';EntryType@1500005 : ' ,Transfer,Invoice,Return';SourceType@1500006 : ' ,Customer,VENDor,Item';SourceCode@1500007 : Code[20];DocNo@1500008 : Code[20];DocType@1500010 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order');
    VAR
      RG23D@1500001 : Record 16537;
      RG23D2@1500009 : Record 16537;
      SalesHeader@1500003 : Record 36;
      RG23DSplitingbuffer@1500014 : Record 16531;
    BEGIN
      WITH SalesLine DO BEGIN
        SalesHeader.GET("Document Type","Document No.");
        IF (NOT SalesHeader.Trading) OR ("Qty. to Invoice" = 0) THEN
          EXIT;
        IF ("Excise Accounting Type" = "Excise Accounting Type"::"Without CENVAT") OR (Type <> Type::Item) THEN
          EXIT;
        RG23DSplitingbuffer.RESET;
        RG23DSplitingbuffer.SETRANGE("Document Type","Document Type");
        RG23DSplitingbuffer.SETRANGE("Document No.","Document No.");
        RG23DSplitingbuffer.SETRANGE("Line No.","Line No.");
        IF RG23DSplitingbuffer.FINDSET THEN
          REPEAT
            RG23D2.GET(RG23DSplitingbuffer."RG 23 D Entry No.");
            RG23D2.CALCFIELDS("Remaining Quantity");
            RG23D2.Closed := RG23D2."Remaining Quantity" = 0;
            RG23D2.MODIFY(TRUE);
            RG23D.INIT;
            RG23D."Entry No." := GetRG23DEntryNo;
            RG23D."Posting Date" := SalesHeader."Posting Date";
            RG23D."Document Type" := DocType;
            RG23D."Document No." := DocNo;
            RG23D."Item No." := "No.";
            RG23D."Line No." := "Line No.";
            RG23D."Transaction Type" := TransType;
            RG23D.Type := EntryType;
            RG23D."Location Code" := "Location Code";
            RG23D."Source Type" := SourceType;
            RG23D."Source Code" := SourceCode;
            RG23D.Quantity := RG23DSplitingbuffer.Quantity;
            RG23D.Amount := RG23D2."Excise Amt Per Unit" * RG23DSplitingbuffer.Quantity;
            RG23D."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
            RG23D."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
            RG23D."Excise Base Amt Per Unit" := -1 * RG23D2."Excise Base Amt Per Unit";
            RG23D."Excise Amt Per Unit" := -1 * RG23D2."Excise Amt Per Unit";
            Item.GET("No.");
            RG23D."Unit of Measure" := Item."Base Unit of Measure";
            RG23D."BED Amount Per Unit" := -1 * RG23D2."BED Amount Per Unit";
            RG23D."eCess Amount Per Unit" := -1 * RG23D2."eCess Amount Per Unit";
            RG23D."SHE Cess Amount Per Unit" := -1 * RG23D2."SHE Cess Amount Per Unit";
            RG23D."AED(GSI) Amount Per Unit" := -1 * RG23D2."AED(GSI) Amount Per Unit";
            RG23D."SED Amount Per Unit" := -1 * RG23D2."SED Amount Per Unit";
            RG23D."SAED Amount Per Unit" := -1 * RG23D2."SAED Amount Per Unit";
            RG23D."CESS Amount Per Unit" := -1 * RG23D2."CESS Amount Per Unit";
            RG23D."NCCD Amount Per Unit" := -1 * RG23D2."NCCD Amount Per Unit";
            RG23D."ADET Amount Per Unit" := -1 * RG23D2."ADET Amount Per Unit";
            RG23D."AED(TTA) Amount Per Unit" := -1 * RG23D2."AED(TTA) Amount Per Unit";
            RG23D."ADE Amount Per Unit" := -1 * RG23D2."ADE Amount Per Unit";
            RG23D."ADC VAT Amount Per Unit" := -1 * RG23D2."ADC VAT Amount Per Unit";
            RG23D.CVD := RG23D2.CVD;
            RG23D."Line Amount Per Unit" := -1 * RG23D2."Line Amount Per Unit";
            RG23D.Year := DATE2DMY(RG23D."Posting Date",3);
            RG23D.Month := DATE2DMY(RG23D."Posting Date",2);
            RG23D."Ref. Entry No." := RG23DSplitingbuffer."RG 23 D Entry No.";
            RG23D."Order No." := "Document No.";
            // RG23D."Detail RG 23 D Entry No." := DetailRG23D."Detail RG 23 D Entry No.";
            RG23D."Detail RG 23 D Entry No." := RG23DSplitingbuffer."Detail RG 23 D Entry No.";
            IF Location.GET("Location Code") THEN
              RG23D."E.C.C. No." := Location."E.C.C. No."
            ELSE BEGIN
              CompanyInformation.GET;
              RG23D."E.C.C. No." := CompanyInformation."E.C.C. No."
            END;
            RG23D."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
            RG23D."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
            RG23D."Dimension Set ID" := "Dimension Set ID";
            RG23D."Vendor Invoice No." := RG23D2."Vendor Invoice No.";
            RG23D."Gen. Bus. Posting Group" := "Gen. Bus. Posting Group";
            RG23D."Gen. Prod. Posting Group" := "Gen. Prod. Posting Group";
            GetRGEntryNo(RG23D."Posting Date",4,RG23D."E.C.C. No.",RG23D."Document No.",RG23D."RG Entry No.");
            RG23D.INSERT(TRUE);
          UNTIL RG23DSplitingbuffer.NEXT = 0;
        RG23DSplitingbuffer.DELETEALL;
      END;
    END;

    PROCEDURE InitRG23DPurchReturn@1500007(PurchLine@1500000 : Record 39;TransType@1500004 : ' ,Purchase,Sale';EntryType@1500005 : ' ,Transfer,Invoice,Return';SourceType@1500006 : ' ,Customer,VENDor,Item';SourceCode@1500007 : Code[20];DocNo@1500008 : Code[20];DocType@1500010 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order');
    VAR
      RG23D@1500001 : Record 16537;
      RG23D2@1500009 : Record 16537;
      VENDor@1500011 : Record 23;
      PurchHeader@1500003 : Record 38;
      RG23DSplitingbuffer@1500103 : Record 16531;
    BEGIN
      WITH PurchLine DO BEGIN
        PurchHeader.GET(DocType,"Document No.");
        IF (NOT PurchHeader.Trading) OR ("Qty. to Invoice" = 0) THEN
          EXIT;
        IF ("Excise Accounting Type" = "Excise Accounting Type"::"Without CENVAT") OR (Type <> Type::Item) THEN
          EXIT;
        RG23DSplitingbuffer.RESET;
        RG23DSplitingbuffer.SETRANGE("Document Type","Document Type");
        RG23DSplitingbuffer.SETRANGE("Document No.","Document No.");
        RG23DSplitingbuffer.SETRANGE("Line No.","Line No.");
        IF RG23DSplitingbuffer.FINDSET THEN
          REPEAT
            RG23D2.GET(RG23DSplitingbuffer."RG 23 D Entry No.");
            RG23D2.CALCFIELDS("Remaining Quantity");
            RG23D2.Closed := RG23D2."Remaining Quantity" = 0;
            RG23D2.MODIFY(TRUE);
            RG23D.INIT;
            RG23D."Entry No." := GetRG23DEntryNo;
            RG23D."Posting Date" := PurchHeader."Posting Date";
            RG23D."Document Type" := DocType;
            RG23D."Document No." := DocNo;
            RG23D."Item No." := "No.";
            RG23D."Line No." := "Line No.";
            RG23D."Transaction Type" := TransType;
            RG23D.Type := EntryType;
            RG23D."Location Code" := "Location Code";
            RG23D."Source Type" := SourceType;
            RG23D."Source Code" := SourceCode;
            RG23D.Quantity := RG23DSplitingbuffer.Quantity;
            RG23D."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
            RG23D."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
            RG23D."Excise Base Amt Per Unit" := -1 * RG23D2."Excise Base Amt Per Unit";
            RG23D.Amount := RG23D2."Excise Amt Per Unit" * RG23DSplitingbuffer.Quantity;
            RG23D."Excise Amt Per Unit" := -1 * RG23D2."Excise Amt Per Unit";
            Item.GET("No.");
            RG23D."Unit of Measure" := Item."Base Unit of Measure";
            RG23D."BED Amount Per Unit" := -1 * RG23D2."BED Amount Per Unit";
            RG23D."eCess Amount Per Unit" := -1 * RG23D2."eCess Amount Per Unit";
            RG23D."SHE Cess Amount Per Unit" := -1 * RG23D2."SHE Cess Amount Per Unit";
            RG23D."AED(GSI) Amount Per Unit" := -1 * RG23D2."AED(GSI) Amount Per Unit";
            RG23D."SED Amount Per Unit" := -1 * RG23D2."SED Amount Per Unit";
            RG23D."SAED Amount Per Unit" := -1 * RG23D2."SAED Amount Per Unit";
            RG23D."CESS Amount Per Unit" := -1 * RG23D2."CESS Amount Per Unit";
            RG23D."NCCD Amount Per Unit" := -1 * RG23D2."NCCD Amount Per Unit";
            RG23D."ADET Amount Per Unit" := -1 * RG23D2."ADET Amount Per Unit";
            RG23D."AED(TTA) Amount Per Unit" := -1 * RG23D2."AED(TTA) Amount Per Unit";
            RG23D."ADE Amount Per Unit" := -1 * RG23D2."ADE Amount Per Unit";
            RG23D."ADC VAT Amount Per Unit" := -1 * RG23D2."ADC VAT Amount Per Unit";
            RG23D.CVD := RG23D2.CVD;
            RG23D."Line Amount Per Unit" := -1 * RG23D2."Line Amount Per Unit";
            RG23D.Year := DATE2DMY(RG23D."Posting Date",3);
            RG23D.Month := DATE2DMY(RG23D."Posting Date",2);
            RG23D."Ref. Entry No." := RG23DSplitingbuffer."RG 23 D Entry No.";
            RG23D."Order No." := "Document No.";
            RG23D."Detail RG 23 D Entry No." := RG23DSplitingbuffer."Detail RG 23 D Entry No.";
            IF Location.GET("Location Code") THEN
              RG23D."E.C.C. No." := Location."E.C.C. No."
            ELSE BEGIN
              CompanyInformation.GET;
              RG23D."E.C.C. No." := CompanyInformation."E.C.C. No."
            END;
            RG23D."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
            RG23D."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
            RG23D."Dimension Set ID" := "Dimension Set ID";
            RG23D."Vendor Invoice No." := PurchHeader."Vendor Cr. Memo No.";
            RG23D."Gen. Bus. Posting Group" := "Gen. Bus. Posting Group";
            RG23D."Gen. Prod. Posting Group" := "Gen. Prod. Posting Group";
            VENDor.GET("Buy-from Vendor No.");
            RG23D."Vendor Type" := VENDor."Vendor Type";
            RG23D.Closed := TRUE;
            GetRGEntryNo(RG23D."Posting Date",4,RG23D."E.C.C. No.",RG23D."Document No.",RG23D."RG Entry No.");
            RG23D.INSERT(TRUE);
          UNTIL RG23DSplitingbuffer.NEXT = 0;
        RG23DSplitingbuffer.DELETEALL;
      END;
    END;

    PROCEDURE InitRG23DSalesReturn@1500009(SalesLine@1500000 : Record 37;TransType@1500004 : ' ,Purchase,Sale';EntryType@1500005 : ' ,Transfer,Invoice,Return';SourceType@1500006 : ' ,Customer,VENDor,Item';SourceCode@1500007 : Code[20];DocNo@1500008 : Code[20];DocType@1500010 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order');
    VAR
      RG23D@1500001 : Record 16537;
      RG23D2@1500009 : Record 16537;
      SalesHeader@1500003 : Record 36;
      SalesCrMemoHeader@1500011 : Record 114;
      RG23DSplitingbuffer@1500211 : Record 16531;
    BEGIN
      WITH SalesLine DO BEGIN
        SalesHeader.GET("Document Type","Document No.");
        IF (NOT SalesHeader.Trading) OR ("Qty. to Invoice" = 0) THEN
          EXIT;
        IF ("Excise Accounting Type" = "Excise Accounting Type"::"Without CENVAT") OR (Type <> Type::Item) THEN
          EXIT;
        RG23DSplitingbuffer.RESET;
        RG23DSplitingbuffer.SETRANGE("Document Type","Document Type");
        RG23DSplitingbuffer.SETRANGE("Document No.","Document No.");
        RG23DSplitingbuffer.SETRANGE("Line No.","Line No.");
        IF RG23DSplitingbuffer.FINDSET THEN
          REPEAT
            RG23D2.GET(RG23DSplitingbuffer."RG 23 D Entry No.");
            RG23D2.Closed := FALSE;
            RG23D2.MODIFY(TRUE);
            RG23D.INIT;
            RG23D."Entry No." := GetRG23DEntryNo;
            RG23D."Posting Date" := SalesHeader."Posting Date";
            RG23D."Document Type" := DocType;
            RG23D."Document No." := DocNo;
            RG23D."Item No." := "No.";
            RG23D."Line No." := "Line No.";
            RG23D."Transaction Type" := TransType;
            RG23D.Type := EntryType;
            RG23D."Location Code" := "Location Code";
            RG23D."Source Type" := SourceType;
            RG23D."Source Code" := SourceCode;
            RG23D.Quantity := RG23DSplitingbuffer.Quantity;
            RG23D.Amount := RG23D2."Excise Amt Per Unit" * RG23DSplitingbuffer.Quantity;
            RG23D."Excise Base Amt Per Unit" := RG23D2."Excise Base Amt Per Unit";
            RG23D."Excise Amt Per Unit" := RG23D2."Excise Amt Per Unit";
            Item.GET("No.");
            RG23D."Unit of Measure" := Item."Base Unit of Measure";
            RG23D."BED Amount Per Unit" := RG23D2."BED Amount Per Unit";
            RG23D."eCess Amount Per Unit" := RG23D2."eCess Amount Per Unit";
            RG23D."SHE Cess Amount Per Unit" := RG23D2."SHE Cess Amount Per Unit";
            RG23D."AED(GSI) Amount Per Unit" := RG23D2."AED(GSI) Amount Per Unit";
            RG23D."SED Amount Per Unit" := RG23D2."SED Amount Per Unit";
            RG23D."SAED Amount Per Unit" := RG23D2."SAED Amount Per Unit";
            RG23D."CESS Amount Per Unit" := RG23D2."CESS Amount Per Unit";
            RG23D."NCCD Amount Per Unit" := RG23D2."NCCD Amount Per Unit";
            RG23D."ADET Amount Per Unit" := RG23D2."ADET Amount Per Unit";
            RG23D."AED(TTA) Amount Per Unit" := RG23D2."AED(TTA) Amount Per Unit";
            RG23D."ADE Amount Per Unit" := RG23D2."ADE Amount Per Unit";
            RG23D."ADC VAT Amount Per Unit" := RG23D2."ADC VAT Amount Per Unit";
            RG23D.CVD := RG23D2.CVD;
            RG23D."Line Amount Per Unit" := RG23D2."Line Amount Per Unit";
            RG23D.Year := DATE2DMY(RG23D."Posting Date",3);
            RG23D.Month := DATE2DMY(RG23D."Posting Date",2);
            RG23D."Ref. Entry No." := RG23DSplitingbuffer."RG 23 D Entry No.";
            RG23D."Order No." := "Document No.";
            RG23D."Detail RG 23 D Entry No." := RG23DSplitingbuffer."Detail RG 23 D Entry No.";
            IF Location.GET("Location Code") THEN
              RG23D."E.C.C. No." := Location."E.C.C. No."
            ELSE BEGIN
              CompanyInformation.GET;
              RG23D."E.C.C. No." := CompanyInformation."E.C.C. No."
            END;
            RG23D."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
            RG23D."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
            RG23D."Dimension Set ID" := "Dimension Set ID";
            SalesHeader.TESTFIELD("External Document No.");
            SalesCrMemoHeader.RESET;
            SalesCrMemoHeader.SETRANGE("External Document No.",SalesHeader."External Document No.");
            IF SalesCrMemoHeader.COUNT > 1 THEN
              ERROR(Text16501,SalesHeader."External Document No.");
            RG23D."Vendor Invoice No." := SalesHeader."External Document No.";
            RG23D."Gen. Bus. Posting Group" := "Gen. Bus. Posting Group";
            RG23D."Gen. Prod. Posting Group" := "Gen. Prod. Posting Group";
            RG23D."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
            RG23D."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
            GetRGEntryNo(RG23D."Posting Date",4,RG23D."E.C.C. No.",RG23D."Document No.",RG23D."RG Entry No.");
            RG23D.INSERT(TRUE);
          UNTIL RG23DSplitingbuffer.NEXT = 0;
        RG23DSplitingbuffer.DELETE;
      END;
    END;

    PROCEDURE GetRG23DEntryNo@1500005() : Integer;
    VAR
      RG23D@1500000 : Record 16537;
    BEGIN
      RG23D.RESET;
      IF RG23D.FINDLAST THEN
        EXIT(RG23D."Entry No." + 1);

      EXIT(1);
    END;

    PROCEDURE GetDetailRG23DEntryNo@1500004() : Integer;
    VAR
      DetailRG23D@1500000 : Record 16533;
    BEGIN
      DetailRG23D.RESET;
      IF DetailRG23D.FINDLAST THEN
        EXIT(DetailRG23D."Entry No." + 1);

      EXIT(1);
    END;

    PROCEDURE AdjustCrEntriesRG23A@1500010(RG23APartII2@1500000 : Record 13720);
    VAR
      RG23APartII3@1500002 : Record 13720;
      RG23APartII4@1500001 : Record 13720;
      ExciseAsSTUtilisation@1500003 : Record 16573;
      ExciseAsSTUtilisation2@1500004 : Record 16573;
      NextEntryNo@1500005 : Integer;
    BEGIN
      WITH RG23APartII2 DO BEGIN
        RG23APartII3.RESET;
        RG23APartII3.SETCURRENTKEY("Excise as Service Tax Credit",Closed,"Location E.C.C. No.");
        IF "Excise Credit Availed as ST" THEN BEGIN
          RG23APartII3.SETRANGE("Excise as Service Tax Credit",TRUE);
          NextEntryNo := 0;
          ExciseAsSTUtilisation2.RESET;
          IF ExciseAsSTUtilisation2.FINDLAST THEN
            NextEntryNo := ExciseAsSTUtilisation2."Entry No.";
        END;

        RG23APartII3.SETRANGE(Closed,FALSE);
        RG23APartII3.SETRANGE("Location E.C.C. No.","Location E.C.C. No.");
        IF RGSetOFfDate <> 0D THEN
          RG23APartII3.SETRANGE("Posting Date",0D,RGSetOFfDate);

        IF RG23APartII3.FINDSET THEN
          REPEAT
            RG23APartII4 := RG23APartII3;
            CompareAmt(RG23APartII4."Remaining BED Credit","BED Debit",RG23APartII4."Remaining Excise Amount");
            CompareAmt(RG23APartII4."Remaining AED(GSI) Credit","AED(GSI) Debit",RG23APartII4."Remaining Excise Amount");
            CompareAmt(RG23APartII4."Remaining SED Credit","SED Debit",RG23APartII4."Remaining Excise Amount");
            CompareAmt(RG23APartII4."Remaining SAED Credit","SAED Debit",RG23APartII4."Remaining Excise Amount");
            CompareAmt(RG23APartII4."Remaining NCCD Credit","NCCD Debit",RG23APartII4."Remaining Excise Amount");
            CompareAmt(RG23APartII4."Remaining eCess Credit","eCess Debit",RG23APartII4."Remaining Excise Amount");
            CompareAmt(RG23APartII4."Remaining SHECess Credit","SHE Cess Debit",RG23APartII4."Remaining Excise Amount");
            CompareAmt(RG23APartII4."Remaining ADET Credit","ADET Debit",RG23APartII4."Remaining Excise Amount");
            CompareAmt(RG23APartII4."Remaining AED(TTA) Credit","AED(TTA) Debit",RG23APartII4."Remaining Excise Amount");
            CompareAmt(RG23APartII4."Remaining ADE Credit","ADE Debit",RG23APartII4."Remaining Excise Amount");
            CompareAmt(RG23APartII4."Remaining ADC VAT Credit","ADC VAT Debit",RG23APartII4."Remaining Excise Amount");
            RG23APartII4.Closed := (RG23APartII4."Remaining Excise Amount" = 0);

            IF "Excise Credit Availed as ST" THEN BEGIN
              NextEntryNo := NextEntryNo + 1;
              ExciseAsSTUtilisation.INIT;
              ExciseAsSTUtilisation."Entry No." := NextEntryNo;
              ExciseAsSTUtilisation."Posting Date" := "Posting Date";
              ExciseAsSTUtilisation."Ref. Debit Entry No." := "Entry No.";
              ExciseAsSTUtilisation."Ref. Credit Entry No." := RG23APartII4."Entry No.";
              ExciseAsSTUtilisation."RG Record Type" := ExciseAsSTUtilisation."RG Record Type"::RG23A;
              ExciseAsSTUtilisation."ECC No." := "Location E.C.C. No.";
              ExciseAsSTUtilisation."Bed Amount" := RG23APartII3."Remaining BED Credit" - RG23APartII4."Remaining BED Credit";
              ExciseAsSTUtilisation."AED(GSI) Amount" := RG23APartII3."Remaining AED(GSI) Credit" -
                RG23APartII4."Remaining AED(GSI) Credit";
              ExciseAsSTUtilisation."SED Amount" := RG23APartII3."Remaining SED Credit" - RG23APartII4."Remaining SED Credit";
              ExciseAsSTUtilisation."SAED Amount" := RG23APartII3."Remaining SAED Credit" - RG23APartII4."Remaining SAED Credit";
              ExciseAsSTUtilisation."NCCD Amount" := RG23APartII3."Remaining NCCD Credit" - RG23APartII4."Remaining NCCD Credit";
              ExciseAsSTUtilisation."eCess Amount" := RG23APartII3."Remaining eCess Credit" - RG23APartII4."Remaining eCess Credit";
              ExciseAsSTUtilisation."SHE Cess Amount" := RG23APartII3."Remaining SHECess Credit" -
                RG23APartII4."Remaining SHECess Credit";
              ExciseAsSTUtilisation."ADET Amount" := RG23APartII3."Remaining ADET Credit" - RG23APartII4."Remaining ADET Credit";
              ExciseAsSTUtilisation."AED(TTA) Amount" := RG23APartII3."Remaining AED(TTA) Credit" -
                RG23APartII4."Remaining AED(TTA) Credit";
              ExciseAsSTUtilisation."ADE Amount" := RG23APartII3."Remaining ADE Credit" - RG23APartII4."Remaining ADE Credit";
              ExciseAsSTUtilisation."ADC VAT Amount" :=
                RG23APartII3."Remaining ADC VAT Credit" - RG23APartII4."Remaining ADC VAT Credit";
              ExciseAsSTUtilisation."Vendor Type" := RG23APartII4."Vendor Type";
              ExciseAsSTUtilisation."Type of Unit" := RG23APartII4."Type of Unit";
              ExciseAsSTUtilisation.CVD := RG23APartII4.CVD;
              ExciseAsSTUtilisation."Document No." := RG23APartII."Document No.";
              ExciseAsSTUtilisation.INSERT;
            END;

            RG23APartII4.MODIFY;
          UNTIL RG23APartII3.NEXT = 0;
      END;
    END;

    PROCEDURE AdjustCrEntriesRG23C@1500012(RG23CPartII2@1500000 : Record 13722);
    VAR
      RG23CPartII3@1500002 : Record 13722;
      RG23CPartII4@1500001 : Record 13722;
      ExciseAsSTUtilisation@1500005 : Record 16573;
      ExciseAsSTUtilisation2@1500004 : Record 16573;
      NextEntryNo@1500003 : Integer;
    BEGIN
      WITH RG23CPartII2 DO BEGIN
        RG23CPartII3.RESET;
        RG23CPartII3.SETCURRENTKEY("Excise as Service Tax Credit",Closed,"Location E.C.C. No.");
        IF "Excise Credit Availed as ST" THEN BEGIN
          RG23CPartII3.SETRANGE("Excise as Service Tax Credit",TRUE);
          NextEntryNo := 0;
          ExciseAsSTUtilisation2.RESET;
          IF ExciseAsSTUtilisation2.FINDLAST THEN
            NextEntryNo := ExciseAsSTUtilisation2."Entry No.";
        END;
        RG23CPartII3.SETRANGE(Closed,FALSE);
        RG23CPartII3.SETRANGE("Location E.C.C. No.","Location E.C.C. No.");
        IF RGSetOFfDate <> 0D THEN
          RG23CPartII3.SETRANGE("Posting Date",0D,RGSetOFfDate);
        IF RG23CPartII3.FINDSET THEN
          REPEAT
            RG23CPartII4 := RG23CPartII3;
            CompareAmt(RG23CPartII4."Remaining BED Credit","BED Debit",RG23CPartII4."Remaining Excise Amount");
            CompareAmt(RG23CPartII4."Remaining AED(GSI) Credit","AED(GSI) Debit",RG23CPartII4."Remaining Excise Amount");
            CompareAmt(RG23CPartII4."Remaining SED Credit","SED Debit",RG23CPartII4."Remaining Excise Amount");
            CompareAmt(RG23CPartII4."Remaining SAED Credit","SAED Debit",RG23CPartII4."Remaining Excise Amount");
            CompareAmt(RG23CPartII4."Remaining NCCD Credit","NCCD Debit",RG23CPartII4."Remaining Excise Amount");
            CompareAmt(RG23CPartII4."Remaining eCess Credit","eCess Debit",RG23CPartII4."Remaining Excise Amount");
            CompareAmt(RG23CPartII4."Remaining SHECess Credit","SHE Cess Debit",RG23CPartII4."Remaining Excise Amount");
            CompareAmt(RG23CPartII4."Remaining ADET Credit","ADET Debit",RG23CPartII4."Remaining Excise Amount");
            CompareAmt(RG23CPartII4."Remaining AED(TTA) Credit","AED(TTA) Debit",RG23CPartII4."Remaining Excise Amount");
            CompareAmt(RG23CPartII4."Remaining ADE Credit","ADE Debit",RG23CPartII4."Remaining Excise Amount");
            CompareAmt(RG23CPartII4."Remaining ADC VAT Credit","ADC VAT Debit",RG23CPartII4."Remaining Excise Amount");
            RG23CPartII4.Closed := RG23CPartII4."Remaining Excise Amount" = 0;

            IF "Excise Credit Availed as ST" THEN BEGIN
              NextEntryNo := NextEntryNo + 1;
              ExciseAsSTUtilisation.INIT;
              ExciseAsSTUtilisation."Entry No." := NextEntryNo;
              ExciseAsSTUtilisation."Posting Date" := "Posting Date";
              ExciseAsSTUtilisation."Ref. Debit Entry No." := "Entry No.";
              ExciseAsSTUtilisation."Ref. Credit Entry No." := RG23CPartII4."Entry No.";
              ExciseAsSTUtilisation."RG Record Type" := ExciseAsSTUtilisation."RG Record Type"::RG23C;
              ExciseAsSTUtilisation."ECC No." := "Location E.C.C. No.";
              ExciseAsSTUtilisation."Bed Amount" := RG23CPartII3."Remaining BED Credit" - RG23CPartII4."Remaining BED Credit";
              ExciseAsSTUtilisation."AED(GSI) Amount" := RG23CPartII3."Remaining AED(GSI) Credit" -
                RG23CPartII4."Remaining AED(GSI) Credit";
              ExciseAsSTUtilisation."SED Amount" := RG23CPartII3."Remaining SED Credit" - RG23CPartII4."Remaining SED Credit";
              ExciseAsSTUtilisation."SAED Amount" := RG23CPartII3."Remaining SAED Credit" - RG23CPartII4."Remaining SAED Credit";
              ExciseAsSTUtilisation."NCCD Amount" := RG23CPartII3."Remaining NCCD Credit" - RG23CPartII4."Remaining NCCD Credit";
              ExciseAsSTUtilisation."eCess Amount" := RG23CPartII3."Remaining eCess Credit" - RG23CPartII4."Remaining eCess Credit";
              ExciseAsSTUtilisation."SHE Cess Amount" := RG23CPartII3."Remaining SHECess Credit" -
                RG23CPartII4."Remaining SHECess Credit";
              ExciseAsSTUtilisation."ADET Amount" := RG23CPartII3."Remaining ADET Credit" - RG23CPartII4."Remaining ADET Credit";
              ExciseAsSTUtilisation."AED(TTA) Amount" := RG23CPartII3."Remaining AED(TTA) Credit" -
                RG23CPartII4."Remaining AED(TTA) Credit";
              ExciseAsSTUtilisation."ADE Amount" := RG23CPartII3."Remaining ADE Credit" - RG23CPartII4."Remaining ADE Credit";
              ExciseAsSTUtilisation."ADC VAT Amount" := RG23CPartII3."Remaining ADC VAT Credit" - RG23CPartII4.
                "Remaining ADC VAT Credit";
              ExciseAsSTUtilisation."Vendor Type" := RG23CPartII4."Vendor Type";
              ExciseAsSTUtilisation."Type of Unit" := RG23CPartII4."Type of Unit";
              ExciseAsSTUtilisation.CVD := RG23CPartII4.CVD;
              ExciseAsSTUtilisation."Document No." := RG23CPartII4."Document No.";
              ExciseAsSTUtilisation.INSERT;
            END;

            RG23CPartII4.MODIFY;
          UNTIL RG23CPartII3.NEXT = 0;
      END;
    END;

    PROCEDURE CompareAmt@1500011(VAR AmountTo@1500002 : Decimal;VAR AmountWith@1500001 : Decimal;VAR RemainingAmt@1500000 : Decimal);
    BEGIN
      IF AmountWith = 0 THEN
        EXIT;
      IF AmountTo <= AmountWith THEN BEGIN
        RemainingAmt -= AmountTo;
        AmountWith -= AmountTo;
        AmountTo := 0;
      END ELSE BEGIN
        RemainingAmt -= AmountWith;
        AmountTo -= AmountWith;
        AmountWith := 0;
      END;
    END;

    PROCEDURE InsertRG23APartIItemJnlLine@1500013(ItemJnlLine@1280000 : Record 83);
    VAR
      NextRGEntryNo@1280003 : Integer;
      RG23APartIRec@1280004 : Record 13719;
    BEGIN
      WITH ItemJnlLine DO BEGIN
        RG23APartI.RESET;
        RG23APartI.LOCKTABLE;
        IF RG23APartI.FINDLAST THEN
          NextRGEntryNo := RG23APartI."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23APartI.INIT;
        RG23APartI."Entry No." := NextRGEntryNo;
        RG23APartI."Item No." := "Item No.";
        RG23APartI.Description := Description;
        RG23APartI."Base Unit Of Measure" := "Unit of Measure Code";
        RG23APartI."Line No." := "Line No.";
        RG23APartI."Posting Date" := "Posting Date";
        RG23APartI."Document No." := "Document No.";
        IF "Entry Type" IN ["Entry Type"::"Positive Adjmt.","Entry Type"::Purchase] THEN BEGIN
          RG23APartI."Quantity Received" := "Quantity (Base)";
          RG23APartI.Quantity := RG23APartI."Quantity Received";
          RG23APartI."Quantity Sold" := 0;
          RG23APartI.Type := RG23APartI.Type::Purchase;
        END ELSE BEGIN
          RG23APartI."Quantity Received" := 0;
          RG23APartI."Quantity Sold" := "Quantity (Base)";
          RG23APartI.Quantity := -"Quantity (Base)";
          RG23APartI.Type := RG23APartI.Type::Sale;
        END;
        RG23APartI."Quantity Consumed" := 0;

        RG23APartI."Location Code" := "Location Code";
        IF "Location Code" <> '' THEN BEGIN
          Location.GET("Location Code");
          RG23APartI."Location E.C.C. No." := Location."E.C.C. No."
        END ELSE BEGIN
          CompanyInformation.GET;
          RG23APartI."Location E.C.C. No." := CompanyInformation."E.C.C. No.";
        END;
        RG23APartI.TESTFIELD("Location E.C.C. No.");

        RG23APartIRec.RESET;
        RG23APartIRec.SETCURRENTKEY("Location E.C.C. No.","Item No.");
        RG23APartIRec.SETRANGE("Location E.C.C. No.",RG23APartI."Location E.C.C. No.");
        RG23APartIRec.SETRANGE("Item No.","Item No.");
        RG23APartIRec.CALCSUMS(Quantity);
        RG23APartI."Opening Stock" := RG23APartIRec.Quantity;
        RG23APartI."Closing Stock" := RG23APartIRec.Quantity + RG23APartI.Quantity;
        GetRGEntryNo(RG23APartI."Posting Date",0,RG23APartI."Location E.C.C. No.",RG23APartI."Document No.",RG23APartI."RG Entry No.");
        RG23APartI.INSERT;
      END
    END;

    PROCEDURE InsertRG23CPartIItemJnlLine@1500014(ItemJnlLine@1280000 : Record 83);
    VAR
      RG23CPartIRec@1280006 : Record 13721;
      NextRGEntryNo@1280004 : Integer;
    BEGIN
      WITH ItemJnlLine DO BEGIN
        RG23CPartI.LOCKTABLE;
        IF RG23CPartI.FINDLAST THEN
          NextRGEntryNo := RG23CPartI."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23CPartI.INIT;
        RG23CPartI."Entry No." := NextRGEntryNo;
        CASE "Entry Type" OF
          "Entry Type"::Purchase,"Entry Type"::"Positive Adjmt.":
            RG23CPartI.Type := RG23CPartI.Type::Purchase;
          "Entry Type"::Sale,"Entry Type"::"Negative Adjmt.":
            RG23CPartI.Type := RG23CPartI.Type::Sale;
        END;
        RG23CPartI."Product Type" := RG23CPartI."Product Type"::Item;
        RG23CPartI."FA No./ Item No." := "Item No.";
        RG23CPartI.Description := Description;
        RG23CPartI."Line No." := "Line No.";
        RG23CPartI."Posting Date" := "Posting Date";
        RG23CPartI."Document No." := "Document No.";
        RG23CPartI."Order No." := '';
        IF "Entry Type" IN ["Entry Type"::"Positive Adjmt.","Entry Type"::Purchase] THEN BEGIN
          RG23CPartI."Quantity Received" := "Quantity (Base)";
          RG23CPartI."Quantity Sold" := 0;
          RG23CPartI.Quantity := RG23CPartI."Quantity Received";
        END ELSE BEGIN
          RG23CPartI."Quantity Received" := 0;
          RG23CPartI."Quantity Sold" := "Quantity (Base)";
          RG23CPartI.Quantity := -"Quantity (Base)";
        END;
        RG23CPartI."Quantity Consumed" := 0;

        RG23CPartI."Location Code" := "Location Code";
        IF "Location Code" <> '' THEN BEGIN
          Location.GET("Location Code");
          RG23CPartI."Location E.C.C. No." := Location."E.C.C. No."
        END ELSE BEGIN
          CompanyInformation.GET;
          RG23CPartI."Location E.C.C. No." := CompanyInformation."E.C.C. No.";
        END;
        RG23CPartIRec.RESET;
        RG23CPartIRec.SETCURRENTKEY("Location E.C.C. No.","FA No./ Item No.");
        RG23CPartIRec.SETRANGE("Location E.C.C. No.",RG23CPartI."Location E.C.C. No.");
        RG23CPartIRec.SETRANGE("FA No./ Item No.","Item No.");
        RG23CPartIRec.CALCSUMS(Quantity);
        RG23CPartI."Opening Stock" := RG23CPartIRec.Quantity;
        RG23CPartI."Closing Stock" := RG23CPartIRec.Quantity + RG23CPartI.Quantity;
        GetRGEntryNo(RG23CPartI."Posting Date",2,RG23CPartI."Location E.C.C. No.",RG23CPartI."Document No.",RG23CPartI."RG Entry No.");
        RG23CPartI.INSERT;
      END;
    END;

    PROCEDURE InsertRG23CPartIFAJnlLine@1500015(FAJnlLine@1280000 : Record 5621);
    VAR
      RG23CPartIRec@1280006 : Record 13721;
      NextRGEntryNo@1280004 : Integer;
    BEGIN
      WITH FAJnlLine DO BEGIN
        RG23CPartI.LOCKTABLE;
        IF RG23CPartI.FINDLAST THEN
          NextRGEntryNo := RG23CPartI."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23CPartI.INIT;
        RG23CPartI."Entry No." := NextRGEntryNo;
        RG23CPartI."Product Type" := RG23CPartI."Product Type"::FA;
        RG23CPartI."FA No./ Item No." := "FA No.";
        RG23CPartI.Description := Description;
        RG23CPartI."Line No." := "Line No.";
        RG23CPartI."Posting Date" := "Posting Date";
        RG23CPartI."Document No." := "Document No.";
        RG23CPartI."Order No." := '';
        IF "FA Posting Type" = "FA Posting Type"::"Acquisition Cost" THEN BEGIN
          RG23CPartI.Type := RG23CPartI.Type::Purchase;
          RG23CPartI."Quantity Sold" := 0;
          IF Quantity > 0 THEN
            RG23CPartI."Quantity Received" := Quantity
          ELSE
            RG23CPartI."Quantity Received" := 1;

          RG23CPartI.Quantity := RG23CPartI."Quantity Received";
        END;
        IF "FA Posting Type" = "FA Posting Type"::Disposal THEN BEGIN
          RG23CPartI."Quantity Received" := 0;
          IF Quantity > 0 THEN
            RG23CPartI."Quantity Sold" := Quantity
          ELSE
            RG23CPartI."Quantity Sold" := 1;

          RG23CPartI.Quantity := -RG23CPartI."Quantity Sold";
          RG23CPartI.Type := RG23APartI.Type::Sale;
        END;
        RG23CPartI."Quantity Consumed" := 0;
        RG23CPartI."Location Code" := "Location Code";
        IF "Location Code" <> '' THEN BEGIN
          Location.GET("Location Code");
          RG23CPartI."Location E.C.C. No." := Location."E.C.C. No."
        END ELSE BEGIN
          CompanyInformation.GET;
          RG23CPartI."Location E.C.C. No." := CompanyInformation."E.C.C. No.";
        END;
        RG23CPartIRec.RESET;
        RG23CPartIRec.SETCURRENTKEY("Location E.C.C. No.","FA No./ Item No.");
        RG23CPartIRec.SETRANGE("Location E.C.C. No.",RG23CPartI."Location E.C.C. No.");
        RG23CPartIRec.SETRANGE("FA No./ Item No.","FA No.");
        RG23CPartIRec.CALCSUMS(Quantity);
        RG23CPartI."Opening Stock" := RG23CPartIRec.Quantity;
        RG23CPartI."Closing Stock" := RG23CPartIRec.Quantity + RG23CPartI.Quantity;
        GetRGEntryNo(RG23CPartI."Posting Date",2,RG23CPartI."Location E.C.C. No.",RG23CPartI."Document No.",RG23CPartI."RG Entry No.");
        RG23CPartI.INSERT;
      END;
    END;

    PROCEDURE InsertER2Sale@1500020(SalesLine@1280000 : Record 37;SalesInvHeader@1280001 : Record 112;ReturnRcptHeader@1000 : Record 6660);
    VAR
      ER2@1500000 : Record 16564;
      NextER2EntryNo@1280006 : Integer;
      ER2Rec@1500001 : Record 16564;
      SalesCrMemoHeader@1500002 : Record 114;
    BEGIN
      WITH SalesLine DO BEGIN
        ER2.RESET;
        ER2.LOCKTABLE;
        IF ER2.FINDLAST THEN
          NextER2EntryNo := ER2."Entry No." + 1
        ELSE
          NextER2EntryNo := 1;
        ER2.INIT;
        ER2."Entry No." := NextER2EntryNo;
        ER2."Item No." := "No.";
        ER2.Type := ER2.Type::Sale;
        ER2."Product Description" := Description;
        ER2."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        ER2."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
        ER2."Location Code" := "Location Code";
        IF "Location Code" <> '' THEN BEGIN
          Location.GET("Location Code");
          ER2."E.C.C No." := Location."E.C.C. No."
        END ELSE BEGIN
          CompanyInformation.GET;
          ER2."E.C.C No." := CompanyInformation."E.C.C. No.";
        END;
        ER2.TESTFIELD("E.C.C No.");
        ER2.Unit := "Unit of Measure Code";
        IF "Qty. to Ship (Base)" <> 0 THEN BEGIN
          ER2."Order No." := SalesInvHeader."No.";
          ER2."Posting Date" := SalesInvHeader."Posting Date";
          IF NOT (Type IN [Type::"G/L Account",Type::"Charge (Item)"]) THEN BEGIN
            IF "Amount Including Excise" - "Excise Base Amount" <> 0 THEN
              ER2."Quantity Removed(with duty)" := -"Qty. to Ship (Base)"
            ELSE
              ER2."Quantity Removed(without duty)" := -"Qty. to Ship (Base)";
          END;
        END ELSE BEGIN
          SalesCrMemoHeader.SETCURRENTKEY("Return Order No.");
          SalesCrMemoHeader.SETFILTER("Return Order No.",ReturnRcptHeader."Return Order No.");
          IF SalesCrMemoHeader.FINDFIRST THEN
            ER2."Order No." := SalesCrMemoHeader."No.";

          ER2."Posting Date" := ReturnRcptHeader."Posting Date";
          IF NOT (Type IN [Type::"G/L Account",Type::"Charge (Item)"]) THEN BEGIN
            IF "Amount Including Excise" - "Excise Base Amount" <> 0 THEN
              ER2."Quantity Removed(with duty)" := "Return Qty. to Receive (Base)"
            ELSE
              ER2."Quantity Removed(without duty)" := "Return Qty. to Receive (Base)";
            SalesCancellation := TRUE;
          END;
        END;

        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        ExcisePostingSetup.SETRANGE("From Date",0D,ER2."Posting Date");
        IF ExcisePostingSetup.FINDLAST THEN BEGIN
          ER2."Notification No." := ExcisePostingSetup."Notification No.";
          ER2."Notification Sl. No." := ExcisePostingSetup."Notification Sl. No.";
          ER2."CTSH No." := ExcisePostingSetup."CTSH No.";
        END;

        ER2."BED %" := ExcisePostingSetup."BED %";
        ER2."AED(GSI) % / Amount" := ExcisePostingSetup."AED(GSI) %";
        ER2."AED (TTA) % / Amount" := ExcisePostingSetup."AED(TTA) %";
        ER2."SED % / Amount" := ExcisePostingSetup."SED %";
        ER2."SAED % / Amount" := ExcisePostingSetup."SAED %";
        ER2."CESS % / Amount" := ExcisePostingSetup."CESS %";
        ER2."NCCD % / Amount" := ExcisePostingSetup."NCCD %";
        ER2."eCess % / Amount" := ExcisePostingSetup."eCess %";
        ER2."ADET % / Amount" := ExcisePostingSetup."ADET %";
        ER2."ADE % / Amount" := ExcisePostingSetup."ADE %";
        ER2."ADC VAT % / Amount" := ExcisePostingSetup."ADC VAT %";
        ER2."SHE Cess % / Amount" := ExcisePostingSetup."SHE Cess %";
        IF SalesCancellation THEN BEGIN
          ER2."CENVAT Amount" := -"BED Amount";
          ER2."SED Amount" := -"SED Amount";
          ER2."AED (GSI) Amount" := -"AED(GSI) Amount";
          ER2."AED (TTA) Amount" := -"AED(TTA) Amount";
          ER2."SAED Amount" := -"SAED Amount";
          ER2."CESS Amount" := -"CESS Amount";
          ER2."NCCD Amount" := -"NCCD Amount";
          ER2."eCESS Amount" := -"eCess Amount";
          ER2."SHE Cess Amount" := -"SHE Cess Amount";
          ER2."ADET Amount" := -"ADET Amount";
          ER2."ADE Amount" := -"ADE Amount";
          ER2."Assessable Value" := -"Excise Base Amount";
        END ELSE BEGIN
          ER2."CENVAT Amount" := "BED Amount";
          ER2."SED Amount" := "SED Amount";
          ER2."AED (GSI) Amount" := "AED(GSI) Amount";
          ER2."AED (TTA) Amount" := "AED(TTA) Amount";
          ER2."SAED Amount" := "SAED Amount";
          ER2."CESS Amount" := "CESS Amount";
          ER2."NCCD Amount" := "NCCD Amount";
          ER2."eCESS Amount" := "eCess Amount";
          ER2."SHE Cess Amount" := "SHE Cess Amount";
          ER2."ADET Amount" := "ADET Amount";
          ER2."ADE Amount" := "ADE Amount";
          ER2."Assessable Value" := "Excise Base Amount";
        END;
        ER2."ADC VAT Amount" := "ADC VAT Amount";
        ER2."Quantity Removed" := ER2."Quantity Removed(with duty)" + ER2."Quantity Removed(without duty)";
        ER2."Quantity Manufactured" := 0;
        ER2."Quantity Received" := 0;
        ER2Rec.RESET;
        ER2Rec.SETRANGE("E.C.C No.",ER2."E.C.C No.");
        IF ER2Rec.FINDLAST THEN BEGIN
          ER2."Opening Balance" := ER2Rec."Closing Balance";
          ER2."Closing Balance" := ER2Rec."Closing Balance" + (ER2."Quantity Removed(with duty)" +
                                                               ER2."Quantity Removed(without duty)");
        END ELSE BEGIN
          ER2."Opening Balance" := 0;
          ER2."Closing Balance" := ER2."Quantity Removed";
        END;
        ER2."Assessable Value" := "Excise Base Amount";
        ER2."Rate of Duty %" := ExcisePostingSetup."BED %";
        ER2."Total Duty Payable" := "Amount Including Excise" - "Excise Base Amount";
        ER2.INSERT;
      END;
    END;

    PROCEDURE InsertER2Transfer@1500019(TransferLine@1280000 : Record 5741;TransferShptHeader@1280001 : Record 5744);
    VAR
      NextER2EntryNo@1280006 : Integer;
      ER2@1500000 : Record 16564;
      ER2Rec@1500001 : Record 16564;
    BEGIN
      WITH TransferLine DO BEGIN
        ER2.RESET;
        ER2.LOCKTABLE;
        IF ER2.FINDLAST THEN
          NextER2EntryNo := ER2."Entry No." + 1
        ELSE
          NextER2EntryNo := 1;
        ER2.INIT;
        ER2."Entry No." := NextER2EntryNo;
        ER2."Item No." := "Item No.";
        ER2.Type := ER2.Type::Transfer;
        ER2."Product Description" := Description;
        ER2."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        ER2."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
        ER2."Location Code" := "Transfer-from Code";
        IF "Transfer-from Code" <> '' THEN BEGIN
          Location.GET("Transfer-from Code");
          ER2."E.C.C No." := Location."E.C.C. No."
        END ELSE BEGIN
          CompanyInformation.GET;
          ER2."E.C.C No." := CompanyInformation."E.C.C. No.";
        END;
        ER2.TESTFIELD("E.C.C No.");
        ER2.Unit := "Unit of Measure Code";
        IF "Excise Amount" <> 0 THEN
          ER2."Quantity Removed(with duty)" := -"Qty. to Ship (Base)"
        ELSE
          ER2."Quantity Removed(without duty)" := -"Qty. to Ship (Base)";

        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        ExcisePostingSetup.SETRANGE("From Date",0D,ER2."Posting Date");
        IF ExcisePostingSetup.FINDLAST THEN BEGIN
          ER2."Notification No." := ExcisePostingSetup."Notification No.";
          ER2."Notification Sl. No." := ExcisePostingSetup."Notification Sl. No.";
          ER2."CTSH No." := ExcisePostingSetup."CTSH No.";
        END;

        ER2."BED %" := ExcisePostingSetup."BED %";
        ER2."AED(GSI) % / Amount" := ExcisePostingSetup."AED(GSI) %";
        ER2."AED (TTA) % / Amount" := ExcisePostingSetup."AED(TTA) %";
        ER2."SED % / Amount" := ExcisePostingSetup."SED %";
        ER2."SAED % / Amount" := ExcisePostingSetup."SAED %";
        ER2."CESS % / Amount" := ExcisePostingSetup."CESS %";
        ER2."NCCD % / Amount" := ExcisePostingSetup."NCCD %";
        ER2."eCess % / Amount" := ExcisePostingSetup."eCess %";
        ER2."SHE Cess % / Amount" := ExcisePostingSetup."SHE Cess %";
        ER2."ADET % / Amount" := ExcisePostingSetup."ADET %";
        ER2."ADE % / Amount" := ExcisePostingSetup."ADE %";
        ER2."ADC VAT % / Amount" := ExcisePostingSetup."ADC VAT %";
        ER2."CENVAT Amount" := "BED Amount";
        ER2."SED Amount" := "SED Amount";
        ER2."AED (GSI) Amount" := "AED(GSI) Amount";
        ER2."AED (TTA) Amount" := "AED(TTA) Amount";
        ER2."SAED Amount" := "SAED Amount";
        ER2."CESS Amount" := "CESS Amount";
        ER2."NCCD Amount" := "NCCD Amount";
        ER2."eCESS Amount" := "eCess Amount";
        ER2."ADET Amount" := "ADET Amount";
        ER2."ADE Amount" := "ADE Amount";
        ER2."ADC VAT Amount" := "ADC VAT Amount";
        ER2."SHE Cess Amount" := "SHE Cess Amount";
        ER2."Quantity Removed" := ER2."Quantity Removed(with duty)" + ER2."Quantity Removed(without duty)";
        ER2."Quantity Manufactured" := 0;
        ER2."Quantity Received" := 0;
        ER2Rec.RESET;
        ER2Rec.SETRANGE("E.C.C No.",ER2."E.C.C No.");
        IF ER2Rec.FINDLAST THEN BEGIN
          ER2."Opening Balance" := ER2Rec."Closing Balance";
          ER2."Closing Balance" := ER2Rec."Closing Balance" + (ER2."Quantity Removed(with duty)" +
                                                               ER2."Quantity Removed(without duty)");
        END ELSE BEGIN
          ER2."Opening Balance" := 0;
          ER2."Closing Balance" := ER2."Quantity Removed";
        END;
        ER2."Assessable Value" := "Excise Base Amount";
        ER2."Rate of Duty %" := ExcisePostingSetup."BED %";
        ER2."Total Duty Payable" := "Excise Amount";
        ER2."Order No." := TransferShptHeader."No.";
        ER2."Posting Date" := TransferShptHeader."Posting Date";
        ER2.INSERT;
      END;
    END;

    PROCEDURE UpdateER2ProdOutput@1500018(ItemJnlLine@1280001 : Record 83;Qty1@1280005 : Decimal);
    VAR
      Location@1280003 : Record 14;
      Item@1280004 : Record 27;
      NextRGEntryNo@1500001 : Integer;
      ER2@1500000 : Record 16564;
      ER2Rec@1500002 : Record 16564;
    BEGIN
      Item.GET(ItemJnlLine."Item No.");
      IF Item."Excise Prod. Posting Group" <> '' THEN BEGIN
        ER2.RESET;
        ER2.LOCKTABLE;
        IF ER2.FINDLAST THEN
          NextRGEntryNo := ER2."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;

        ER2.INIT;
        ER2."Entry No." := NextRGEntryNo;
        ER2."Location Code" := ItemJnlLine."Location Code";
        ER2.Type := ER2.Type::Output;
        IF ER2."Location Code" <> '' THEN BEGIN
          Location.GET(ER2."Location Code");
          ER2."E.C.C No." := Location."E.C.C. No."
        END ELSE BEGIN
          CompanyInformation.GET;
          ER2."E.C.C No." := CompanyInformation."E.C.C. No.";
        END;
        ER2.TESTFIELD("E.C.C No.");
        ER2."Item No." := ItemJnlLine."Item No.";
        ER2."Product Description" := Item.Description;
        ER2.Unit := ItemJnlLine."Unit of Measure Code";
        ER2."Quantity Manufactured" := Qty1;
        ER2."Posting Date" := ItemJnlLine."Posting Date";
        ER2."Excise Prod. Posting Group" := Item."Excise Prod. Posting Group";

        ER2."BED %" := ItemJnlLine."BED %";
        ER2Rec.RESET;
        ER2Rec.SETRANGE("E.C.C No.",ER2."E.C.C No.");
        IF ER2Rec.FINDLAST THEN BEGIN
          ER2."Opening Balance" := ER2Rec."Closing Balance";
          ER2."Closing Balance" := ER2Rec."Closing Balance" + ER2."Quantity Manufactured"
        END ELSE BEGIN
          ER2."Opening Balance" := 0;
          ER2."Closing Balance" := ER2."Quantity Manufactured";
        END;
        ER2.INSERT;
      END;
    END;

    PROCEDURE InsertInitDetailedPLAEntry@1500034(PLAEntry2@1500001 : Record 13723);
    VAR
      DetailedPLAEntry@1500000 : Record 16567;
    BEGIN
      DetailedPLAEntry.RESET;
      DetailedPLAEntry.SETRANGE("PLA Entry No.",PLAEntry."Entry No.");
      DetailedPLAEntry.SETRANGE("Entry Type",DetailedPLAEntry."Entry Type"::"Initial Entry");
      IF NOT DetailedPLAEntry.FINDFIRST THEN BEGIN
        DetailedPLAEntry.RESET;
        DetailedPLAEntry.LOCKTABLE;
        IF DetailedPLAEntry.FINDLAST THEN
          NextDetailedPLAEntryNo := DetailedPLAEntry."Entry No." + 1
        ELSE
          NextDetailedPLAEntryNo := 1;
        DetailedPLAEntry.INIT;
        DetailedPLAEntry."Entry No." := NextDetailedPLAEntryNo;
        DetailedPLAEntry."PLA Entry No." := NextPLAEntryNo;
        DetailedPLAEntry."Application Date" := PLAEntry2."Posting Date";
        DetailedPLAEntry."Entry Type" := DetailedPLAEntry."Entry Type"::"Initial Entry";
        DetailedPLAEntry."BED Amount" := PLAEntry."BED Debit";
        DetailedPLAEntry."AED(GSI) Amount" := PLAEntry."AED(GSI) Debit";
        DetailedPLAEntry."AED(TTA) Amount" := PLAEntry."AED(TTA) Debit";
        DetailedPLAEntry."SED Amount" := PLAEntry."SED Debit";
        DetailedPLAEntry."SAED Amount" := PLAEntry."SAED Debit";
        DetailedPLAEntry."Cess Amount" := PLAEntry."CESS Debit";
        DetailedPLAEntry."NCCD Amount" := PLAEntry."NCCD Debit";
        DetailedPLAEntry."eCess Amount" := PLAEntry."eCess Debit";
        DetailedPLAEntry."SHE Cess Amount" := PLAEntry."SHE Cess Debit";
        DetailedPLAEntry."ADET Amount" := PLAEntry."ADET Debit";
        DetailedPLAEntry."ADE Amount" := PLAEntry."ADE Debit";
        DetailedPLAEntry."Excise Amount" := PLAEntry."Excise Charges Debit";
        DetailedPLAEntry.INSERT;
      END;
    END;

    PROCEDURE InsertAdjustDetailedPLAEntry@1500017(PLAEntry2@1500001 : Record 13723);
    VAR
      DetailedPLAEntry2@1500000 : Record 16567;
      PLAEntry3@1500002 : Record 13723;
      IfInsert@1500003 : Boolean;
      BEDDebit@1500004 : Decimal;
      SEDDebit@1500005 : Decimal;
      SAEDDebit@1500006 : Decimal;
      NCCDDebit@1500007 : Decimal;
      ADEDebit@1500008 : Decimal;
      ADETDebit@1500009 : Decimal;
      "AED(GSI)Debit"@1500010 : Decimal;
      "AED(TTA)Debit"@1500011 : Decimal;
      CessDebit@1500012 : Decimal;
      eCessDebit@1500013 : Decimal;
      ExciseDebit@1500014 : Decimal;
      ApplyAmt@1500026 : Boolean;
      BEDAmtApplied@1000000000 : Decimal;
      SEDAmtApplied@1000000001 : Decimal;
      SAEDAmtApplied@1000000002 : Decimal;
      NCCDAmtApplied@1000000003 : Decimal;
      ADEAmtApplied@1000000004 : Decimal;
      ADETAmtApplied@1000000005 : Decimal;
      "AED(GSI)AmtApplied"@1000000006 : Decimal;
      "AED(TTA)AmtApplied"@1000000007 : Decimal;
      CessAmtApplied@1000000008 : Decimal;
      eCessAmtApplied@1000000009 : Decimal;
      ExciseAmtApplied@1000000010 : Decimal;
      DetailedPLAEntry3@1000000011 : Record 16567;
      SHECessDebit@1500027 : Decimal;
      SHECessAmtApplied@1500028 : Decimal;
    BEGIN
      BEDDebit := PLAEntry2."BED Debit";
      SEDDebit := PLAEntry2."SED Debit";
      SAEDDebit := PLAEntry2."SAED Debit";
      NCCDDebit := PLAEntry2."NCCD Debit";
      ADEDebit := PLAEntry2."ADE Debit";
      ADETDebit := PLAEntry2."ADET Debit";
      "AED(GSI)Debit" := PLAEntry2."AED(GSI) Debit";
      "AED(TTA)Debit" := PLAEntry2."AED(TTA) Debit";
      CessDebit := PLAEntry2."CESS Debit";
      eCessDebit := PLAEntry2."eCess Debit";
      ExciseDebit := PLAEntry2."Excise Charges Debit";
      SHECessDebit := PLAEntry2."SHE Cess Debit";

      PLAEntry3.RESET;
      PLAEntry3.SETRANGE("Location E.C.C. No.",PLAEntry2."Location E.C.C. No.");
      PLAEntry3.SETFILTER("Total Remaining Excise Amount",'<>%1',0);
      IF PLAEntry3.FINDSET THEN
        REPEAT
          PLAEntry3.CALCFIELDS("Remaining BED","Remaining AED(GSI)","Remaining SED","Remaining SAED","Remaining NCCD",
            "Remaining Cess","Remaining ADET","Remaining AED(TTA)","Remaining ADE","Remaining Excise Charge","Remaining eCess",
            "Remaining SHE Cess");
          IfInsert := FALSE;
          IF (PLAEntry3."Remaining BED" <> 0) AND (BEDDebit <> 0) THEN BEGIN
            ComparePLAAmt(PLAEntry3."Remaining BED",BEDDebit,PLAEntry3."Total Remaining Excise Amount",ApplyAmt);
            IfInsert := TRUE;
          END;
          IF (PLAEntry3."Remaining AED(GSI)" <> 0) AND ("AED(GSI)Debit" <> 0) THEN BEGIN
            ComparePLAAmt(PLAEntry3."Remaining AED(GSI)","AED(GSI)Debit",PLAEntry3."Total Remaining Excise Amount",ApplyAmt);
            IfInsert := TRUE;
          END;
          IF (PLAEntry3."Remaining SED" <> 0) AND (SEDDebit <> 0) THEN BEGIN
            ComparePLAAmt(PLAEntry3."Remaining SED",SEDDebit,PLAEntry3."Total Remaining Excise Amount",ApplyAmt);
            IfInsert := TRUE;
          END;
          IF (PLAEntry3."Remaining SAED" <> 0) AND (SAEDDebit <> 0) THEN BEGIN
            ComparePLAAmt(PLAEntry3."Remaining SAED",SAEDDebit,PLAEntry3."Total Remaining Excise Amount",ApplyAmt);
            IfInsert := TRUE;
          END;
          IF (PLAEntry3."Remaining NCCD" <> 0) AND (NCCDDebit <> 0) THEN BEGIN
            ComparePLAAmt(PLAEntry3."Remaining NCCD",NCCDDebit,PLAEntry3."Total Remaining Excise Amount",ApplyAmt);
            IfInsert := TRUE;
          END;
          IF (PLAEntry3."Remaining Cess" <> 0) AND (CessDebit <> 0) THEN BEGIN
            ComparePLAAmt(PLAEntry3."Remaining Cess",CessDebit,PLAEntry3."Total Remaining Excise Amount",ApplyAmt);
            IfInsert := TRUE;
          END;
          IF (PLAEntry3."Remaining ADET" <> 0) AND (ADETDebit <> 0) THEN BEGIN
            ComparePLAAmt(PLAEntry3."Remaining ADET",ADETDebit,PLAEntry3."Total Remaining Excise Amount",ApplyAmt);
            IfInsert := TRUE;
          END;
          IF (PLAEntry3."Remaining AED(TTA)" <> 0) AND ("AED(TTA)Debit" <> 0) THEN BEGIN
            ComparePLAAmt(PLAEntry3."Remaining AED(TTA)","AED(TTA)Debit",PLAEntry3."Total Remaining Excise Amount",ApplyAmt);
            IfInsert := TRUE;
          END;
          IF (PLAEntry3."Remaining ADE" <> 0) AND (ADEDebit <> 0) THEN BEGIN
            ComparePLAAmt(PLAEntry3."Remaining ADE",ADEDebit,PLAEntry3."Total Remaining Excise Amount",ApplyAmt);
            IfInsert := TRUE;
          END;
          IF (PLAEntry3."Remaining Excise Charge" <> 0) AND (ExciseDebit <> 0) THEN BEGIN
            ComparePLAAmt(PLAEntry3."Remaining Excise Charge",ExciseDebit,PLAEntry3."Total Remaining Excise Amount",ApplyAmt);
            IfInsert := TRUE;
          END;
          IF (PLAEntry3."Remaining eCess" <> 0) AND (eCessDebit <> 0) THEN BEGIN
            ComparePLAAmt(PLAEntry3."Remaining eCess",eCessDebit,PLAEntry3."Total Remaining Excise Amount",ApplyAmt);
            IfInsert := TRUE;
          END;
          IF (PLAEntry3."Remaining SHE Cess" <> 0) AND (SHECessDebit <> 0) THEN BEGIN
            ComparePLAAmt(PLAEntry3."Remaining SHE Cess",SHECessDebit,PLAEntry3."Total Remaining Excise Amount",ApplyAmt);
            IfInsert := TRUE;
          END;

          IF IfInsert = TRUE THEN BEGIN
            DetailedPLAEntry2.LOCKTABLE;
            IF DetailedPLAEntry2.FINDLAST THEN
              NextDetailedPLAEntryNo := DetailedPLAEntry2."Entry No." + 1
            ELSE
              NextDetailedPLAEntryNo := 1;
            DetailedPLAEntry2.INIT;
            DetailedPLAEntry2."Entry No." := NextDetailedPLAEntryNo;
            DetailedPLAEntry2."Entry Type" := DetailedPLAEntry2."Entry Type"::Application;
            DetailedPLAEntry2."PLA Entry No." := PLAEntry3."Entry No.";
            DetailedPLAEntry2."Location E.C.C. No." := PLAEntry3."Location E.C.C. No.";
            DetailedPLAEntry2."Location Code" := PLAEntry3."Location Code";
            DetailedPLAEntry2."Application Date" := PLAEntry2."Posting Date";
            DetailedPLAEntry2."Posting Date" := PLAEntry3."Posting Date";
            DetailedPLAEntry2."Applied Entry No." := PLAEntry2."Entry No.";
            DetailedPLAEntry2."Document No." := PLAEntry3."Document No.";
            DetailedPLAEntry2."BSR Code" := PLAEntry3."BSR Code";
            DetailedPLAEntry2."Challan No." := PLAEntry3."Challan No.";
            DetailedPLAEntry2."Challan Date" := PLAEntry3."Challan Date";
            PLAEntry3.CALCFIELDS("Remaining BED","Remaining AED(GSI)","Remaining SED","Remaining SAED","Remaining NCCD",
              "Remaining Cess","Remaining ADET","Remaining AED(TTA)","Remaining ADE","Remaining Excise Charge","Remaining eCess",
              "Remaining SHE Cess");

            PLAEntry2.CALCFIELDS("Remaining BED","Remaining AED(GSI)","Remaining SED","Remaining SAED","Remaining NCCD",
              "Remaining Cess","Remaining ADET","Remaining AED(TTA)","Remaining ADE","Remaining Excise Charge","Remaining eCess",
              "Remaining SHE Cess");

            IF PLAEntry2."Remaining BED" < PLAEntry3."Remaining BED" THEN
              BEDAmtApplied := -PLAEntry2."Remaining BED"
            ELSE
              BEDAmtApplied := -PLAEntry3."Remaining BED";
            DetailedPLAEntry2."BED Amount" := BEDAmtApplied;

            IF PLAEntry2."Remaining SED" < PLAEntry3."Remaining SED" THEN
              SEDAmtApplied := -PLAEntry2."Remaining SED"
            ELSE
              SEDAmtApplied := -PLAEntry3."Remaining SED";
            DetailedPLAEntry2."SED Amount" := SEDAmtApplied;

            IF PLAEntry2."Remaining AED(GSI)" < PLAEntry3."Remaining AED(GSI)" THEN
              "AED(GSI)AmtApplied" := -PLAEntry2."Remaining AED(GSI)"
            ELSE
              "AED(GSI)AmtApplied" := -PLAEntry3."Remaining AED(GSI)";
            DetailedPLAEntry2."AED(GSI) Amount" := "AED(GSI)AmtApplied";

            IF PLAEntry2."Remaining SAED" < PLAEntry3."Remaining SAED" THEN
              SAEDAmtApplied := -PLAEntry2."Remaining SAED"
            ELSE
              SAEDAmtApplied := -PLAEntry3."Remaining SAED";
            DetailedPLAEntry2."SAED Amount" := SAEDAmtApplied;

            IF PLAEntry2."Remaining NCCD" < PLAEntry3."Remaining NCCD" THEN
              NCCDAmtApplied := -PLAEntry2."Remaining NCCD"
            ELSE
              NCCDAmtApplied := -PLAEntry3."Remaining NCCD";
            DetailedPLAEntry2."NCCD Amount" := NCCDAmtApplied;

            IF PLAEntry2."Remaining Cess" < PLAEntry3."Remaining Cess" THEN
              CessAmtApplied := -PLAEntry2."Remaining Cess"
            ELSE
              CessAmtApplied := -PLAEntry3."Remaining Cess";
            DetailedPLAEntry2."Cess Amount" := CessAmtApplied;

            IF PLAEntry2."Remaining ADET" < PLAEntry3."Remaining ADET" THEN
              ADETAmtApplied := -PLAEntry2."Remaining ADET"
            ELSE
              ADETAmtApplied := -PLAEntry3."Remaining ADET";
            DetailedPLAEntry2."ADET Amount" := ADETAmtApplied;

            IF PLAEntry2."Remaining AED(TTA)" < PLAEntry3."Remaining AED(TTA)" THEN
              "AED(TTA)AmtApplied" := -PLAEntry2."Remaining AED(TTA)"
            ELSE
              "AED(TTA)AmtApplied" := -PLAEntry3."Remaining AED(TTA)";
            DetailedPLAEntry2."AED(TTA) Amount" := "AED(TTA)AmtApplied";

            IF PLAEntry2."Remaining ADE" < PLAEntry3."Remaining ADE" THEN
              ADEAmtApplied := -PLAEntry2."Remaining ADE"
            ELSE
              ADEAmtApplied := -PLAEntry3."Remaining ADE";
            DetailedPLAEntry2."ADE Amount" := ADEAmtApplied;

            IF PLAEntry2."Remaining eCess" < PLAEntry3."Remaining eCess" THEN
              eCessAmtApplied := -PLAEntry2."Remaining eCess"
            ELSE
              eCessAmtApplied := -PLAEntry3."Remaining eCess";
            DetailedPLAEntry2."eCess Amount" := eCessAmtApplied;

            IF PLAEntry2."Remaining SHE Cess" < PLAEntry3."Remaining SHE Cess" THEN
              SHECessAmtApplied := -PLAEntry2."Remaining SHE Cess"
            ELSE
              SHECessAmtApplied := -PLAEntry3."Remaining SHE Cess";
            DetailedPLAEntry2."SHE Cess Amount" := SHECessAmtApplied;

            IF PLAEntry2."Remaining Excise Charge" < PLAEntry3."Remaining Excise Charge" THEN
              ExciseAmtApplied := -PLAEntry2."Remaining Excise Charge"
            ELSE
              ExciseAmtApplied := -PLAEntry3."Remaining Excise Charge";
            DetailedPLAEntry2."Excise Amount" := ExciseAmtApplied;
            DetailedPLAEntry2.INSERT;

            DetailedPLAEntry2.LOCKTABLE;
            IF DetailedPLAEntry2.FINDLAST THEN
              NextDetailedPLAEntryNo := DetailedPLAEntry2."Entry No." + 1
            ELSE
              NextDetailedPLAEntryNo := 1;
            DetailedPLAEntry3.INIT;
            DetailedPLAEntry3."Entry No." := NextDetailedPLAEntryNo;
            DetailedPLAEntry3."Entry Type" := DetailedPLAEntry2."Entry Type"::Application;
            DetailedPLAEntry3."PLA Entry No." := PLAEntry2."Entry No.";
            DetailedPLAEntry3."Location E.C.C. No." := PLAEntry2."Location E.C.C. No.";
            DetailedPLAEntry3."Location Code" := PLAEntry2."Location Code";
            DetailedPLAEntry3."Application Date" := PLAEntry2."Posting Date";
            DetailedPLAEntry3."Applied Entry No." := PLAEntry3."Entry No.";
            DetailedPLAEntry3."Posting Date" := PLAEntry3."Posting Date";
            DetailedPLAEntry3."Document No." := PLAEntry2."Document No.";
            DetailedPLAEntry3."BSR Code" := PLAEntry3."BSR Code";
            DetailedPLAEntry3."Challan No." := PLAEntry3."Challan No.";
            DetailedPLAEntry3."Challan Date" := PLAEntry3."Challan Date";
            DetailedPLAEntry3."BED Amount" := BEDAmtApplied;
            DetailedPLAEntry3."SED Amount" := SEDAmtApplied;
            DetailedPLAEntry3."SAED Amount" := SAEDAmtApplied;
            DetailedPLAEntry3."AED(GSI) Amount" := "AED(GSI)AmtApplied";
            DetailedPLAEntry3."NCCD Amount" := NCCDAmtApplied;
            DetailedPLAEntry3."Cess Amount" := CessAmtApplied;
            DetailedPLAEntry3."ADET Amount" := ADETAmtApplied;
            DetailedPLAEntry3."AED(TTA) Amount" := "AED(TTA)AmtApplied";
            DetailedPLAEntry3."ADE Amount" := ADEAmtApplied;
            DetailedPLAEntry3."Excise Amount" := ExciseAmtApplied;
            DetailedPLAEntry3."eCess Amount" := eCessAmtApplied;
            DetailedPLAEntry3."SHE Cess Amount" := SHECessAmtApplied;
            DetailedPLAEntry3.INSERT;
          END;
          PLAEntry3.CALCFIELDS("Remaining BED","Remaining AED(GSI)","Remaining SED","Remaining SAED","Remaining NCCD",
            "Remaining Cess","Remaining ADET","Remaining AED(TTA)","Remaining ADE","Remaining Excise Charge","Remaining eCess",
            "Remaining SHE Cess");
          PLAEntry3.MODIFY;
        UNTIL (PLAEntry3.NEXT = 0);
    END;

    PROCEDURE ComparePLAAmt@1500016(AmountTo@1500002 : Decimal;VAR AmountWith@1500001 : Decimal;VAR RemainingAmt@1500000 : Decimal;VAR ApplyAmt@1500003 : Boolean);
    BEGIN
      IF AmountTo <= AmountWith THEN BEGIN
        RemainingAmt -= AmountTo;
        AmountWith -= AmountTo;
      END ELSE BEGIN
        RemainingAmt -= AmountWith;
        AmountWith := 0;
      END;
    END;

    PROCEDURE RoundExciseAmt@1500021(ExciseDutyAmount@1280004 : Decimal) : Decimal;
    VAR
      ExciseRoundingDirection@1280002 : Text[1];
      ExciseRoundingPrecision@1280001 : Decimal;
      GLSetup@1500000 : Record 98;
    BEGIN
      GLSetup.GET;
      CASE GLSetup."Excise Rounding Type" OF
        GLSetup."Excise Rounding Type"::Nearest:
          ExciseRoundingDirection := '=';
        GLSetup."Excise Rounding Type"::Up:
          ExciseRoundingDirection := '>';
        GLSetup."Excise Rounding Type"::Down:
          ExciseRoundingDirection := '<';
      END;
      IF GLSetup."Excise Rounding Precision" <> 0 THEN
        ExciseRoundingPrecision := GLSetup."Excise Rounding Precision"
      ELSE
        ExciseRoundingPrecision := 0.01;
      EXIT(ROUND(ExciseDutyAmount,ExciseRoundingPrecision,ExciseRoundingDirection));
    END;

    PROCEDURE GetRGEntryNo@1500022(PostingDate@1500000 : Date;RGTable@1500002 : 'RG23 A Part I,RG23 A Part II,RG23 C Part I,RG23 C Part II,RG23 D';ECCNo@1500006 : Code[20];DocumentNo@1500008 : Code[20];VAR RGEntryNo@1500007 : Code[20]);
    VAR
      ExciseNoSeries@1500003 : Record 16500;
      RG23A_PartI@1500013 : Record 13719;
      RG23A_PartII@1500012 : Record 13720;
      RG23C_PartI@1500011 : Record 13721;
      RG23C_PartII@1500010 : Record 13722;
      RG23_D@1500009 : Record 16537;
      NoSeriesMgt@1500004 : Codeunit 396;
    BEGIN
      IF ECCNo = '' THEN
        ERROR(Text16502);
      RGEntryNo := '';
      CASE RGTable OF
        RGTable::"RG23 A Part I":
          BEGIN
            ExciseNoSeries.GET(ExciseNoSeries.Type::"RG23A Part I",ECCNo);
            RG23A_PartI.RESET;
            RG23A_PartI.SETCURRENTKEY("Document No.","Posting Date");
            RG23A_PartI.SETRANGE("Document No.",DocumentNo);
            RG23A_PartI.SETRANGE("Posting Date",PostingDate);
            IF NOT RG23A_PartI.FINDFIRST THEN BEGIN
              NoSeriesMgt.InitSeries(ExciseNoSeries."No. Series",ExciseNoSeries."No. Series",PostingDate,
                RGEntryNo,ExciseNoSeries."No. Series");
            END ELSE
              RGEntryNo := RG23A_PartI."RG Entry No.";
          END;
        RGTable::"RG23 A Part II":
          BEGIN
            ExciseNoSeries.GET(ExciseNoSeries.Type::"RG23A Part II",ECCNo);
            RG23A_PartII.RESET;
            RG23A_PartII.SETCURRENTKEY("Document No.","Posting Date");
            RG23A_PartII.SETRANGE("Document No.",DocumentNo);
            RG23A_PartII.SETRANGE("Posting Date",PostingDate);
            IF NOT RG23A_PartII.FINDFIRST THEN BEGIN
              NoSeriesMgt.InitSeries(ExciseNoSeries."No. Series",ExciseNoSeries."No. Series",PostingDate,
                RGEntryNo,ExciseNoSeries."No. Series");
            END ELSE
              RGEntryNo := RG23A_PartII."RG Entry No.";
          END;
        RGTable::"RG23 C Part I":
          BEGIN
            ExciseNoSeries.GET(ExciseNoSeries.Type::"RG23C Part I",ECCNo);
            RG23C_PartI.RESET;
            RG23C_PartI.SETCURRENTKEY("Document No.","Posting Date");
            RG23C_PartI.SETRANGE("Document No.",DocumentNo);
            RG23C_PartI.SETRANGE("Posting Date",PostingDate);
            IF NOT RG23C_PartI.FINDFIRST THEN BEGIN
              NoSeriesMgt.InitSeries(ExciseNoSeries."No. Series",ExciseNoSeries."No. Series",PostingDate,
                RGEntryNo,ExciseNoSeries."No. Series");
            END ELSE
              RGEntryNo := RG23C_PartI."RG Entry No.";
          END;
        RGTable::"RG23 C Part II":
          BEGIN
            ExciseNoSeries.GET(ExciseNoSeries.Type::"RG23C Part II",ECCNo);
            RG23C_PartII.RESET;
            RG23C_PartII.SETCURRENTKEY("Document No.","Posting Date");
            RG23C_PartII.SETRANGE("Document No.",DocumentNo);
            RG23C_PartII.SETRANGE("Posting Date",PostingDate);
            IF NOT RG23C_PartII.FINDFIRST THEN BEGIN
              NoSeriesMgt.InitSeries(ExciseNoSeries."No. Series",ExciseNoSeries."No. Series",PostingDate,
                RGEntryNo,ExciseNoSeries."No. Series");
            END ELSE
              RGEntryNo := RG23C_PartII."RG Entry No.";
          END;
        RGTable::"RG23 D":
          BEGIN
            ExciseNoSeries.GET(ExciseNoSeries.Type::RG23D,ECCNo);
            RG23_D.RESET;
            RG23_D.SETCURRENTKEY("Document No.","Posting Date");
            RG23_D.SETRANGE("Document No.",DocumentNo);
            RG23_D.SETRANGE("Posting Date",PostingDate);
            IF NOT RG23_D.FINDFIRST THEN BEGIN
              NoSeriesMgt.InitSeries(ExciseNoSeries."No. Series",ExciseNoSeries."No. Series",PostingDate,
                RGEntryNo,ExciseNoSeries."No. Series");
            END ELSE
              RGEntryNo := RG23_D."RG Entry No.";
          END;
      END;
    END;

    PROCEDURE InitRG23DTransferRcpt@1500003(TransferLine@1500000 : Record 5741;TransType@1500004 : ' ,Purchase,Sale';EntryType@1500005 : ' ,Transfer,Invoice,Return';SourceType@1500006 : ' ,Customer,VENDor,Item';SourceCode@1500007 : Code[20];DocNo@1500008 : Code[20];DocType@1500002 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order, ');
    VAR
      RG23D@1500001 : Record 16537;
      RG23D2@1500011 : Record 16537;
      DetailRG23D@1500010 : Record 16533;
      TransHeader@1500003 : Record 5740;
    BEGIN
      WITH TransferLine DO BEGIN
        IF Location.GET("Transfer-to Code") AND (NOT Location."Trading Location") THEN
          EXIT;
        IF "Excise Accounting Type" = "Excise Accounting Type"::"Without CENVAT" THEN
          EXIT;
        IF Item.GET("Item No.") AND Item."Capital Item" AND
           (Item."Excise Accounting Type" = Item."Excise Accounting Type"::"Without CENVAT")
        THEN
          EXIT;
        TransHeader.GET("Document No.");
        TESTFIELD("Excise Bus. Posting Group");
        TESTFIELD("Excise Prod. Posting Group");
        RG23D.INIT;
        RG23D."Entry No." := GetRG23DEntryNo;
        RG23D."Posting Date" := TransHeader."Posting Date";
        RG23D."Document Type" := RG23D."Document Type"::"  ";
        RG23D."Document No." := DocNo;
        RG23D."Item No." := "Item No.";
        RG23D."Line No." := "Line No.";
        RG23D."Transaction Type" := TransType;
        RG23D.Type := EntryType;
        RG23D."Location Code" := "Transfer-to Code";
        RG23D."Source Type" := SourceType;
        RG23D."Source Code" := SourceCode;
        RG23D.Quantity := "Qty. to Receive";
        ExcisePostingSetup.RESET;
        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        ExcisePostingSetup.SETFILTER("From Date",'<=%1',TransHeader."Posting Date");
        IF ExcisePostingSetup.FINDLAST THEN BEGIN
          RG23D."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
          RG23D."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        END ELSE
          ERROR(Text16500,FIELDCAPTION("Excise Bus. Posting Group"),"Excise Bus. Posting Group",
            FIELDCAPTION("Excise Prod. Posting Group"),"Excise Prod. Posting Group");
        IF "Assessable Value" = 0 THEN BEGIN
          IF NOT MRP THEN BEGIN
            IF "Applies-to Entry (RG 23 D)" = 0 THEN
              RG23D."Excise Base Amt Per Unit" := "Transfer Price"
            ELSE
              IF RG23D2.GET("Applies-to Entry (RG 23 D)") THEN
                RG23D."Excise Base Amt Per Unit" := RG23D2."Excise Base Amt Per Unit";
          END ELSE
            RG23D."Excise Base Amt Per Unit" := "MRP Price" * (1 - "Abatement %" / 100);
        END;
        IF ("Assessable Value" <> 0) AND NOT CVD THEN
          RG23D."Excise Base Amt Per Unit" := "Assessable Value";
        IF CVD AND (("CIF Amount" <> 0) OR ("BCD Amount" <> 0)) THEN
          RG23D."Excise Base Amt Per Unit" := ("CIF Amount" + "BCD Amount");
        RG23D.Amount := ("Excise Amount" - "CESS Amount") * "Qty. to Receive";

        RG23D."Excise Amt Per Unit" := "Excise Amount" - "CESS Amount";

        RG23D."Unit of Measure" := "Unit of Measure";
        RG23D."BED Amount Per Unit" := "BED Amount";
        RG23D."eCess Amount Per Unit" := "eCess Amount";
        RG23D."SHE Cess Amount Per Unit" := "SHE Cess Amount";
        RG23D."AED(GSI) Amount Per Unit" := "AED(GSI) Amount";
        RG23D."SED Amount Per Unit" := "SED Amount";
        RG23D."SAED Amount Per Unit" := "SAED Amount";
        RG23D."CESS Amount Per Unit" := "CESS Amount";
        RG23D."NCCD Amount Per Unit" := "NCCD Amount";
        RG23D."ADET Amount Per Unit" := "ADET Amount";
        RG23D."AED(TTA) Amount Per Unit" := "AED(TTA) Amount";
        RG23D."ADE Amount Per Unit" := "ADE Amount";
        RG23D."ADC VAT Amount Per Unit" := "ADC VAT Amount";
        RG23D.CVD := CVD;
        IF "Applies-to Entry (RG 23 D)" = 0 THEN
          RG23D."Line Amount Per Unit" := Amount
        ELSE
          RG23D."Line Amount Per Unit" := RG23D2."Line Amount Per Unit";
        RG23D.Year := DATE2DMY(RG23D."Posting Date",3);
        RG23D.Month := DATE2DMY(RG23D."Posting Date",2);

        RG23D."Order No." := "Document No.";
        IF Location.GET("Transfer-to Code") THEN
          RG23D."E.C.C. No." := Location."E.C.C. No."
        ELSE BEGIN
          CompanyInformation.GET;
          RG23D."E.C.C. No." := CompanyInformation."E.C.C. No."
        END;
        RG23D."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
        RG23D."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
        RG23D."Dimension Set ID" := "Dimension Set ID";

        DetailRG23D.INIT;
        DetailRG23D."Entry No." := GetDetailRG23DEntryNo;
        DetailRG23D."Document Type" := 6;
        DetailRG23D."Order No." := "Document No.";
        DetailRG23D."Line No." := "Line No.";
        DetailRG23D.Quantity := "Qty. to Receive";
        DetailRG23D."RG 23 D Entry No." := RG23D."Entry No.";
        DetailRG23D."Transaction Type" := DetailRG23D."Transaction Type"::Purchase;
        DetailRG23D."Document No." := DocNo;
        DetailRG23D.INSERT(TRUE);

        RG23D."Vendor Invoice No." := TransHeader."Vendor Invoice No.";
        RG23D."Detail RG 23 D Entry No." := DetailRG23D."Entry No.";
        RG23D."Transfer From Location Code" := "Transfer-from Code";
        RG23D."Transfer To Location Code" := "Transfer-to Code";
        RG23D."Item Ledg. Entry No." := ItemLedgEntryNo;
        GetRGEntryNo(RG23D."Posting Date",4,RG23D."E.C.C. No.",RG23D."Document No.",RG23D."RG Entry No.");
        RG23D.INSERT(TRUE);
      END;
    END;

    PROCEDURE InitRG23DTransferShip@1500025(TransferLine@1500000 : Record 5741;TransShptHeader@1500003 : Record 5744);
    VAR
      RG23D@1500001 : Record 16537;
      RG23D2@1500002 : Record 16537;
      DetailRG23D@1500005 : Record 16533;
    BEGIN
      WITH TransferLine DO BEGIN
        IF "Applies-to Entry (RG 23 D)" = 0 THEN
          EXIT;
        IF "Excise Accounting Type" = "Excise Accounting Type"::"Without CENVAT" THEN
          EXIT;
        RG23D2.RESET;
        RG23D2.SETRANGE("Transaction Type",RG23D2."Transaction Type"::Purchase);
        RG23D2.SETRANGE("Item No.","Item No.");
        RG23D2.SETRANGE("Entry No.","Applies-to Entry (RG 23 D)");
        IF RG23D2.FINDFIRST THEN BEGIN
          RG23D2.CALCFIELDS("Remaining Quantity");
          IF RG23D2."Remaining Quantity" < "Qty. to Ship" THEN
            ERROR(Text16502,FIELDCAPTION("Qty. to Ship"),"Document No.","Line No.",RG23D2."Remaining Quantity");
          Location.GET("Transfer-from Code");
          IF NOT Location."Trading Location" THEN
            EXIT;
          RG23D."Entry No." := GetRG23DEntryNo;
          RG23D."Posting Date" := TransShptHeader."Posting Date";
          RG23D."Document Type" := RG23D2."Document Type";
          RG23D."Document No." := TransShptHeader."No.";
          RG23D."Item No." := "Item No.";
          RG23D."Line No." := RG23D2."Line No.";
          RG23D."Transaction Type" := RG23D."Transaction Type"::Sale;
          RG23D.Type := RG23D.Type::Transfer;
          RG23D."Location Code" := "Transfer-from Code";
          RG23D."Source Type" := RG23D."Source Type"::Item;
          RG23D."Source Code" := "Item No.";
          RG23D.Quantity := -1 * "Qty. to Ship";
          RG23D."Excise Prod. Posting Group" := RG23D2."Excise Prod. Posting Group";
          RG23D."Excise Amt Per Unit" := -1 * RG23D2."Excise Amt Per Unit";
          RG23D."Unit of Measure" := RG23D2."Unit of Measure";
          RG23D.Amount := -1 * RG23D2."Excise Amt Per Unit" * "Qty. to Ship";
          RG23D."BED Amount Per Unit" := -1 * RG23D2."BED Amount Per Unit";
          RG23D."eCess Amount Per Unit" := -1 * RG23D2."eCess Amount Per Unit";
          RG23D."SHE Cess Amount Per Unit" := -1 * RG23D2."SHE Cess Amount Per Unit";
          RG23D."AED(GSI) Amount Per Unit" := -1 * RG23D2."AED(GSI) Amount Per Unit";
          RG23D."SED Amount Per Unit" := -1 * RG23D2."SED Amount Per Unit";
          RG23D."SAED Amount Per Unit" := -1 * RG23D2."SAED Amount Per Unit";
          RG23D."CESS Amount Per Unit" := -1 * RG23D2."CESS Amount Per Unit";
          RG23D."NCCD Amount Per Unit" := -1 * RG23D2."NCCD Amount Per Unit";
          RG23D."ADET Amount Per Unit" := -1 * RG23D2."ADET Amount Per Unit";
          RG23D."AED(TTA) Amount Per Unit" := -1 * RG23D2."AED(TTA) Amount Per Unit";
          RG23D."ADE Amount Per Unit" := -1 * RG23D2."ADE Amount Per Unit";
          RG23D."ADC VAT Amount Per Unit" := -1 * RG23D2."ADC VAT Amount Per Unit";
          RG23D.CVD := RG23D2.CVD;
          RG23D."Line Amount Per Unit" := -1 * RG23D2."Line Amount Per Unit";
          RG23D.Year := DATE2DMY(RG23D."Posting Date",3);
          RG23D.Month := DATE2DMY(RG23D."Posting Date",2);
          RG23D."Excise Base Amt Per Unit" := -1 * RG23D2."Excise Base Amt Per Unit";
          RG23D."Order No." := RG23D2."Order No.";
          IF Location.GET("Transfer-from Code") THEN
            RG23D."E.C.C. No." := Location."E.C.C. No."
          ELSE BEGIN
            CompanyInformation.GET;
            RG23D."E.C.C. No." := CompanyInformation."E.C.C. No."
          END;
          RG23D."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
          RG23D."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
          RG23D."Dimension Set ID" := "Dimension Set ID";
          RG23D."Gen. Bus. Posting Group" := RG23D2."Gen. Bus. Posting Group";
          RG23D."Gen. Prod. Posting Group" := RG23D2."Gen. Prod. Posting Group";

          DetailRG23D.INIT;
          DetailRG23D."Entry No." := GetDetailRG23DEntryNo;
          DetailRG23D."Document Type" := RG23D2."Document Type";
          DetailRG23D."Order No." := RG23D2."Order No.";
          DetailRG23D."Line No." := RG23D2."Line No.";
          DetailRG23D.Quantity := -1 * "Qty. to Ship";
          DetailRG23D."RG 23 D Entry No." := RG23D2."Entry No.";
          DetailRG23D."Transaction Type" := DetailRG23D."Transaction Type"::Sale;
          DetailRG23D."Document No." := RG23D2."Document No.";
          DetailRG23D.INSERT(TRUE);

          RG23D."Detail RG 23 D Entry No." := DetailRG23D."Entry No.";
          RG23D."Ref. Entry No." := RG23D2."Entry No.";
          RG23D."Vendor Invoice No." := RG23D2."Vendor Invoice No.";
          RG23D."Transfer From Location Code" := "Transfer-from Code";
          RG23D."Transfer To Location Code" := "Transfer-to Code";
          GetRGEntryNo(RG23D."Posting Date",4,RG23D."E.C.C. No.",RG23D."Document No.",RG23D."RG Entry No.");
          RG23D.INSERT(TRUE);
          RG23D2.CALCFIELDS("Remaining Quantity");
          RG23D2.Closed := RG23D2."Remaining Quantity" = 0;
          RG23D2.MODIFY(TRUE);
        END ELSE
          ERROR(Text16503,FIELDCAPTION("Applies-to Entry (RG 23 D)"));
      END;
    END;

    PROCEDURE CheckNegativeBalance@1500023(RecordType@1500000 : ' ,RG23A,RG23C,PLA');
    BEGIN
      IF RecordType = RecordType::RG23A THEN BEGIN
        IF RG23APartII."Total BED Amount" < 0 THEN
          ERROR(Text16504,RG23APartII.FIELDCAPTION("Total BED Amount"),RG23APartII.TABLENAME);
        IF RG23APartII."Total AED(GSI) Amount" < 0 THEN
          ERROR(Text16504,RG23APartII.FIELDCAPTION("Total AED(GSI) Amount"),RG23APartII.TABLENAME);
        IF RG23APartII."Total SED Amount" < 0 THEN
          ERROR(Text16504,RG23APartII.FIELDCAPTION("Total SED Amount"),RG23APartII.TABLENAME);
        IF RG23APartII."Total SAED Amount" < 0 THEN
          ERROR(Text16504,RG23APartII.FIELDCAPTION("Total SAED Amount"),RG23APartII.TABLENAME);
        IF RG23APartII."Total CESS Amount" < 0 THEN
          ERROR(Text16504,RG23APartII.FIELDCAPTION("Total CESS Amount"),RG23APartII.TABLENAME);
        IF RG23APartII."Total NCCD Amount" < 0 THEN
          ERROR(Text16504,RG23APartII.FIELDCAPTION("Total NCCD Amount"),RG23APartII.TABLENAME);
        IF RG23APartII."Total eCess Amount" < 0 THEN
          ERROR(Text16504,RG23APartII.FIELDCAPTION("Total eCess Amount"),RG23APartII.TABLENAME);
        IF RG23APartII."Total ADET Amount" < 0 THEN
          ERROR(Text16504,RG23APartII.FIELDCAPTION("Total ADET Amount"),RG23APartII.TABLENAME);
        IF RG23APartII."Total AED(TTA) Amount" < 0 THEN
          ERROR(Text16504,RG23APartII.FIELDCAPTION("Total AED(TTA) Amount"),RG23APartII.TABLENAME);
        IF RG23APartII."Total ADE Amount" < 0 THEN
          ERROR(Text16504,RG23APartII.FIELDCAPTION("Total ADE Amount"),RG23APartII.TABLENAME);
        IF RG23APartII."Total SHE Cess Amount" < 0 THEN
          ERROR(Text16504,RG23APartII.FIELDCAPTION("Total SHE Cess Amount"),RG23APartII.TABLENAME);
      END;

      IF RecordType = RecordType::RG23C THEN BEGIN
        IF RG23CPartII."Total BED for Current Year" < 0 THEN
          ERROR(Text16504,RG23CPartII.FIELDCAPTION("Total BED for Current Year"),RG23CPartII.TABLENAME);
        IF RG23CPartII."Total AED(GSI) for CY" < 0 THEN
          ERROR(Text16504,RG23CPartII.FIELDCAPTION("Total AED(GSI) for CY"),RG23CPartII.TABLENAME);
        IF RG23CPartII."Total SED for Current Year" < 0 THEN
          ERROR(Text16504,RG23CPartII.FIELDCAPTION("Total SED for Current Year"),RG23CPartII.TABLENAME);
        IF RG23CPartII."Total SAED for Current Year" < 0 THEN
          ERROR(Text16504,RG23CPartII.FIELDCAPTION("Total SAED for Current Year"),RG23CPartII.TABLENAME);
        IF RG23CPartII."Total CESS for Current Year" < 0 THEN
          ERROR(Text16504,RG23CPartII.FIELDCAPTION("Total CESS for Current Year"),RG23CPartII.TABLENAME);
        IF RG23CPartII."Total NCCD for Current Year" < 0 THEN
          ERROR(Text16504,RG23CPartII.FIELDCAPTION("Total NCCD for Current Year"),RG23CPartII.TABLENAME);
        IF RG23CPartII."Total eCess for Current Year" < 0 THEN
          ERROR(Text16504,RG23CPartII.FIELDCAPTION("Total eCess for Current Year"),RG23CPartII.TABLENAME);
        IF RG23CPartII."Total ADET for Current Year" < 0 THEN
          ERROR(Text16504,RG23CPartII.FIELDCAPTION("Total ADET for Current Year"),RG23CPartII.TABLENAME);
        IF RG23CPartII."Total AED(TTA) for CY" < 0 THEN
          ERROR(Text16504,RG23CPartII.FIELDCAPTION("Total AED(TTA) for CY"),RG23CPartII.TABLENAME);
        IF RG23CPartII."Total ADE for Current Year" < 0 THEN
          ERROR(Text16504,RG23CPartII.FIELDCAPTION("Total ADE for Current Year"),RG23CPartII.TABLENAME);
        IF RG23CPartII."Total SHECESS for Current Year" < 0 THEN
          ERROR(Text16504,RG23CPartII.FIELDCAPTION("Total SHECESS for Current Year"),RG23CPartII.TABLENAME);
      END;

      IF RecordType = RecordType::PLA THEN BEGIN
        IF PLAEntry."Balance BED" < 0 THEN
          ERROR(Text16504,PLAEntry.FIELDCAPTION("Balance BED"),PLAEntry.TABLENAME);
        IF PLAEntry."Balance AED(GSI)" < 0 THEN
          ERROR(Text16504,PLAEntry.FIELDCAPTION("Balance AED(GSI)"),PLAEntry.TABLENAME);
        IF PLAEntry."Balance SED" < 0 THEN
          ERROR(Text16504,PLAEntry.FIELDCAPTION("Balance SED"),PLAEntry.TABLENAME);
        IF PLAEntry."Balance SAED" < 0 THEN
          ERROR(Text16504,PLAEntry.FIELDCAPTION("Balance SAED"),PLAEntry.TABLENAME);
        IF PLAEntry."Balance CESS" < 0 THEN
          ERROR(Text16504,PLAEntry.FIELDCAPTION("Balance CESS"),PLAEntry.TABLENAME);
        IF PLAEntry."Balance NCCD" < 0 THEN
          ERROR(Text16504,PLAEntry.FIELDCAPTION("Balance NCCD"),PLAEntry.TABLENAME);
        IF PLAEntry."Balance eCess" < 0 THEN
          ERROR(Text16504,PLAEntry.FIELDCAPTION("Balance eCess"),PLAEntry.TABLENAME);
        IF PLAEntry."Balance ADET" < 0 THEN
          ERROR(Text16504,PLAEntry.FIELDCAPTION("Balance ADET"),PLAEntry.TABLENAME);
        IF PLAEntry."Balance AED(TTA)" < 0 THEN
          ERROR(Text16504,PLAEntry.FIELDCAPTION("Balance AED(TTA)"),PLAEntry.TABLENAME);
        IF PLAEntry."Balance ADE" < 0 THEN
          ERROR(Text16504,PLAEntry.FIELDCAPTION("Balance ADE"),PLAEntry.TABLENAME);
        IF PLAEntry."Balance SHE Cess" < 0 THEN
          ERROR(Text16504,PLAEntry.FIELDCAPTION("Balance SHE Cess"),PLAEntry.TABLENAME);
        IF PLAEntry."Balance Excise Charges" < 0 THEN
          ERROR(Text16504,PLAEntry.FIELDCAPTION("Balance Excise Charges"),PLAEntry.TABLENAME);
      END;
    END;

    PROCEDURE SetSalesHeaderNo@1500006(SalesDocNo@1500000 : Code[20]);
    BEGIN
      SalesDocumentNo := SalesDocNo;
    END;

    PROCEDURE InsertRG23APartISubCon@1280172(ItemJnlLine@1280004 : Record 83;RGEntryType@1280005 : 'Send,Receive');
    VAR
      RG23APartIRec@1500004 : Record 13719;
      RG23PartIEntryNo@1280003 : Decimal;
      Location@1280001 : Record 14;
    BEGIN
      RG23APartI.RESET;
      RG23APartI.LOCKTABLE;
      IF RG23APartI.FINDLAST THEN
        RG23PartIEntryNo := RG23APartI."Entry No." + 1
      ELSE
        RG23PartIEntryNo := 1;

      WITH ItemJnlLine DO BEGIN
        IF "Quantity (Base)" <> 0 THEN BEGIN
          RG23APartI.INIT;
          RG23APartI."Entry No." := RG23PartIEntryNo;
          RG23APartI.Type := RG23APartI.Type::Transfer;
          RG23APartI."Posting Date" := "Posting Date";
          RG23APartI."Document No." := "Document No.";
          IF RGEntryType = RGEntryType::Send THEN   BEGIN
            Location.GET("Location Code");
            RG23APartI."Location E.C.C. No." := Location."E.C.C. No.";
            RG23APartI."Location Code" := "Location Code";
            RG23APartI."Quantity Consumed" := "Quantity (Base)";
            RG23APartI.Quantity := -"Quantity (Base)";
          END ELSE BEGIN
            Location.GET("New Location Code");
            RG23APartI."Location E.C.C. No." := Location."E.C.C. No.";
            RG23APartI."Location Code" := "New Location Code";
            RG23APartI."Quantity Received" := "Quantity (Base)";
            RG23APartI.Quantity := "Quantity (Base)";
          END;
          RG23APartI."Base Unit Of Measure" := "Unit of Measure Code";
          RG23APartI."Order No." := "Document No.";
          RG23APartI."Item No." := "Item No.";
          RG23APartI.Description := Description;
          IF ECCNos.GET(RG23APartI."Location E.C.C. No.") THEN
            RG23APartI."Type of Unit" := ECCNos."Type of Unit";

          RG23APartIRec.LOCKTABLE;
          RG23APartIRec.SETCURRENTKEY("Location E.C.C. No.","Item No.");
          RG23APartIRec.SETRANGE("Location E.C.C. No.",RG23APartI."Location E.C.C. No.");
          RG23APartIRec.SETRANGE("Item No.","Item No.");
          RG23APartIRec.CALCSUMS(Quantity);
          RG23APartI."Opening Stock" := RG23APartIRec.Quantity;

          IF RGEntryType = RGEntryType::Send THEN
            RG23APartI."Closing Stock" := RG23APartIRec.Quantity - "Quantity (Base)"
          ELSE
            RG23APartI."Closing Stock" := RG23APartIRec.Quantity + "Quantity (Base)";
          GetRGEntryNo(RG23APartI."Posting Date",0,RG23APartI."Location E.C.C. No.",RG23APartI."Document No.",
            RG23APartI."RG Entry No.");
          RG23APartI.INSERT;
        END;
      END;
    END;

    PROCEDURE InsertRG23CPartISubCon@1500008(ItemJnlLine@1280003 : Record 83;RGEntryType@1280002 : 'Send,Receive');
    VAR
      RG23CPartIRec@1280000 : Record 13721;
      RG23CPartIEntryNo@1280001 : Decimal;
      Location@1280004 : Record 14;
    BEGIN
      RG23CPartI.RESET;
      RG23CPartI.LOCKTABLE;
      IF RG23CPartI.FINDLAST THEN
        RG23CPartIEntryNo := RG23CPartI."Entry No." + 1
      ELSE
        RG23CPartIEntryNo := 1;

      WITH ItemJnlLine DO BEGIN
        IF "Quantity (Base)" <> 0 THEN BEGIN
          RG23CPartI.INIT;
          RG23CPartI."Entry No." := RG23CPartIEntryNo;
          RG23CPartI."Posting Date" := "Posting Date";
          RG23CPartI.Type := RG23APartI.Type::Transfer;
          RG23CPartI."Document No." := "Document No.";
          IF RGEntryType = RGEntryType::Send THEN   BEGIN
            RG23CPartI."Location Code" := "Location Code";
            RG23CPartI."Quantity Consumed" := "Quantity (Base)";
            RG23CPartI.Quantity := -"Quantity (Base)";
          END ELSE BEGIN
            RG23CPartI."Location Code" := "New Location Code";
            RG23CPartI."Quantity Received" := "Quantity (Base)";
            RG23CPartI.Quantity := "Quantity (Base)";
          END;
          Location.GET(RG23CPartI."Location Code");
          RG23CPartI."Location E.C.C. No." := Location."E.C.C. No.";
          RG23CPartI."Order No." := "Document No.";
          RG23CPartI."FA No./ Item No." := "Item No.";
          RG23CPartI.Description := Description;
          IF ECCNos.GET(RG23CPartI."Location E.C.C. No.") THEN
            RG23CPartI."Type of Unit" := ECCNos."Type of Unit";

          RG23CPartIRec.LOCKTABLE;
          RG23CPartIRec.SETCURRENTKEY("Location E.C.C. No.","FA No./ Item No.");
          RG23CPartIRec.SETRANGE("Location E.C.C. No.",RG23CPartI."Location E.C.C. No.");
          RG23CPartIRec.SETRANGE("FA No./ Item No.","Item No.");
          RG23CPartIRec.CALCSUMS(Quantity);
          RG23CPartI."Opening Stock" := RG23CPartIRec.Quantity;

          IF RGEntryType = RGEntryType::Send THEN
            RG23CPartI."Closing Stock" := RG23CPartIRec.Quantity - "Quantity (Base)"
          ELSE
            RG23CPartI."Closing Stock" := RG23CPartIRec.Quantity + "Quantity (Base)";
          GetRGEntryNo(RG23CPartI."Posting Date",2,RG23CPartI."Location E.C.C. No.",RG23CPartI."Document No.",
            RG23CPartI."RG Entry No.");
          RG23CPartI.INSERT;
        END;
      END;
    END;

    PROCEDURE SetILENo@1500024(ItemLedgEntryNo2@1500000 : Integer);
    BEGIN
      ItemLedgEntryNo := ItemLedgEntryNo2;
    END;

    PROCEDURE InsertRG23APartIService@1500033(ServiceLine@1500002 : Record 5902;ServShptHeader@1500001 : TEMPORARY Record 5990;ServCrMemoHeader@1500000 : TEMPORARY Record 5994);
    VAR
      ServiceHeader@1500005 : Record 5900;
      Customer@1500004 : Record 18;
      RG23APartI2@1500003 : Record 13719;
    BEGIN
      WITH ServiceLine DO BEGIN
        ServiceHeader.GET("Document Type","Document No.");
        IF ServiceHeader.Trading THEN
          EXIT;
        RG23APartI.RESET;
        RG23APartI.LOCKTABLE;
        IF RG23APartI.FINDLAST THEN
          NextRGEntryNo := RG23APartI."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23APartI.INIT;
        RG23APartI."Entry No." := NextRGEntryNo;
        RG23APartI."Item No." := "No.";
        RG23APartI.Description := Description;
        RecItem.GET("No.");
        RG23APartI."Base Unit Of Measure" := RecItem."Base Unit of Measure";
        RG23APartI."Line No." := "Line No.";
        IF "Qty. to Ship (Base)" <> 0 THEN BEGIN
          RG23APartI."Posting Date" := ServShptHeader."Posting Date";
          RG23APartI."Document No." := ServShptHeader."No.";
          RG23APartI."Order No." := ServShptHeader."Order No.";
          RG23APartI.Type := RG23APartI.Type::Sale;
          RG23APartI."Quantity Sold" := "Qty. to Ship (Base)";
          RG23APartI.Quantity := -RG23APartI."Quantity Sold";
          RG23APartI."Quantity Received" := 0;
        END ELSE BEGIN
          RG23APartI."Posting Date" := ServCrMemoHeader."Posting Date";
          RG23APartI."Document No." := ServCrMemoHeader."No.";
          RG23APartI."Order No." := ServCrMemoHeader."Pre-Assigned No.";
          IF "Document Type" = "Document Type"::"Credit Memo" THEN BEGIN
            IF ServCrMemoHeader."Sale Return Type" <> ServCrMemoHeader."Sale Return Type"::"Sales Cancellation" THEN
              RG23APartI.Type := RG23APartI.Type::Purchase
            ELSE
              RG23APartI.Type := RG23APartI.Type::Sale;
          END ELSE
            RG23APartI.Type := RG23APartI.Type::Sale;
          IF ServCrMemoHeader."Sale Return Type" = ServCrMemoHeader."Sale Return Type"::"Sales Cancellation" THEN BEGIN
            RG23APartI."Quantity Sold" := -"Qty. to Invoice (Base)";
            RG23APartI."Quantity Received" := 0;
            RG23APartI.Quantity := -RG23APartI."Quantity Sold";
          END ELSE BEGIN
            RG23APartI."Quantity Received" := "Qty. to Invoice (Base)";
            RG23APartI."Quantity Sold" := 0;
            RG23APartI.Quantity := RG23APartI."Quantity Received";
          END
        END;
        RG23APartI."Quantity Consumed" := 0;
        RG23APartI."Location Code" := "Location Code";
        CompanyInformation.GET;
        IF "Location Code" <> '' THEN BEGIN
          Location.GET("Location Code");
          RG23APartI."Location E.C.C. No." := Location."E.C.C. No."
        END ELSE
          RG23APartI."Location E.C.C. No." := CompanyInformation."E.C.C. No.";
        RG23APartI.Range := CompanyInformation."C.E. Range";
        RG23APartI.TESTFIELD("Location E.C.C. No.");
        IF ECCNos.GET(RG23APartI."Location E.C.C. No.") THEN
          RG23APartI."Type of Unit" := ECCNos."Type of Unit";

        RG23APartI."Sell-to/Buy-from No." := "Customer No.";
        IF Customer.GET("Customer No.") THEN
          RG23APartI."Customer/Vendor E.C.C. No." := Customer."E.C.C. No.";

        RG23APartI2.SETCURRENTKEY("Location E.C.C. No.","Item No.");
        RG23APartI2.SETRANGE("Location E.C.C. No.",RG23APartI."Location E.C.C. No.");
        RG23APartI2.SETRANGE("Item No.","No.");
        RG23APartI2.CALCSUMS(Quantity);
        RG23APartI."Opening Stock" := RG23APartI2.Quantity;
        RG23APartI."Closing Stock" := RG23APartI2.Quantity + RG23APartI.Quantity;
        GetRGEntryNo(
          RG23APartI."Posting Date",0,RG23APartI."Location E.C.C. No.",RG23APartI."Document No.",
          RG23APartI."RG Entry No.");
        RG23APartI.INSERT;
      END
    END;

    PROCEDURE InsertRG23APartIIReturnService@1500030(ServiceLine@1500001 : Record 5902;ServCrMemoHeader@1500000 : TEMPORARY Record 5994);
    VAR
      ServiceHeader@1500004 : Record 5900;
      Customer@1500003 : Record 18;
      TempRG23APartII@1500002 : Record 13720;
    BEGIN
      WITH ServiceLine DO BEGIN
        ServiceHeader.GET("Document Type","Document No.");
        IF ServiceHeader.Trading THEN
          EXIT;
        RG23APartII.LOCKTABLE;
        IF RG23APartII.FINDLAST THEN
          NextRGEntryNo := RG23APartII."Entry No." + 1
        ELSE
          NextRGEntryNo := 1;
        RG23APartII.INIT;
        RG23APartII."Entry No." := NextRGEntryNo;
        IF "Document Type" = "Document Type"::"Credit Memo" THEN BEGIN
          IF ServCrMemoHeader."Sale Return Type" <> ServCrMemoHeader."Sale Return Type"::"Sales Cancellation" THEN
            RG23APartII.Type := RG23APartII.Type::Purchase
          ELSE
            RG23APartII.Type := RG23APartII.Type::Sale;
        END ELSE
          RG23APartII.Type := RG23APartII.Type::Sale;
        RG23APartII."Line No." := "Line No.";
        RG23APartII."Posting Date" := ServCrMemoHeader."Posting Date";
        RG23APartII."Document No." := ServCrMemoHeader."No.";
        RG23APartII."Location Code" := "Location Code";
        IF "Location Code" <> '' THEN BEGIN
          Location.GET("Location Code");
          RG23APartII."Location E.C.C. No." := Location."E.C.C. No."
        END ELSE BEGIN
          CompanyInformation.GET;
          RG23APartII."Location E.C.C. No." := CompanyInformation."E.C.C. No.";
        END;
        RG23APartII.TESTFIELD("Location E.C.C. No.");
        IF ServiceHeader.GET("Document Type","Document No.") THEN
          RG23APartII."Order No." := ServiceHeader."No.";
        IF Customer.GET("Customer No.") THEN
          RG23APartII."Customer E.C.C. No." := Customer."E.C.C. No.";
        IF ECCNos.GET(RG23APartII."Location E.C.C. No.") THEN
          RG23APartII."Type of Unit" := ECCNos."Type of Unit";

        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        ExcisePostingSetup.SETRANGE("From Date",0D,ServCrMemoHeader."Posting Date");
        ExcisePostingSetup.FINDLAST;
        IF "Qty. to Invoice (Base)" <> 0 THEN BEGIN
          RG23APartII."BED Credit" :=
            ConvertAmountFCY2LCY(
              ServCrMemoHeader."Posting Date",ServCrMemoHeader."Currency Code","BED Amount",ServCrMemoHeader."Currency Factor");
          RG23APartII."AED(GSI) Credit" :=
            ConvertAmountFCY2LCY(
              ServCrMemoHeader."Posting Date",ServCrMemoHeader."Currency Code","AED(GSI) Amount",ServCrMemoHeader."Currency Factor");
          RG23APartII."AED(TTA) Credit" :=
            ConvertAmountFCY2LCY(
              ServCrMemoHeader."Posting Date",ServCrMemoHeader."Currency Code","AED(TTA) Amount",ServCrMemoHeader."Currency Factor");
          RG23APartII."SED Credit" :=
            ConvertAmountFCY2LCY(
              ServCrMemoHeader."Posting Date",ServCrMemoHeader."Currency Code","SED Amount",ServCrMemoHeader."Currency Factor");
          RG23APartII."SAED Credit" :=
            ConvertAmountFCY2LCY(
              ServCrMemoHeader."Posting Date",ServCrMemoHeader."Currency Code","SAED Amount",ServCrMemoHeader."Currency Factor");
          RG23APartII."NCCD Credit" :=
            ConvertAmountFCY2LCY(
              ServCrMemoHeader."Posting Date",ServCrMemoHeader."Currency Code","NCCD Amount",ServCrMemoHeader."Currency Factor");
          RG23APartII."ADET Credit" :=
            ConvertAmountFCY2LCY(
              ServCrMemoHeader."Posting Date",ServCrMemoHeader."Currency Code","ADET Amount",ServCrMemoHeader."Currency Factor");
          RG23APartII."ADE Credit" :=
            ConvertAmountFCY2LCY(
              ServCrMemoHeader."Posting Date",ServCrMemoHeader."Currency Code","ADE Amount",ServCrMemoHeader."Currency Factor");
          RG23APartII."ADC VAT Credit" :=
            ConvertAmountFCY2LCY(
              ServCrMemoHeader."Posting Date",ServCrMemoHeader."Currency Code","ADC VAT Amount",ServCrMemoHeader."Currency Factor");
          IF ExcisePostingSetup."Setoff available" THEN BEGIN
            RG23APartII."eCess Credit" :=
              ConvertAmountFCY2LCY(
                ServCrMemoHeader."Posting Date",ServCrMemoHeader."Currency Code","eCess Amount",ServCrMemoHeader."Currency Factor");
            RG23APartII."SHE Cess Credit" :=
              ConvertAmountFCY2LCY(
                ServCrMemoHeader."Posting Date",ServCrMemoHeader."Currency Code","SHE Cess Amount",ServCrMemoHeader."Currency Factor");
          END ELSE BEGIN
            RG23APartII."eCess Credit" := 0;
            RG23APartII."SHE Cess Credit" := 0;
          END;

          RG23APartII."Remaining BED Credit" := RG23APartII."BED Credit";
          RG23APartII."Remaining AED(GSI) Credit" := RG23APartII."AED(GSI) Credit";
          RG23APartII."Remaining SED Credit" := RG23APartII."SED Credit";
          RG23APartII."Remaining SAED Credit" := RG23APartII."SAED Credit";
          RG23APartII."Remaining NCCD Credit" := RG23APartII."NCCD Credit";
          RG23APartII."Remaining eCess Credit" := RG23APartII."eCess Credit";
          RG23APartII."Remaining ADET Credit" := RG23APartII."ADET Credit";
          RG23APartII."Remaining AED(TTA) Credit" := RG23APartII."AED(TTA) Credit";
          RG23APartII."Remaining ADE Credit" := RG23APartII."ADE Credit";
          RG23APartII."Remaining ADC VAT Credit" := RG23APartII."ADC VAT Credit";
          RG23APartII."Remaining SHECess Credit" := RG23APartII."SHE Cess Credit";
          RG23APartII."Remaining Excise Amount" :=
            RG23APartII."Remaining BED Credit" + RG23APartII."Remaining AED(GSI) Credit" +
            RG23APartII."Remaining SED Credit" + RG23APartII."Remaining SAED Credit" + RG23APartII."Remaining NCCD Credit" +
            RG23APartII."Remaining eCess Credit" + RG23APartII."Remaining ADET Credit" + RG23APartII."Remaining AED(TTA) Credit" +
            RG23APartII."Remaining ADE Credit" + RG23APartII."Remaining ADC VAT Credit" + RG23APartII."Remaining SHECess Credit";
        END;

        TempRG23APartII.SETCURRENTKEY("Location E.C.C. No.");
        TempRG23APartII.SETRANGE("Location E.C.C. No.",RG23APartII."Location E.C.C. No.");
        IF TempRG23APartII.FINDLAST THEN BEGIN
          RG23APartII."Op. Bal. BED/AED" :=
            TempRG23APartII."Total BED Amount" + TempRG23APartII."Total AED(GSI) Amount" + TempRG23APartII."Total AED(TTA) Amount";
          RG23APartII."Op. Bal. ODs" :=
            TempRG23APartII."Total SED Amount" + TempRG23APartII."Total SAED Amount" +
            TempRG23APartII."Total NCCD Amount" + TempRG23APartII."Total eCess Amount" + TempRG23APartII."Total CESS Amount" +
            TempRG23APartII."Total ADC VAT Amount" + TempRG23APartII."Total SHE Cess Amount" + TempRG23APartII."Total ADET Amount" +
            TempRG23APartII."Total ADE Amount";
          RG23APartII."Total BED Amount" := TempRG23APartII."Total BED Amount" + RG23APartII."BED Credit" - RG23APartII."BED Debit";
          RG23APartII."Total AED(GSI) Amount" :=
            TempRG23APartII."Total AED(GSI) Amount" + RG23APartII."AED(GSI) Credit" - RG23APartII."AED(GSI) Debit";
          RG23APartII."Total AED(TTA) Amount" :=
            TempRG23APartII."Total AED(TTA) Amount" + RG23APartII."AED(TTA) Credit" - RG23APartII."AED(TTA) Debit";
          RG23APartII."Total SED Amount" := TempRG23APartII."Total SED Amount" + RG23APartII."SED Credit" - RG23APartII."SED Debit";
          RG23APartII."Total SAED Amount" :=
            TempRG23APartII."Total SAED Amount" + RG23APartII."SAED Credit" - RG23APartII."SAED Debit";
          RG23APartII."Total CESS Amount" := TempRG23APartII."Total CESS Amount";
          RG23APartII."Total NCCD Amount" :=
            TempRG23APartII."Total NCCD Amount" + RG23APartII."NCCD Credit" - RG23APartII."NCCD Debit";
          RG23APartII."Total eCess Amount" :=
            TempRG23APartII."Total eCess Amount" + RG23APartII."eCess Credit" - RG23APartII."eCess Debit";
          RG23APartII."Total SHE Cess Amount" :=
            TempRG23APartII."Total SHE Cess Amount" + RG23APartII."SHE Cess Credit" - RG23APartII."SHE Cess Debit";
          RG23APartII."Total ADET Amount" :=
            TempRG23APartII."Total ADET Amount" + RG23APartII."ADET Credit" - RG23APartII."ADET Debit";
          RG23APartII."Total ADE Amount" :=
            TempRG23APartII."Total ADE Amount" + RG23APartII."ADE Credit" - RG23APartII."ADE Debit";
          RG23APartII."Total ADC VAT Amount" :=
            TempRG23APartII."Total ADC VAT Amount" + RG23APartII."ADC VAT Credit" - RG23APartII."ADC VAT Debit";
          RG23APartII."Closing Bal. BED/AED" :=
            RG23APartII."Op. Bal. BED/AED" + RG23APartII."BED Credit" +
            RG23APartII."AED(GSI) Credit" + RG23APartII."AED(TTA) Credit" - RG23APartII."BED Debit" - RG23APartII."AED(GSI) Debit" -
            RG23APartII."AED(TTA) Debit";
          RG23APartII."Closing Bal. Other Duties" :=
            RG23APartII."Op. Bal. ODs" + RG23APartII."SED Credit" + RG23APartII."SAED Credit" +
            RG23APartII."NCCD Credit" + RG23APartII."eCess Credit" + RG23APartII."ADET Credit" + RG23APartII."ADC VAT Credit" -
            RG23APartII."SED Debit" - RG23APartII."SAED Debit" - RG23APartII."NCCD Debit" - RG23APartII."eCess Debit" -
            RG23APartII."ADET Debit" + RG23APartII."ADE Credit" - RG23APartII."ADE Debit" - RG23APartII."ADC VAT Debit" +
            RG23APartII."SHE Cess Credit" - RG23APartII."SHE Cess Debit";
          RG23APartII.CVD := CVD;
        END ELSE BEGIN
          RG23APartII."Op. Bal. BED/AED" := 0;
          RG23APartII."Op. Bal. ODs" := 0;
          RG23APartII."Total BED Amount" := RG23APartII."BED Credit";
          RG23APartII."Total AED(GSI) Amount" := RG23APartII."AED(GSI) Credit";
          RG23APartII."Total AED(TTA) Amount" := RG23APartII."AED(TTA) Credit";
          RG23APartII."Total SED Amount" := RG23APartII."SED Credit";
          RG23APartII."Total SAED Amount" := RG23APartII."SAED Credit";
          RG23APartII."Total NCCD Amount" := RG23APartII."NCCD Credit";
          RG23APartII."Total eCess Amount" := RG23APartII."eCess Credit";
          RG23APartII."Total SHE Cess Amount" := RG23APartII."SHE Cess Credit";
          RG23APartII."Total ADET Amount" := RG23APartII."ADET Credit";
          RG23APartII."Total ADE Amount" := RG23APartII."ADE Credit";
          RG23APartII."Total ADC VAT Amount" := RG23APartII."ADC VAT Credit";
          RG23APartII."Closing Bal. BED/AED" :=
            RG23APartII."Op. Bal. BED/AED" + RG23APartII."BED Credit" + RG23APartII.
            "AED(GSI) Credit" + RG23APartII."AED(TTA) Credit";
          RG23APartII."Closing Bal. Other Duties" :=
            RG23APartII."Op. Bal. ODs" + RG23APartII."SED Credit" + RG23APartII."SAED Credit" +
            RG23APartII."NCCD Credit" + RG23APartII."eCess Credit" + RG23APartII."ADET Credit" + RG23APartII."ADE Credit" +
            RG23APartII."ADC VAT Credit" + RG23APartII."SHE Cess Credit";
          RG23APartII.CVD := CVD;
        END;
        RG23APartII."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
        RG23APartII."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        RG23APartII."Cenvat Cr. Receivable Account" := ExcisePostingSetup."Cenvat Cr. Receivable Account";
        RG23APartII.Supplementary := Supplementary;
        RG23APartII."Source Document Type" := "Source Document Type";
        RG23APartII."Source Document No." := "Source Document No.";
        GetRGEntryNo(
          RG23APartII."Posting Date",1,RG23APartII."Location E.C.C. No.",RG23APartII."Document No.",RG23APartII."RG Entry No.");
        GLSetup.GET;
        IF GLSetup."Check Negative RG Balance" THEN
          CheckNegativeBalance(1);
        RG23APartII.INSERT;
      END;
    END;

    PROCEDURE InsertRT12Service@1500026(ServiceLine@1500002 : Record 5902;ServiceInvHeader@1500001 : Record 5992;ServCrMemoHeader@1500000 : TEMPORARY Record 5994);
    VAR
      RT12Rec@1500004 : Record 13755;
      NextRT12EntryNo@1500003 : Integer;
    BEGIN
      WITH ServiceLine DO BEGIN
        RT12.RESET;
        RT12.LOCKTABLE;
        IF RT12.FINDLAST THEN
          NextRT12EntryNo := RT12."Entry No." + 1
        ELSE
          NextRT12EntryNo := 1;
        RT12.INIT;
        RT12."Entry No." := NextRT12EntryNo;
        RT12."Item No." := "No.";
        RT12."Product Description" := Description;
        RT12."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        RT12."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
        RT12."Location Code" := "Location Code";
        IF "Location Code" <> '' THEN BEGIN
          Location.GET("Location Code");
          RT12."E.C.C No." := Location."E.C.C. No."
        END ELSE BEGIN
          CompanyInformation.GET;
          RT12."E.C.C No." := CompanyInformation."E.C.C. No.";
        END;
        RT12.TESTFIELD("E.C.C No.");
        RT12.Unit := "Unit of Measure Code";
        IF "Qty. to Ship (Base)" <> 0 THEN BEGIN
          RT12."Order No." := ServiceInvHeader."No.";
          RT12."Posting Date" := ServiceInvHeader."Posting Date";

          IF NOT (Type IN [Type::"G/L Account",Type::Cost]) THEN BEGIN
            IF "Amount Including Excise" - "Excise Base Amount" <> 0 THEN
              RT12."Quantity Removed(with duty)" := -"Qty. to Ship (Base)"
            ELSE
              RT12."Quantity Removed(without duty)" := -"Qty. to Ship (Base)";
          END;
        END ELSE BEGIN
          RT12."Order No." := ServCrMemoHeader."No.";
          RT12."Posting Date" := ServCrMemoHeader."Posting Date";
          IF NOT (Type IN [Type::"G/L Account",Type::Cost]) THEN BEGIN
            IF "Amount Including Excise" - "Excise Base Amount" <> 0 THEN
              RT12."Quantity Removed(with duty)" := "Qty. to Invoice (Base)"
            ELSE
              RT12."Quantity Removed(without duty)" := "Qty. to Invoice (Base)";
            SalesCancellation := TRUE;
          END;
        END;
        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        ExcisePostingSetup.SETRANGE("From Date",0D,RT12."Posting Date");
        IF ExcisePostingSetup.FINDLAST THEN BEGIN
          RT12."Notification No." := ExcisePostingSetup."Notification No.";
          RT12."Notification Sl. No." := ExcisePostingSetup."Notification Sl. No.";
        END;

        RT12."BED %" := ExcisePostingSetup."BED %";
        RT12."AED(GSI) % / Amount" := ExcisePostingSetup."AED(GSI) %";
        RT12."AED (TTA) % / Amount" := ExcisePostingSetup."AED(TTA) %";
        RT12."SED % / Amount" := ExcisePostingSetup."SED %";
        RT12."SAED % / Amount" := ExcisePostingSetup."SAED %";
        RT12."CESS % / Amount" := ExcisePostingSetup."CESS %";
        RT12."NCCD % / Amount" := ExcisePostingSetup."NCCD %";
        RT12."eCess % / Amount" := ExcisePostingSetup."eCess %";
        RT12."SHE Cess % / Amount" := ExcisePostingSetup."SHE Cess %";
        RT12."ADET % / Amount" := ExcisePostingSetup."ADET %";
        RT12."ADE % / Amount" := ExcisePostingSetup."ADE %";
        IF SalesCancellation THEN BEGIN
          RT12."CENVAT Amount" := -"BED Amount";
          RT12."SED Amount" := -"SED Amount";
          RT12."AED (GSI) Amount" := -"AED(GSI) Amount";
          RT12."AED (TTA) Amount" := -"AED(TTA) Amount";
          RT12."SAED Amount" := -"SAED Amount";
          RT12."CESS Amount" := -"CESS Amount";
          RT12."NCCD Amount" := -"NCCD Amount";
          RT12."eCESS Amount" := -"eCess Amount";
          RT12."SHE Cess Amount" := -"SHE Cess Amount";
          RT12."ADET Amount" := -"ADET Amount";
          RT12."ADE Amount" := -"ADE Amount";
          RT12."Assessable Value" := -"Excise Base Amount";
        END ELSE BEGIN
          RT12."CENVAT Amount" := "BED Amount";
          RT12."SED Amount" := "SED Amount";
          RT12."AED (GSI) Amount" := "AED(GSI) Amount";
          RT12."AED (TTA) Amount" := "AED(TTA) Amount";
          RT12."SAED Amount" := "SAED Amount";
          RT12."CESS Amount" := "CESS Amount";
          RT12."NCCD Amount" := "NCCD Amount";
          RT12."eCESS Amount" := "eCess Amount";
          RT12."SHE Cess Amount" := "SHE Cess Amount";
          RT12."ADET Amount" := "ADET Amount";
          RT12."ADE Amount" := "ADE Amount";
          RT12."Assessable Value" := "Excise Base Amount";
        END;

        RT12."Quantity Removed" := RT12."Quantity Removed(with duty)" + RT12."Quantity Removed(without duty)";
        RT12."Quantity Manufactured" := 0;
        RT12."Quantity Received" := 0;
        RT12Rec.RESET;
        RT12Rec.SETRANGE("E.C.C No.",RT12."E.C.C No.");
        IF RT12Rec.FINDLAST THEN BEGIN
          RT12."Opening Balance" := RT12Rec."Closing Balance";
          RT12."Closing Balance" :=
            RT12Rec."Closing Balance" + (RT12."Quantity Removed(with duty)" + RT12."Quantity Removed(without duty)");
        END ELSE BEGIN
          RT12."Opening Balance" := 0;
          RT12."Closing Balance" := RT12."Quantity Removed";
        END;
        RT12."Rate of Duty %" := ExcisePostingSetup."BED %";
        RT12."Total Duty Payable" := "Amount Including Excise" - "Excise Base Amount";
        RT12."ADC VAT %" := ExcisePostingSetup."ADC VAT %";
        RT12."ADC VAT Amount" := "ADC VAT Amount";
        RT12.Supplementary := Supplementary;
        RT12."Source Document Type" := "Source Document Type";
        RT12."Source Document No." := "Source Document No.";
        RT12.INSERT;
      END;
    END;

    PROCEDURE InsertER2Service@1500027(ServiceLine@1500002 : Record 5902;ServInvHeader@1500001 : Record 5992;ServCrMemoHeader@1500000 : TEMPORARY Record 5994);
    VAR
      ER2@1500005 : Record 16564;
      ER2Rec@1500004 : Record 16564;
      NextER2EntryNo@1500003 : Integer;
    BEGIN
      WITH ServiceLine DO BEGIN
        ER2.LOCKTABLE;
        IF ER2.FINDLAST THEN
          NextER2EntryNo := ER2."Entry No." + 1
        ELSE
          NextER2EntryNo := 1;
        ER2.INIT;
        ER2."Entry No." := NextER2EntryNo;
        ER2."Item No." := "No.";
        ER2.Type := ER2.Type::Sale;
        ER2."Product Description" := Description;
        ER2."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        ER2."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
        ER2."Location Code" := "Location Code";
        IF "Location Code" <> '' THEN BEGIN
          Location.GET("Location Code");
          ER2."E.C.C No." := Location."E.C.C. No."
        END ELSE BEGIN
          CompanyInformation.GET;
          ER2."E.C.C No." := CompanyInformation."E.C.C. No.";
        END;
        ER2.TESTFIELD("E.C.C No.");
        ER2.Unit := "Unit of Measure Code";
        IF "Qty. to Ship (Base)" <> 0 THEN BEGIN
          ER2."Order No." := ServInvHeader."No.";
          ER2."Posting Date" := ServInvHeader."Posting Date";
          IF NOT (Type IN [Type::"G/L Account",Type::Cost]) THEN BEGIN
            IF "Amount Including Excise" - "Excise Base Amount" <> 0 THEN
              ER2."Quantity Removed(with duty)" := -"Qty. to Ship (Base)"
            ELSE
              ER2."Quantity Removed(without duty)" := -"Qty. to Ship (Base)";
          END;
        END ELSE BEGIN
          ER2."Order No." := ServCrMemoHeader."No.";

          ER2."Posting Date" := ServCrMemoHeader."Posting Date";
          IF NOT (Type IN [Type::"G/L Account",Type::Cost]) THEN BEGIN
            IF "Amount Including Excise" - "Excise Base Amount" <> 0 THEN
              ER2."Quantity Removed(with duty)" := "Qty. to Invoice (Base)"
            ELSE
              ER2."Quantity Removed(without duty)" := "Qty. to Invoice (Base)";
            SalesCancellation := TRUE;
          END;
        END;

        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        ExcisePostingSetup.SETRANGE("From Date",0D,ER2."Posting Date");
        IF ExcisePostingSetup.FINDLAST THEN BEGIN
          ER2."Notification No." := ExcisePostingSetup."Notification No.";
          ER2."Notification Sl. No." := ExcisePostingSetup."Notification Sl. No.";
          ER2."CTSH No." := ExcisePostingSetup."CTSH No.";
        END;

        ER2."BED %" := ExcisePostingSetup."BED %";
        ER2."AED(GSI) % / Amount" := ExcisePostingSetup."AED(GSI) %";
        ER2."AED (TTA) % / Amount" := ExcisePostingSetup."AED(TTA) %";
        ER2."SED % / Amount" := ExcisePostingSetup."SED %";
        ER2."SAED % / Amount" := ExcisePostingSetup."SAED %";
        ER2."CESS % / Amount" := ExcisePostingSetup."CESS %";
        ER2."NCCD % / Amount" := ExcisePostingSetup."NCCD %";
        ER2."eCess % / Amount" := ExcisePostingSetup."eCess %";
        ER2."ADET % / Amount" := ExcisePostingSetup."ADET %";
        ER2."ADE % / Amount" := ExcisePostingSetup."ADE %";
        ER2."ADC VAT % / Amount" := ExcisePostingSetup."ADC VAT %";
        ER2."SHE Cess % / Amount" := ExcisePostingSetup."SHE Cess %";
        IF SalesCancellation THEN BEGIN
          ER2."CENVAT Amount" := -"BED Amount";
          ER2."SED Amount" := -"SED Amount";
          ER2."AED (GSI) Amount" := -"AED(GSI) Amount";
          ER2."AED (TTA) Amount" := -"AED(TTA) Amount";
          ER2."SAED Amount" := -"SAED Amount";
          ER2."CESS Amount" := -"CESS Amount";
          ER2."NCCD Amount" := -"NCCD Amount";
          ER2."eCESS Amount" := -"eCess Amount";
          ER2."SHE Cess Amount" := -"SHE Cess Amount";
          ER2."ADET Amount" := -"ADET Amount";
          ER2."ADE Amount" := -"ADE Amount";
          ER2."Assessable Value" := -"Excise Base Amount";
        END ELSE BEGIN
          ER2."CENVAT Amount" := "BED Amount";
          ER2."SED Amount" := "SED Amount";
          ER2."AED (GSI) Amount" := "AED(GSI) Amount";
          ER2."AED (TTA) Amount" := "AED(TTA) Amount";
          ER2."SAED Amount" := "SAED Amount";
          ER2."CESS Amount" := "CESS Amount";
          ER2."NCCD Amount" := "NCCD Amount";
          ER2."eCESS Amount" := "eCess Amount";
          ER2."SHE Cess Amount" := "SHE Cess Amount";
          ER2."ADET Amount" := "ADET Amount";
          ER2."ADE Amount" := "ADE Amount";
          ER2."Assessable Value" := "Excise Base Amount";
        END;
        ER2."ADC VAT Amount" := "ADC VAT Amount";
        ER2."Quantity Removed" := ER2."Quantity Removed(with duty)" + ER2."Quantity Removed(without duty)";
        ER2."Quantity Manufactured" := 0;
        ER2."Quantity Received" := 0;
        ER2Rec.RESET;
        ER2Rec.SETRANGE("E.C.C No.",ER2."E.C.C No.");
        IF ER2Rec.FINDLAST THEN BEGIN
          ER2."Opening Balance" := ER2Rec."Closing Balance";
          ER2."Closing Balance" :=
            ER2Rec."Closing Balance" + (ER2."Quantity Removed(with duty)" + ER2."Quantity Removed(without duty)");
        END ELSE BEGIN
          ER2."Opening Balance" := 0;
          ER2."Closing Balance" := ER2."Quantity Removed";
        END;
        ER2."Assessable Value" := "Excise Base Amount";
        ER2."Rate of Duty %" := ExcisePostingSetup."BED %";
        ER2."Total Duty Payable" := "Amount Including Excise" - "Excise Base Amount";
        ER2.INSERT;
      END;
    END;

    PROCEDURE InitRG23DService@1500028(ServiceLine@1500005 : Record 5902;TransType@1500004 : ' ,Purchase,Sale';EntryType@1500003 : ' ,Transfer,Invoice,Return';SourceType@1500002 : ' ,Customer,VENDor,Item';SourceCode@1500001 : Code[20];DocNo@1500000 : Code[20]);
    VAR
      RG23D@1500010 : Record 16537;
      RG23D2@1500009 : Record 16537;
      DetailRG23D@1500008 : Record 16533;
      DetailRG23D2@1500007 : Record 16533;
      ServiceHeader@1500006 : Record 5900;
    BEGIN
      WITH ServiceLine DO BEGIN
        ServiceHeader.GET("Document Type","Document No.");
        IF (NOT ServiceHeader.Trading) OR ("Qty. to Invoice" = 0) THEN
          EXIT;
        IF ("Excise Accounting Type" = "Excise Accounting Type"::"Without CENVAT") OR (Type <> Type::Item) THEN
          EXIT;
        DetailRG23D.SETCURRENTKEY("Document Type","Order No.","Line No.","Transaction Type");
        DetailRG23D.SETRANGE("Document Type",GetRG23DocType(ServiceHeader."Document Type"));
        DetailRG23D.SETRANGE("Order No.","Document No.");
        DetailRG23D.SETRANGE("Line No.","Line No.");
        DetailRG23D.SETRANGE("Document No.",'');
        DetailRG23D.SETRANGE("Transaction Type",DetailRG23D."Transaction Type"::Sale);
        IF DetailRG23D.FINDSET THEN
          REPEAT
            RG23D2.GET(DetailRG23D."RG 23 D Entry No.");
            RG23D2.CALCFIELDS("Remaining Quantity");
            RG23D2.Closed := RG23D2."Remaining Quantity" = 0;
            RG23D2.MODIFY(TRUE);
            RG23D.INIT;
            RG23D."Entry No." := GetRG23DEntryNo;
            RG23D."Posting Date" := ServiceHeader."Posting Date";
            RG23D."Document Type" := DetailRG23D."Document Type";
            RG23D."Document No." := DocNo;
            RG23D."Item No." := "No.";
            RG23D."Line No." := "Line No.";
            RG23D."Transaction Type" := TransType;
            RG23D.Type := EntryType;
            RG23D."Location Code" := "Location Code";
            RG23D."Source Type" := SourceType;
            RG23D."Source Code" := SourceCode;
            RG23D.Quantity := DetailRG23D.Quantity;
            RG23D.Amount := RG23D2."Excise Amt Per Unit" * DetailRG23D.Quantity;
            RG23D."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
            RG23D."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
            RG23D."Excise Base Amt Per Unit" := -1 * RG23D2."Excise Base Amt Per Unit";
            RG23D."Excise Amt Per Unit" := -1 * RG23D2."Excise Amt Per Unit";
            RG23D."Unit of Measure" := "Unit of Measure";
            RG23D."BED Amount Per Unit" := -1 * RG23D2."BED Amount Per Unit";
            RG23D."eCess Amount Per Unit" := -1 * RG23D2."eCess Amount Per Unit";
            RG23D."SHE Cess Amount Per Unit" := -1 * RG23D2."SHE Cess Amount Per Unit";
            RG23D."AED(GSI) Amount Per Unit" := -1 * RG23D2."AED(GSI) Amount Per Unit";
            RG23D."SED Amount Per Unit" := -1 * RG23D2."SED Amount Per Unit";
            RG23D."SAED Amount Per Unit" := -1 * RG23D2."SAED Amount Per Unit";
            RG23D."CESS Amount Per Unit" := -1 * RG23D2."CESS Amount Per Unit";
            RG23D."NCCD Amount Per Unit" := -1 * RG23D2."NCCD Amount Per Unit";
            RG23D."ADET Amount Per Unit" := -1 * RG23D2."ADET Amount Per Unit";
            RG23D."AED(TTA) Amount Per Unit" := -1 * RG23D2."AED(TTA) Amount Per Unit";
            RG23D."ADE Amount Per Unit" := -1 * RG23D2."ADE Amount Per Unit";
            RG23D."ADC VAT Amount Per Unit" := -1 * RG23D2."ADC VAT Amount Per Unit";
            RG23D.CVD := RG23D2.CVD;
            RG23D."Line Amount Per Unit" := -1 * RG23D2."Line Amount Per Unit";
            RG23D.Year := DATE2DMY(RG23D."Posting Date",3);
            RG23D.Month := DATE2DMY(RG23D."Posting Date",2);
            RG23D."Ref. Entry No." := DetailRG23D."RG 23 D Entry No.";
            RG23D."Order No." := "Document No.";
            RG23D."Detail RG 23 D Entry No." := DetailRG23D."Entry No.";
            IF Location.GET("Location Code") THEN
              RG23D."E.C.C. No." := Location."E.C.C. No."
            ELSE BEGIN
              CompanyInformation.GET;
              RG23D."E.C.C. No." := CompanyInformation."E.C.C. No."
            END;
            RG23D."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
            RG23D."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
            RG23D."Vendor Invoice No." := RG23D2."Vendor Invoice No.";
            RG23D."Gen. Bus. Posting Group" := "Gen. Bus. Posting Group";
            RG23D."Gen. Prod. Posting Group" := "Gen. Prod. Posting Group";
            GetRGEntryNo(RG23D."Posting Date",4,RG23D."E.C.C. No.",RG23D."Document No.",RG23D."RG Entry No.");
            RG23D.INSERT(TRUE);
            DetailRG23D2 := DetailRG23D;
            DetailRG23D2."Document No." := DocNo;
            DetailRG23D2.MODIFY(TRUE);
          UNTIL DetailRG23D.NEXT = 0;
      END;
    END;

    PROCEDURE InitRG23DServiceReturn@1500029(ServiceLine@1500005 : Record 5902;TransType@1500004 : ' ,Purchase,Sale';EntryType@1500003 : ' ,Transfer,Invoice,Return';SourceType@1500002 : ' ,Customer,VENDor,Item';SourceCode@1500001 : Code[20];DocNo@1500000 : Code[20]);
    VAR
      RG23D@1500009 : Record 16537;
      RG23D2@1500008 : Record 16537;
      DetailRG23D@1500007 : Record 16533;
      ServiceHeader@1500006 : Record 5900;
    BEGIN
      WITH ServiceLine DO BEGIN
        ServiceHeader.GET("Document Type","Document No.");
        IF (NOT ServiceHeader.Trading) OR ("Qty. to Invoice" = 0) THEN
          EXIT;
        IF ("Excise Accounting Type" = "Excise Accounting Type"::"Without CENVAT") OR (Type <> Type::Item) THEN
          EXIT;
        DetailRG23D.SETCURRENTKEY("Document Type","Order No.","Line No.","Transaction Type");
        DetailRG23D.SETRANGE("Document Type",GetRG23DocType(ServiceHeader."Document Type"));
        DetailRG23D.SETRANGE("Order No.","Document No.");
        DetailRG23D.SETRANGE("Line No.","Line No.");
        DetailRG23D.SETRANGE("Document No.",'');
        DetailRG23D.SETRANGE("Transaction Type",DetailRG23D."Transaction Type"::Sale);
        IF DetailRG23D.FINDSET THEN
          REPEAT
            RG23D2.GET(DetailRG23D."RG 23 D Entry No.");
            RG23D2.CALCFIELDS("Remaining Quantity");
            RG23D2.Closed := RG23D2."Remaining Quantity" = 0;
            RG23D2.MODIFY(TRUE);
            RG23D.INIT;
            RG23D."Entry No." := GetRG23DEntryNo;
            RG23D."Posting Date" := ServiceHeader."Posting Date";
            RG23D."Document Type" := DetailRG23D."Document Type";
            RG23D."Document No." := DocNo;
            RG23D."Item No." := "No.";
            RG23D."Line No." := "Line No.";
            RG23D."Transaction Type" := TransType;
            RG23D.Type := EntryType;
            RG23D."Location Code" := "Location Code";
            RG23D."Source Type" := SourceType;
            RG23D."Source Code" := SourceCode;
            RG23D.Quantity := DetailRG23D.Quantity;
            RG23D.Amount := RG23D2."Excise Amt Per Unit" * DetailRG23D.Quantity;
            RG23D."Excise Base Amt Per Unit" := RG23D2."Excise Base Amt Per Unit";
            RG23D."Excise Amt Per Unit" := RG23D2."Excise Amt Per Unit";
            RG23D."Unit of Measure" := "Unit of Measure";
            RG23D."BED Amount Per Unit" := RG23D2."BED Amount Per Unit";
            RG23D."eCess Amount Per Unit" := RG23D2."eCess Amount Per Unit";
            RG23D."SHE Cess Amount Per Unit" := RG23D2."SHE Cess Amount Per Unit";
            RG23D."AED(GSI) Amount Per Unit" := RG23D2."AED(GSI) Amount Per Unit";
            RG23D."SED Amount Per Unit" := RG23D2."SED Amount Per Unit";
            RG23D."SAED Amount Per Unit" := RG23D2."SAED Amount Per Unit";
            RG23D."CESS Amount Per Unit" := RG23D2."CESS Amount Per Unit";
            RG23D."NCCD Amount Per Unit" := RG23D2."NCCD Amount Per Unit";
            RG23D."ADET Amount Per Unit" := RG23D2."ADET Amount Per Unit";
            RG23D."AED(TTA) Amount Per Unit" := RG23D2."AED(TTA) Amount Per Unit";
            RG23D."ADE Amount Per Unit" := RG23D2."ADE Amount Per Unit";
            RG23D."ADC VAT Amount Per Unit" := RG23D2."ADC VAT Amount Per Unit";
            RG23D.CVD := RG23D2.CVD;
            RG23D."Line Amount Per Unit" := RG23D2."Line Amount Per Unit";
            RG23D.Year := DATE2DMY(RG23D."Posting Date",3);
            RG23D.Month := DATE2DMY(RG23D."Posting Date",2);
            RG23D."Ref. Entry No." := DetailRG23D."RG 23 D Entry No.";
            RG23D."Order No." := "Document No.";
            RG23D."Detail RG 23 D Entry No." := DetailRG23D."Entry No.";
            IF Location.GET("Location Code") THEN
              RG23D."E.C.C. No." := Location."E.C.C. No."
            ELSE BEGIN
              CompanyInformation.GET;
              RG23D."E.C.C. No." := CompanyInformation."E.C.C. No."
            END;
            RG23D."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
            RG23D."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
            RG23D."Gen. Bus. Posting Group" := "Gen. Bus. Posting Group";
            RG23D."Gen. Prod. Posting Group" := "Gen. Prod. Posting Group";
            RG23D."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
            RG23D."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
            GetRGEntryNo(RG23D."Posting Date",4,RG23D."E.C.C. No.",RG23D."Document No.",RG23D."RG Entry No.");

            RG23D.INSERT(TRUE);
            DetailRG23D."Document No." := DocNo;
            DetailRG23D.MODIFY(TRUE);
          UNTIL DetailRG23D.NEXT = 0;
      END;
    END;

    PROCEDURE GetRG23DocType@1500031(ServHeaderDocType@1500000 : 'Quote,Order,Invoice,Credit Memo') : Integer;
    VAR
      RG23DocType@1500001 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,   ';
    BEGIN
      CASE ServHeaderDocType OF
        ServHeaderDocType::Order:
          EXIT(RG23DocType::Order);
        ServHeaderDocType::Invoice:
          EXIT(RG23DocType::Invoice);
        ServHeaderDocType::"Credit Memo":
          EXIT(RG23DocType::"Credit Memo");
      END;
    END;

    BEGIN
    END.
  }
}

