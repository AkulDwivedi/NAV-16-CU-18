OBJECT Page 35704 _VAT Adjustment Journal
{
  OBJECT-PROPERTIES
  {
    Date=24-04-16;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.45778;
  }
  PROPERTIES
  {
    CaptionML=[ENU=_VAT Adjustment Journal;
               ENN=_VAT Adjustment Journal];
    SaveValues=No;
    InsertAllowed=No;
    SourceTable=Table16587;
    DelayedInsert=Yes;
    DataCaptionFields=Journal Batch Name;
    PageType=Worksheet;
    AutoSplitKey=Yes;
    OnOpenPage=VAR
                 JnlSelected@1280000 : Boolean;
               BEGIN
                 BalAccName := '';
                 OpenedFromBatch := ("Journal Batch Name" <> '') AND ("Journal Template Name" = '');
                 IF OpenedFromBatch THEN BEGIN
                   CurrentJnlBatchName := "Journal Batch Name";
                   GenJnlManagement.OpenTaxJnl(CurrentJnlBatchName,Rec);
                   EXIT;
                 END;
                 GenJnlManagement.TaxTemplateSelection(PAGE::"VAT Adjustment Journal",2,Rec,JnlSelected);
                 IF NOT JnlSelected THEN
                   ERROR('');
                 GenJnlManagement.OpenTaxJnl(CurrentJnlBatchName,Rec);
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       AfterGetCurrentRecord;
                     END;

    OnNewRecord=BEGIN
                  SetUpNewLine(xRec,Balance,FALSE);
                  CLEAR(AccName);
                  AfterGetCurrentRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1500005 ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ENN=&Line];
                      Image=Line }
      { 1500008 ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=&Dimensions;
                                 ENN=&Dimensions];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1500000 ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 ENN=P&osting];
                      Image=Post }
      { 1500007 ;2   ;Action    ;
                      ShortCutKey=F9;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post;
                                 ENN=Post];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 // VATManagement.PostAdjustmentJournal(Rec);
                                 TaxJournalMgt.PostTaxJournal(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1500013;1;Group     ;
                CaptionML=[ENU=General;
                           ENN=General] }

    { 1500045;2;Field     ;
                Lookup=Yes;
                CaptionML=[ENU=Batch Name;
                           ENN=Batch Name];
                SourceExpr=CurrentJnlBatchName;
                Visible=TRUE;
                OnValidate=BEGIN
                             GenJnlManagement.CheckNameTax(CurrentJnlBatchName,Rec);
                             CurrentJnlBatchNameOnAfterVali;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           GenJnlManagement.LookupNameTax(CurrentJnlBatchName,Rec);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1500043;2;Field     ;
                CaptionML=[ENU=VAT Entry No.;
                           ENN=VAT Entry No.];
                BlankZero=Yes;
                SourceExpr="Transaction No";
                TableRelation="Detailed Tax Entry"."Entry No." WHERE (Settlement=FILTER(No),
                                                                      Entry Type=FILTER(Initial Entry),
                                                                      Document Type=FILTER(<>Credit Memo),
                                                                      Transaction Type=FILTER(Purchase));
                OnValidate=VAR
                             TaxJnlLine@1280003 : Record 16587;
                             Vend@1500001 : Record 23;
                             Cust@1500002 : Record 18;
                             GeneralPostingSetup@1500003 : Record 252;
                             Item@1500004 : Record 27;
                             FixedAsset@1500005 : Record 5600;
                             GLAccount@1500006 : Record 15;
                             ItemLedgerEntry@1500007 : Record 32;
                             DimMgt@1500009 : Codeunit 408;
                             LineNo@1500011 : Integer;
                             DocumentNo@1500010 : Code[20];
                           BEGIN
                             TaxJnlBatch.GET("Journal Template Name","Journal Batch Name");
                             IF TaxJnlBatch."No. Series" <> '' THEN BEGIN
                               CLEAR(NoSeriesMgt);
                               DocumentNo := NoSeriesMgt.TryGetNextNo(TaxJnlBatch."No. Series","Posting Date");
                             END;

                             TaxJnlLine.LOCKTABLE;

                             TaxJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
                             TaxJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
                             IF TaxJnlLine.FINDLAST THEN
                               LineNo := TaxJnlLine."Line No." + 10000
                             ELSE
                               LineNo := 10000;
                             DetailedTaxEntry.GET("Transaction No");

                             IF DetailedTaxEntry.Deferment THEN BEGIN
                               IF DetailedTaxEntry."Primary Deferment Entry No." <> DetailedTaxEntry."Entry No." THEN BEGIN
                                 DetailedTaxEntry.GET(DetailedTaxEntry."Primary Deferment Entry No.");
                                 MESSAGE(Text16500,DetailedTaxEntry."Entry No.");
                               END;
                             END;

                             "Transaction No" := DetailedTaxEntry."Entry No.";
                             TaxJnlLine.INIT;
                             TaxJnlLine."Document No." := DetailedTaxEntry."Document No.";
                             TaxJnlLine."Journal Template Name" := "Journal Template Name";
                             TaxJnlLine."Journal Batch Name" := "Journal Batch Name";
                             TaxJnlLine."Line No." := LineNo;
                             TaxJnlLine.Adjustment := TRUE;
                             TaxJnlLine."Posting Date" := WORKDATE;
                             IF DetailedTaxEntry."Source Type" = DetailedTaxEntry."Source Type"::Vendor THEN BEGIN
                               Vend.GET(DetailedTaxEntry."Source No.");
                               GenBussinessPostingGroup := Vend."Gen. Bus. Posting Group"
                             END;
                             IF DetailedTaxEntry."Source Type" = DetailedTaxEntry."Source Type"::Customer THEN BEGIN
                               Cust.GET(DetailedTaxEntry."Source No.");
                               GenBussinessPostingGroup := Cust."Gen. Bus. Posting Group"
                             END;
                             CASE DetailedTaxEntry.Type OF
                               DetailedTaxEntry.Type::Item:
                                 BEGIN
                                   Item.GET(DetailedTaxEntry."No.");
                                   GenProductPostingGroup := Item."Gen. Prod. Posting Group"
                                 END;
                               DetailedTaxEntry.Type::"Fixed Asset":
                                 BEGIN
                                   FixedAsset.GET(DetailedTaxEntry."No.");
                                   GenProductPostingGroup := FixedAsset."Gen. Prod. Posting Group"
                                 END;
                               DetailedTaxEntry.Type::"G/L Account":
                                 BEGIN
                                   GLAccount.GET(DetailedTaxEntry."No.");
                                   GenProductPostingGroup := GLAccount."Gen. Prod. Posting Group"
                                 END;
                             END;
                             GeneralPostingSetup.GET(GenBussinessPostingGroup,GenProductPostingGroup);
                             TaxJnlLine."Account Type" := TaxJnlLine."Account Type"::"G/L Account";
                             IF DetailedTaxEntry."Transaction Type" = DetailedTaxEntry."Transaction Type"::Purchase THEN
                               TaxJnlLine."Account No." := GeneralPostingSetup."Purch. Account"
                             ELSE
                               TaxJnlLine."Account No." := GeneralPostingSetup."Sales Account";
                             TaxJnlLine."Document Type" := DetailedTaxEntry."Document Type";
                             TaxJnlLine."Bal. Account No." := DetailedTaxEntry."G/L Account No.";
                             TaxJnlLine.Description := 'VAT Adj. Entry For Doc. No. ' + DetailedTaxEntry."Document No.";
                             TaxJnlLine."VAT Percentage IN" := DetailedTaxEntry."Tax %";
                             TaxJnlLine."VAT Amount IN" := DetailedTaxEntry."Tax Amount";
                             TaxJnlLine."VAT Base Amount IN" := DetailedTaxEntry."Tax Base Amount";
                             TaxJnlLine."Input Credit/Output Tax Amount" := DetailedTaxEntry."Input Credit/Output Tax Amount";
                             TaxJnlLine."Amount Loaded on Item" := DetailedTaxEntry."Amount Loaded on Item";
                             TaxJnlLine."Original Quantity" := DetailedTaxEntry."Remaining Quantity";
                             TaxJnlLine."Original Location" := DetailedTaxEntry."Location Code";
                             TaxJnlLine."Original Non ITC Claim Usage %" := DetailedTaxEntry."Non ITC Claimable Usage %";
                             TaxJnlLine."VAT Transaction No." := DetailedTaxEntry."Entry No.";
                             TaxJnlLine."System-Created Entry" := TRUE;
                             TaxJnlLine."VAT Adjustment Entry" := TRUE;
                             IF DetailedTaxEntry.Type = DetailedTaxEntry.Type::Item THEN BEGIN
                               ItemLedgerEntry.GET(DetailedTaxEntry."Item Ledger Entry No.");
                               TaxJnlLine."Dimension Set ID" := ItemLedgerEntry."Dimension Set ID";
                               DimMgt.UpdateGlobalDimFromDimSetID(ItemLedgerEntry."Dimension Set ID",TaxJnlLine."Shortcut Dimension 1 Code",
                                 TaxJnlLine."Shortcut Dimension 2 Code");
                             END ELSE
                               IF DetailedTaxEntry.Type = DetailedTaxEntry.Type::"Fixed Asset" THEN
                                 CreateDimensions(DATABASE::"Fixed Asset",FixedAsset."No.",TaxJnlLine)
                               ELSE
                                 IF DetailedTaxEntry.Type = DetailedTaxEntry.Type::"G/L Account" THEN
                                   CreateDimensions(DATABASE::"G/L Account",GLAccount."No.",TaxJnlLine);
                             TaxJnlLine.INSERT;
                             TransactionNoOnAfterValidate;
                           END;
                            }

    { 1500047;1;Group     ;
                GroupType=Repeater }

    { 1500048;2;Field     ;
                SourceExpr="Posting Date" }

    { 1500050;2;Field     ;
                SourceExpr="Document Type";
                Editable=FALSE }

    { 1500052;2;Field     ;
                SourceExpr="Document No.";
                Editable=FALSE }

    { 1500054;2;Field     ;
                SourceExpr="Account Type";
                Editable=FALSE }

    { 1500056;2;Field     ;
                SourceExpr="Account No.";
                Editable=FALSE }

    { 1500058;2;Field     ;
                SourceExpr=Description;
                Editable=FALSE }

    { 1500160;2;Field     ;
                SourceExpr="VAT Adjustment Type" }

    { 1500062;2;Field     ;
                SourceExpr="VAT Base Amount IN";
                Editable=FALSE }

    { 1500064;2;Field     ;
                SourceExpr="VAT Amount IN";
                Editable=FALSE }

    { 1500066;2;Field     ;
                SourceExpr="VAT Percentage IN";
                Editable=FALSE }

    { 1500068;2;Field     ;
                SourceExpr="Original Location" }

    { 1500070;2;Field     ;
                SourceExpr="Location Code";
                OnValidate=BEGIN
                             IF ("VAT Adjustment Type" = "VAT Adjustment Type"::"Change in Usage") OR
                                ("VAT Adjustment Type" = "VAT Adjustment Type"::"Lost/Destroy") OR
                                ("VAT Adjustment Type" = "VAT Adjustment Type"::Consumed)
                             THEN
                               TESTFIELD("Location Code",'');
                           END;
                            }

    { 1500072;2;Field     ;
                SourceExpr="Original Quantity" }

    { 1500074;2;Field     ;
                SourceExpr="Quantity to be Adjusted" }

    { 1500076;2;Field     ;
                SourceExpr="Original Non ITC Claim Usage %" }

    { 1500078;2;Field     ;
                SourceExpr="Non ITC Claimable Usage %";
                OnValidate=BEGIN
                             IF ("VAT Adjustment Type" = "VAT Adjustment Type"::"Branch Transfer") OR
                                ("VAT Adjustment Type" = "VAT Adjustment Type"::"Lost/Destroy") OR
                                ("VAT Adjustment Type" = "VAT Adjustment Type"::Consumed)
                             THEN
                               TESTFIELD("Non ITC Claimable Usage %",0);
                           END;
                            }

    { 1500080;2;Field     ;
                SourceExpr="Input Credit/Output Tax Amount" }

    { 1500082;2;Field     ;
                SourceExpr="Amount Loaded on Item" }

    { 1500084;2;Field     ;
                CaptionML=[ENU=Amount Of Adjustment On Item;
                           ENN=Amount Of Adjustment On Item];
                SourceExpr=Amount;
                Editable=FALSE }

    { 1500086;2;Field     ;
                SourceExpr="Bal. Account Type";
                Editable=FALSE }

    { 1500088;2;Field     ;
                SourceExpr="Bal. Account No.";
                Editable=FALSE;
                OnValidate=BEGIN
                             GenJnlManagement.GetAccountsTax(Rec,AccName,BalAccName);
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;
                            }

    { 1500009;2;Field     ;
                SourceExpr="Shortcut Dimension 1 Code" }

    { 1500011;2;Field     ;
                SourceExpr="Shortcut Dimension 2 Code" }

    { 1500006;1;Group      }

    { 1500003;2;Field     ;
                CaptionML=[ENU=Account Type;
                           ENN=Account Type];
                SourceExpr=AccName;
                Editable=FALSE }

    { 1500001;2;Field     ;
                CaptionML=[ENU=Bal. Account Name;
                           ENN=Bal. Account Name];
                SourceExpr=BalAccName;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      TaxJnlBatch@1500007 : Record 16586;
      DetailedTaxEntry@1500004 : Record 16522;
      GenJnlManagement@1500014 : Codeunit 230;
      NoSeriesMgt@1500006 : Codeunit 396;
      TaxJournalMgt@1500003 : Codeunit 16508;
      Balance@1500010 : Decimal;
      CurrentJnlBatchName@1500013 : Code[10];
      ShortcutDimCode@1500009 : ARRAY [8] OF Code[20];
      GenBussinessPostingGroup@1500002 : Code[10];
      GenProductPostingGroup@1500000 : Code[10];
      AccName@1500012 : Text[50];
      BalAccName@1500011 : Text[50];
      "Transaction No"@1500008 : Integer;
      Text16500@1500001 : TextConst 'ENU=This is a Deferment Entry and the parent entry no. %1 has been selected automatically.;ENN=This is a Deferment Entry and the parent entry no. %1 has been selected automatically.';
      OpenedFromBatch@1500015 : Boolean;

    PROCEDURE CreateDimensions@1500000(Type1@1500000 : Integer;No1@1500001 : Code[10];VAR TaxJournalLine@1500002 : Record 16587);
    VAR
      TableID@1500003 : ARRAY [10] OF Integer;
      No@1500004 : ARRAY [10] OF Code[20];
      DimMgt@1500005 : Codeunit 408;
    BEGIN
      TableID[1] := Type1;
      No[1] := No1;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      "Dimension Set ID" :=
        DimMgt.GetDefaultDimID(
          TableID,No,TaxJournalLine."Source Code",TaxJournalLine."Shortcut Dimension 1 Code",
          TaxJournalLine."Shortcut Dimension 2 Code",0,0);
      DimMgt.UpdateDefaultDim(DATABASE::"Tax Journal Line",No1,
        TaxJournalLine."Shortcut Dimension 1 Code",TaxJournalLine."Shortcut Dimension 2 Code");
    END;

    LOCAL PROCEDURE TransactionNoOnAfterValidate@19023199();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE CurrentJnlBatchNameOnAfterVali@19002411();
    BEGIN
      CurrPage.SAVERECORD;
      GenJnlManagement.SetNameTax(CurrentJnlBatchName,Rec);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE AfterGetCurrentRecord@19077479();
    BEGIN
      xRec := Rec;
      GenJnlManagement.GetAccountsTax(Rec,AccName,BalAccName);
    END;

    BEGIN
    END.
  }
}

