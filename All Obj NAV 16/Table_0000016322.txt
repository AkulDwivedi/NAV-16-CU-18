OBJECT Table 16322 Sub Order Comp. List Vend
{
  OBJECT-PROPERTIES
  {
    Date=24-04-16;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.45778;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Line Type" = "Line Type"::Production THEN
                 ERROR(Text002);
             END;

    OnDelete=BEGIN
               IF "Line Type" = "Line Type"::Production THEN
                 ERROR(Text002);
             END;

    CaptionML=[ENU=Sub Order Comp. List Vend;
               ENN=Sub Order Comp. List Vend];
  }
  FIELDS
  {
    { 1   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ENN=Document No.] }
    { 2   ;   ;Document Line No.   ;Integer       ;CaptionML=[ENU=Document Line No.;
                                                              ENN=Document Line No.] }
    { 6   ;   ;Parent Item No.     ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Parent Item No.;
                                                              ENN=Parent Item No.] }
    { 7   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ENN=Line No.] }
    { 8   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                IF "Line Type" = "Line Type"::Production THEN
                                                                  ERROR(Text002);
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              ENN=Item No.] }
    { 9   ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   OnValidate=BEGIN
                                                                IF "Line Type" = "Line Type"::Production THEN
                                                                  ERROR(Text002);
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure;
                                                              ENN=Unit of Measure];
                                                   Editable=No }
    { 10  ;   ;Expected Quantity   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Component"."Expected Quantity" WHERE (Status=CONST(Released),
                                                                                                                      Prod. Order No.=FIELD(Production Order No.),
                                                                                                                      Prod. Order Line No.=FIELD(Production Order Line No.),
                                                                                                                      Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Expected Quantity;
                                                              ENN=Expected Quantity];
                                                   DecimalPlaces=2:5;
                                                   Editable=No }
    { 12  ;   ;Quantity (Base)     ;Decimal       ;CaptionML=[ENU=Quantity (Base);
                                                              ENN=Quantity (Base)] }
    { 14  ;   ;Description         ;Text30        ;CaptionML=[ENU=Description;
                                                              ENN=Description] }
    { 20  ;   ;Scrap %             ;Decimal       ;OnValidate=BEGIN
                                                                GetProdOrderCompLine;
                                                                ProdOrderComp.VALIDATE("Scrap %","Scrap %");
                                                                ProdOrderComp.MODIFY;
                                                                CALCFIELDS("Expected Quantity");
                                                                "Total Scrap Quantity" := ("Expected Quantity" * "Scrap %") / 100;
                                                              END;

                                                   CaptionML=[ENU=Scrap %;
                                                              ENN=Scrap %];
                                                   DecimalPlaces=0:5;
                                                   MaxValue=100;
                                                   BlankNumbers=BlankNeg }
    { 21  ;   ;Variant Code        ;Code10        ;CaptionML=[ENU=Variant Code;
                                                              ENN=Variant Code] }
    { 45  ;   ;Quantity per        ;Decimal       ;CaptionML=[ENU=Quantity per;
                                                              ENN=Quantity per];
                                                   DecimalPlaces=0:5 }
    { 46  ;   ;Company Location    ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No),
                                                                                 Subcontracting Location=CONST(No));
                                                   CaptionML=[ENU=Company Location;
                                                              ENN=Company Location] }
    { 47  ;   ;Vendor Location     ;Code20        ;CaptionML=[ENU=Vendor Location;
                                                              ENN=Vendor Location] }
    { 48  ;   ;Production Order No.;Code20        ;CaptionML=[ENU=Production Order No.;
                                                              ENN=Production Order No.] }
    { 49  ;   ;Production Order Line No.;Integer  ;CaptionML=[ENU=Production Order Line No.;
                                                              ENN=Production Order Line No.] }
    { 50  ;   ;Line Type           ;Option        ;CaptionML=[ENU=Line Type;
                                                              ENN=Line Type];
                                                   OptionCaptionML=[ENU=Production,Purchase;
                                                                    ENN=Production,Purchase];
                                                   OptionString=Production,Purchase }
    { 51  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              ENN=Gen. Prod. Posting Group] }
    { 52  ;   ;Quantity at Vendor Location;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry"."Remaining Quantity" WHERE (Entry Type=CONST(Transfer),
                                                                                                                   Location Code=FIELD(Vendor Location),
                                                                                                                   Order Type=CONST(Production),
                                                                                                                   Order No.=FIELD(Production Order No.),
                                                                                                                   Order Line No.=FIELD(Production Order Line No.),
                                                                                                                   Prod. Order Comp. Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Quantity at Vendor Location;
                                                              ENN=Quantity at Vendor Location];
                                                   Editable=No }
    { 53  ;   ;Total Scrap Quantity;Decimal       ;OnValidate=BEGIN
                                                                CALCFIELDS("Expected Quantity");
                                                                "Scrap %" := (100 * "Total Scrap Quantity") / "Expected Quantity";
                                                                GetProdOrderCompLine;
                                                                ProdOrderComp.VALIDATE("Scrap %","Scrap %");
                                                                ProdOrderComp.MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Total Scrap Quantity;
                                                              ENN=Total Scrap Quantity] }
    { 54  ;   ;Qty. Received       ;Decimal       ;CaptionML=[ENU=Qty. Received;
                                                              ENN=Qty. Received] }
    { 55  ;   ;Qty. Received (Base);Decimal       ;CaptionML=[ENU=Qty. Received (Base);
                                                              ENN=Qty. Received (Base)] }
    { 56  ;   ;Qty. to Receive     ;Decimal       ;OnValidate=BEGIN
                                                                ReinitializeApplication;
                                                              END;

                                                   CaptionML=[ENU=Qty. to Receive;
                                                              ENN=Qty. to Receive] }
    { 57  ;   ;Qty. to Consume     ;Decimal       ;OnValidate=BEGIN
                                                                GetProdOrderCompLine;
                                                                GetPurchaseOrderLine;
                                                                UpdateConInProdCompLines;
                                                                ReinitializeApplication
                                                              END;

                                                   CaptionML=[ENU=Qty. to Consume;
                                                              ENN=Qty. to Consume] }
    { 59  ;   ;Qty. to Return (C.E.);Decimal      ;OnValidate=BEGIN
                                                                UpdateConInProdCompLines;
                                                                ReinitializeApplication
                                                              END;

                                                   CaptionML=[ENU=Qty. to Return (C.E.);
                                                              ENN=Qty. to Return (C.E.)];
                                                   Editable=No }
    { 60  ;   ;Qty. To Return (V.E.);Decimal      ;OnValidate=BEGIN
                                                                ReinitializeApplication
                                                              END;

                                                   CaptionML=[ENU=Qty. To Return (V.E.);
                                                              ENN=Qty. To Return (V.E.)];
                                                   Editable=No }
    { 61  ;   ;Qty. Consumed       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Item Ledger Entry".Quantity WHERE (Entry Type=CONST(Consumption),
                                                                                                        Order Type=CONST(Production),
                                                                                                        Order No.=FIELD(Production Order No.),
                                                                                                        Order Line No.=FIELD(Production Order Line No.),
                                                                                                        Prod. Order Comp. Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Qty. Consumed;
                                                              ENN=Qty. Consumed];
                                                   Editable=No }
    { 62  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ENN=Posting Date] }
    { 63  ;   ;Quantity Dispatched ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Item Ledger Entry".Quantity WHERE (Entry Type=CONST(Transfer),
                                                                                                        Location Code=FIELD(Company Location),
                                                                                                        Order Type=CONST(Production),
                                                                                                        Order No.=FIELD(Production Order No.),
                                                                                                        Order Line No.=FIELD(Production Order Line No.),
                                                                                                        Prod. Order Comp. Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Quantity Dispatched;
                                                              ENN=Quantity Dispatched];
                                                   Editable=No }
    { 64  ;   ;Charge Recoverable  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Value Entry"."Cost Amount (Actual)" WHERE (Item Ledger Entry Type=CONST(Negative Adjmt.),
                                                                                                                Location Code=FIELD(Vendor Location),
                                                                                                                Order Type=CONST(Production),
                                                                                                                Order No.=FIELD(Production Order No.),
                                                                                                                Order Line No.=FIELD(Production Order Line No.),
                                                                                                                Source Type=CONST(Item),
                                                                                                                Source No.=FIELD(Item No.)));
                                                   CaptionML=[ENU=Charge Recoverable;
                                                              ENN=Charge Recoverable];
                                                   Editable=No }
    { 65  ;   ;Debit Note Amount   ;Decimal       ;CaptionML=[ENU=Debit Note Amount;
                                                              ENN=Debit Note Amount];
                                                   Editable=No }
    { 66  ;   ;Applies-to Entry    ;Integer       ;TableRelation="Item Ledger Entry";
                                                   CaptionML=[ENU=Applies-to Entry;
                                                              ENN=Applies-to Entry];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 67  ;   ;Applied Delivery Challan No.;Code20;OnValidate=BEGIN
                                                                IF "Applied Delivery Challan No." <> '' THEN
                                                                  IF NOT DeliveryChallanHeader.GET("Applied Delivery Challan No.") THEN
                                                                    ERROR(Text005);

                                                                IF "Applied Delivery Challan No." <> '' THEN
                                                                  CheckAvialibility
                                                                ELSE
                                                                  "Applies-to Entry" := 0;
                                                              END;

                                                   OnLookup=BEGIN
                                                              DeliveryChallanHeader.RESET;
                                                              IF DeliveryChallanHeader.FIND('-') THEN
                                                                REPEAT
                                                                  TempDeliveryChallanHeader := DeliveryChallanHeader;
                                                                  TempDeliveryChallanHeader.INSERT;
                                                                UNTIL DeliveryChallanHeader.NEXT = 0;

                                                              IF ACTION::LookupOK = PAGE.RUNMODAL(PAGE::"Delivery Challan List",TempDeliveryChallanHeader) THEN BEGIN
                                                                DeliveryChallanHeader.GET(TempDeliveryChallanHeader."No.");
                                                                TempDeliveryChallanHeader.DELETEALL;
                                                                VALIDATE("Applied Delivery Challan No.",DeliveryChallanHeader."No.");
                                                              END;

                                                              TempDeliveryChallanHeader.DELETEALL;
                                                            END;

                                                   CaptionML=[ENU=Applied Delivery Challan No.;
                                                              ENN=Applied Delivery Challan No.] }
    { 68  ;   ;Excise Bus. Posting Group;Code10   ;TableRelation="Excise Bus. Posting Group";
                                                   CaptionML=[ENU=Excise Bus. Posting Group;
                                                              ENN=Excise Bus. Posting Group];
                                                   Editable=No }
    { 69  ;   ;Excise Prod. Posting Group;Code10  ;TableRelation="Excise Prod. Posting Group";
                                                   CaptionML=[ENU=Excise Prod. Posting Group;
                                                              ENN=Excise Prod. Posting Group];
                                                   Editable=No }
    { 70  ;   ;SSI                 ;Boolean       ;CaptionML=[ENU=SSI;
                                                              ENN=SSI] }
    { 71  ;   ;Amount Including Excise;Decimal    ;CaptionML=[ENU=Amount Including Excise;
                                                              ENN=Amount Including Excise];
                                                   AutoFormatType=1 }
    { 72  ;   ;Excise Amount       ;Decimal       ;CaptionML=[ENU=Excise Amount;
                                                              ENN=Excise Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 73  ;   ;Excise Base Amount  ;Decimal       ;CaptionML=[ENU=Excise Base Amount;
                                                              ENN=Excise Base Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 74  ;   ;BED Amount          ;Decimal       ;CaptionML=[ENU=BED Amount;
                                                              ENN=BED Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 75  ;   ;AED(GSI) Amount     ;Decimal       ;CaptionML=[ENU=AED(GSI) Amount;
                                                              ENN=AED(GSI) Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 76  ;   ;SED Amount          ;Decimal       ;CaptionML=[ENU=SED Amount;
                                                              ENN=SED Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 77  ;   ;SAED Amount         ;Decimal       ;CaptionML=[ENU=SAED Amount;
                                                              ENN=SAED Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 78  ;   ;CESS Amount         ;Decimal       ;CaptionML=[ENU=CESS Amount;
                                                              ENN=CESS Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 79  ;   ;NCCD Amount         ;Decimal       ;CaptionML=[ENU=NCCD Amount;
                                                              ENN=NCCD Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 80  ;   ;eCess Amount        ;Decimal       ;CaptionML=[ENU=eCess Amount;
                                                              ENN=eCess Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 81  ;   ;DN Excise Amount    ;Decimal       ;CaptionML=[ENU=DN Excise Amount;
                                                              ENN=DN Excise Amount] }
    { 82  ;   ;DN BED Amount       ;Decimal       ;CaptionML=[ENU=DN BED Amount;
                                                              ENN=DN BED Amount] }
    { 83  ;   ;DN AED Amount       ;Decimal       ;CaptionML=[ENU=DN AED Amount;
                                                              ENN=DN AED Amount] }
    { 84  ;   ;DN SED Amount       ;Decimal       ;CaptionML=[ENU=DN SED Amount;
                                                              ENN=DN SED Amount] }
    { 85  ;   ;DN SAED Amount      ;Decimal       ;CaptionML=[ENU=DN SAED Amount;
                                                              ENN=DN SAED Amount] }
    { 86  ;   ;DN CESS Amount      ;Decimal       ;CaptionML=[ENU=DN CESS Amount;
                                                              ENN=DN CESS Amount] }
    { 87  ;   ;DN NCCD Amount      ;Decimal       ;CaptionML=[ENU=DN NCCD Amount;
                                                              ENN=DN NCCD Amount] }
    { 88  ;   ;DN eCess Amount     ;Decimal       ;CaptionML=[ENU=DN eCess Amount;
                                                              ENN=DN eCess Amount] }
    { 89  ;   ;Qty. per Unit of Measure;Decimal   ;InitValue=1;
                                                   CaptionML=[ENU=Qty. per Unit of Measure;
                                                              ENN=Qty. per Unit of Measure];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 90  ;   ;AED(TTA) Amount     ;Decimal       ;CaptionML=[ENU=AED(TTA) Amount;
                                                              ENN=AED(TTA) Amount];
                                                   Editable=No }
    { 91  ;   ;ADET Amount         ;Decimal       ;CaptionML=[ENU=ADET Amount;
                                                              ENN=ADET Amount];
                                                   Editable=No }
    { 92  ;   ;ADE Amount          ;Decimal       ;CaptionML=[ENU=ADE Amount;
                                                              ENN=ADE Amount];
                                                   Editable=No }
    { 93  ;   ;SHE Cess Amount     ;Decimal       ;CaptionML=[ENU=SHE Cess Amount;
                                                              ENN=SHE Cess Amount];
                                                   Editable=No }
    { 94  ;   ;ADC VAT Amount      ;Decimal       ;CaptionML=[ENU=ADC VAT Amount;
                                                              ENN=ADC VAT Amount];
                                                   Editable=No }
    { 95  ;   ;DN AED(TTA) Amount  ;Decimal       ;CaptionML=[ENU=DN AED(TTA) Amount;
                                                              ENN=DN AED(TTA) Amount] }
    { 96  ;   ;DN ADET Amount      ;Decimal       ;CaptionML=[ENU=DN ADET Amount;
                                                              ENN=DN ADET Amount] }
    { 97  ;   ;DN ADE Amount       ;Decimal       ;CaptionML=[ENU=DN ADE Amount;
                                                              ENN=DN ADE Amount] }
    { 98  ;   ;DN SHE Cess Amount  ;Decimal       ;CaptionML=[ENU=DN SHE Cess Amount;
                                                              ENN=DN SHE Cess Amount] }
    { 99  ;   ;DN ADC VAT Amount   ;Decimal       ;CaptionML=[ENU=DN ADC VAT Amount;
                                                              ENN=DN ADC VAT Amount] }
  }
  KEYS
  {
    {    ;Document No.,Document Line No.,Parent Item No.,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProdOrderComp@1280000 : Record 5407;
      PurchaseLine@1280001 : Record 39;
      SubOrderCompList@1280003 : Record 16321;
      Text002@1280004 : TextConst 'ENU="Can Not Insert,Delete  OR Modify Component details. ";ENN="Can Not Insert,Delete  OR Modify Component details. "';
      DeliveryChallanHeader@1280008 : Record 16323;
      TempDeliveryChallanHeader@1280011 : TEMPORARY Record 16323;
      Text004@1280010 : TextConst 'ENU=Item No. %1 was not delivered in Delivery Challan No. %2.;ENN=Item No. %1 was not delivered in Delivery Challan No. %2.';
      Text005@1280013 : TextConst 'ENU=Delivery Challan does not exist.;ENN=Delivery Challan does not exist.';
      Text006@1280014 : TextConst 'ENU=Remaining Quantity is not sufficient in the challan selected.;ENN=Remaining Quantity is not sufficient in the challan selected.';

    PROCEDURE GetProdOrderCompLine@1280000();
    BEGIN
      ProdOrderComp.RESET;
      ProdOrderComp.SETRANGE(Status,ProdOrderComp.Status::Released);
      ProdOrderComp.SETFILTER("Prod. Order No.","Production Order No.");
      ProdOrderComp.SETRANGE("Prod. Order Line No.","Production Order Line No.");
      ProdOrderComp.SETRANGE("Line No.","Line No.");
      IF ProdOrderComp.FINDFIRST THEN;
    END;

    PROCEDURE GetPurchaseOrderLine@1280001();
    BEGIN
      PurchaseLine.RESET;
      PurchaseLine.SETRANGE("Document Type",PurchaseLine."Document Type"::Order);
      PurchaseLine.SETFILTER("Document No.","Document No.");
      PurchaseLine.SETRANGE("Line No.","Document Line No.");
      PurchaseLine.FINDFIRST;
      PurchaseLine.TESTFIELD(Status,PurchaseLine.Status::Open);
    END;

    PROCEDURE SyncronizeSubOrderCompList@1280003();
    BEGIN
      SubOrderCompList.RESET;
      SubOrderCompList.SETFILTER("Document No.","Document No.");
      SubOrderCompList.SETRANGE("Document Line No.","Document Line No.");
      SubOrderCompList.SETRANGE("Parent Item No.","Parent Item No.");
      SubOrderCompList.SETRANGE("Line No.","Line No.");
      SubOrderCompList.SETFILTER("Item No.","Item No.");
      SubOrderCompList.FINDFIRST;
    END;

    PROCEDURE UpdateConInProdCompLines@1280002();
    BEGIN
      ProdOrderComp."Qty. To Consume" := "Qty. to Consume" + "Qty. to Return (C.E.)";
      ProdOrderComp.MODIFY;
    END;

    PROCEDURE CheckAvialibility@1280005();
    VAR
      DeliveryChallanLine@1280000 : Record 16324;
      ILE@1280001 : Record 32;
    BEGIN
      DeliveryChallanLine.RESET;
      DeliveryChallanLine.SETCURRENTKEY("Deliver Challan No.","Item No.");
      DeliveryChallanLine.SETFILTER("Deliver Challan No.",DeliveryChallanHeader."No.");
      DeliveryChallanLine.SETFILTER("Item No.","Item No.");
      IF DeliveryChallanLine.FINDFIRST THEN BEGIN
        DeliveryChallanLine.CALCFIELDS("Remaining Quantity");
        IF (DeliveryChallanLine."Remaining Quantity" <
            ("Qty. to Receive" + "Qty. to Consume" + "Qty. to Return (C.E.)" + "Qty. To Return (V.E.)"))
        THEN
          ERROR(Text006);

        ILE.RESET;
        ILE.SETCURRENTKEY("Entry Type","Location Code","External Document No.","Item No.");
        ILE.SETRANGE("Entry Type",ILE."Entry Type"::Transfer);
        ILE.SETFILTER("Location Code",DeliveryChallanLine."Vendor Location");
        ILE.SETFILTER("External Document No.",DeliveryChallanLine."Deliver Challan No.");
        ILE.SETFILTER("Item No.","Item No.");
        IF ILE.FINDFIRST THEN
          "Applies-to Entry" := ILE."Entry No."
        ELSE
          ERROR(Text004,"Item No.",DeliveryChallanLine."Deliver Challan No.");
      END ELSE
        "Applies-to Entry" := 0;
    END;

    PROCEDURE GetILE@1280006();
    BEGIN
    END;

    PROCEDURE ReinitializeApplication@1280004();
    BEGIN
      VALIDATE("Applied Delivery Challan No.",'');
    END;

    PROCEDURE UpdateReceiptDetails@1500001(VAR PurchLine@1500002 : Record 39;"Qty. to Reject (C.E.)"@1500001 : Decimal;"Qty. to Reject (V.E.)"@1500000 : Decimal);
    VAR
      SubOrderCompListVend@1500003 : Record 16322;
    BEGIN
      WITH PurchLine DO BEGIN
        SubOrderCompListVend.RESET;
        SubOrderCompListVend.SETRANGE("Document No.","Document No.");
        SubOrderCompListVend.SETRANGE("Document Line No.","Line No.");
        SubOrderCompListVend.FIND('-');
        REPEAT
          SubOrderCompListVend.VALIDATE(
            "Qty. to Consume","Qty. to Receive" * SubOrderCompListVend."Quantity per");
          SubOrderCompListVend.VALIDATE(
            "Qty. to Return (C.E.)","Qty. to Reject (C.E.)" * SubOrderCompListVend."Quantity per");
          SubOrderCompListVend.VALIDATE(
            "Qty. To Return (V.E.)",(SubOrderCompListVend."Quantity per" * "Qty. to Reject (V.E.)"));
          IF SubOrderCompListVend."Scrap %" <> 0 THEN BEGIN
            SubOrderCompListVend."Qty. to Consume" +=
              (SubOrderCompListVend."Qty. to Consume" / 100) * SubOrderCompListVend."Scrap %";
            SubOrderCompListVend."Qty. to Return (C.E.)" +=
              (SubOrderCompListVend."Qty. to Return (C.E.)" / 100) * SubOrderCompListVend."Scrap %";
            SubOrderCompListVend."Qty. To Return (V.E.)" +=
              (SubOrderCompListVend."Qty. To Return (V.E.)" / 100) * SubOrderCompListVend."Scrap %";
          END;
          SubOrderCompListVend.MODIFY;
        UNTIL SubOrderCompListVend.NEXT = 0
      END;
    END;

    PROCEDURE ApplyDeliveryChallan@1500000();
    VAR
      AppliedDeliveryChallan@1500000 : Record 13717;
    BEGIN
      AppliedDeliveryChallan.RESET;
      AppliedDeliveryChallan.SETRANGE("Document No.","Document No.");
      AppliedDeliveryChallan.SETRANGE("Document Line No.","Document Line No.");
      AppliedDeliveryChallan.SETRANGE("Parent Item No.","Parent Item No.");
      AppliedDeliveryChallan.SETRANGE("Line No.","Line No.");
      AppliedDeliveryChallan.SETRANGE("Item No.","Item No.");
      PAGE.RUN(PAGE::"Applied Delivery Challan",AppliedDeliveryChallan);
    END;

    BEGIN
    END.
  }
}

