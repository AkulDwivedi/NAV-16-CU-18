OBJECT Page 16327 Delivery Challan List
{
  OBJECT-PROPERTIES
  {
    Date=29-06-17;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.48822;
  }
  PROPERTIES
  {
    Editable=Yes;
    CaptionML=[ENU=Delivery Challan List;
               ENN=Delivery Challan List];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table16323;
    SourceTableView=SORTING(No.)
                    ORDER(Ascending);
    PageType=Worksheet;
    CardPageID=Delivery Challan;
    OnAfterGetRecord=BEGIN
                       CALCFIELDS(
                         "BED Amount","AED(GSI) Amount","SED Amount","SAED Amount","CESS Amount","eCess Amount","AED(TTA) Amount","ADET Amount",
                         "ADE Amount","SHE Cess Amount","ADC VAT Amount","Remaining Quantity");
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1280028 ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unction;
                                 ENN=F&unction];
                      Image=Action }
      { 1280029 ;2   ;Action    ;
                      CaptionML=[ENU=Update Excise Amount;
                                 ENN=Update Excise Amount];
                      Image=RefreshExcise;
                      OnAction=BEGIN
                                 DeliveryChallanLine.SETFILTER("Deliver Challan No.","No.");
                                 DeliveryChallanLine.FIND('-');
                                 REPEAT
                                   UpdateExcise(DeliveryChallanLine);
                                 UNTIL DeliveryChallanLine.NEXT = 0;
                               END;
                                }
      { 1500002 ;2   ;Action    ;
                      CaptionML=[ENU=Update GST Amount;
                                 ENN=Update GST Amount];
                      Visible=false }
      { 1280030 ;1   ;ActionGroup;
                      Name=<Action1280030>;
                      CaptionML=[ENU=&Delivery Challan;
                                 ENN=&Delivery Challan];
                      Image=OutboundEntry }
      { 1280032 ;2   ;Action    ;
                      Name=<Action1280032>;
                      CaptionML=[ENU=&Card;
                                 ENN=&Card];
                      RunObject=Page 16325;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1500000;1;Group     ;
                CaptionML=[ENU=General;
                           ENN=General] }

    { 1280011;2;Field     ;
                CaptionML=[ENU=Vendor Filter;
                           ENN=Vendor Filter];
                SourceExpr=Vendor;
                TableRelation=Vendor.No. WHERE (Subcontractor=CONST(Yes));
                OnValidate=BEGIN
                             FilterRecords;
                             VendorOnAfterValidate;
                           END;
                            }

    { 1280016;2;Field     ;
                CaptionML=[ENU=Days;
                           ENN=Days];
                SourceExpr=Days;
                OnValidate=BEGIN
                             FilterRecords;
                             DaysOnAfterValidate;
                           END;
                            }

    { 1280033;2;Field     ;
                CaptionML=[ENU=Subcon Order No.;
                           ENN=Subcon Order No.];
                SourceExpr=SubConOrderNo;
                OnValidate=BEGIN
                             FilterRecords;
                             SubConOrderNoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CLEAR(PurchaseListForm);
                           FilterRecords;
                           PurchaseListForm.SETTABLEVIEW(PurchHeader);
                           PurchaseListForm.LOOKUPMODE(TRUE);
                           IF PurchaseListForm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             PurchaseListForm.GETRECORD(PurchHeader);
                             SubConOrderNo := PurchHeader."No.";
                             FilterRecords;
                             CurrPage.UPDATE;
                           END;
                         END;
                          }

    { 1280035;2;Field     ;
                CaptionML=[ENU=Pending Quantities Exist;
                           ENN=Pending Quantities Exist];
                SourceExpr=RemainingQuantity;
                OnValidate=BEGIN
                             FilterRecords;
                             RemainingQuantityOnAfterValida;
                           END;
                            }

    { 1280000;1;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1280005;2;Field     ;
                SourceExpr="Vendor No." }

    { 1280037;2;Field     ;
                SourceExpr="Sub. order No." }

    { 1280001;2;Field     ;
                SourceExpr="No." }

    { 1280003;2;Field     ;
                SourceExpr="Prod. Order No." }

    { 1280007;2;Field     ;
                SourceExpr="Item No." }

    { 1280009;2;Field     ;
                SourceExpr=Description }

    { 1280013;2;Field     ;
                SourceExpr="Challan Date" }

    { 1280031;2;Field     ;
                SourceExpr="Posting Date" }

    { 1280026;2;Field     ;
                SourceExpr="Excise Amount" }

    { 1500001;2;Field     ;
                SourceExpr="GST Amount" }

  }
  CODE
  {
    VAR
      DeliveryChallanLine@1280000 : Record 16324;
      Vendor@1280001 : Code[20];
      SubConOrderNo@1280003 : Code[20];
      PurchHeader@1280004 : Record 38;
      PurchaseHeader@1280006 : Record 38;
      PurchaseLine@1280007 : Record 39;
      NextLineNo@1280008 : Integer;
      Days@1280009 : Integer;
      DtFilter@1280012 : Date;
      DtParam@1280013 : Text[10];
      RemainingQuantity@1280014 : Boolean;
      PurchaseListForm@1500000 : Page 53;

    PROCEDURE UpdateExcise@1280000(DCLine@1280001 : Record 16324);
    VAR
      ItemLedgerEntry@1280000 : Record 32;
    BEGIN
      REPEAT
        ItemLedgerEntry.SETRANGE("Entry Type",ItemLedgerEntry."Entry Type"::Transfer);
        ItemLedgerEntry.SETFILTER("Location Code",DCLine."Vendor Location");
        ItemLedgerEntry.SETFILTER("External Document No.",DCLine."Deliver Challan No.");
        ItemLedgerEntry.SETFILTER("Item No.",DCLine."Item No.");
        IF ItemLedgerEntry.FIND('-') THEN
          REPEAT
            DCLine.UpdateExciseAmount(ItemLedgerEntry);
            DCLine.UpdateChallanLine(DCLine);
          UNTIL ItemLedgerEntry.NEXT = 0;
      UNTIL DCLine.NEXT = 0;
    END;

    PROCEDURE FilterRecords@1280001();
    BEGIN

      RESET;
      IF Vendor <> '' THEN
        SETRANGE("Vendor No.",Vendor);

      IF SubConOrderNo <> '' THEN BEGIN
        SETRANGE("Sub. order No.",SubConOrderNo);
        PurchHeader.RESET;
        PurchHeader.SETRANGE(Subcontracting,TRUE);
        IF Vendor <> '' THEN
          PurchHeader.SETRANGE("Buy-from Vendor No.",Vendor);
      END;

      IF RemainingQuantity THEN
        SETRANGE("Remaining Quantity",TRUE);

      DtParam := FORMAT(Days);
      DtParam := '-' + DtParam + 'D';
      DtFilter := CALCDATE(DtParam,TODAY);
      IF Days <> 0 THEN
        SETRANGE("Challan Date",DtFilter,WORKDATE);
    END;

    PROCEDURE CreateDebitNoteHeader@1280004(VAR PurchHeader@1280000 : Record 38);
    BEGIN
      PurchaseHeader.INIT;
      PurchaseHeader."Document Type" := PurchaseHeader."Document Type"::"Credit Memo";
      PurchaseHeader."No." := '';
      PurchaseHeader.INSERT(TRUE);
      PurchaseHeader.VALIDATE("Buy-from Vendor No.",PurchHeader."Buy-from Vendor No.");
      PurchaseHeader.Subcontracting := TRUE;
      PurchaseHeader.MODIFY;
    END;

    PROCEDURE CreateDebitNoteLines@1280003(DeliveryChallanLine@1280001 : Record 16324);
    VAR
      GLAccount@1280000 : Record 15;
    BEGIN
      REPEAT
        PurchaseLine.RESET;
        PurchaseLine.SETRANGE("Document Type",PurchaseLine."Document Type"::"Credit Memo");
        PurchaseLine.SETFILTER("Document No.",PurchaseHeader."No.");
        IF PurchaseLine.FINDFIRST THEN
          NextLineNo += 10000
        ELSE
          NextLineNo := 10000;

        PurchaseLine.INIT;
        PurchaseLine."Document Type" := PurchaseHeader."Document Type";
        PurchaseLine."Document No." := PurchaseHeader."No.";
        PurchaseLine."Line No." := NextLineNo;
        PurchaseLine.Description := 'Challan No ' + DeliveryChallanLine."Deliver Challan No." + ' Item No ' +
          DeliveryChallanLine."Item No.";
        PurchaseLine.VALIDATE("Buy-from Vendor No.",DeliveryChallanLine."Vendor No.");
        PurchaseLine.Type := PurchaseLine.Type::"G/L Account";
        PurchaseLine."No." := GetExcisePayableAccount(DeliveryChallanLine);
        GLAccount.GET(PurchaseLine."No.");
        PurchaseLine."Gen. Bus. Posting Group" := GLAccount."Gen. Bus. Posting Group";
        PurchaseLine."Gen. Prod. Posting Group" := GLAccount."Gen. Prod. Posting Group";
        PurchaseLine.VALIDATE(Quantity,1);
        PurchaseLine.VALIDATE("Direct Unit Cost",DeliveryChallanLine."Excise Amount");
        PurchaseLine."BED Amount" := DeliveryChallanLine."BED Amount";
        PurchaseLine."AED(GSI) Amount" := DeliveryChallanLine."AED(GSI) Amount";
        PurchaseLine."SED Amount" := DeliveryChallanLine."SED Amount";
        PurchaseLine."SAED Amount" := DeliveryChallanLine."SAED Amount";
        PurchaseLine."CESS Amount" := DeliveryChallanLine."CESS Amount";
        PurchaseLine."NCCD Amount" := DeliveryChallanLine."NCCD Amount";
        PurchaseLine."eCess Amount" := DeliveryChallanLine."eCess Amount";
        PurchaseLine.Amount := DeliveryChallanLine."Excise Amount";
        PurchaseLine.Subcontracting := TRUE;
        PurchaseLine.INSERT;
      UNTIL DeliveryChallanLine.NEXT = 0;
    END;

    PROCEDURE GetExcisePayableAccount@1280005(DeliveryChallanLine@1280001 : Record 16324) AccountNo : Code[20];
    VAR
      ExcisePostingSetup@1280000 : Record 13711;
    BEGIN
      ExcisePostingSetup.SETFILTER("Excise Bus. Posting Group",DeliveryChallanLine."Excise Bus. Posting Group");
      ExcisePostingSetup.SETFILTER("Excise Prod. Posting Group",DeliveryChallanLine."Excise Prod. Posting Group");
      ExcisePostingSetup.SETFILTER("From Date",'<=%1',WORKDATE);
      ExcisePostingSetup.SETRANGE(SSI,DeliveryChallanLine.SSI);
      ExcisePostingSetup.FINDLAST;
      ExcisePostingSetup.TESTFIELD("Excise Payable Account");
      EXIT(ExcisePostingSetup."Excise Payable Account");
    END;

    LOCAL PROCEDURE SubConOrderNoOnAfterValidate@19036902();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE RemainingQuantityOnAfterValida@19065415();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE VendorOnAfterValidate@19052966();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DaysOnAfterValidate@19021829();
    BEGIN
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

