OBJECT Page 13793 Excise Cenvat Claim
{
  OBJECT-PROPERTIES
  {
    Date=24-04-16;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.45778;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Excise CENVAT Claim;
               ENN=Excise CENVAT Claim];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table16584;
    PageType=Card;
    OnOpenPage=BEGIN
                 CalcExcise;
                 OnActivateForm;
               END;

    OnAfterGetRecord=BEGIN
                       AfterGetCurrentRecord;
                     END;

    OnNewRecord=BEGIN
                  AfterGetCurrentRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1500003 ;1   ;Action    ;
                      CaptionML=[ENU=&Apply Service Tax Credit;
                                 ENN=&Apply Service Tax Credit];
                      Promoted=Yes;
                      Image=Apply;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServTaxExciseCredit@1500001 : Page 16580;
                                 AppliedAmt@1500002 : Decimal;
                                 AppliedAmteCess@1500003 : Decimal;
                                 AppliedAmtSHECess@1500004 : Decimal;
                               BEGIN
                                 AppliedAmt := "ST BED Amount" + "ST AED(GSI) Amount" + "ST AED(TTA) Amount" + "ST SED Amount" + "ST SAED Amount" +
                                   "ST NCCD Amount" + "ST ADET Amount" + "ST ADE Amount";
                                 AppliedAmteCess := "ST eCESS Amount";
                                 AppliedAmtSHECess := "ST SHECess Amount";
                                 IF AppliedAmt + AppliedAmteCess + AppliedAmtSHECess <> 0 THEN BEGIN
                                   ServTaxExciseCredit.SetDocument("Document No.");
                                   ServTaxExciseCredit.SetTemplate("Journal Template Name");
                                   ServTaxExciseCredit.SetBatch("Journal Batch Name");
                                   ServiceTaxBuffer.RESET;
                                   ServiceTaxBuffer.SETRANGE("Document No.","Document No.");
                                   ServTaxExciseCredit.SETTABLEVIEW(ServiceTaxBuffer);
                                   ServTaxExciseCredit.RUN;
                                 END ELSE
                                   ERROR(Text16500);
                               END;
                                }
      { 1500006 ;1   ;Action    ;
                      CaptionML=[ENU=&Detail;
                                 ENN=&Detail];
                      Promoted=Yes;
                      Image=View;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ExCenvatClaimDetail@1500000 : Record 16561;
                                 ExCenvatClaimDetail2@1500004 : Record 16561;
                                 DutyCodeNo@1500001 : Record 16562;
                                 EntryNo@1500002 : Integer;
                               BEGIN
                                 ExCenvatClaimDetail.LOCKTABLE;
                                 ExCenvatClaimDetail.RESET;
                                 ExCenvatClaimDetail.SETRANGE("Journal Template Name","Journal Template Name");
                                 ExCenvatClaimDetail.SETRANGE("Journal Batch Name","Journal Batch Name");
                                 ExCenvatClaimDetail.SETRANGE("Pay Doc. No.","Document No.");
                                 IF NOT ExCenvatClaimDetail.FINDFIRST THEN BEGIN
                                   ExCenvatClaimDetail.RESET;
                                   ExCenvatClaimDetail.LOCKTABLE;
                                   IF ExCenvatClaimDetail.FINDLAST THEN
                                     EntryNo := ExCenvatClaimDetail."Entry No" + 1
                                   ELSE
                                     EntryNo := 1;
                                   ExCenvatClaimDetail.INIT;
                                   ExCenvatClaimDetail."Entry No" := EntryNo;
                                   ExCenvatClaimDetail."Pay Doc. No." := "Document No.";
                                   ExCenvatClaimDetail."Journal Template Name" := "Journal Template Name";
                                   ExCenvatClaimDetail."Journal Batch Name" := "Journal Batch Name";
                                   ExCenvatClaimDetail."Duty Code" := Text16501;
                                   ExCenvatClaimDetail."Duty Code No." := 0;
                                   ExCenvatClaimDetail.Liability := 0;
                                   ExCenvatClaimDetail."RG 23 A BED Amount" := ROUND(RG23ABEDBalance);
                                   ExCenvatClaimDetail."RG 23 A AED(TTA) Amount" := ROUND("RG23AAED(TTA)Balance");
                                   ExCenvatClaimDetail."RG 23 A AED(GSI) Amount" := ROUND(RG23AAEDBalance);
                                   ExCenvatClaimDetail."RG 23 A ADET Amount" := ROUND(RG23AADETBalance);
                                   ExCenvatClaimDetail."RG 23 A ADE Amount" := ROUND(RG23AADEBalance);
                                   ExCenvatClaimDetail."RG 23 A CESS Amount" := ROUND(RG23ACESSBalance);
                                   ExCenvatClaimDetail."RG 23 A NCCD Amount" := ROUND(RG23ANCCDBalance);
                                   ExCenvatClaimDetail."RG 23 A SAED Amount" := ROUND(RG23ASAEDBalance);
                                   ExCenvatClaimDetail."RG 23 A SED Amount" := ROUND(RG23ASEDBalance);
                                   ExCenvatClaimDetail."RG 23 A eCESS Amount" := ROUND(RG23AECESSBalance);
                                   ExCenvatClaimDetail."RG 23 A SHECESS Amt" := ROUND(RG23ASHECessBalance);
                                   ExCenvatClaimDetail."RG 23 A ADC VAT" := ROUND(RG23APartIIADCVATAmt);
                                   ExCenvatClaimDetail."RG 23 C BED Amount" := ROUND(RG23CBEDBalance);
                                   ExCenvatClaimDetail."RG 23 C AED(TTA) Amount" := ROUND("RG23CAED(TTA)Balance");
                                   ExCenvatClaimDetail."RG 23 C AED(GSI) Amount" := ROUND(RG23CAEDBalance);
                                   ExCenvatClaimDetail."RG 23 C ADET Amount" := ROUND(RG23CADETBalance);
                                   ExCenvatClaimDetail."RG 23 C ADE Amount" := ROUND(RG23CADEBalance);
                                   ExCenvatClaimDetail."RG 23 C CESS Amount" := ROUND(RG23CCESSBalance);
                                   ExCenvatClaimDetail."RG 23 C NCCD Amount" := ROUND(RG23CNCCDBalance);
                                   ExCenvatClaimDetail."RG 23 C SAED Amount" := ROUND(RG23CSAEDBalance);
                                   ExCenvatClaimDetail."RG 23 C SED Amount" := ROUND(RG23CSEDBalance);
                                   ExCenvatClaimDetail."RG 23 C eCESS Amount" := ROUND(RG23CECESSBalance);
                                   ExCenvatClaimDetail."RG 23 C SHECESS Amt" := ROUND(RG23CSHECessBalance);
                                   ExCenvatClaimDetail."RG 23 C ADC VAT" := ROUND(RG23CPartIIADCVATAmt);
                                   ExCenvatClaimDetail."PLA BED Amount" := ROUND(PLABEDBalance);
                                   ExCenvatClaimDetail."PLA AED(TTA) Amount" := ROUND("PLAAED(TTA)Balance");
                                   ExCenvatClaimDetail."PLA AED(GSI) Amount" := ROUND(PLAAEDBalance);
                                   ExCenvatClaimDetail."PLA ADET Amount" := ROUND(PLAADETBalance);
                                   ExCenvatClaimDetail."PLA ADE Amount" := ROUND(PLAADEBalance);
                                   ExCenvatClaimDetail."PLA CESS Amount" := ROUND(PLACESSBalance);
                                   ExCenvatClaimDetail."PLA NCCD Amount" := ROUND(PLANCCDBalance);
                                   ExCenvatClaimDetail."PLA SAED Amount" := ROUND(PLASAEDBalance);
                                   ExCenvatClaimDetail."PLA SED Amount" := ROUND(PLASEDBalance);
                                   ExCenvatClaimDetail."PLA eCESS Amount" := ROUND(PLAECESSBalance);
                                   ExCenvatClaimDetail."PLA SHECESS Amt" := ROUND(PLASHECessBalance);
                                   ExCenvatClaimDetail.INSERT(TRUE);
                                   DutyCodeNo.RESET;
                                   IF DutyCodeNo.FIND('-') THEN
                                     REPEAT
                                       EntryNo += 1;
                                       ExCenvatClaimDetail.INIT;
                                       ExCenvatClaimDetail."Entry No" := EntryNo;
                                       ExCenvatClaimDetail."Pay Doc. No." := "Document No.";
                                       ExCenvatClaimDetail."Journal Template Name" := "Journal Template Name";
                                       ExCenvatClaimDetail."Journal Batch Name" := "Journal Batch Name";
                                       ExCenvatClaimDetail."Duty Code" := DutyCodeNo.Code;
                                       ExCenvatClaimDetail."Duty Code No." := DutyCodeNo."Duty Code No.";
                                       ExCenvatClaimDetail.Liability := GetLiability(DutyCodeNo."Duty Code No.");
                                       ExCenvatClaimDetail."Remaining Liability" := GetRemainingLiability(DutyCodeNo."Duty Code No.");
                                       ExCenvatClaimDetail."E.C.C. No." := "E.C.C. No.";
                                       ExCenvatClaimDetail.INSERT(TRUE);
                                     UNTIL DutyCodeNo.NEXT = 0;
                                 END ELSE BEGIN
                                   ExCenvatClaimDetail.RESET;
                                   ExCenvatClaimDetail.SETRANGE("Journal Template Name","Journal Template Name");
                                   ExCenvatClaimDetail.SETRANGE("Journal Batch Name","Journal Batch Name");
                                   ExCenvatClaimDetail.SETRANGE("Pay Doc. No.","Document No.");
                                   ExCenvatClaimDetail.SETRANGE("Duty Code No.",0);
                                   IF ExCenvatClaimDetail.FINDFIRST THEN BEGIN
                                     ExCenvatClaimDetail."RG 23 A BED Amount" := ROUND(RG23ABEDBalance);
                                     ExCenvatClaimDetail."RG 23 A AED(TTA) Amount" := ROUND("RG23AAED(TTA)Balance");
                                     ExCenvatClaimDetail."RG 23 A AED(GSI) Amount" := ROUND(RG23AAEDBalance);
                                     ExCenvatClaimDetail."RG 23 A ADET Amount" := ROUND(RG23AADETBalance);
                                     ExCenvatClaimDetail."RG 23 A ADE Amount" := ROUND(RG23AADEBalance);
                                     ExCenvatClaimDetail."RG 23 A CESS Amount" := ROUND(RG23ACESSBalance);
                                     ExCenvatClaimDetail."RG 23 A NCCD Amount" := ROUND(RG23ANCCDBalance);
                                     ExCenvatClaimDetail."RG 23 A SAED Amount" := ROUND(RG23ASAEDBalance);
                                     ExCenvatClaimDetail."RG 23 A SED Amount" := ROUND(RG23ASEDBalance);
                                     ExCenvatClaimDetail."RG 23 A eCESS Amount" := ROUND(RG23AECESSBalance);
                                     ExCenvatClaimDetail."RG 23 A SHECESS Amt" := ROUND(RG23ASHECessBalance);
                                     ExCenvatClaimDetail."RG 23 A ADC VAT" := ROUND(RG23APartIIADCVATAmt);
                                     ExCenvatClaimDetail."RG 23 C BED Amount" := ROUND(RG23CBEDBalance);
                                     ExCenvatClaimDetail."RG 23 C AED(TTA) Amount" := ROUND("RG23CAED(TTA)Balance");
                                     ExCenvatClaimDetail."RG 23 C AED(GSI) Amount" := ROUND(RG23CAEDBalance);
                                     ExCenvatClaimDetail."RG 23 C ADET Amount" := ROUND(RG23CADETBalance);
                                     ExCenvatClaimDetail."RG 23 C ADE Amount" := ROUND(RG23CADEBalance);
                                     ExCenvatClaimDetail."RG 23 C CESS Amount" := ROUND(RG23CCESSBalance);
                                     ExCenvatClaimDetail."RG 23 C NCCD Amount" := ROUND(RG23CNCCDBalance);
                                     ExCenvatClaimDetail."RG 23 C SAED Amount" := ROUND(RG23CSAEDBalance);
                                     ExCenvatClaimDetail."RG 23 C SED Amount" := ROUND(RG23CSEDBalance);
                                     ExCenvatClaimDetail."RG 23 C eCESS Amount" := ROUND(RG23CECESSBalance);
                                     ExCenvatClaimDetail."RG 23 C SHECESS Amt" := ROUND(RG23CSHECessBalance);
                                     ExCenvatClaimDetail."RG 23 C ADC VAT" := ROUND(RG23CPartIIADCVATAmt);
                                     ExCenvatClaimDetail."PLA BED Amount" := ROUND(PLABEDBalance);
                                     ExCenvatClaimDetail."PLA AED(TTA) Amount" := ROUND("PLAAED(TTA)Balance");
                                     ExCenvatClaimDetail."PLA AED(GSI) Amount" := ROUND(PLAAEDBalance);
                                     ExCenvatClaimDetail."PLA ADET Amount" := ROUND(PLAADETBalance);
                                     ExCenvatClaimDetail."PLA ADE Amount" := ROUND(PLAADEBalance);
                                     ExCenvatClaimDetail."PLA CESS Amount" := ROUND(PLACESSBalance);
                                     ExCenvatClaimDetail."PLA NCCD Amount" := ROUND(PLANCCDBalance);
                                     ExCenvatClaimDetail."PLA SAED Amount" := ROUND(PLASAEDBalance);
                                     ExCenvatClaimDetail."PLA SED Amount" := ROUND(PLASEDBalance);
                                     ExCenvatClaimDetail."PLA eCESS Amount" := ROUND(PLAECESSBalance);
                                     ExCenvatClaimDetail."PLA SHECESS Amt" := ROUND(PLASHECessBalance);
                                     ExCenvatClaimDetail.MODIFY(TRUE);
                                   END;
                                   ExCenvatClaimDetail.SETRANGE("Duty Code No.");
                                   DutyCodeNo.RESET;
                                   IF DutyCodeNo.FIND('-') THEN
                                     REPEAT
                                       ExCenvatClaimDetail.SETRANGE("Duty Code No.",DutyCodeNo."Duty Code No.");
                                       IF ExCenvatClaimDetail.FINDFIRST THEN BEGIN
                                         ExCenvatClaimDetail."Remaining Liability" := GetRemainingLiability(ExCenvatClaimDetail."Duty Code No.");
                                         ExCenvatClaimDetail.Liability := GetLiability(ExCenvatClaimDetail."Duty Code No.");
                                         ExCenvatClaimDetail.MODIFY(TRUE);
                                       END ELSE BEGIN
                                         ExCenvatClaimDetail2.RESET;
                                         ExCenvatClaimDetail2.LOCKTABLE;
                                         IF ExCenvatClaimDetail2.FINDLAST THEN
                                           EntryNo := ExCenvatClaimDetail2."Entry No" + 1
                                         ELSE
                                           EntryNo := 1;
                                         ExCenvatClaimDetail.INIT;
                                         ExCenvatClaimDetail."Entry No" := EntryNo;
                                         ExCenvatClaimDetail."Pay Doc. No." := "Document No.";
                                         ExCenvatClaimDetail."Journal Template Name" := "Journal Template Name";
                                         ExCenvatClaimDetail."Journal Batch Name" := "Journal Batch Name";
                                         ExCenvatClaimDetail."Duty Code" := DutyCodeNo.Code;
                                         ExCenvatClaimDetail."Duty Code No." := DutyCodeNo."Duty Code No.";
                                         ExCenvatClaimDetail.Liability := GetLiability(DutyCodeNo."Duty Code No.");
                                         ExCenvatClaimDetail."Remaining Liability" := GetRemainingLiability(DutyCodeNo."Duty Code No.");
                                         ExCenvatClaimDetail."E.C.C. No." := "E.C.C. No.";
                                         ExCenvatClaimDetail.INSERT(TRUE);
                                       END;
                                     UNTIL DutyCodeNo.NEXT = 0;
                                 END;
                                 COMMIT;
                                 ExCenvatClaimDetail.RESET;
                                 ExCenvatClaimDetail.SETRANGE("Journal Template Name","Journal Template Name");
                                 ExCenvatClaimDetail.SETRANGE("Journal Batch Name","Journal Batch Name");
                                 ExCenvatClaimDetail.SETRANGE("Pay Doc. No.","Document No.");
                                 PAGE.RUNMODAL(PAGE::"Excise Cenvat Claim Detail",ExCenvatClaimDetail);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1109000012;1;Group  ;
                CaptionML=[ENU=Excise Payable;
                           ENN=Excise Payable] }

    { 1500000;2;Field     ;
                SourceExpr="BED Amount";
                Editable=FALSE }

    { 1500001;2;Field     ;
                SourceExpr="AED(GSI) Amount";
                Editable=FALSE }

    { 1500002;2;Field     ;
                SourceExpr="AED(TTA) Amount";
                Editable=FALSE }

    { 1500007;2;Field     ;
                SourceExpr="SED Amount";
                Editable=FALSE }

    { 1500008;2;Field     ;
                SourceExpr="SAED Amount";
                Editable=FALSE }

    { 1500009;2;Field     ;
                SourceExpr="CESS Amount";
                Editable=FALSE }

    { 1500010;2;Field     ;
                SourceExpr="NCCD Amount";
                Editable=FALSE }

    { 1500011;2;Field     ;
                SourceExpr="eCess Amount";
                Editable=FALSE }

    { 1500012;2;Field     ;
                SourceExpr="SHE Cess Amount";
                Editable=FALSE }

    { 1500013;2;Field     ;
                SourceExpr="ADET Amount";
                Editable=FALSE }

    { 1500014;2;Field     ;
                SourceExpr="ADE Amount";
                Editable=FALSE }

    { 1500015;2;Field     ;
                SourceExpr="ADC VAT Amount";
                Editable=FALSE }

    { 1500016;2;Field     ;
                SourceExpr="Excise Charge Amount";
                Editable=FALSE }

    { 1905844301;1;Group  ;
                CaptionML=[ENU=Credit Available RG 23 A;
                           ENN=Credit Available RG 23 A] }

    { 1500017;2;Field     ;
                CaptionML=[ENU=BED Amount;
                           ENN=BED Amount];
                SourceExpr=RG23ABEDBalance;
                Editable=FALSE }

    { 1500018;2;Field     ;
                CaptionML=[ENU=AED(GSI) Amount;
                           ENN=AED(GSI) Amount];
                SourceExpr=RG23AAEDBalance;
                Editable=FALSE }

    { 1500019;2;Field     ;
                CaptionML=[ENU=AED(TTA) Amount;
                           ENN=AED(TTA) Amount];
                SourceExpr="RG23AAED(TTA)Balance";
                Editable=FALSE }

    { 1500023;2;Field     ;
                CaptionML=[ENU=SED Amount;
                           ENN=SED Amount];
                SourceExpr=RG23ASEDBalance;
                Editable=FALSE }

    { 1500025;2;Field     ;
                CaptionML=[ENU=SAED Amount;
                           ENN=SAED Amount];
                SourceExpr=RG23ASAEDBalance;
                Editable=FALSE }

    { 1500027;2;Field     ;
                CaptionML=[ENU=CESS Amount;
                           ENN=CESS Amount];
                SourceExpr=RG23ACESSBalance;
                Editable=FALSE }

    { 1500029;2;Field     ;
                CaptionML=[ENU=NCCD Amount;
                           ENN=NCCD Amount];
                SourceExpr=RG23ANCCDBalance;
                Editable=FALSE }

    { 1500038;2;Field     ;
                CaptionML=[ENU=eCESS Amount;
                           ENN=eCESS Amount];
                SourceExpr=RG23AECESSBalance;
                Editable=FALSE }

    { 1500043;2;Field     ;
                CaptionML=[ENU=SHE CESS Amount;
                           ENN=SHE CESS Amount];
                SourceExpr=RG23ASHECessBalance;
                Editable=FALSE }

    { 1500044;2;Field     ;
                CaptionML=[ENU=ADET Amount;
                           ENN=ADET Amount];
                SourceExpr=RG23AADETBalance;
                Editable=FALSE }

    { 1500047;2;Field     ;
                CaptionML=[ENU=ADE Amount;
                           ENN=ADE Amount];
                SourceExpr=RG23AADEBalance;
                Editable=FALSE }

    { 1500052;2;Field     ;
                CaptionML=[ENU=ADC VAT Amount;
                           ENN=ADC VAT Amount];
                SourceExpr=RG23APartIIADCVATAmt;
                Editable=FALSE }

    { 1904141901;1;Group  ;
                CaptionML=[ENU=Credit Available RG 23 C;
                           ENN=Credit Available RG 23 C] }

    { 1500022;2;Field     ;
                CaptionML=[ENU=BED Amount;
                           ENN=BED Amount];
                SourceExpr=RG23CBEDBalance;
                Editable=FALSE }

    { 1500021;2;Field     ;
                CaptionML=[ENU=AED(GSI) Amount;
                           ENN=AED(GSI) Amount];
                SourceExpr=RG23CAEDBalance;
                Editable=FALSE }

    { 1500020;2;Field     ;
                CaptionML=[ENU=AED(TTA) Amount;
                           ENN=AED(TTA) Amount];
                SourceExpr="RG23CAED(TTA)Balance";
                Editable=FALSE }

    { 1500024;2;Field     ;
                CaptionML=[ENU=SED Amount;
                           ENN=SED Amount];
                SourceExpr=RG23CSEDBalance;
                Editable=FALSE }

    { 1500026;2;Field     ;
                CaptionML=[ENU=SAED Amount;
                           ENN=SAED Amount];
                SourceExpr=RG23CSAEDBalance;
                Editable=FALSE }

    { 1500028;2;Field     ;
                CaptionML=[ENU=CESS Amount;
                           ENN=CESS Amount];
                SourceExpr=RG23CCESSBalance;
                Editable=FALSE }

    { 1500030;2;Field     ;
                CaptionML=[ENU=NCCD Amount;
                           ENN=NCCD Amount];
                SourceExpr=RG23CNCCDBalance;
                Editable=FALSE }

    { 1500040;2;Field     ;
                CaptionML=[ENU=eCESS Amount;
                           ENN=eCESS Amount];
                SourceExpr=RG23CECESSBalance;
                Editable=FALSE }

    { 1500042;2;Field     ;
                CaptionML=[ENU=SHE CESS Amount;
                           ENN=SHE CESS Amount];
                SourceExpr=RG23CSHECessBalance;
                Editable=FALSE }

    { 1500045;2;Field     ;
                CaptionML=[ENU=ADET Amount;
                           ENN=ADET Amount];
                SourceExpr=RG23CADETBalance;
                Editable=FALSE }

    { 1500048;2;Field     ;
                CaptionML=[ENU=ADE Amount;
                           ENN=ADE Amount];
                SourceExpr=RG23CADEBalance;
                Editable=FALSE }

    { 1500053;2;Field     ;
                CaptionML=[ENU=ADC VAT Amount;
                           ENN=ADC VAT Amount];
                SourceExpr=RG23CPartIIADCVATAmt;
                Editable=FALSE }

    { 1904714701;1;Group  ;
                CaptionML=[ENU=Credit Available PLA;
                           ENN=Credit Available PLA] }

    { 1500037;2;Field     ;
                CaptionML=[ENU=BED Amount;
                           ENN=BED Amount];
                SourceExpr=PLABEDBalance;
                Editable=FALSE }

    { 1500036;2;Field     ;
                CaptionML=[ENU=AED(GSI) Amount;
                           ENN=AED(GSI) Amount];
                SourceExpr=PLAAEDBalance;
                Editable=FALSE }

    { 1500035;2;Field     ;
                CaptionML=[ENU=AED(TTA) Amount;
                           ENN=AED(TTA) Amount];
                SourceExpr="PLAAED(TTA)Balance";
                Editable=FALSE }

    { 1500031;2;Field     ;
                CaptionML=[ENU=SED Amount;
                           ENN=SED Amount];
                SourceExpr=PLASEDBalance;
                Editable=FALSE }

    { 1500032;2;Field     ;
                CaptionML=[ENU=SAED Amount;
                           ENN=SAED Amount];
                SourceExpr=PLASAEDBalance;
                Editable=FALSE }

    { 1500033;2;Field     ;
                CaptionML=[ENU=CESS Amount;
                           ENN=CESS Amount];
                SourceExpr=PLACESSBalance;
                Editable=FALSE }

    { 1500034;2;Field     ;
                CaptionML=[ENU=NCCD Amount;
                           ENN=NCCD Amount];
                SourceExpr=PLANCCDBalance;
                Editable=FALSE }

    { 1500039;2;Field     ;
                CaptionML=[ENU=eCESS Amount;
                           ENN=eCESS Amount];
                SourceExpr=PLAECESSBalance;
                Editable=FALSE }

    { 1500041;2;Field     ;
                CaptionML=[ENU=SHE CESS Amount;
                           ENN=SHE CESS Amount];
                SourceExpr=PLASHECessBalance;
                Editable=FALSE }

    { 1500046;2;Field     ;
                CaptionML=[ENU=ADET Amount;
                           ENN=ADET Amount];
                SourceExpr=PLAADETBalance;
                Editable=FALSE }

    { 1500049;2;Field     ;
                CaptionML=[ENU=ADE Amount;
                           ENN=ADE Amount];
                SourceExpr=PLAADEBalance;
                Editable=FALSE }

    { 1500054;2;Field     ;
                CaptionML=[ENU=ADC VAT Amount;
                           ENN=ADC VAT Amount];
                SourceExpr=PLAADCVATAmt;
                Editable=FALSE }

    { 1500056;2;Field     ;
                CaptionML=[ENU=Charges;
                           ENN=Charges];
                SourceExpr=PLAChargesBalance;
                Editable=FALSE }

    { 1903899701;1;Group  ;
                CaptionML=[ENU=Credit Available S.T;
                           ENN=Credit Available S.T] }

    { 1500050;2;Field     ;
                CaptionML=[ENU=Service Tax;
                           ENN=Service Tax];
                SourceExpr=RG23ASTBalance;
                Editable=FALSE }

    { 1500051;2;Field     ;
                CaptionML=[ENU=Service Tax eCess;
                           ENN=Service Tax eCess];
                SourceExpr=RG23ASTeCessBalance;
                Editable=FALSE }

    { 1500055;2;Field     ;
                CaptionML=[ENU=Service Tax SHE Cess;
                           ENN=Service Tax SHE Cess];
                SourceExpr=STSHECessBalance;
                Editable=FALSE }

    { 1904595001;1;Group  ;
                CaptionML=[ENU=Credit Utilised RG 23 A;
                           ENN=Credit Utilised RG 23 A] }

    { 1500092;2;Field     ;
                SourceExpr="RG 23 A PART II BED Amount";
                Editable=FALSE }

    { 1500093;2;Field     ;
                SourceExpr="RG 23A PART II AED(GSI) Amount";
                Editable=FALSE }

    { 1500094;2;Field     ;
                SourceExpr="RG 23A PART II AED(TTA) Amount";
                Editable=FALSE }

    { 1500095;2;Field     ;
                SourceExpr="RG 23 A PART II SED Amount";
                Editable=FALSE }

    { 1500096;2;Field     ;
                SourceExpr="RG 23 A PART II SAED Amount";
                Editable=FALSE }

    { 1500097;2;Field     ;
                SourceExpr="RG 23 A PART II CESS Amount";
                Editable=FALSE }

    { 1500098;2;Field     ;
                SourceExpr="RG 23 A PART II NCCD Amount";
                Editable=FALSE }

    { 1500099;2;Field     ;
                SourceExpr="RG 23 A PART II eCess Amount";
                Editable=FALSE }

    { 1500103;2;Field     ;
                SourceExpr="RG 23 A Part II SHECess Amount";
                Editable=FALSE }

    { 1500100;2;Field     ;
                SourceExpr="RG 23 A Part II ADET Amount";
                Editable=FALSE }

    { 1500101;2;Field     ;
                SourceExpr="RG 23 A Part II ADE Amount";
                Editable=FALSE }

    { 1500102;2;Field     ;
                SourceExpr="RG 23 A PART II ADC VAT Amount";
                Editable=FALSE }

    { 1903806801;1;Group  ;
                CaptionML=[ENU=Credit Utilised RG 23 C;
                           ENN=Credit Utilised RG 23 C] }

    { 1500081;2;Field     ;
                SourceExpr="RG 23 C PART II BED Amount";
                Editable=FALSE }

    { 1500080;2;Field     ;
                SourceExpr="RG 23C PART II AED(GSI) Amount";
                Editable=FALSE }

    { 1500082;2;Field     ;
                SourceExpr="RG 23C PART II AED(TTA) Amount";
                Editable=FALSE }

    { 1500083;2;Field     ;
                SourceExpr="RG 23 C PART II SED Amount";
                Editable=FALSE }

    { 1500084;2;Field     ;
                SourceExpr="RG 23 C PART II SAED Amount";
                Editable=FALSE }

    { 1500085;2;Field     ;
                SourceExpr="RG 23 C PART II CESS Amount";
                Editable=FALSE }

    { 1500086;2;Field     ;
                SourceExpr="RG 23 C PART II NCCD Amount";
                Editable=FALSE }

    { 1500087;2;Field     ;
                SourceExpr="RG 23 C PART II eCess Amount";
                Editable=FALSE }

    { 1500091;2;Field     ;
                SourceExpr="RG 23 C Part II SHECess Amount";
                Editable=FALSE }

    { 1500088;2;Field     ;
                SourceExpr="RG 23 C Part II ADET Amount";
                Editable=FALSE }

    { 1500089;2;Field     ;
                SourceExpr="RG 23 C Part II ADE Amount";
                Editable=FALSE }

    { 1500090;2;Field     ;
                SourceExpr="RG 23 C PART II ADC VAT Amount";
                Editable=FALSE }

    { 1905989601;1;Group  ;
                CaptionML=[ENU=Credit Utilised PLA;
                           ENN=Credit Utilised PLA] }

    { 1500067;2;Field     ;
                SourceExpr="PLA BED Amount";
                Editable=FALSE }

    { 1500068;2;Field     ;
                SourceExpr="PLA AED(GSI) Amount";
                Editable=FALSE }

    { 1500069;2;Field     ;
                SourceExpr="PLA AED(TTA) Amount";
                Editable=FALSE }

    { 1500070;2;Field     ;
                SourceExpr="PLA SED Amount";
                Editable=FALSE }

    { 1500071;2;Field     ;
                SourceExpr="PLA SAED Amount";
                Editable=FALSE }

    { 1500072;2;Field     ;
                SourceExpr="PLA CESS Amount";
                Editable=FALSE }

    { 1500073;2;Field     ;
                SourceExpr="PLA NCCD Amount";
                Editable=FALSE }

    { 1500074;2;Field     ;
                SourceExpr="PLA eCess Amount";
                Editable=FALSE }

    { 1500079;2;Field     ;
                SourceExpr="PLA SHE Cess Amount";
                Editable=FALSE }

    { 1500075;2;Field     ;
                SourceExpr="PLA ADET Amount";
                Editable=FALSE }

    { 1500076;2;Field     ;
                SourceExpr="PLA ADE Amount";
                Editable=FALSE }

    { 1500078;2;Field     ;
                SourceExpr="PLA ADC VAT Amount";
                Editable=FALSE }

    { 1500077;2;Field     ;
                SourceExpr="PLA Excise Charge Amount" }

    { 1904014001;1;Group  ;
                CaptionML=[ENU=Credit Utilised S.T;
                           ENN=Credit Utilised S.T] }

    { 1500057;2;Field     ;
                SourceExpr="ST BED Amount" }

    { 1500058;2;Field     ;
                SourceExpr="ST AED(GSI) Amount" }

    { 1500059;2;Field     ;
                SourceExpr="ST AED(TTA) Amount" }

    { 1500060;2;Field     ;
                SourceExpr="ST SED Amount" }

    { 1500061;2;Field     ;
                SourceExpr="ST SAED Amount" }

    { 1500062;2;Field     ;
                SourceExpr="ST NCCD Amount" }

    { 1500063;2;Field     ;
                SourceExpr="ST eCESS Amount" }

    { 1500064;2;Field     ;
                SourceExpr="ST SHECess Amount" }

    { 1500065;2;Field     ;
                SourceExpr="ST ADET Amount" }

    { 1500066;2;Field     ;
                SourceExpr="ST ADE Amount" }

  }
  CODE
  {
    VAR
      PLARec@1280028 : Record 13723;
      RG23ARec@1280027 : Record 13720;
      RG23CRec@1280026 : Record 13722;
      GenJnlLine@1280036 : Record 81;
      RG23ABEDBalance@1280023 : Decimal;
      RG23AAEDBalance@1280017 : Decimal;
      RG23ASEDBalance@1280020 : Decimal;
      RG23ASAEDBalance@1280014 : Decimal;
      RG23ACESSBalance@1280011 : Decimal;
      RG23ANCCDBalance@1280008 : Decimal;
      RG23AECESSBalance@1280005 : Decimal;
      RG23CBEDBalance@1280022 : Decimal;
      RG23CAEDBalance@1280016 : Decimal;
      RG23CSEDBalance@1280019 : Decimal;
      RG23CSAEDBalance@1280013 : Decimal;
      RG23CCESSBalance@1280010 : Decimal;
      RG23CNCCDBalance@1280007 : Decimal;
      RG23CECESSBalance@1280004 : Decimal;
      PLABEDBalance@1280024 : Decimal;
      PLAAEDBalance@1280015 : Decimal;
      PLASEDBalance@1280018 : Decimal;
      PLASAEDBalance@1280012 : Decimal;
      PLACESSBalance@1280009 : Decimal;
      PLANCCDBalance@1280006 : Decimal;
      PLAECESSBalance@1280003 : Decimal;
      PLAChargesBalance@1280021 : Decimal;
      ECCNo@1280000 : Code[20];
      "RG23AAED(TTA)Balance"@1280070 : Decimal;
      "RG23CAED(TTA)Balance"@1280069 : Decimal;
      "PLAAED(TTA)Balance"@1280068 : Decimal;
      RG23AADETBalance@1280073 : Decimal;
      RG23CADETBalance@1280072 : Decimal;
      PLAADETBalance@1280071 : Decimal;
      RG23ASTBalance@1280037 : Decimal;
      RG23ASTeCessBalance@1280074 : Decimal;
      RG23AADEBalance@1280079 : Decimal;
      RG23CADEBalance@1280078 : Decimal;
      PLAADEBalance@1280077 : Decimal;
      ServiceTaxMgmt@1500004 : Codeunit 16471;
      ServiceTaxBuffer@1500003 : Record 16476;
      DateFilter@1500002 : Text[30];
      ApplicationMagm@1500001 : Codeunit 1;
      Text16500@1500005 : TextConst 'ENU="Please enter the component wise claim of the service tax as excise credit. ";ENN="Please enter the component wise claim of the service tax as excise credit. "';
      Text16501@1500006 : TextConst 'ENU=Credit Available;ENN=Credit Available';
      RG23APartIIADCVATAmt@1500007 : Decimal;
      RG23CPartIIADCVATAmt@1500008 : Decimal;
      PLAADCVATAmt@1500009 : Decimal;
      RG23ASHECessBalance@1500010 : Decimal;
      RG23CSHECessBalance@1500011 : Decimal;
      PLASHECessBalance@1500012 : Decimal;
      STSHECessBalance@1500013 : Decimal;
      RGSetoffDate@1500014 : Date;
      PLASetoffDate@1500000 : Date;

    PROCEDURE CalcExcise@1280000();
    BEGIN
      PLARec.RESET;
      PLARec.SETCURRENTKEY("Location E.C.C. No.","Posting Date");
      PLARec.SETRANGE("Location E.C.C. No.",ECCNo);
      IF PLASetoffDate <> 0D THEN
        PLARec.SETRANGE("Posting Date",0D,PLASetoffDate);
      IF PLARec.FINDSET THEN
        REPEAT
          PLARec.CALCFIELDS("Remaining BED","Remaining AED(GSI)","Remaining AED(TTA)","Remaining SED","Remaining SAED",
            "Remaining Cess","Remaining NCCD","Remaining eCess","Remaining ADET","Remaining ADE","Remaining Excise Charge",
            "Remaining SHE Cess");
          PLABEDBalance += PLARec."Remaining BED";
          PLAAEDBalance += PLARec."Remaining AED(GSI)";
          "PLAAED(TTA)Balance" += PLARec."Remaining AED(TTA)";
          PLASEDBalance += PLARec."Remaining SED";
          PLASAEDBalance += PLARec."Remaining SAED";
          PLACESSBalance += PLARec."Remaining Cess";
          PLANCCDBalance += PLARec."Remaining NCCD";
          PLAECESSBalance += PLARec."Remaining eCess";
          PLAADETBalance += PLARec."Remaining ADET";
          PLAADEBalance += PLARec."Remaining ADE";
          PLAChargesBalance += PLARec."Remaining Excise Charge";
          PLASHECessBalance += PLARec."Remaining SHE Cess";
        UNTIL (PLARec.NEXT = 0);

      RG23ARec.RESET;
      RG23ARec.SETCURRENTKEY("Location E.C.C. No.","Posting Date");
      RG23ARec.SETRANGE("Location E.C.C. No.",ECCNo);
      IF RGSetoffDate <> 0D THEN
        RG23ARec.SETRANGE("Posting Date",0D,RGSetoffDate);
      RG23ARec.CALCSUMS("Remaining BED Credit","Remaining AED(GSI) Credit","Remaining SED Credit","Remaining SAED Credit",
        "Remaining NCCD Credit","Remaining eCess Credit","Remaining ADET Credit","Remaining AED(TTA) Credit",
        "Remaining ADE Credit","Remaining ADC VAT Credit","Remaining SHECess Credit");

      RG23ABEDBalance := RG23ARec."Remaining BED Credit";
      RG23AAEDBalance := RG23ARec."Remaining AED(GSI) Credit";
      "RG23AAED(TTA)Balance" := RG23ARec."Remaining AED(TTA) Credit";
      RG23ASEDBalance := RG23ARec."Remaining SED Credit";
      RG23ASAEDBalance := RG23ARec."Remaining SAED Credit";
      RG23ANCCDBalance := RG23ARec."Remaining NCCD Credit";
      RG23AECESSBalance := RG23ARec."Remaining eCess Credit";
      RG23AADETBalance := RG23ARec."Remaining ADET Credit";
      RG23AADEBalance := RG23ARec."Remaining ADE Credit";
      RG23APartIIADCVATAmt := RG23ARec."Remaining ADC VAT Credit";
      RG23ASHECessBalance := RG23ARec."Remaining SHECess Credit";

      UpdateServiceTaxBuffer(ServiceTaxBuffer);
      RG23ASTBalance := ServiceTaxBuffer."Credit Available";
      RG23ASTeCessBalance := ServiceTaxBuffer."Credit Available (eCess)";
      STSHECessBalance := ServiceTaxBuffer."Credit Available (SHECess)";

      RG23CRec.RESET;
      RG23CRec.SETCURRENTKEY("Location E.C.C. No.","Posting Date");
      RG23CRec.SETRANGE("Location E.C.C. No.",ECCNo);
      IF RGSetoffDate <> 0D THEN
        RG23CRec.SETRANGE("Posting Date",0D,RGSetoffDate);
      RG23CRec.CALCSUMS("Remaining BED Credit","Remaining AED(GSI) Credit","Remaining SED Credit","Remaining SAED Credit",
        "Remaining NCCD Credit","Remaining eCess Credit","Remaining ADET Credit","Remaining AED(TTA) Credit","Remaining ADE Credit",
        "Remaining ADC VAT Credit",RG23CRec."Remaining SHECess Credit");

      RG23CBEDBalance := RG23CRec."Remaining BED Credit";
      RG23CAEDBalance := RG23CRec."Remaining AED(GSI) Credit";
      "RG23CAED(TTA)Balance" := RG23CRec."Remaining AED(TTA) Credit";
      RG23CSEDBalance := RG23CRec."Remaining SED Credit";
      RG23CSAEDBalance := RG23CRec."Remaining SAED Credit";
      RG23CNCCDBalance := RG23CRec."Remaining NCCD Credit";
      RG23CECESSBalance := RG23CRec."Remaining eCess Credit";
      RG23CADETBalance := RG23CRec."Remaining ADET Credit";
      RG23CADEBalance := RG23CRec."Remaining ADE Credit";
      RG23CPartIIADCVATAmt := RG23CRec."Remaining ADC VAT Credit";
      RG23CSHECessBalance := RG23CRec."Remaining SHECess Credit";
    END;

    PROCEDURE SetECCNo@1280001(ECCNumber@1280000 : Code[20]);
    BEGIN
      ECCNo := ECCNumber;
    END;

    PROCEDURE MakeEditable@1500001();
    BEGIN
    END;

    PROCEDURE GetRecords@1500002(GenJnlLine2@1500000 : Record 81);
    BEGIN
      GenJnlLine := GenJnlLine2;
    END;

    PROCEDURE UpdateServiceTaxBuffer@1500003(VAR ServiceTaxBuffer@1500000 : Record 16476);
    VAR
      STReverseChargeSetup@1500001 : Record 16461;
    BEGIN
      IF RGSetoffDate <> 0D THEN
        DateFilter := '..' + FORMAT(RGSetoffDate)
      ELSE
        DateFilter := '..' + FORMAT(GenJnlLine."Posting Date");
      IF ApplicationMagm.MakeDateFilter(DateFilter) = 0 THEN;
      ServiceTaxBuffer.RESET;
      ServiceTaxBuffer.SETRANGE("Document No.",GenJnlLine."Document No.");
      IF ServiceTaxBuffer.FINDFIRST THEN
        ServiceTaxBuffer.DELETEALL;
      ServiceTaxMgmt.SetECCNo(GenJnlLine."E.C.C. No.");
      ServiceTaxMgmt.STasExciseCr(TRUE);
      ServiceTaxMgmt.CreateServiceTaxBuffer(GenJnlLine."Document No.",GenJnlLine."Posting Date",
         GenJnlLine."Service Tax Registration No.",DateFilter,GenJnlLine.TryGetSrvTaxReverseChargeSetup(STReverseChargeSetup));
      ServiceTaxBuffer.RESET;
      ServiceTaxBuffer.SETRANGE("Document No.",GenJnlLine."Document No.");
      ServiceTaxBuffer.SETRANGE("Service Tax Group Code",'');
      IF ServiceTaxBuffer.FINDFIRST THEN
        ServiceTaxBuffer.DELETEALL;
      ServiceTaxBuffer.SETRANGE("Service Tax Group Code");
      ServiceTaxBuffer.CALCSUMS("Credit Available","Credit Available (eCess)","Credit Available (SHECess)");
    END;

    PROCEDURE GetLiability@1500014(DutyNo@1500000 : Integer) : Decimal;
    BEGIN
      IF DutyNo = 1 THEN
        EXIT("BED Amount");
      IF DutyNo = 2 THEN
        EXIT("AED(GSI) Amount");
      IF DutyNo = 3 THEN
        EXIT("AED(TTA) Amount");
      IF DutyNo = 4 THEN
        EXIT("SED Amount");
      IF DutyNo = 5 THEN
        EXIT("SAED Amount");
      IF DutyNo = 6 THEN
        EXIT("CESS Amount");
      IF DutyNo = 7 THEN
        EXIT("NCCD Amount");
      IF DutyNo = 8 THEN
        EXIT("ADET Amount");
      IF DutyNo = 9 THEN
        EXIT("ADE Amount");
      IF DutyNo = 10 THEN
        EXIT("eCess Amount");
      IF DutyNo = 11 THEN
        EXIT("ADC VAT Amount");
      IF DutyNo = 12 THEN
        EXIT("SHE Cess Amount");
    END;

    PROCEDURE GetRemainingLiability@1500000(DutyNo@1500000 : Integer) : Decimal;
    BEGIN
      IF DutyNo = 1 THEN
        EXIT("BED Amount" - "ST BED Amount");
      IF DutyNo = 2 THEN
        EXIT("AED(GSI) Amount" - "ST AED(GSI) Amount");
      IF DutyNo = 3 THEN
        EXIT("AED(TTA) Amount" - "ST AED(TTA) Amount");
      IF DutyNo = 4 THEN
        EXIT("SED Amount" - "ST SED Amount");
      IF DutyNo = 5 THEN
        EXIT("SAED Amount" - "ST SAED Amount");
      IF DutyNo = 6 THEN
        EXIT("CESS Amount");
      IF DutyNo = 7 THEN
        EXIT("NCCD Amount" - "ST NCCD Amount");
      IF DutyNo = 8 THEN
        EXIT("ADET Amount" - "ST ADET Amount");
      IF DutyNo = 9 THEN
        EXIT("ADE Amount" - "ST ADE Amount");
      IF DutyNo = 10 THEN
        EXIT("eCess Amount" - "ST eCESS Amount");
      IF DutyNo = 11 THEN
        EXIT("ADC VAT Amount");
      IF DutyNo = 12 THEN
        EXIT("SHE Cess Amount" - "ST SHECess Amount");
    END;

    PROCEDURE GetDateFilter@1500004(RGSetoffDate2@1500001 : Date;PLASetoffDate2@1500000 : Date);
    BEGIN
      RGSetoffDate := RGSetoffDate2;
      PLASetoffDate := PLASetoffDate2;
    END;

    LOCAL PROCEDURE AfterGetCurrentRecord@19077479();
    BEGIN
      xRec := Rec;
      MakeEditable;
    END;

    LOCAL PROCEDURE OnActivateForm@19002417();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    BEGIN
    END.
  }
}

