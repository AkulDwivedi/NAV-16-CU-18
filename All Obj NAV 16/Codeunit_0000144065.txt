OBJECT Codeunit 144065 E-TDS Form26Q
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CompanyInformation@1500002 : Record 79;
      LibrarySetupStorage@1500000 : Codeunit 131009;
      LibraryERM@1500003 : Codeunit 131300;
      LibraryTDS@1500004 : Codeunit 143000;
      LibraryRandom@1500005 : Codeunit 130440;
      LibraryJournals@1500007 : Codeunit 131306;
      LibraryUtility@1500008 : Codeunit 131000;
      LibraryVariableStorage@1500009 : Codeunit 131004;
      LibraryReportDataset@1500010 : Codeunit 131007;
      Assert@1500012 : Codeunit 130000;
      isInitialized@1500001 : Boolean;
      ValueNotFoundErr@1500013 : TextConst 'ENU=Value Not Found.';
      EmailIDTxt@1500006 : TextConst 'ENU=cronus@microsoft.com';
      TANNoEmptyErr@1500025 : TextConst 'ENU=Select T.A.N. No.';
      ReportFrequencyErr@1500024 : TextConst 'ENU=Select Report Frequency.';
      FinancialYearErr@1500023 : TextConst 'ENU=Select Financial Year.';
      FullNameErr@1500022 : TextConst 'ENU=Enter Person Name.';
      DesignationErr@1500021 : TextConst 'ENU=Enter Designation.';
      PrintDateErr@1500020 : TextConst 'ENU=Enter Printing Date.';
      PANNoEmptyErr@1500019 : TextConst 'ENU=Select P.A.N. No.';
      ReportPrintErr@1500018 : TextConst 'ENU=No records found for the given  Financial Year.';
      WrongTANNoErr@1500017 : TextConst 'ENU=No records found for the given  T.A.N No..';
      WrongQuarterErr@1500016 : TextConst 'ENU=No records found for the given  Quarter.';
      WrongFinancialYearErr@1500015 : TextConst 'ENU=No records found for the given  Financial Year.';
      ReportFrequency@1500032 : ' ,Q1,Q2,Q3,Q4';
      FinancialYear@1500031 : Code[6];
      FullName@1500030 : Text;
      Designation@1500029 : Code[20];
      PrintingDate@1500028 : Date;
      PANNo@1500027 : Code[20];
      TANLocation@1500026 : Code[10];

    [Test]
    [HandlerFunctions(Form26QRequestPageHandlerFieldValidation)]
    PROCEDURE VerifyForm26QWrongFinancialYearFieldValidation@1500048();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      ChallanNo@1500006 : Code[20];
      Amount@1500005 : Decimal;
      TDSAccountNo@1500004 : Code[20];
    BEGIN
      // [SCENARIO 164287] Error Thrown When Check Form26Q With Financial Year.
      // [FEATURE] [Form 26Q Validations]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      UpdateForm26QWrongFieldValues(3,IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS",1);
      ASSERTERROR REPORT.RUN(REPORT::"Form 26Q");

      // [THEN] Verified Form26Q with Financial Year.
      Assert.ExpectedError(WrongFinancialYearErr);
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler)]
    PROCEDURE VerifyGenerateeTDSAfterExecuteForm26Q@1500000();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      Amount@1500005 : Decimal;
      TDSAccountNo@1500004 : Code[20];
      ChallanNo@1500006 : Code[5];
      FormNo@1500007 : '26Q,27Q';
    BEGIN
      // [SCENARIO 164290] Check the TDS File with TANNo Created.
      // [FEATURE] [Generate-eTDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 26Q");
      GenerateeTDSUsingPage(TRUE);

      // [THEN] Created e-TDS file with TANNo.
      VerifyValuesOnBatchHeader(FormNo::"26Q",IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS",CompanyInformation."T.A.N. No.");
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler)]
    PROCEDURE VerifyGenerateFileeTDSAfterExecuteForm26QWithDifferentUnitPrice@1500008();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500005 : Record 13724;
      Amount@1500007 : Decimal;
      ChallanNo@1500006 : Code[5];
      TDSAccountNo@1500004 : Code[20];
      FormNo@1500010 : '26Q,27Q';
    BEGIN
      // [SCENARIO 164291] Check File-eTDS with TANNo Created.
      // [FEATURE] [Generate-eTDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(20000,2);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 26Q");
      GenerateeTDSUsingPage(TRUE);

      // [THEN] Created e-TDS file with TANNo.
      VerifyValuesOnBatchHeader(FormNo::"26Q",IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS",CompanyInformation."T.A.N. No.");
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler)]
    PROCEDURE VerifyGenerateeTDSAfterExecuteForm26QWithUpdatedVendor@1500011();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500005 : Record 13724;
      TDSAccountNo@1500004 : Code[20];
      ChallanNo@1500006 : Code[5];
      Amount@1500007 : Decimal;
      FormNo@1500010 : '26Q,27Q';
    BEGIN
      // [SCENARIO 164293] Check e-TDS with TANNo Created.(Rectification in PAN, TAN, Address, Telephone Number in Company Information Card and Vendor Card).
      // [FEATURE] [Generate-eTDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that updated Challan details,Challan Register and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 26Q");
      COMMIT;
      GenerateeTDSUsingPage(TRUE);
      UpdateForm26QFieldValidation(NodNocHeader."No.");
      REPORT.RUN(REPORT::"Form 26Q");
      COMMIT;
      GenerateeTDSUsingPage(TRUE);

      // [THEN] Created e-TDS file with PANNo.
      VerifyValuesOnBatchHeader(FormNo::"26Q",IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS",CompanyInformation."T.A.N. No.");
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler)]
    PROCEDURE VerifyGenerateeTDSAfterExecuteForm26QWithDifferentUnitPrice@1500001();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      Amount@1500007 : Decimal;
      TDSAccountNo@1500004 : Code[20];
      ChallanNo@1500005 : Code[5];
      FormNo@1500006 : '26Q,27Q';
    BEGIN
      // [SCENARIO 164290] Check the TDS File with TANNo Created.
      // [FEATURE] [Generate-eTDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(20000,2);

      // [WHEN] Create General Journal Line and post payment after that update Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 26Q");
      GenerateeTDSUsingPage(TRUE);

      // [THEN] Created e-TDS file with TANNo.
      VerifyValuesOnBatchHeader(FormNo::"26Q",IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS",CompanyInformation."T.A.N. No.");
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler)]
    PROCEDURE VerifyGenerateFileeTDSAfterExecuteForm26Q@1500005();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      Amount@1500005 : Decimal;
      TDSAccountNo@1500004 : Code[20];
      ChallanNo@1500006 : Code[5];
      FormNo@1500013 : '26Q,27Q';
    BEGIN
      // [SCENARIO 164291] Check File-eTDS with TANNo Created.
      // [FEATURE] [Generate-eTDS,Generate-FileeTDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that update Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 26Q");
      GenerateeTDSUsingPage(TRUE);
      GenerateFileeTDS(TRUE);

      // [THEN] Updated Challan Register Details and  Generated e-TDS,File-eTDS with PANNo.
      VerifyValuesOnBatchHeader(FormNo::"26Q",IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS",CompanyInformation."T.A.N. No.");
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler)]
    PROCEDURE VerifyGenerateFileeTDSAfterExecuteForm26QWithUpdatedVendor@1500013();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      Amount@1500005 : Decimal;
      TDSAccountNo@1500004 : Code[20];
      ChallanNo@1500006 : Code[5];
      FormNo@1500013 : '26Q,27Q';
    BEGIN
      // [SCENARIO 164294] Check File-eTDS with TANNo Created.(Rectification in PAN, TAN, Address, Telephone Number in Company Information Card and Vendor Card).
      // [FEATURE] [Generate-eTDS,Generate-FileeTDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 26Q");
      COMMIT;
      GenerateeTDSUsingPage(TRUE);
      UpdateForm26QFieldValidation(NodNocHeader."No.");
      REPORT.RUN(REPORT::"Form 26Q");
      COMMIT;
      GenerateFileeTDS(TRUE);

      // [THEN] Created e-TDS file with PANNo.
      VerifyValuesOnBatchHeader(FormNo::"26Q",IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS",CompanyInformation."T.A.N. No.");
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler,CorrectForm26Q27QRequestPageHandler,UpdateCorrect26QUsingPage,RevisedForm26QRequestPageHandler,GenerateRevisedeTDSRequestPageHandler)]
    PROCEDURE VerifyPANReferenceNoInRevisedForm26Q@1500007();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      TDSAccountNo@1500004 : Code[20];
      FormNo@1500013 : '26Q,27Q';
      ChallanNo@1500006 : Code[20];
    BEGIN
      // [SCENARIO 163845] Check File-eTDS with Corrected 26Q27Q Entries.
      // [FEATURE] [Generate-eTDS,Generate-FileeTDS,Generate Revised TDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      UpdateTDSAndNODNOCSetup(TDSSetup,NodNocHeader."No.");

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 26Q Report,Revised Form 26Q.
      CreateAndPostBankPaymentVoucherWithForeignCurrency(GenJournalLine,NodNocHeader."No.",TdsNatureOfDeduction.Code,'','');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      VerifyForm26QCorrect26Q27Q;

      // [THEN] Created Revised TDS Register Details With Company Address.
      VerifyValuesOnBatchHeader(FormNo::"26Q",IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS",CompanyInformation."T.A.N. No.");
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandlerFieldValidation)]
    PROCEDURE VerifyForm26QWithEmptyTANNoFieldValidation@1500028();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      ChallanNo@1500006 : Code[20];
      Amount@1500005 : Decimal;
      TDSAccountNo@1500004 : Code[20];
    BEGIN
      // [SCENARIO 164286] Error Thrown When Check Form26Q With Empty TANNo.
      // [FEATURE] [Form 26Q Validations]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      UpdateForm26QandeTDSFieldValues(1,IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      ASSERTERROR REPORT.RUN(REPORT::"Form 26Q");

      // [THEN] Verified with Empty TANNo.
      Assert.ExpectedError(TANNoEmptyErr);
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandlerFieldValidation)]
    PROCEDURE VerifyForm26QWithEmptyReportFrequencyFieldValidation@1500038();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      ChallanNo@1500006 : Code[20];
      Amount@1500005 : Decimal;
      TDSAccountNo@1500004 : Code[20];
    BEGIN
      // [SCENARIO 164286] Error Thrown When Check Form26Q With Empty ReportFrequency.
      // [FEATURE] [Form 26Q Validations]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      UpdateForm26QandeTDSFieldValues(2,IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      ASSERTERROR REPORT.RUN(REPORT::"Form 26Q");

      // [THEN] Verified with Empty ReportFrequency.
      Assert.ExpectedError(ReportFrequencyErr);
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandlerFieldValidation)]
    PROCEDURE VerifyForm26QWithEmptyFinancialYearFieldValidation@1500041();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      ChallanNo@1500006 : Code[20];
      Amount@1500005 : Decimal;
      TDSAccountNo@1500004 : Code[20];
    BEGIN
      // [SCENARIO 164286] Error Thrown When Check Form26Q With Empty FinancialYear.
      // [FEATURE] [Form 26Q Validations]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      UpdateForm26QandeTDSFieldValues(3,IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      ASSERTERROR REPORT.RUN(REPORT::"Form 26Q");

      // [THEN] Verified with Empty FinancialYear
      Assert.ExpectedError(FinancialYearErr);
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandlerFieldValidation)]
    PROCEDURE VerifyForm26QWithEmptyFullNameFieldValidation@1500045();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      ChallanNo@1500006 : Code[20];
      Amount@1500005 : Decimal;
      TDSAccountNo@1500004 : Code[20];
    BEGIN
      // [SCENARIO 164286] Error Thrown When Check Form26Q With Empty FinancialYear.
      // [FEATURE] [Form 26Q Validations]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      UpdateForm26QandeTDSFieldValues(4,IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      ASSERTERROR REPORT.RUN(REPORT::"Form 26Q");

      // [THEN] Verified with Empty Fullname.
      Assert.ExpectedError(FullNameErr);
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandlerFieldValidation)]
    PROCEDURE VerifyForm26QWithEmptyDesignationFieldValidation@1500033();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      ChallanNo@1500006 : Code[20];
      Amount@1500005 : Decimal;
      TDSAccountNo@1500004 : Code[20];
    BEGIN
      // [SCENARIO 164286] Error Thrown When Check Form26Q With Empty Designation.
      // [FEATURE] [Form 26Q Validations]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      UpdateForm26QandeTDSFieldValues(5,IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      ASSERTERROR REPORT.RUN(REPORT::"Form 26Q");

      // [THEN] Verified with Empty Designation.
      Assert.ExpectedError(DesignationErr);
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandlerFieldValidation)]
    PROCEDURE VerifyForm26QWithEmptyPANFieldValidation@1500050();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      ChallanNo@1500006 : Code[20];
      Amount@1500005 : Decimal;
      TDSAccountNo@1500004 : Code[20];
    BEGIN
      // [SCENARIO 164286] Error Thrown When Check Form26Q With Empty PANNo.
      // [FEATURE] [Form 26Q Validations]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      UpdateForm26QandeTDSFieldValues(6,IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      ASSERTERROR REPORT.RUN(REPORT::"Form 26Q");

      // [THEN] Verified with Empty PANNo
      Assert.ExpectedError(PANNoEmptyErr);
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandlerFieldValidation)]
    PROCEDURE VerifyForm26QWithEmptyPrintingDateFieldValidation@1500053();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      ChallanNo@1500006 : Code[20];
      Amount@1500005 : Decimal;
      TDSAccountNo@1500004 : Code[20];
    BEGIN
      // [SCENARIO 164286] Error Thrown When Check Form26Q With Empty PrintingDate.
      // [FEATURE] [Form 26Q Validations]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      UpdateForm26QandeTDSFieldValues(7,IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      ASSERTERROR REPORT.RUN(REPORT::"Form 26Q");

      // [THEN] Verified with Empty PrintingDate.
      Assert.ExpectedError(PrintDateErr);
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler)]
    PROCEDURE VerifyForm26QWithCompleteInformation@1500034();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      ChallanNo@1500006 : Code[20];
      TDSAccountNo@1500004 : Code[20];
      Amount@1500005 : Decimal;
    BEGIN
      // [SCENARIO 164286] Check Form26Q With Complete Information
      // [FEATURE] [Form 26Q Validations]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 26Q");

      // [THEN] Verified Form26Q Entries
      VerifyReportDatainForm26Q27Q(GenJournalLine."Document No.");
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler)]
    PROCEDURE VerifyForm26QBeforeUpdateChallanRegister@1500055();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      TDSAccountNo@1500004 : Code[20];
      Amount@1500005 : Decimal;
    BEGIN
      // [SCENARIO 164287] Error Thrown When Check Form26Q With Empty Financia Year.
      // [FEATURE] [Form 26Q Validations]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      ASSERTERROR REPORT.RUN(REPORT::"Form 26Q");

      // [THEN] Verified Form26Q Entries
      Assert.ExpectedError(ReportPrintErr);
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandlerFieldValidation)]
    PROCEDURE VerifyForm26QWrongTANNoFieldValidation@1500054();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      ChallanNo@1500006 : Code[20];
      Amount@1500005 : Decimal;
      TDSAccountNo@1500004 : Code[20];
    BEGIN
      // [SCENARIO 164287] Error Thrown When Check Form26Q With Wrong TANNo.
      // [FEATURE] [Form 26Q Validations]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      UpdateForm26QWrongFieldValues(1,IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS",1);
      ASSERTERROR REPORT.RUN(REPORT::"Form 26Q");

      // [THEN] Verified Form26Q Entries
      Assert.ExpectedError(WrongTANNoErr);
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandlerFieldValidation)]
    PROCEDURE VerifyForm26QWrongReportFrequencyFieldValidation@1500052();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      TDSAccountNo@1500004 : Code[20];
      ChallanNo@1500006 : Code[20];
      Amount@1500005 : Decimal;
    BEGIN
      // [SCENARIO 164287] Error Thrown When Check Form26Q With Wrong ReportFrequency.
      // [FEATURE] [Form 26Q Validations]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      UpdateForm26QWrongFieldValues(2,IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS",IncomeTaxAccountingPeriod."No.");
      COMMIT;
      ASSERTERROR REPORT.RUN(REPORT::"Form 26Q");

      // [THEN] Verified Form26Q Entries
      Assert.ExpectedError(WrongQuarterErr);
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form26QRequestPageHandler)]
    PROCEDURE VerifyForm26QAfterPaymentWithCompleteInformation@1500046();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      ChallanNo@1500006 : Code[20];
      TDSAccountNo@1500004 : Code[20];
      Amount@1500005 : Decimal;
    BEGIN
      // [SCENARIO 164287] Check Form26QField With All Parameters.
      // [FEATURE] [Form 26Q Validations]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 26Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,'');
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 26Q");

      // [THEN] Verified Form26Q Entries
      VerifyReportDatainForm26Q27Q(GenJournalLine."Document No.");
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form27QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler,CorrectForm26Q27QRequestPageHandler,UpdateCorrect26QUsingPage,RevisedForm27QRequestPageHandler,GenerateRevisedeTDSRequestPageHandler)]
    PROCEDURE VerifyPANReferenceNoInRevisedForm27QWithForeignVendor@1500020();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      TDSAccountNo@1500004 : Code[20];
      ChallanNo@1500006 : Code[20];
      CurrencyCode@1500007 : Code[10];
      FormNo@1500009 : '26Q,27Q';
    BEGIN
      // [SCENARIO 163846] Check File-eTDS with Corrected Form 27Q Entries
      // [FEATURE] [Generate-eTDS,Generate-FileeTDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 26Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,TRUE);
      CreateAssesseeAndNODNOCSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,CurrencyCode);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 27Q Report
      CreateAndPostBankPaymentVoucherWithForeignCurrency(
        GenJournalLine,NodNocHeader."No.",TdsNatureOfDeduction.Code,CurrencyCode,TDSSetup."Nature of Remittance");
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 27Q");

      // [THEN] Created TDS Register Details with Challan No.,Challan date, BSR Code,TDS Group
      VerifyReportDatainForm26Q27Q(GenJournalLine."Document No.");

      // [WHEN] Create e-TDS,File-eTDS,Correct Form27Q and Revised TDS.
      GenerateeTDSUsingPage(FALSE);
      GenerateFileeTDS(FALSE);
      EnqueValueInCorrectForm26Q27Q(FormNo::"27Q");
      REPORT.RUN(REPORT::"Correct 26Q/27Q Entries");
      REPORT.RUN(REPORT::"Revised Form 27Q");
      GenerateRevisedeTDSUsingPage(FALSE);

      // [THEN] Created Revised TDS Register Details With Company Address.
      VerifyReportDatainRevisedForm26Q27Q(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      RollBackChangeMadeToDataBase;
    END;

    [Test]
    [HandlerFunctions(Form27QRequestPageHandler,GenerateeTDSRequestPageHandler,GenerateFileeTDSRequestPageHandler)]
    PROCEDURE VerifyGenerateFileeTDSAfterExecuteForm27Q@1500029();
    VAR
      TDSSetup@1500003 : Record 13728;
      NodNocHeader@1500002 : Record 13786;
      TdsNatureOfDeduction@1500001 : Record 13726;
      GenJournalLine@1500000 : Record 81;
      GenJournalLine2@1500008 : Record 81;
      IncomeTaxAccountingPeriod@1500010 : Record 13724;
      CountryRegion@1500007 : Record 9;
      TDSAccountNo@1500004 : Code[20];
      ChallanNo@1500009 : Code[20];
      CurrencyCode@1500006 : Code[10];
      Amount@1500005 : Decimal;
      FormNo@1500013 : '26Q,27Q';
    BEGIN
      // [SCENARIO 164305] Check eTDS,Form 27Q with 27A.
      // [FEATURE] [Generate-eTDS,Generate-FileeTDS Transactions]

      // [GIVEN] Created Income Tax accounting period ,NODNOC ,TDS Nature of deduction,Assesse Code,TDS Setup For TDS Payment and to Generate form 27Q Report
      Initialize;
      InitializeSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,IncomeTaxAccountingPeriod,TDSAccountNo,FALSE);
      CurrencyCode := LibraryERM.CreateCurrencyWithExchangeRate(IncomeTaxAccountingPeriod."Starting Date",LibraryRandom.RandDec(10,2),
          LibraryRandom.RandDec(10,2));
      LibraryERM.CreateCountryRegion(CountryRegion);
      UpdateNonResidentAndCurrencyCodeInTDSGroup(NodNocHeader."No.",CountryRegion.Code,TDSSetup."TDS Group"::Contractor);
      Amount := LibraryRandom.RandDec(10000,2);

      // [WHEN] Create General Journal Line and post payment after that update TDS register,Challan details and run Form 27Q Report
      CreateAndPostGeneralJnlLine(GenJournalLine,Amount,NodNocHeader."No.",TdsNatureOfDeduction.Code,CurrencyCode);
      CreateAndPostPaymentJnlWithPayTDS(GenJournalLine2,TDSAccountNo);
      ChallanNo := LibraryTDS.UpdateChallanDetails(GenJournalLine."Document No.",GenJournalLine2."Document No.",WORKDATE);
      LibraryTDS.RunUpdateChallanRegister(ChallanNo,LibraryRandom.RandDec(2000,2));
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 27Q");

      // [THEN] Verified Form27Q Entries
      VerifyReportDatainForm26Q27Q(GenJournalLine."Document No.");

      // [WHEN] Create e-TDS,File-eTDS.
      GenerateeTDSUsingPage(FALSE);
      GenerateFileeTDS(FALSE);

      // [THEN] Verified Form26Q Entries with Return Status.
      VerifyForm27QReturnStatus(FormNo::"27Q",IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      RollBackChangeMadeToDataBase;
    END;

    LOCAL PROCEDURE Initialize@1500039();
    BEGIN
      CompanyInformation.GET;
      LibrarySetupStorage.Restore;
      IF  isInitialized THEN
        EXIT;
      LibraryTDS.CreateDeductoryCodeAndUpdateOnCompanyInformation(CompanyInformation);
      isInitialized := TRUE;
      COMMIT;
      LibrarySetupStorage.Save(DATABASE::"Company Information");
    END;

    LOCAL PROCEDURE InitializeSetup@1500003(VAR NodNocHeader@1500004 : Record 13786;VAR TdsNatureOfDeduction@1500003 : Record 13726;VAR TDSSetup@1500002 : Record 13728;VAR IncomeTaxAccountingPeriod@1500005 : Record 13724;VAR TDSAccountNo@1500000 : Code[20];ForeignVendor@1500001 : Boolean);
    BEGIN
      LibraryTDS.CreateIncomeTaxAccPeriod(IncomeTaxAccountingPeriod);
      IncomeTaxAccountingPeriod.VALIDATE("Starting Date",WORKDATE);
      IncomeTaxAccountingPeriod.VALIDATE("Ending Date",CALCDATE('<1Y>',WORKDATE));
      IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS" :=
        FORMAT(DATE2DMY(IncomeTaxAccountingPeriod."Starting Date",3)) +
        FORMAT(IncomeTaxAccountingPeriod."Ending Date",2,'<year,2>');
      IncomeTaxAccountingPeriod.MODIFY(TRUE);
      CreateIncomeTaxPeriodSetup(IncomeTaxAccountingPeriod."No.");
      LibraryTDS.UpdateTDSNilChallanInGeneralLedgerSetup;
      IF NOT ForeignVendor THEN BEGIN
        LibraryTDS.CreateAssesseeandNODNOCSetup(NodNocHeader,TdsNatureOfDeduction,TDSSetup,'',LibraryTDS.CreateVendorWithPostingSetup,
          NodNocHeader.Type::Vendor,WORKDATE);
        TDSAccountNo := LibraryTDS.CreateAndUpdateTDSAccNo(TDSSetup);
      END;
    END;

    LOCAL PROCEDURE CreateAssesseeAndNODNOCSetup@1500022(VAR NodNocHeader@1500016 : Record 13786;VAR TdsNatureOfDeduction@1500015 : Record 13726;VAR TDSSetup@1500014 : Record 13728;IncomeTaxAccountingPeriod@1500013 : Record 13724;VAR TDSAccountNo@1500012 : Code[20];VAR CurrencyCode@1500002 : Code[10]);
    VAR
      CountryRegion@1500000 : Record 9;
      Vendor@1500001 : Record 23;
      TDSNatureOfRemittance@1500006 : Record 13783;
      NodNocLines@1500010 : Record 13785;
      AssesseeCode@1500004 : Code[10];
      ActApplicable@1500008 : ' ,IT,DTAA';
    BEGIN
      LibraryERM.CreateCountryRegion(CountryRegion);
      CurrencyCode := LibraryERM.CreateCurrencyWithExchangeRate(IncomeTaxAccountingPeriod."Starting Date",LibraryRandom.RandDec(10,2),
          LibraryRandom.RandDec(10,2));
      LibraryTDS.CreateForeignVendorWithPANAPPLIED(Vendor,CurrencyCode,CountryRegion.Code);
      AssesseeCode := LibraryTDS.CreateAssesseeCode;
      LibraryERM.CreateTDSNatureDeduction(TdsNatureOfDeduction);
      TdsNatureOfDeduction.VALIDATE("TDS Group",TdsNatureOfDeduction."TDS Group"::"Payable to Non Residents");
      TdsNatureOfDeduction.MODIFY(TRUE);
      LibraryTDS.CreateNatureOfRemittance(TDSNatureOfRemittance);
      LibraryTDS.CreateTDSSetup(
        TDSSetup,TdsNatureOfDeduction.Code,AssesseeCode,WORKDATE,'',TDSNatureOfRemittance.Code,ActApplicable::IT,CountryRegion.Code);
      UpdateTDSSetup(TDSSetup);
      LibraryTDS.CreateNODNOCHeader(NodNocHeader,NodNocHeader.Type::Vendor,Vendor."No.",AssesseeCode);
      LibraryTDS.CreateNODNOCLines(
        NodNocLines,NodNocHeader,TdsNatureOfDeduction.Code,TRUE,TDSSetup."Nature of Remittance",TDSSetup."Act Applicable");
      TDSAccountNo := LibraryTDS.CreateAndUpdateTDSAccNo(TDSSetup);
    END;

    LOCAL PROCEDURE CreateIncomeTaxPeriodSetup@1500035(IncomeTaxAccountingPeriodNo@1500000 : Integer);
    VAR
      IncomeTaxPeriodSetup@1500001 : Record 16501;
    BEGIN
      LibraryERM.CreateIncomeTaxPeriod(IncomeTaxPeriodSetup,IncomeTaxAccountingPeriodNo,IncomeTaxPeriodSetup.Quarter::Q1);
      IncomeTaxPeriodSetup."Starting Date" := WORKDATE;
      IncomeTaxPeriodSetup."Ending Date" := LibraryRandom.RandDate(2);
      IncomeTaxPeriodSetup.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE CreateAndPostPaymentJnlWithPayTDS@1500049(VAR GenJournalLine@1500002 : Record 81;GLAccountNo@1500003 : Code[20]);
    VAR
      GenJournalTemplate@1500000 : Record 80;
      GenJournalBatch@1500001 : Record 232;
    BEGIN
      LibraryERM.CreateGenJournalTemplate(GenJournalTemplate);
      GenJournalTemplate.VALIDATE(Type,GenJournalTemplate.Type::Payments);
      GenJournalTemplate.MODIFY(TRUE);
      LibraryERM.CreateGenJournalBatch(GenJournalBatch,GenJournalTemplate.Name);
      LibraryERM.CreateGeneralJnlLineWithBalAcc(
        GenJournalLine,GenJournalTemplate.Name,GenJournalBatch.Name,GenJournalLine."Document Type"::Payment,
        GenJournalLine."Account Type"::"G/L Account",GLAccountNo,GenJournalLine."Bal. Account Type"::"Bank Account",
        LibraryERM.CreateBankAccountNo,0);
      GenJournalLine.VALIDATE("T.A.N. No.",CompanyInformation."T.A.N. No.");
      GenJournalLine.MODIFY(TRUE);
      LibraryTDS.PayTDS(GenJournalLine);
      COMMIT;
      LibraryERM.PostGeneralJnlLine(GenJournalLine);
    END;

    LOCAL PROCEDURE CreateAndPostGeneralJnlLine@1500016(VAR GenJournalLine@1500000 : Record 81;Amount@1500001 : Decimal;VendNo@1500004 : Code[20];TDSNatureOfDeductionCode@1500005 : Code[10];CurrencyCode@1500006 : Code[10]);
    VAR
      GenJournalTemplate@1500002 : Record 80;
      GenJournalBatch@1500003 : Record 232;
    BEGIN
      LibraryERM.CreateGenJournalTemplate(GenJournalTemplate);
      LibraryERM.CreateGenJournalBatch(GenJournalBatch,GenJournalTemplate.Name);
      LibraryJournals.CreateGenJournalLine(GenJournalLine,GenJournalBatch."Journal Template Name",GenJournalBatch.Name,
        GenJournalLine."Document Type"::Invoice,GenJournalLine."Account Type"::"G/L Account",'',
        GenJournalLine."Bal. Account Type"::"G/L Account",LibraryERM.CreateGLAccountNo,-Amount);
      UpdatePartyCodeAndTdsNatureCodeInGeneralJnlLine(GenJournalLine,VendNo,TDSNatureOfDeductionCode,'',CurrencyCode);
      LibraryERM.PostGeneralJnlLine(GenJournalLine);
    END;

    LOCAL PROCEDURE CreateAndPostBankPaymentVoucherWithForeignCurrency@1500026(VAR GenJournalLine@1500000 : Record 81;VendNo@1500004 : Code[20];TDSNatureOfDeductionCode@1500005 : Code[10];CurrencyCode@1500001 : Code[10];NatureOfRemittance@1500006 : Code[10]);
    VAR
      GenJournalTemplate@1500002 : Record 80;
      GenJournalBatch@1500003 : Record 232;
    BEGIN
      LibraryERM.CreateGenJournalTemplate(GenJournalTemplate);
      GenJournalTemplate.VALIDATE(Type,GenJournalTemplate.Type::Payments);
      GenJournalTemplate.MODIFY(TRUE);
      LibraryERM.CreateGenJournalBatch(GenJournalBatch,GenJournalTemplate.Name);
      LibraryJournals.CreateGenJournalLine(GenJournalLine,GenJournalBatch."Journal Template Name",GenJournalBatch.Name,
        GenJournalLine."Document Type"::Payment,GenJournalLine."Account Type"::"G/L Account",'',
        GenJournalLine."Bal. Account Type"::"Bank Account",LibraryERM.CreateBankAccountNo,LibraryRandom.RandDec(70000,2));
      UpdateCurrencyCodeAndNatureOfRemittanceInBankPaymentVoucher(
        GenJournalLine,VendNo,TDSNatureOfDeductionCode,CurrencyCode,NatureOfRemittance);
      LibraryERM.PostGeneralJnlLine(GenJournalLine);
    END;

    LOCAL PROCEDURE UpdateCurrencyCodeAndNatureOfRemittanceInBankPaymentVoucher@1500002(GenJournalLine@1500000 : Record 81;VendNo@1500001 : Code[20];TDSNatureOfDeductionCode@1500002 : Code[10];CurrencyCode@1500003 : Code[10];NatureOfRemittance@1500004 : Code[10]);
    BEGIN
      WITH GenJournalLine DO BEGIN
        VALIDATE("T.A.N. No.",CompanyInformation."T.A.N. No.");
        VALIDATE("Party Type","Party Type"::Vendor);
        VALIDATE("Party Code",VendNo);
        VALIDATE("TDS Nature of Deduction",TDSNatureOfDeductionCode);
        IF CurrencyCode <> '' THEN BEGIN
          VALIDATE("Currency Code",CurrencyCode);
          VALIDATE("Nature of Remittance",NatureOfRemittance);
          VALIDATE("Act Applicable","Act Applicable"::IT);
        END;
        MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdatePartyCodeAndTdsNatureCodeInGeneralJnlLine@1500015(VAR GenJournalLine@1500005 : Record 81;PartyCode@1500004 : Code[20];CodeContractor@1500002 : Code[10];DocumentNo@1500000 : Code[20];CurrencyCode@1500001 : Code[10]) : Code[20];
    BEGIN
      IF DocumentNo = '' THEN BEGIN
        GenJournalLine.VALIDATE("Party Type",GenJournalLine."Party Type"::Vendor);
        GenJournalLine.VALIDATE("Party Code",PartyCode);
        GenJournalLine.VALIDATE("TDS Nature of Deduction",CodeContractor);
        GenJournalLine.VALIDATE("Currency Code",CurrencyCode);
      END ELSE
        GenJournalLine.VALIDATE("Document No.",DocumentNo);
      GenJournalLine.MODIFY(TRUE);
      EXIT(GenJournalLine."Document No.");
    END;

    LOCAL PROCEDURE UpdateNonResidentAndCurrencyCodeInTDSGroup@1500031(VendorNo@1500003 : Code[20];CountryCode@1500002 : Code[10];TDSGroupCode@1500000 : Option);
    VAR
      TDSGroup@1500001 : Record 13731;
      Vendor@1500004 : Record 23;
    BEGIN
      Vendor.GET(VendorNo);
      Vendor.VALIDATE("Country/Region Code",CountryCode);
      Vendor.MODIFY(TRUE);

      TDSGroup.SETRANGE("TDS Group",TDSGroupCode);
      TDSGroup.FINDFIRST;
      TDSGroup.VALIDATE("Non Resident Payments",TRUE);
      TDSGroup.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE EnqueValueInCorrectForm26Q27Q@1500004(FormType@1500003 : '26Q,27Q');
    BEGIN
      LibraryVariableStorage.Enqueue(FormType);
    END;

    LOCAL PROCEDURE GenerateeTDSUsingPage@1500426(Resident@1500000 : Boolean) FileName : Text;
    VAR
      FileManagement@1500202 : Codeunit 419;
      GenerateeTDS@1500001 : TestPage 16507;
    BEGIN
      FileName := FileManagement.ServerTempFileName('.txt');
      LibraryVariableStorage.Enqueue(FileName);
      GenerateeTDS.OPENEDIT;
      GenerateeTDS.FormNo.SETVALUE(LibraryTDS.GetFormNo(Resident));
      GenerateeTDS.eTDS.INVOKE;
    END;

    LOCAL PROCEDURE GenerateRevisedeTDSUsingPage@1500081(Resident@1500005 : Boolean);
    VAR
      GenerateRevisedeTDS@1500001 : TestPage 16509;
    BEGIN
      GenerateRevisedeTDS.OPENEDIT;
      GenerateRevisedeTDS.FormNo.SETVALUE(LibraryTDS.GetFormNo(Resident));
      GenerateRevisedeTDS.Action1500006.INVOKE;
    END;

    LOCAL PROCEDURE GenerateFileeTDS@1500051(Resident@1500004 : Boolean);
    VAR
      GenerateeTDS@1500001 : TestPage 16507;
    BEGIN
      GenerateeTDS.OPENEDIT;
      GenerateeTDS.FormNo.SETVALUE(LibraryTDS.GetFormNo(Resident));
      GenerateeTDS."File e-TDS".INVOKE;
    END;

    LOCAL PROCEDURE VerifyValuesOnBatchHeader@1500021(FormNo@1500001 : '26Q,27Q';FinancialYear@1500004 : Code[6];TANNo@1500000 : Code[10]);
    VAR
      BatchHeader@1500002 : Record 16503;
    BEGIN
      BatchHeader.SETRANGE("Form No.",FormNo);
      BatchHeader.FINDLAST;
      Assert.AreEqual(
        FinancialYear,BatchHeader."Financial Year",STRSUBSTNO(FinancialYear,
          BatchHeader."Financial Year",ValueNotFoundErr));
      Assert.AreEqual(
        TANNo,BatchHeader."Deductor T.A.N. No.",STRSUBSTNO(TANNo,
          BatchHeader."Deductor T.A.N. No.",ValueNotFoundErr));
    END;

    LOCAL PROCEDURE VerifyForm27QReturnStatus@1500044(FormNo@1500001 : '26Q,27Q';FinancialYearForeTDSTCS@1500000 : Code[6]);
    VAR
      BatchHeader@1500002 : Record 16503;
    BEGIN
      BatchHeader.SETRANGE("Form No.",FormNo);
      BatchHeader.FINDLAST;
      Assert.AreEqual(
        FinancialYearForeTDSTCS,BatchHeader."Financial Year",STRSUBSTNO(FinancialYearForeTDSTCS,
          BatchHeader."Financial Year",ValueNotFoundErr));
      Assert.IsFalse(BatchHeader.Revised,ValueNotFoundErr);
    END;

    LOCAL PROCEDURE VerifyReportDatainForm26Q27Q@1500024(DocumentNo@1500000 : Code[20]);
    VAR
      Form26Q27QEntry@1500002 : Record 16505;
    BEGIN
      Form26Q27QEntry.SETRANGE("Document No.",DocumentNo);
      Form26Q27QEntry.FINDFIRST;
      LibraryReportDataset.LoadDataSetFile;
      LibraryReportDataset.AssertElementWithValueExists('Form_26Q_27Q_Entry__Deductee_P_A_N__No__',
        Form26Q27QEntry."Deductee P.A.N. No.");
      LibraryReportDataset.AssertElementWithValueExists('Form_26Q_27Q_Entry__Form_26Q_27Q_Entry___Total_TDS_Including_SHE_CESS_',
        Form26Q27QEntry."Total TDS Including SHE CESS");
    END;

    LOCAL PROCEDURE VerifyReportDatainRevisedForm26Q27Q@1500019(FinancialYearForeTDSTCS@1500000 : Code[6]);
    VAR
      BatchHeader@1500001 : Record 16503;
    BEGIN
      BatchHeader.SETRANGE("Financial Year",FinancialYearForeTDSTCS);
      BatchHeader.FINDLAST;
      LibraryReportDataset.LoadDataSetFile;
      LibraryReportDataset.AssertElementWithValueExists('Batch_Header__Deductor_Address_',
        BatchHeader."Deductor Address");
    END;

    LOCAL PROCEDURE VerifyForm26QCorrect26Q27Q@1500025();
    VAR
      FormNo@1500000 : '26Q,27Q';
    BEGIN
      LibraryTDS.Form26QForm27QReportFieldsValidation;
      REPORT.RUN(REPORT::"Form 26Q");
      GenerateeTDSUsingPage(TRUE);
      GenerateFileeTDS(TRUE);
      EnqueValueInCorrectForm26Q27Q(FormNo::"26Q");
      REPORT.RUN(REPORT::"Correct 26Q/27Q Entries");
      REPORT.RUN(REPORT::"Revised Form 26Q");
      GenerateRevisedeTDSUsingPage(TRUE);
    END;

    LOCAL PROCEDURE UpdateCompanyInformation@1500014();
    BEGIN
      CompanyInformation.GET;
      CompanyInformation.VALIDATE(Address,LibraryUtility.GenerateGUID);
      CompanyInformation.VALIDATE("Phone No.",FORMAT(LibraryRandom.RandIntInRange(1000000000,2000000000)));
      CompanyInformation.VALIDATE("P.A.N. No.",LibraryUtility.GenerateRandomAlphabeticText(10,0));
      CompanyInformation.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE UpdateVendorInformation@1500012(VendNo@1500000 : Code[20]);
    VAR
      Vendor@1500001 : Record 23;
    BEGIN
      WITH Vendor DO BEGIN
        GET(VendNo);
        VALIDATE(Address,LibraryUtility.GenerateGUID);
        VALIDATE("Phone No.",FORMAT(LibraryRandom.RandIntInRange(1000000000,2000000000)));
        VALIDATE("P.A.N. Status","P.A.N. Status"::PANINVALID);
        MODIFY(TRUE);
      END
    END;

    LOCAL PROCEDURE UpdateTDSAndNODNOCSetup@1500009(TDSSetup@1500000 : Record 13728;VendNo@1500001 : Code[20]);
    VAR
      Vendor@1500002 : Record 23;
      NodNocLines@1500003 : Record 13785;
      VATBusinessPostingGroup@1500004 : Record 323;
    BEGIN
      Vendor.GET(VendNo);
      Vendor.VALIDATE("P.A.N. Status",Vendor."P.A.N. Status"::PANAPPLIED);
      Vendor.VALIDATE("P.A.N. Reference No.",LibraryUtility.GenerateRandomCode(Vendor.FIELDNO("P.A.N. No."),DATABASE::Vendor));
      LibraryERM.CreateVATBusinessPostingGroup(VATBusinessPostingGroup);
      Vendor.VALIDATE("VAT Bus. Posting Group",VATBusinessPostingGroup.Code);
      Vendor.MODIFY(TRUE);

      TDSSetup.VALIDATE("Non PAN TDS %",LibraryRandom.RandInt(10));
      TDSSetup.MODIFY(TRUE);

      NodNocLines.SETRANGE("No.",VendNo);
      NodNocLines.SETRANGE(Type,NodNocLines.Type::Vendor);
      NodNocLines.FINDFIRST;
      NodNocLines.VALIDATE("Threshold Overlook",FALSE);
      NodNocLines.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE UpdateTDSSetup@1500027(TDSSetup@1500000 : Record 13728);
    BEGIN
      WITH TDSSetup DO BEGIN
        VALIDATE("TDS %",LibraryRandom.RandInt(5));
        VALIDATE("Non PAN TDS %",LibraryRandom.RandInt(10));
        VALIDATE("Surcharge %",LibraryRandom.RandInt(5));
        VALIDATE("eCESS %",LibraryRandom.RandInt(5));
        VALIDATE("SHE Cess %",LibraryRandom.RandInt(5));
        MODIFY(TRUE);
      END;
    END;

    [ModalPageHandler]
    PROCEDURE UpdateCorrect26QUsingPage@1500017(VAR CorrectDeductorRecord@1500001 : TestPage 16503);
    BEGIN
      CorrectDeductorRecord."Deductor Address".SETVALUE(LibraryUtility.GenerateRandomAlphabeticText(10,0));
      CorrectDeductorRecord."Update Entries".INVOKE;
    END;

    LOCAL PROCEDURE UpdateForm26QFieldValidation@1500006(VendNo@1500000 : Code[20]);
    BEGIN
      UpdateCompanyInformation;
      UpdateVendorInformation(VendNo);
      LibraryTDS.Form26QForm27QReportFieldsValidation;
    END;

    LOCAL PROCEDURE UpdateForm26QandeTDSFieldValues@1500042(FieldNumber@1500000 : Integer;FinancialYearValue@1500001 : Code[6]);
    BEGIN
      CompanyInformation.GET;
      ReportFrequency := ReportFrequency::Q1;
      FinancialYear := FinancialYearValue;
      FullName := COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(20,0),1,20);
      Designation := COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10);
      PrintingDate := WORKDATE;
      TANLocation := CompanyInformation."T.A.N. No.";
      PANNo := CompanyInformation."P.A.N. No.";
      CASE FieldNumber OF
        1:
          TANLocation := '';
        2:
          ReportFrequency := ReportFrequency::" ";
        3:
          FinancialYear := '';
        4:
          FullName := '';
        5:
          Designation := '';
        6:
          PANNo := '';
        7:
          PrintingDate := 0D;
      END;
    END;

    LOCAL PROCEDURE UpdateForm26QWrongFieldValues@1500040(FieldNumber@1500000 : Integer;FinancialYearValue@1500001 : Code[6];IncomeTaxAccountingPeriodNo@1500004 : Integer);
    VAR
      IncomeTaxAccountingPeriod@1500002 : Record 13724;
      IncomeTaxPeriodSetup@1500003 : Record 16501;
    BEGIN
      IncomeTaxAccountingPeriod.FINDFIRST;
      CompanyInformation.GET;
      ReportFrequency := ReportFrequency::Q1;
      FinancialYear := FinancialYearValue;
      FullName := COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(20,0),1,20);
      Designation := COPYSTR(LibraryUtility.GenerateRandomAlphabeticText(10,0),1,10);
      PrintingDate := WORKDATE;
      TANLocation := CompanyInformation."T.A.N. No.";
      PANNo := CompanyInformation."P.A.N. No.";
      CASE FieldNumber OF
        1:
          TANLocation := FORMAT(LibraryRandom.RandInt(1020000000) + LibraryRandom.RandInt(12));
        2:
          BEGIN
            LibraryTDS.CreateIncomeTaxPeriod(IncomeTaxPeriodSetup,IncomeTaxAccountingPeriodNo,2);
            ReportFrequency := ReportFrequency::Q2;
          END;
        3:
          FinancialYear := IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS";
      END;
    END;

    LOCAL PROCEDURE RollBackChangeMadeToDataBase@1500023();
    VAR
      BatchHeader@1500003 : Record 16503;
      TDSEntry@1500004 : Record 13729;
      ChallanRegister@1500005 : Record 16504;
      Form26Q27QEntry@1500006 : Record 16505;
      GeneralLedgerSetup@1500007 : Record 98;
    BEGIN
      RollbackIncomeTaxPeriodSetup;
      GeneralLedgerSetup.GET;
      ChallanRegister.DELETEALL;
      BatchHeader.DELETEALL;
      TDSEntry.DELETEALL;
      Form26Q27QEntry.DELETEALL;
      COMMIT;
      LibraryTDS.UpdateTDSNilChallanInGeneralLedgerSetup;
    END;

    LOCAL PROCEDURE RollbackIncomeTaxPeriodSetup@1500065();
    VAR
      IncomeTaxPeriodSetup@1500000 : Record 16501;
      IncomeTaxAccountingPeriod@1500001 : Record 13724;
    BEGIN
      IncomeTaxAccountingPeriod.FINDLAST;
      IncomeTaxAccountingPeriod.DELETE;
      IncomeTaxPeriodSetup.DELETEALL;
    END;

    [RequestPageHandler]
    PROCEDURE Form26QRequestPageHandler@1500068(VAR Form26Q@1500004 : TestRequestPage 16505);
    VAR
      IncomeTaxAccountingPeriod@1500000 : Record 13724;
    BEGIN
      IncomeTaxAccountingPeriod.FINDLAST;
      Form26Q.TANLocation.SETVALUE(CompanyInformation."T.A.N. No.");
      Form26Q.ReportFrequency.SETVALUE(ReportFrequency::Q1);
      Form26Q.FinancialYear.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      Form26Q.FullName.SETVALUE(LibraryUtility.GenerateRandomAlphabeticText(10,0));
      Form26Q.Designation.SETVALUE(LibraryUtility.GenerateRandomAlphabeticText(10,0));
      Form26Q.PrintingDate.SETVALUE(WORKDATE);
      Form26Q."PAN No.".SETVALUE(CompanyInformation."P.A.N. No.");
      Form26Q.MobileNo.SETVALUE(LibraryRandom.RandIntInRange(1000000000,2000000000));
      Form26Q.SAVEASXML(LibraryReportDataset.GetParametersFileName,LibraryReportDataset.GetFileName);
    END;

    [RequestPageHandler]
    PROCEDURE Form27QRequestPageHandler@1500037(VAR Form27Q@1500004 : TestRequestPage 16511);
    VAR
      IncomeTaxAccountingPeriod@1500000 : Record 13724;
    BEGIN
      IncomeTaxAccountingPeriod.FINDLAST;
      Form27Q.TANLocation.SETVALUE(CompanyInformation."T.A.N. No.");
      Form27Q.ReportFrequency.SETVALUE(ReportFrequency::Q1);
      Form27Q.FinancialYear.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      Form27Q.FullName.SETVALUE(LibraryUtility.GenerateRandomAlphabeticText(10,0));
      Form27Q.Designation.SETVALUE(LibraryUtility.GenerateRandomAlphabeticText(10,0));
      Form27Q."PAN No.".SETVALUE(CompanyInformation."P.A.N. No.");
      Form27Q.PrintingDate.SETVALUE(WORKDATE);
      Form27Q.MobileNo.SETVALUE(LibraryRandom.RandIntInRange(1000000000,2000000000));
      Form27Q.SAVEASXML(LibraryReportDataset.GetParametersFileName,LibraryReportDataset.GetFileName);
    END;

    [RequestPageHandler]
    PROCEDURE Form26QRequestPageHandlerFieldValidation@1500043(VAR Form26Q@1500113 : TestRequestPage 16505);
    BEGIN
      Form26Q.TANLocation.SETVALUE(TANLocation);
      Form26Q.ReportFrequency.SETVALUE(ReportFrequency);
      Form26Q.FinancialYear.SETVALUE(FinancialYear);
      Form26Q.FullName.SETVALUE(FullName);
      Form26Q.Designation.SETVALUE(Designation);
      Form26Q.PrintingDate.SETVALUE(PrintingDate);
      Form26Q.MobileNo.SETVALUE(LibraryRandom.RandIntInRange(1000000000,999999999));
      Form26Q."PAN No.".SETVALUE(PANNo);
      Form26Q.SAVEASXML(LibraryReportDataset.GetParametersFileName,LibraryReportDataset.GetFileName);
    END;

    [RequestPageHandler]
    PROCEDURE CorrectForm26Q27QRequestPageHandler@1500036(VAR Correct26Q27QEntries@1500001 : TestRequestPage 16502);
    VAR
      IncomeTaxAccountingPeriod@1500003 : Record 13724;
      FormType@1500004 : Variant;
      CorrectionType@1500000 : ' ,Deductor,Deductee';
    BEGIN
      IncomeTaxAccountingPeriod.FINDLAST;
      LibraryVariableStorage.Dequeue(FormType);
      Correct26Q27QEntries.Control1500002.SETVALUE(ReportFrequency::Q1);
      Correct26Q27QEntries.Control1500003.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      Correct26Q27QEntries.Control1500004.SETVALUE(CorrectionType::Deductor);
      Correct26Q27QEntries.Control1500006.SETVALUE(FormType);
      Correct26Q27QEntries.OK.INVOKE;
    END;

    [RequestPageHandler]
    PROCEDURE RevisedForm26QRequestPageHandler@1500018(VAR RevisedForm26Q@1500004 : TestRequestPage 16506);
    VAR
      IncomeTaxAccountingPeriod@1500000 : Record 13724;
    BEGIN
      IncomeTaxAccountingPeriod.FINDLAST;
      RevisedForm26Q.Control1500008.SETVALUE(CompanyInformation."T.A.N. No.");
      RevisedForm26Q.Control1500015.SETVALUE(ReportFrequency::Q1);
      RevisedForm26Q.Control1500002.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      RevisedForm26Q.Control1500006.SETVALUE(LibraryUtility.GenerateRandomAlphabeticText(10,0));
      RevisedForm26Q.Control1500007.SETVALUE(LibraryUtility.GenerateRandomAlphabeticText(10,0));
      RevisedForm26Q."PAN No.".SETVALUE(CompanyInformation."P.A.N. No.");
      RevisedForm26Q.Control1500000.SETVALUE(WORKDATE);
      RevisedForm26Q.Control1500009.SETVALUE(LibraryRandom.RandIntInRange(1000000000,2000000000));
      RevisedForm26Q.SAVEASXML(LibraryReportDataset.GetParametersFileName,LibraryReportDataset.GetFileName);
    END;

    [RequestPageHandler]
    PROCEDURE RevisedForm27QRequestPageHandler@1500030(VAR RevisedForm27Q@1500004 : TestRequestPage 16504);
    VAR
      IncomeTaxAccountingPeriod@1500000 : Record 13724;
    BEGIN
      IncomeTaxAccountingPeriod.FINDLAST;
      RevisedForm27Q.Control1500008.SETVALUE(CompanyInformation."T.A.N. No.");
      RevisedForm27Q.Control1500015.SETVALUE(ReportFrequency::Q1);
      RevisedForm27Q.Control1500002.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      RevisedForm27Q.Control1500006.SETVALUE(LibraryUtility.GenerateRandomAlphabeticText(10,0));
      RevisedForm27Q.Control1500007.SETVALUE(LibraryUtility.GenerateRandomAlphabeticText(10,0));
      RevisedForm27Q."PAN No.".SETVALUE(CompanyInformation."P.A.N. No.");
      RevisedForm27Q.Control1500000.SETVALUE(WORKDATE);
      RevisedForm27Q.Control1500009.SETVALUE(LibraryRandom.RandIntInRange(1000000000,2000000000));
      RevisedForm27Q.SAVEASXML(LibraryReportDataset.GetParametersFileName,LibraryReportDataset.GetFileName);
    END;

    [RequestPageHandler]
    PROCEDURE GenerateRevisedeTDSRequestPageHandler@1500082(VAR RevisedeTDS@1500005 : TestRequestPage 16509);
    VAR
      IncomeTaxAccountingPeriod@1500004 : Record 13724;
      FileManagement@1500006 : Codeunit 419;
      FileName@1500002 : Text;
    BEGIN
      FileName := FileManagement.ServerTempFileName('.txt');
      IncomeTaxAccountingPeriod.FINDLAST;
      RevisedeTDS.FileName.SETVALUE(FileName);
      RevisedeTDS.Control1500012.SETVALUE(CompanyInformation."T.A.N. No.");
      RevisedeTDS.Control1500006.SETVALUE(ReportFrequency::Q1);
      RevisedeTDS.Control1500004.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      RevisedeTDS.Control1500000.SETVALUE(LibraryUtility.GenerateRandomAlphabeticText(10,0));
      RevisedeTDS.Control1500002.SETVALUE(LibraryUtility.GenerateRandomAlphabeticText(10,0));
      RevisedeTDS.Control1500010.SETVALUE(WORKDATE);
      RevisedeTDS.Control1.SETVALUE(LibraryUtility.GenerateRandomAlphabeticText(10,0));
      RevisedeTDS.Control1500015.SETVALUE(EmailIDTxt);
      RevisedeTDS.PANNo.SETVALUE(CompanyInformation."P.A.N. No.");
      RevisedeTDS.Control1500017.SETVALUE(LibraryRandom.RandIntInRange(1000000000,2000000000));
      RevisedeTDS.OK.INVOKE;
    END;

    [RequestPageHandler]
    PROCEDURE GenerateeTDSRequestPageHandler@1500490(VAR GenerateeTDS@1500104 : TestRequestPage 16508);
    VAR
      IncomeTaxAccountingPeriod@1500000 : Record 13724;
      FileName@1500107 : Variant;
    BEGIN
      IncomeTaxAccountingPeriod.FINDLAST;
      LibraryVariableStorage.Dequeue(FileName);
      GenerateeTDS.FileName.SETVALUE(FileName);
      GenerateeTDS.TANLocation.SETVALUE(CompanyInformation."T.A.N. No.");
      GenerateeTDS.ReportFrequency.SETVALUE(ReportFrequency::Q1);
      GenerateeTDS.FinancialYear.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      GenerateeTDS."PAN No.".SETVALUE(CompanyInformation."P.A.N. No.");
      GenerateeTDS.FullName.SETVALUE(LibraryUtility.GenerateRandomAlphabeticText(10,0));
      GenerateeTDS.Designation.SETVALUE(LibraryUtility.GenerateRandomAlphabeticText(10,0));
      GenerateeTDS.PrintingDate.SETVALUE(WORKDATE);
      GenerateeTDS.NameOfReturnPreparationUtility.SETVALUE(LibraryUtility.GenerateRandomAlphabeticText(10,0));
      GenerateeTDS.Email.SETVALUE(EmailIDTxt);
      GenerateeTDS.MobileNo.SETVALUE(LibraryRandom.RandIntInRange(1000000000,2000000000));
      GenerateeTDS.OK.INVOKE;
    END;

    [RequestPageHandler]
    PROCEDURE GenerateFileeTDSRequestPageHandler@1500010(VAR GenerateFileeTDS@1500003 : TestRequestPage 16501);
    VAR
      IncomeTaxAccountingPeriod@1500000 : Record 13724;
    BEGIN
      IncomeTaxAccountingPeriod.FINDLAST;
      GenerateFileeTDS.Control1500009.SETVALUE(CompanyInformation."T.A.N. No.");
      GenerateFileeTDS.Control1500000.SETVALUE(ReportFrequency::Q1);
      GenerateFileeTDS.Control1500002.SETVALUE(IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS");
      GenerateFileeTDS.Control1500004.SETVALUE(WORKDATE);
      GenerateFileeTDS.Control1500006.SETVALUE(COPYSTR(CREATEGUID,1,15));
      GenerateFileeTDS.OK.INVOKE;
    END;

    BEGIN
    END.
  }
}

