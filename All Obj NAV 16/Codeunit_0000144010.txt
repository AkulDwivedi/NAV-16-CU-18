OBJECT Codeunit 144010 FA-Additional Depreciation
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      AmountErr@1500008 : TextConst '@@@="%1 and %2 = Amount and Amount";ENU=%1 is incorrect in %2.';
      LibraryUtility@1500014 : Codeunit 131000;
      Assert@1500013 : Codeunit 130000;
      LibraryFixedAsset@1500012 : Codeunit 131330;
      LibraryRandom@1500011 : Codeunit 130440;
      IsInitialized@1500009 : Boolean;

    [Test]
    PROCEDURE VerifyFAStockUponNewFAPurchaseStraightLine@1500022();
    VAR
      DepreciationBook@1500001 : Record 5611;
      FixedAsset@1500000 : Record 5600;
      FAClass@1500003 : Record 5607;
      FABlock@1500004 : Record 16518;
      FASubclass@1500005 : Record 5608;
      FALocation@1500006 : Record 5609;
      FADepreciationBook@1500007 : Record 5612;
      FAPostingGroup@1500008 : Record 5606;
      DepreciationMethod@1500009 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';
      AcquisitionAmount@1500011 : Decimal;
      AssetNo@1500012 : Integer;
      Blockbookvalue@1500013 : Decimal;
    BEGIN
      // [SCENARIO 55015] Verifying Fixed Asset Book Value and Block Value upon purchase of Fixed Asset and creation of a new Fixed Asset for Straight Line Method
      // [FEATURE] [FIXED ASSET] [FIXED ASSET JOURNAL]
      Initialize;

      // [GIVEN] Created Fixed Asset Setup as per Income Tax Act
      CreateFABasics(DepreciationBook,FAClass,FABlock,FASubclass,FALocation,FAPostingGroup);
      InitializeBlockValue(FABlock,AssetNo,Blockbookvalue);
      CreateNewFixedAsset(FixedAsset,FAClass.Code,FASubclass.Code,FALocation.Code,FABlock.Code);
      CreateFADepreciationBook(
        FADepreciationBook,FixedAsset."No.",DepreciationBook.Code,DepreciationMethod::"Straight-Line",FABlock."Depreciation %");

      // [WHEN] Post FA Journal for Acquisition
      CreateAndPostFAAcqusitionLine(FADepreciationBook,AcquisitionAmount);

      // [THEN] FA Book Value and Block Value are created
      CheckFAValueAndBookValue(FADepreciationBook,FixedAsset,AcquisitionAmount,AssetNo,Blockbookvalue);
    END;

    [Test]
    PROCEDURE VerifyDepreciationFirstYearStraightLineFullUtilise@1500000();
    VAR
      DepreciationBook@1500004 : Record 5611;
      FAJournalLine@1500001 : Record 5621;
      FixedAsset@1500003 : Record 5600;
      FADepreciationBook@1500002 : Record 5612;
      DepreciationMethod@1500000 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';
      FirstYrUtilisationPeriod@1500010 : 'Half Year,Full Year';
      DeprAmount@1500005 : Decimal;
      FAValueOld@1500006 : Decimal;
      BLockValueOld@1500007 : Decimal;
      DocNo@1500008 : Code[20];
      NewPostingDate@1500009 : Date;
    BEGIN
      // [SCENARIO 55016] Verifying Fixed Asset Book Value and Depreciation Amount as per Straight Line Method after asset is used for more than Depr. Threshold Days in same year of acquisition
      // [FEATURE] [FIXED ASSET] [FIXED ASSET JOURNAL] [CALCULATE DEPRECIATION]
      Initialize;

      // [GIVEN] Created,Aquired Fixed Asset and checked FA Value.
      CreateAcquireAndVerifyFAValue(DepreciationBook,FixedAsset,FADepreciationBook,DepreciationMethod::"Straight-Line");

      // [WHEN] Calculate depreciation for full Year and check depreciation value.Post FA Journal for Depreciation.
      RunCalDeprAndVerifyFirstYrUtilise(FAJournalLine,FixedAsset."No.",DepreciationBook.Code,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod::"Full Year");
      GetFAAndBlockValue(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld);
      LibraryFixedAsset.PostFAJournalLine(FAJournalLine);

      // [THEN] FA Book Value, Block Value and FA ledger Entries are Created
      VerifyFAValueAfterDepreciation(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld,DeprAmount);
      VerifyFALedgerEntriesFirstYrUtilise(DepreciationBook,FixedAsset,FADepreciationBook,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod::"Full Year");
    END;

    [Test]
    PROCEDURE VerifyDepreciationFirstYearStraightLineHalfUtilise@1500059();
    VAR
      DepreciationBook@1500004 : Record 5611;
      FAJournalLine@1500001 : Record 5621;
      FixedAsset@1500003 : Record 5600;
      FADepreciationBook@1500002 : Record 5612;
      DepreciationMethod@1500000 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';
      FirstYrUtilisationPeriod@1500010 : 'Half Year,Full Year';
      DeprAmount@1500005 : Decimal;
      FAValueOld@1500006 : Decimal;
      BLockValueOld@1500007 : Decimal;
      DocNo@1500008 : Code[20];
      NewPostingDate@1500009 : Date;
    BEGIN
      // [SCENARIO 55017] Verifying Fixed Asset Book Value and Depreciation Amount as per Straight Line Method after asset is used for less than Depr. Threshold Days in same year of acquisition
      // [FEATURE] [FIXED ASSET] [FIXED ASSET JOURNAL] [CALCULATE DEPRECIATION]
      Initialize;

      // [GIVEN] Created,Aquired Fixed Asset and checked FA Value.
      CreateAcquireAndVerifyFAValue(DepreciationBook,FixedAsset,FADepreciationBook,DepreciationMethod::"Straight-Line");

      // [WHEN] Calculate depreciation for Half Year and check depreciation value.Post FA Journal for Depreciation.
      RunCalDeprAndVerifyFirstYrUtilise(FAJournalLine,FixedAsset."No.",DepreciationBook.Code,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod::"Half Year");
      GetFAAndBlockValue(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld);
      LibraryFixedAsset.PostFAJournalLine(FAJournalLine);

      // [THEN] FA Book Value, Block Value and FA ledger Entries are Created
      VerifyFAValueAfterDepreciation(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld,DeprAmount);
      VerifyFALedgerEntriesFirstYrUtilise(DepreciationBook,FixedAsset,FADepreciationBook,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod::"Half Year");
    END;

    [Test]
    PROCEDURE VerifyDeprSecondYrFirstYrStraightLineHalfUtilise@1500006();
    VAR
      DepreciationBook@1500004 : Record 5611;
      FAJournalLine@1500001 : Record 5621;
      FixedAsset@1500003 : Record 5600;
      FADepreciationBook@1500002 : Record 5612;
      DepreciationMethod@1500000 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';
      FirstYrUtilisationPeriod@1500010 : 'Half Year,Full Year';
      DeprAmount@1500005 : Decimal;
      FAValueOld@1500006 : Decimal;
      BLockValueOld@1500007 : Decimal;
      DocNo@1500008 : Code[20];
      NewPostingDate@1500009 : Date;
    BEGIN
      // [SCENARIO 55018] Verifying Fixed Asset Book Value and Depreciation Amount On 2nd Yr as per Straight Line Method after asset is used for less than Depr. Threshold Days in same year of acquisition
      // [FEATURE] [FIXED ASSET] [FIXED ASSET JOURNAL] [CALCULATE DEPRECIATION]
      Initialize;

      // [GIVEN] Created,Aquired Fixed Asset and checked FA Value,FA Ledger Value after first year half utilise
      DeprFirstYearlUtilise(DepreciationBook,FixedAsset,FADepreciationBook,DepreciationMethod::"Straight-Line",
        FirstYrUtilisationPeriod::"Half Year");

      // [WHEN] Calculate depreciation for second Year and check depreciation value.Post FA Journal for Depreciation.
      RunCalDeprAndVerifySecondYr(FAJournalLine,FixedAsset."No.",DepreciationBook.Code,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod::"Half Year",DepreciationMethod::"Straight-Line");
      GetFAAndBlockValue(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld);
      LibraryFixedAsset.PostFAJournalLine(FAJournalLine);

      // [THEN] FA Book Value, Block Value and FA ledger Entries are Created for second year
      VerifyFAValueAfterDepreciation(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld,-DeprAmount);
      VerifySecondYrFALedgerEntriesFirstYrUtilise(DepreciationBook,FixedAsset,FADepreciationBook,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod::"Half Year");
    END;

    [Test]
    PROCEDURE VerifyDeprThirdYrFirstYrStraightLineHalfUtilise@1500046();
    VAR
      DepreciationBook@1500004 : Record 5611;
      FAJournalLine@1500001 : Record 5621;
      FixedAsset@1500003 : Record 5600;
      FADepreciationBook@1500002 : Record 5612;
      DepreciationMethod@1500000 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';
      FirstYrUtilisationPeriod@1500010 : 'Half Year,Full Year';
      DeprAmount@1500005 : Decimal;
      FAValueOld@1500006 : Decimal;
      BLockValueOld@1500007 : Decimal;
      DocNo@1500008 : Code[20];
      NewPostingDate@1500009 : Date;
    BEGIN
      // [SCENARIO 55019] Verifying Fixed Asset Book Value and Depreciation Amount On 3rd Yr as per Straight Line Method after asset is used for less than Depr. Threshold Days in same year of acquisition
      // [FEATURE] [FIXED ASSET] [FIXED ASSET JOURNAL] [CALCULATE DEPRECIATION]
      Initialize;

      // [GIVEN] Created,Aquired Fixed Asset and checked FA Value,FA Ledger Value on Second year after first year half utilise
      DeprSecondYr(DepreciationBook,FixedAsset,FADepreciationBook,DepreciationMethod::"Straight-Line",
        FirstYrUtilisationPeriod::"Half Year");

      // [WHEN] Calculate depreciation for Third Year and check depreciation value.Post FA Journal for Depreciation.
      RunCalDeprAndVerifyThirdYr(FAJournalLine,FixedAsset."No.",DepreciationBook.Code,DocNo,DeprAmount,
        NewPostingDate,DepreciationMethod::"Straight-Line");
      GetFAAndBlockValue(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld);
      LibraryFixedAsset.PostFAJournalLine(FAJournalLine);

      // [THEN] FA Book Value, Block Value and FA ledger Entries are Created for Third year
      VerifyFAValueAfterDepreciation(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld,-DeprAmount);
      VerifyThirdYrFALedgerEntries(FixedAsset,FADepreciationBook,DocNo,DeprAmount,
        NewPostingDate);
    END;

    [Test]
    PROCEDURE VerifyDepreciationStraightLineNoUseFirstYr@1500020();
    VAR
      DepreciationBook@1500004 : Record 5611;
      FAJournalLine@1500001 : Record 5621;
      FixedAsset@1500003 : Record 5600;
      FADepreciationBook@1500002 : Record 5612;
      DepreciationMethod@1500000 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';
      FirstYrUtilisationPeriod@1500010 : 'Half Year,Full Year';
      DeprAmount@1500005 : Decimal;
      FAValueOld@1500006 : Decimal;
      BLockValueOld@1500007 : Decimal;
      DocNo@1500008 : Code[20];
      NewPostingDate@1500009 : Date;
    BEGIN
      // [SCENARIO 55021] Verifying Fixed Asset Book Value and Depreciation Amount as per Straight Line Method after asset is put to use on the next fiscal of acquisition
      // [FEATURE] [FIXED ASSET] [FIXED ASSET JOURNAL] [CALCULATE DEPRECIATION]
      Initialize;

      // [GIVEN] Created,Aquired Fixed Asset and checked FA Value.
      CreateAcquireAndVerifyFAValue(DepreciationBook,FixedAsset,FADepreciationBook,DepreciationMethod::"Straight-Line");

      // [WHEN] Calculate depreciation and check depreciation value.Post FA Journal for Depreciation.
      RunCalDeprAndVerifyFirstYrNoUse(FAJournalLine,FixedAsset."No.",DepreciationBook.Code,DocNo,DeprAmount,
        NewPostingDate);
      GetFAAndBlockValue(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld);
      LibraryFixedAsset.PostFAJournalLine(FAJournalLine);

      // [THEN] FA Book Value, Block Value and FA ledger Entries are Created
      VerifyFAValueAfterDepreciation(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld,DeprAmount);
      VerifyFALedgerEntriesFirstYrUtilise(DepreciationBook,FixedAsset,FADepreciationBook,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod::"Full Year");
    END;

    [Test]
    PROCEDURE VerifyFAStockUponNewFAPurchaseDecliningBalance@1500012();
    VAR
      DepreciationBook@1500001 : Record 5611;
      FixedAsset@1500000 : Record 5600;
      FAClass@1500003 : Record 5607;
      FABlock@1500004 : Record 16518;
      FASubclass@1500005 : Record 5608;
      FALocation@1500006 : Record 5609;
      FADepreciationBook@1500007 : Record 5612;
      FAPostingGroup@1500008 : Record 5606;
      DepreciationMethod@1500009 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';
      AcquisitionAmount@1500011 : Decimal;
      AssetNo@1500012 : Integer;
      Blockbookvalue@1500013 : Decimal;
    BEGIN
      // [SCENARIO 55025] Verifying Fixed Asset Book Value and Block Value upon purchase of Fixed Asset and creation of a new Fixed Asset for Declining Balance
      // [FEATURE] [FIXED ASSET] [FIXED ASSET JOURNAL]
      Initialize;

      // [GIVEN] Created Fixed Asset Setup as per Income Tax Act
      CreateFABasics(DepreciationBook,FAClass,FABlock,FASubclass,FALocation,FAPostingGroup);
      InitializeBlockValue(FABlock,AssetNo,Blockbookvalue);
      CreateNewFixedAsset(FixedAsset,FAClass.Code,FASubclass.Code,FALocation.Code,FABlock.Code);
      CreateFADepreciationBook(
        FADepreciationBook,FixedAsset."No.",DepreciationBook.Code,DepreciationMethod::"Declining-Balance 1",FABlock."Depreciation %");

      // [WHEN] Post FA Journal for Acquisition
      CreateAndPostFAAcqusitionLine(FADepreciationBook,AcquisitionAmount);

      // [THEN] FA Book Value and Block Value are verified
      CheckFAValueAndBookValue(FADepreciationBook,FixedAsset,AcquisitionAmount,AssetNo,Blockbookvalue);
    END;

    [Test]
    PROCEDURE VerifyDepreciationFirstYearDecliningBalanceFullUtilise@1500027();
    VAR
      DepreciationBook@1500004 : Record 5611;
      FAJournalLine@1500001 : Record 5621;
      FixedAsset@1500003 : Record 5600;
      FADepreciationBook@1500002 : Record 5612;
      DepreciationMethod@1500000 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';
      FirstYrUtilisationPeriod@1500010 : 'Half Year,Full Year';
      DeprAmount@1500005 : Decimal;
      FAValueOld@1500006 : Decimal;
      BLockValueOld@1500007 : Decimal;
      DocNo@1500008 : Code[20];
      NewPostingDate@1500009 : Date;
    BEGIN
      // [SCENARIO 55028] Verifying Fixed Asset Book Value and Depreciation Amount as per Declining Balance Method after asset is used for more than Depr. Threshold Days in same year of acquisition
      // [FEATURE] [FIXED ASSET] [FIXED ASSET JOURNAL] [CALCULATE DEPRECIATION]
      Initialize;

      // [GIVEN] Created,Aquired Fixed Asset and checked FA Value.
      CreateAcquireAndVerifyFAValue(DepreciationBook,FixedAsset,FADepreciationBook,DepreciationMethod::"Declining-Balance 1");

      // [WHEN] Calculate depreciation for full Year and check depreciation value.Post FA Journal for Depreciation.
      RunCalDeprAndVerifyFirstYrUtilise(FAJournalLine,FixedAsset."No.",DepreciationBook.Code,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod::"Full Year");
      GetFAAndBlockValue(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld);
      LibraryFixedAsset.PostFAJournalLine(FAJournalLine);

      // [THEN] FA Book Value, Block Value and FA ledger Entries are created
      VerifyFAValueAfterDepreciation(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld,DeprAmount);
      VerifyFALedgerEntriesFirstYrUtilise(DepreciationBook,FixedAsset,FADepreciationBook,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod::"Full Year");
    END;

    [Test]
    PROCEDURE VerifyDepreciationFirstYearDecliningBalanceHalfUtilise@1500023();
    VAR
      DepreciationBook@1500004 : Record 5611;
      FAJournalLine@1500001 : Record 5621;
      FixedAsset@1500003 : Record 5600;
      FADepreciationBook@1500002 : Record 5612;
      DepreciationMethod@1500000 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';
      FirstYrUtilisationPeriod@1500010 : 'Half Year,Full Year';
      DeprAmount@1500005 : Decimal;
      FAValueOld@1500006 : Decimal;
      BLockValueOld@1500007 : Decimal;
      DocNo@1500008 : Code[20];
      NewPostingDate@1500009 : Date;
    BEGIN
      // [SCENARIO 55029] Verifying Fixed Asset Book Value and Depreciation Amount as per Declining Balance Method after asset is used for less than Depr. Threshold Days in same year of acquisition
      // [FEATURE] [FIXED ASSET] [FIXED ASSET JOURNAL] [CALCULATE DEPRECIATION]
      Initialize;

      // [GIVEN] Created,Aquired Fixed Asset and checked FA Value.
      CreateAcquireAndVerifyFAValue(DepreciationBook,FixedAsset,FADepreciationBook,DepreciationMethod::"Declining-Balance 1");

      // [WHEN] Calculate depreciation for Half Year and check depreciation value.Post FA Journal for Depreciation
      RunCalDeprAndVerifyFirstYrUtilise(FAJournalLine,FixedAsset."No.",DepreciationBook.Code,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod::"Half Year");
      GetFAAndBlockValue(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld);
      LibraryFixedAsset.PostFAJournalLine(FAJournalLine);

      // [THEN] FA Book Value, Block Value and FA ledger Entries are created
      VerifyFAValueAfterDepreciation(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld,DeprAmount);
      VerifyFALedgerEntriesFirstYrUtilise(DepreciationBook,FixedAsset,FADepreciationBook,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod::"Half Year");
    END;

    [Test]
    PROCEDURE VerifyDeprSecondYrFirstYrDeclineHalfUtilise@1500031();
    VAR
      DepreciationBook@1500004 : Record 5611;
      FAJournalLine@1500001 : Record 5621;
      FixedAsset@1500003 : Record 5600;
      FADepreciationBook@1500002 : Record 5612;
      DepreciationMethod@1500000 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';
      FirstYrUtilisationPeriod@1500010 : 'Half Year,Full Year';
      DeprAmount@1500005 : Decimal;
      FAValueOld@1500006 : Decimal;
      BLockValueOld@1500007 : Decimal;
      DocNo@1500008 : Code[20];
      NewPostingDate@1500009 : Date;
    BEGIN
      // [SCENARIO 55030] Verifying Fixed Asset Book Value and Depreciation Amount On 2nd Yr as per Declining Balance methodafter asset is used for less than Depr. Threshold Days in same year of acquisition
      // [FEATURE] [FIXED ASSET] [FIXED ASSET JOURNAL] [CALCULATE DEPRECIATION]
      Initialize;

      // [GIVEN] Created,Aquired Fixed Asset and checked FA Value,FA Ledger Value after first year half utilise
      DeprFirstYearlUtilise(DepreciationBook,FixedAsset,FADepreciationBook,DepreciationMethod::"Declining-Balance 1",
        FirstYrUtilisationPeriod::"Half Year");

      // [WHEN] Calculate depreciation for second Year and check depreciation value.Post FA Journal for Depreciation.
      RunCalDeprAndVerifySecondYr(FAJournalLine,FixedAsset."No.",DepreciationBook.Code,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod::"Half Year",DepreciationMethod::"Declining-Balance 1");
      GetFAAndBlockValue(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld);
      LibraryFixedAsset.PostFAJournalLine(FAJournalLine);

      // [THEN] FA Book Value, Block Value and FA ledger Entries are Created for second year
      VerifyFAValueAfterDepreciation(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld,-DeprAmount);
      VerifySecondYrFALedgerEntriesFirstYrUtilise(DepreciationBook,FixedAsset,FADepreciationBook,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod::"Half Year");
    END;

    [Test]
    PROCEDURE VerifyDeprThirdYrFirstYrDeclineHalfUtilise@1500050();
    VAR
      DepreciationBook@1500004 : Record 5611;
      FAJournalLine@1500001 : Record 5621;
      FixedAsset@1500003 : Record 5600;
      FADepreciationBook@1500002 : Record 5612;
      DepreciationMethod@1500000 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';
      FirstYrUtilisationPeriod@1500010 : 'Half Year,Full Year';
      DeprAmount@1500005 : Decimal;
      FAValueOld@1500006 : Decimal;
      BLockValueOld@1500007 : Decimal;
      DocNo@1500008 : Code[20];
      NewPostingDate@1500009 : Date;
    BEGIN
      // [SCENARIO 55031] Verifying Fixed Asset Book Value and Depreciation Amount On 3rd Yr as per Declining Balance Method after asset is used for less than Depr. Threshold Days in same year of acquisition
      // [FEATURE] [FIXED ASSET] [FIXED ASSET JOURNAL] [CALCULATE DEPRECIATION]
      Initialize;

      // [GIVEN] Created,Aquired Fixed Asset and checked FA Value,FA Ledger Value on Second year after first year half utilise
      DeprSecondYr(DepreciationBook,FixedAsset,FADepreciationBook,DepreciationMethod::"Declining-Balance 1",
        FirstYrUtilisationPeriod::"Half Year");

      // [WHEN] Calculate depreciation for Third Year and check depreciation value.Post FA Journal for Depreciation.
      RunCalDeprAndVerifyThirdYr(FAJournalLine,FixedAsset."No.",DepreciationBook.Code,DocNo,DeprAmount,
        NewPostingDate,DepreciationMethod::"Straight-Line");
      GetFAAndBlockValue(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld);
      LibraryFixedAsset.PostFAJournalLine(FAJournalLine);

      // [THEN] FA Book Value, Block Value and FA ledger Entries are Created for Third year
      VerifyFAValueAfterDepreciation(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld,-DeprAmount);
      VerifyThirdYrFALedgerEntries(FixedAsset,FADepreciationBook,DocNo,DeprAmount,
        NewPostingDate);
    END;

    [Test]
    PROCEDURE VerifyDepreciationDecliningNoUseFirstYr@1500055();
    VAR
      DepreciationBook@1500004 : Record 5611;
      FAJournalLine@1500001 : Record 5621;
      FixedAsset@1500003 : Record 5600;
      FADepreciationBook@1500002 : Record 5612;
      DepreciationMethod@1500000 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';
      FirstYrUtilisationPeriod@1500010 : 'Half Year,Full Year';
      DeprAmount@1500005 : Decimal;
      FAValueOld@1500006 : Decimal;
      BLockValueOld@1500007 : Decimal;
      DocNo@1500008 : Code[20];
      NewPostingDate@1500009 : Date;
    BEGIN
      // [SCENARIO 55093] Verifying Fixed Asset Book Value and Depreciation Amount as per Declining Balance Method after asset is put to use on the next fiscal of acquisition
      // [FEATURE] [FIXED ASSET] [FIXED ASSET JOURNAL] [CALCULATE DEPRECIATION]
      Initialize;

      // [GIVEN] Created,Aquired Fixed Asset and checked FA Value.
      CreateAcquireAndVerifyFAValue(DepreciationBook,FixedAsset,FADepreciationBook,DepreciationMethod::"Declining-Balance 1");

      // [WHEN] Calculate depreciation and check depreciation value.Post FA Journal for Depreciation.
      RunCalDeprAndVerifyFirstYrNoUse(FAJournalLine,FixedAsset."No.",DepreciationBook.Code,DocNo,DeprAmount,
        NewPostingDate);
      GetFAAndBlockValue(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld);
      LibraryFixedAsset.PostFAJournalLine(FAJournalLine);

      // [THEN] FA Book Value, Block Value and FA ledger Entries are Created
      VerifyFAValueAfterDepreciation(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld,DeprAmount);
      VerifyFALedgerEntriesFirstYrUtilise(DepreciationBook,FixedAsset,FADepreciationBook,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod::"Full Year");
    END;

    [Test]
    PROCEDURE VerifyDisposalSecondYrFirstYrDeclineHalfUtilise@1500039();
    VAR
      DepreciationBook@1500004 : Record 5611;
      FixedAsset@1500003 : Record 5600;
      FADepreciationBook@1500002 : Record 5612;
      DepreciationMethod@1500000 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';
      FirstYrUtilisationPeriod@1500010 : 'Half Year,Full Year';
      DisposalAmount@1500011 : Decimal;
      DisposalDate@1500012 : Date;
      DisposalDoc@1500013 : Code[20];
      DisposalYear@1500014 : 'First,Second';
    BEGIN
      // [SCENARIO 55349] Verifying Fixed Asset Book Value and FA Ledger Entries upon disposal On 2nd Yr as per Declining Balance method after asset is used for less than Depr. Threshold Days in same year of acquisition
      // [FEATURE] [FIXED ASSET] [FIXED ASSET JOURNAL] [CALCULATE DEPRECIATION] [DISPOSAL]
      Initialize;

      // [GIVEN] Created,Aquired Fixed Asset and checked FA Value,FA Ledger Value after first year half utilise
      DeprFirstYearlUtilise(DepreciationBook,FixedAsset,FADepreciationBook,DepreciationMethod::"Declining-Balance 1",
        FirstYrUtilisationPeriod::"Half Year");

      // [WHEN] Post FA Journal for Disposal.
      CreateAndPostFADisposalLine(FADepreciationBook,DisposalAmount,DisposalDate,DisposalDoc,DisposalYear::Second);

      // [THEN] FA Book Value and  FA ledger Entries for disposal are Created for second year
      VerifyFAValueAfterDisposal(FixedAsset."No.",DepreciationBook.Code);
      VerifyFALedgerEntriesAfterDisposal(FixedAsset."No.",DepreciationBook.Code,DisposalDate,DisposalDoc,DisposalAmount);
      RunCalDeprAndVerifyDisposal(FixedAsset."No.",DepreciationBook.Code,DisposalYear::Second);
    END;

    [Test]
    PROCEDURE VerifyDisposalSecondYrFirstYrDeclineFullUtilise@1500063();
    VAR
      DepreciationBook@1500004 : Record 5611;
      FixedAsset@1500003 : Record 5600;
      FADepreciationBook@1500002 : Record 5612;
      DepreciationMethod@1500000 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';
      FirstYrUtilisationPeriod@1500010 : 'Half Year,Full Year';
      DisposalAmount@1500011 : Decimal;
      DisposalDate@1500012 : Date;
      DisposalDoc@1500013 : Code[20];
      DisposalYear@1500014 : 'First,Second';
    BEGIN
      // [SCENARIO 55350] Verifying Fixed Asset Book Value and FA Ledger Entries upon disposal On 2nd Yr as per Declining Balance method after asset is used for more than Depr. Threshold Days in same year of acquisition
      // [FEATURE] [FIXED ASSET] [FIXED ASSET JOURNAL] [CALCULATE DEPRECIATION] [DISPOSAL]
      Initialize;

      // [GIVEN] Created,Aquired Fixed Asset and checked FA Value,FA Ledger Value after first year half utilise
      DeprFirstYearlUtilise(DepreciationBook,FixedAsset,FADepreciationBook,DepreciationMethod::"Declining-Balance 1",
        FirstYrUtilisationPeriod::"Full Year");

      // [WHEN] Post FA Journal for Disposal.
      CreateAndPostFADisposalLine(FADepreciationBook,DisposalAmount,DisposalDate,DisposalDoc,DisposalYear::Second);

      // [THEN] FA Book Value and  FA ledger Entries for disposal are Created for second year
      VerifyFAValueAfterDisposal(FixedAsset."No.",DepreciationBook.Code);
      VerifyFALedgerEntriesAfterDisposal(FixedAsset."No.",DepreciationBook.Code,DisposalDate,DisposalDoc,DisposalAmount);
      RunCalDeprAndVerifyDisposal(FixedAsset."No.",DepreciationBook.Code,DisposalYear::Second);
    END;

    [Test]
    PROCEDURE VerifyDisposalFirstYr@1500045();
    VAR
      DepreciationBook@1500004 : Record 5611;
      FixedAsset@1500003 : Record 5600;
      FADepreciationBook@1500002 : Record 5612;
      DepreciationMethod@1500000 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';
      DisposalAmount@1500014 : Decimal;
      DisposalDate@1500013 : Date;
      DisposalDoc@1500012 : Code[20];
      DisposalYear@1500011 : 'First,Second';
    BEGIN
      // [SCENARIO 56765] Verifying Fixed Asset Book Value and Depreciation Amount as per Declining Balance Method after asset is used for more than Depr. Threshold Days in same year of acquisition
      // [FEATURE] [FIXED ASSET] [FIXED ASSET JOURNAL] [CALCULATE DEPRECIATION] [DISPOSAL]
      Initialize;

      // [GIVEN] Created,Aquired Fixed Asset and checked FA Value.
      CreateAcquireAndVerifyFAValue(DepreciationBook,FixedAsset,FADepreciationBook,DepreciationMethod::"Declining-Balance 1");

      // [WHEN] Post FA Journal for Depreciation.
      CreateAndPostFADisposalLine(FADepreciationBook,DisposalAmount,DisposalDate,DisposalDoc,DisposalYear::First);

      // [THEN] FA Book Value, Block Value and FA ledger Entries are created
      VerifyFAValueAfterDisposal(FixedAsset."No.",DepreciationBook.Code);
      VerifyFALedgerEntriesAfterDisposalFirstYr(FixedAsset."No.",DepreciationBook.Code,DisposalDate,DisposalDoc,DisposalAmount);
      RunCalDeprAndVerifyDisposal(FixedAsset."No.",DepreciationBook.Code,DisposalYear::First);
    END;

    LOCAL PROCEDURE CheckFAValueAndBookValue@1500001(FADepreciationBook@1500003 : Record 5612;FixedAsset@1500005 : Record 5600;ExpectedAmount@1500000 : Decimal;AssetNo@1500004 : Integer;Blockbookvalue@1500002 : Decimal);
    VAR
      FABlock@1500001 : Record 16518;
    BEGIN
      FADepreciationBook.CALCFIELDS("Book Value");
      FABlock.GET(FixedAsset."FA Class Code",FixedAsset."FA Block Code");
      FABlock.CALCFIELDS("No. of Assets","Book Value");
      Assert.AreNearlyEqual(ExpectedAmount,FADepreciationBook."Book Value",1,
        STRSUBSTNO(AmountErr,FADepreciationBook.FIELDNAME("Book Value"),FADepreciationBook.TABLECAPTION));
      Assert.AreNearlyEqual(ExpectedAmount,FABlock."Book Value" - Blockbookvalue,1,
        STRSUBSTNO(AmountErr,FABlock.FIELDNAME("Book Value"),FABlock.TABLECAPTION));
      Assert.AreEqual(1,FABlock."No. of Assets" - AssetNo,
        STRSUBSTNO(AmountErr,FABlock.FIELDNAME("No. of Assets"),FABlock.TABLECAPTION));
    END;

    LOCAL PROCEDURE CreateAcquireAndVerifyFAValue@1500003(VAR DepreciationBook@1500015 : Record 5611;VAR FixedAsset@1500014 : Record 5600;VAR FADepreciationBook@1500010 : Record 5612;DepreciationMethod@1500000 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual');
    VAR
      FAClass@1500003 : Record 5607;
      FABlock@1500004 : Record 16518;
      FASubclass@1500005 : Record 5608;
      FALocation@1500006 : Record 5609;
      FAPostingGroup@1500008 : Record 5606;
      AcquisitionAmount@1500011 : Decimal;
      AssetNo@1500012 : Integer;
      Blockbookvalue@1500013 : Decimal;
    BEGIN
      CreateFABasics(DepreciationBook,FAClass,FABlock,FASubclass,FALocation,FAPostingGroup);
      InitializeBlockValue(FABlock,AssetNo,Blockbookvalue);
      CreateNewFixedAsset(FixedAsset,FAClass.Code,FASubclass.Code,FALocation.Code,FABlock.Code);
      CreateFADepreciationBook(
        FADepreciationBook,FixedAsset."No.",DepreciationBook.Code,DepreciationMethod,FABlock."Depreciation %");
      CreateAndPostFAAcqusitionLine(FADepreciationBook,AcquisitionAmount);
      CheckFAValueAndBookValue(FADepreciationBook,FixedAsset,AcquisitionAmount,AssetNo,Blockbookvalue);
    END;

    LOCAL PROCEDURE CreateAndPostFAAcqusitionLine@1500021(FADepreciationBook@1500003 : Record 5612;VAR Amount@1500002 : Decimal);
    VAR
      FAJournalLine@1500000 : Record 5621;
    BEGIN
      CreateFAJournalLine(
        FAJournalLine,FADepreciationBook."FA No.",FADepreciationBook."Depreciation Book Code",
        FAJournalLine."FA Posting Type"::"Acquisition Cost");
      Amount := FAJournalLine.Amount;
      LibraryFixedAsset.PostFAJournalLine(FAJournalLine);
    END;

    LOCAL PROCEDURE CreateAndPostFADisposalLine@1500043(VAR FADepreciationBook@1500003 : Record 5612;VAR Amount@1500002 : Decimal;VAR DisposalPostingDate@1500001 : Date;VAR DisposalDoc@1500004 : Code[20];DisposalYear@1500005 : 'First,Second');
    VAR
      FAJournalLine@1500000 : Record 5621;
    BEGIN
      CreateFAJournalLine(
        FAJournalLine,FADepreciationBook."FA No.",FADepreciationBook."Depreciation Book Code",
        FAJournalLine."FA Posting Type"::Disposal);
      CASE DisposalYear OF
        DisposalYear::First:
          FAJournalLine.VALIDATE("FA Posting Date",WORKDATE);
        DisposalYear::Second:
          FAJournalLine.VALIDATE("FA Posting Date",LibraryRandom.RandDateFrom(GetFiscalYearEndDateInc(WORKDATE),365));
      END;
      FAJournalLine.VALIDATE("Posting Date",FAJournalLine."FA Posting Date");
      FAJournalLine.Amount := -FAJournalLine.Amount;
      FAJournalLine.MODIFY(TRUE);
      Amount := FAJournalLine.Amount;
      DisposalPostingDate := FAJournalLine."Posting Date";
      DisposalDoc := FAJournalLine."Document No.";
      LibraryFixedAsset.PostFAJournalLine(FAJournalLine);
    END;

    LOCAL PROCEDURE CreateFAJournalLine@1500019(VAR FAJournalLine@1500004 : Record 5621;FANo@1500003 : Code[20];DepreciationBookCode@1500002 : Code[10];FAPostingType@1500001 : Option);
    VAR
      FAJournalBatch@1500006 : Record 5620;
      FAJournalTemplate@1500005 : Record 5619;
    BEGIN
      FAJournalTemplate.SETRANGE(Recurring,FALSE);
      LibraryFixedAsset.CreateJournalTemplate(FAJournalTemplate);
      LibraryFixedAsset.CreateFAJournalBatch(FAJournalBatch,FAJournalTemplate.Name);
      FAJournalBatch.VALIDATE("No. Series",LibraryUtility.GetGlobalNoSeriesCode);
      FAJournalBatch.MODIFY(TRUE);
      LibraryFixedAsset.CreateFAJournalLine(FAJournalLine,FAJournalBatch."Journal Template Name",FAJournalBatch.Name);
      FAJournalLine.VALIDATE("Document No.",GetDocumentNo(FAJournalBatch));
      FAJournalLine.VALIDATE("Posting Date",GetFiscalYearStartDateInc(WORKDATE));
      FAJournalLine.VALIDATE("FA Posting Date",GetFiscalYearStartDateInc(WORKDATE));
      FAJournalLine.VALIDATE("FA Posting Type",FAPostingType);
      FAJournalLine.VALIDATE("FA No.",FANo);
      FAJournalLine.VALIDATE(Amount,LibraryRandom.RandInt(1000));
      FAJournalLine.VALIDATE("Depreciation Book Code",DepreciationBookCode);
      FAJournalLine.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE CreateDepreciationBookIncomeTax@1500018(VAR DepreciationBook@1500000 : Record 5611);
    BEGIN
      DepreciationBook.SETRANGE(Code,'INCOME TAX');
      IF DepreciationBook.FINDSET THEN
        EXIT;
      DepreciationBook.INIT;
      DepreciationBook.VALIDATE(Code,'INCOME TAX');
      DepreciationBook.VALIDATE(Description,DepreciationBook.Code);
      DepreciationBook.INSERT(TRUE);
    END;

    LOCAL PROCEDURE CreateAndValidateDepreciationBookIncomeTax@1500038(VAR DepreciationBook@1500000 : Record 5611);
    BEGIN
      DepreciationBook.SETRANGE(Code,'INCOME TAX');
      IF DepreciationBook.FINDSET THEN
        EXIT;
      CreateDepreciationBookIncomeTax(DepreciationBook);
      ValidateDeprBookForIncomeTax(DepreciationBook);
    END;

    LOCAL PROCEDURE CreateNewFixedAsset@1500017(VAR FixedAsset@1500000 : Record 5600;FAClass@1500001 : Code[10];FASubClass@1500002 : Code[10];FALocation@1500003 : Code[10];FABlock@1500004 : Code[10]);
    BEGIN
      LibraryFixedAsset.CreateFixedAsset(FixedAsset);
      FixedAsset.VALIDATE("Add. Depr. Applicable",TRUE);
      FixedAsset.VALIDATE("FA Class Code",FAClass);
      FixedAsset.VALIDATE("FA Subclass Code",FASubClass);
      FixedAsset.VALIDATE("FA Location Code",FALocation);
      FixedAsset.VALIDATE("FA Block Code",FABlock);
      FixedAsset.MODIFY(TRUE)
    END;

    LOCAL PROCEDURE CreateFABasics@1500016(VAR DepreciationBook@1500007 : Record 5611;VAR FAClass@1500003 : Record 5607;VAR FABlock@1500002 : Record 16518;VAR FASubclass@1500001 : Record 5608;VAR FALocation@1500000 : Record 5609;VAR FAPostingGroup@1500006 : Record 5606);
    BEGIN
      CreateAndValidateDepreciationBookIncomeTax(DepreciationBook);
      LibraryFixedAsset.CreateFAClass(FAClass);
      CreateAndValidateFABlock(FABlock,FAClass.Code);
      LibraryFixedAsset.CreateFASubclass(FASubclass);
      LibraryFixedAsset.CreateFALocation(FALocation);
      LibraryFixedAsset.CreateFAPostingGroup(FAPostingGroup);
    END;

    LOCAL PROCEDURE CreateAndValidateFABlock@1500009(VAR FABlock@1500000 : Record 16518;FAClassCode@1500001 : Code[10]);
    BEGIN
      LibraryFixedAsset.CreateFABlock(FABlock,FAClassCode);
      FABlock.VALIDATE("Depreciation %",LibraryRandom.RandDecInDecimalRange(1,100,2));
      FABlock.VALIDATE("Add. Depreciation %",LibraryRandom.RandDecInDecimalRange(1,100,2));
      FABlock.MODIFY(TRUE)
    END;

    LOCAL PROCEDURE CreateFADepreciationBook@1500008(VAR FADepreciationBook@1500002 : Record 5612;FANo@1500001 : Code[20];DepreciationBookCode@1500000 : Code[10];DepreciationMethod@1500003 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';DepreciationPct@1500004 : Decimal);
    BEGIN
      LibraryFixedAsset.CreateFADepreciationBook(FADepreciationBook,FANo,DepreciationBookCode);
      FADepreciationBook.VALIDATE("FA Book Type",FADepreciationBook."FA Book Type"::"Income Tax");
      FADepreciationBook.VALIDATE("Depreciation Method",DepreciationMethod);
      FADepreciationBook.VALIDATE("Depreciation Starting Date",GetFiscalYearStartDateInc(WORKDATE));
      FADepreciationBook.MODIFY(TRUE);
      CASE FADepreciationBook."Depreciation Method" OF
        FADepreciationBook."Depreciation Method"::"Straight-Line":
          Assert.AreNearlyEqual(DepreciationPct,FADepreciationBook."Straight-Line %",1,
            STRSUBSTNO(AmountErr,FADepreciationBook.FIELDNAME("Straight-Line %"),FADepreciationBook.TABLECAPTION));
        FADepreciationBook."Depreciation Method"::"Declining-Balance 1":
          Assert.AreNearlyEqual(DepreciationPct,FADepreciationBook."Declining-Balance %",1,
            STRSUBSTNO(AmountErr,FADepreciationBook.FIELDNAME("Declining-Balance %"),FADepreciationBook.TABLECAPTION));
      END
    END;

    LOCAL PROCEDURE DeprFirstYearlUtilise@1500015(VAR DepreciationBook@1500010 : Record 5611;VAR FixedAsset@1500004 : Record 5600;VAR FADepreciationBook@1500003 : Record 5612;DepreciationMethod@1500002 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';FirstYrUtilisationPeriod@1500000 : 'Half Year,Full Year');
    VAR
      FAJournalLine@1500001 : Record 5621;
      DeprAmount@1500005 : Decimal;
      FAValueOld@1500006 : Decimal;
      BLockValueOld@1500007 : Decimal;
      DocNo@1500008 : Code[20];
      NewPostingDate@1500009 : Date;
    BEGIN
      LibraryFixedAsset.CreateFAIncomeTaxAccPeriod(CALCDATE('<1Y>',WORKDATE));
      LibraryFixedAsset.CreateFAIncomeTaxAccPeriod(CALCDATE('<2Y>',WORKDATE));
      CreateAcquireAndVerifyFAValue(DepreciationBook,FixedAsset,FADepreciationBook,DepreciationMethod);
      RunCalDeprAndVerifyFirstYrUtilise(FAJournalLine,FixedAsset."No.",DepreciationBook.Code,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod);
      GetFAAndBlockValue(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld);
      LibraryFixedAsset.PostFAJournalLine(FAJournalLine);
      VerifyFAValueAfterDepreciation(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld,DeprAmount);
      VerifyFALedgerEntriesFirstYrUtilise(DepreciationBook,FixedAsset,FADepreciationBook,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod);
    END;

    LOCAL PROCEDURE DeprSecondYr@1500047(VAR DepreciationBook@1500010 : Record 5611;VAR FixedAsset@1500004 : Record 5600;VAR FADepreciationBook@1500003 : Record 5612;DepreciationMethod@1500002 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';FirstYrUtilisationPeriod@1500000 : 'Half Year,Full Year');
    VAR
      FAJournalLine@1500001 : Record 5621;
      DeprAmount@1500005 : Decimal;
      FAValueOld@1500006 : Decimal;
      BLockValueOld@1500007 : Decimal;
      DocNo@1500008 : Code[20];
      NewPostingDate@1500009 : Date;
    BEGIN
      DeprFirstYearlUtilise(DepreciationBook,FixedAsset,FADepreciationBook,DepreciationMethod,FirstYrUtilisationPeriod);
      RunCalDeprAndVerifySecondYr(FAJournalLine,FixedAsset."No.",DepreciationBook.Code,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod,DepreciationMethod);
      GetFAAndBlockValue(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld);
      LibraryFixedAsset.PostFAJournalLine(FAJournalLine);
      VerifyFAValueAfterDepreciation(FixedAsset,FADepreciationBook,FAValueOld,BLockValueOld,-DeprAmount);
      VerifySecondYrFALedgerEntriesFirstYrUtilise(DepreciationBook,FixedAsset,FADepreciationBook,DocNo,DeprAmount,
        NewPostingDate,FirstYrUtilisationPeriod);
    END;

    LOCAL PROCEDURE GetDocumentNo@33(FAJournalBatch@1500000 : Record 5620) : Code[20];
    VAR
      NoSeries@1500002 : Record 308;
      NoSeriesManagement@1500001 : Codeunit 396;
    BEGIN
      NoSeries.GET(FAJournalBatch."No. Series");
      EXIT(NoSeriesManagement.GetNextNo(FAJournalBatch."No. Series",WORKDATE,FALSE));
    END;

    LOCAL PROCEDURE GetFAAndBlockValue@1500010(FixedAsset@1500003 : Record 5600;FADepreciationBook@1500002 : Record 5612;VAR FAValue@1500001 : Decimal;VAR BLockValue@1500000 : Decimal);
    VAR
      FABlock@1500004 : Record 16518;
    BEGIN
      FADepreciationBook.CALCFIELDS("Book Value");
      FAValue := FADepreciationBook."Book Value";
      FABlock.GET(FixedAsset."FA Class Code",FixedAsset."FA Block Code");
      FABlock.CALCFIELDS("Book Value");
      BLockValue := FABlock."Book Value";
    END;

    LOCAL PROCEDURE GetDepreciationPctFullYr@1500025(VAR DepreciationPct@1500001 : Decimal;FABlockCode@1500000 : Code[10];FAClassCode@1500003 : Code[10]);
    VAR
      FABlock@1500002 : Record 16518;
    BEGIN
      FABlock.SETRANGE("FA Class Code",FAClassCode);
      FABlock.SETRANGE(Code,FABlockCode);
      FABlock.FINDFIRST;
      DepreciationPct := FABlock."Add. Depreciation %" + FABlock."Depreciation %";
    END;

    LOCAL PROCEDURE GetDeprAmtFullYr@1500007(FixedAsset@1500005 : Record 5600;DeprBookCode@1500000 : Code[10];VAR AddDeprAmt@1500001 : Decimal;VAR DeprAmt@1500003 : Decimal);
    VAR
      FABlock@1500002 : Record 16518;
      FALedgEntry@1500004 : Record 5601;
    BEGIN
      FABlock.SETRANGE("FA Class Code",FixedAsset."FA Class Code");
      FABlock.SETRANGE(Code,FixedAsset."FA Block Code");
      FABlock.FINDFIRST;
      FALedgEntry.SETRANGE("FA No.",FixedAsset."No.");
      FALedgEntry.SETRANGE("Depreciation Book Code",DeprBookCode);
      FALedgEntry.SETRANGE("FA Posting Type",FALedgEntry."FA Posting Type"::"Acquisition Cost");
      FALedgEntry.FINDFIRST;
      AddDeprAmt := (FALedgEntry.Amount * FABlock."Add. Depreciation %") / 100;
      DeprAmt := (FALedgEntry.Amount * FABlock."Depreciation %") / 100;
    END;

    LOCAL PROCEDURE GetDepreciationPctHalflYr@1500065(VAR DepreciationPct@1500001 : Decimal;FABlockCode@1500000 : Code[10];FAClassCode@1500003 : Code[10];Reductionpct@1500004 : Decimal);
    VAR
      FABlock@1500002 : Record 16518;
    BEGIN
      FABlock.SETRANGE("FA Class Code",FAClassCode);
      FABlock.SETRANGE(Code,FABlockCode);
      FABlock.FINDFIRST;
      DepreciationPct := (FABlock."Add. Depreciation %" + FABlock."Depreciation %") * Reductionpct / 100;
    END;

    LOCAL PROCEDURE GetSecondYrDepreciationPctHalflYr@1500033(VAR DepreciationPct@1500001 : Decimal;FABlockCode@1500000 : Code[10];FAClassCode@1500003 : Code[10];DepreciationMethod@1500005 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual';DepreciationBookCode@1500006 : Code[10];FANumber@1500008 : Code[20]);
    VAR
      FABlock@1500002 : Record 16518;
      FALedgerEntry@1500007 : Record 5601;
      AcquisitionCost@1500009 : Decimal;
      AddDeprAmt@1500010 : Decimal;
      AddDeprPct@1500011 : Decimal;
      DeprAmt@1500012 : Decimal;
      DeprAmtLast@1500013 : Decimal;
      DeprAmtFirst@1500014 : Decimal;
    BEGIN
      FALedgerEntry.SETRANGE("FA No.",FANumber);
      FALedgerEntry.SETRANGE("Depreciation Book Code",DepreciationBookCode);
      FALedgerEntry.SETRANGE("FA Posting Type",FALedgerEntry."FA Posting Type"::"Acquisition Cost");
      FALedgerEntry.FINDFIRST;
      AcquisitionCost := FALedgerEntry.Amount;

      FALedgerEntry.SETRANGE("FA Posting Type",FALedgerEntry."FA Posting Type"::Depreciation);
      FALedgerEntry.FINDFIRST;
      AddDeprAmt := FALedgerEntry."Add. Depreciation Amount";
      AddDeprPct := ABS(AddDeprAmt / AcquisitionCost * 100);
      DeprAmt := FALedgerEntry.Amount;

      FALedgerEntry.FINDLAST;
      DeprAmtLast := FALedgerEntry.Amount;
      DeprAmtFirst := AcquisitionCost + DeprAmt;

      FABlock.SETRANGE("FA Class Code",FAClassCode);
      FABlock.SETRANGE(Code,FABlockCode);
      FABlock.FINDFIRST;
      CASE DepreciationMethod OF
        DepreciationMethod::"Straight-Line":
          DepreciationPct := AddDeprPct + FABlock."Depreciation %" ;
        DepreciationMethod::"Declining-Balance 1":
          DepreciationPct := ABS(DeprAmtLast / DeprAmtFirst * 100) ;
      END;
    END;

    LOCAL PROCEDURE GetThirdYrDepreciationPct@1500044(VAR DepreciationPct@1500001 : Decimal;FABlockCode@1500000 : Code[10];FAClassCode@1500003 : Code[10]);
    VAR
      FABlock@1500002 : Record 16518;
    BEGIN
      FABlock.SETRANGE("FA Class Code",FAClassCode);
      FABlock.SETRANGE(Code,FABlockCode);
      FABlock.FINDFIRST;
      DepreciationPct := FABlock."Depreciation %";
    END;

    LOCAL PROCEDURE GetDeprAmtHalfYr@1500064(FixedAsset@1500005 : Record 5600;DeprBookCode@1500000 : Code[10];VAR AddDeprAmt@1500001 : Decimal;VAR DeprAmt@1500003 : Decimal);
    VAR
      FABlock@1500002 : Record 16518;
      FALedgEntry@1500004 : Record 5601;
      DepreciationBook@1500006 : Record 5611;
    BEGIN
      FABlock.SETRANGE("FA Class Code",FixedAsset."FA Class Code");
      FABlock.SETRANGE(Code,FixedAsset."FA Block Code");
      FABlock.FINDFIRST;
      FALedgEntry.SETRANGE("FA No.",FixedAsset."No.");
      FALedgEntry.SETRANGE("Depreciation Book Code",DeprBookCode);
      FALedgEntry.SETRANGE("FA Posting Type",FALedgEntry."FA Posting Type"::"Acquisition Cost");
      FALedgEntry.FINDFIRST;
      DepreciationBook.GET(DeprBookCode);
      AddDeprAmt := ((FALedgEntry.Amount * FABlock."Add. Depreciation %") / 100) * DepreciationBook."Depr. Reduction %" / 100;
      DeprAmt := ((FALedgEntry.Amount * FABlock."Depreciation %") / 100) * DepreciationBook."Depr. Reduction %" / 100;
    END;

    LOCAL PROCEDURE GetSecondYrDeprAmtHalfYr@1500032(FixedAsset@1500005 : Record 5600;DeprBookCode@1500000 : Code[10];VAR AddDeprAmt@1500001 : Decimal;VAR DeprAmt@1500003 : Decimal;DepreciationMethod@1500006 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual');
    VAR
      FABlock@1500002 : Record 16518;
      FALedgEntry@1500004 : Record 5601;
      AcquisitionCost@1500007 : Decimal;
      BaseAmount@1500008 : Decimal;
    BEGIN
      FABlock.SETRANGE("FA Class Code",FixedAsset."FA Class Code");
      FABlock.SETRANGE(Code,FixedAsset."FA Block Code");
      FABlock.FINDFIRST;
      FALedgEntry.SETRANGE("FA No.",FixedAsset."No.");
      FALedgEntry.SETRANGE("Depreciation Book Code",DeprBookCode);
      FALedgEntry.SETRANGE("FA Posting Type",FALedgEntry."FA Posting Type"::"Acquisition Cost");
      FALedgEntry.FINDFIRST;
      AcquisitionCost := FALedgEntry.Amount;
      FALedgEntry.SETRANGE("FA Posting Type",FALedgEntry."FA Posting Type"::Depreciation);
      FALedgEntry.FINDFIRST;
      AddDeprAmt := FALedgEntry."Add. Depreciation Amount";
      FALedgEntry.SETRANGE("FA Posting Type");
      FALedgEntry.FINDSET;
      REPEAT
        BaseAmount += FALedgEntry.Amount;
      UNTIL FALedgEntry.NEXT = 0;
      CASE DepreciationMethod OF
        DepreciationMethod::"Straight-Line":
          DeprAmt := -(AcquisitionCost * FABlock."Depreciation %") / 100;
        DepreciationMethod::"Declining-Balance 1":
          DeprAmt := -(BaseAmount * FABlock."Depreciation %") / 100;
      END;
    END;

    LOCAL PROCEDURE GetThirdYrDeprAmt@1500036(FixedAsset@1500005 : Record 5600;DeprBookCode@1500000 : Code[10];VAR DeprAmt@1500003 : Decimal;DepreciationMethod@1500006 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual');
    VAR
      FABlock@1500002 : Record 16518;
      FALedgEntry@1500004 : Record 5601;
      AcquisitionCost@1500007 : Decimal;
      BaseAmount@1500001 : Decimal;
    BEGIN
      FABlock.SETRANGE("FA Class Code",FixedAsset."FA Class Code");
      FABlock.SETRANGE(Code,FixedAsset."FA Block Code");
      FABlock.FINDFIRST;
      FALedgEntry.SETRANGE("FA No.",FixedAsset."No.");
      FALedgEntry.SETRANGE("Depreciation Book Code",DeprBookCode);
      FALedgEntry.SETRANGE("FA Posting Type",FALedgEntry."FA Posting Type"::"Acquisition Cost");
      FALedgEntry.FINDFIRST;
      AcquisitionCost := FALedgEntry.Amount;
      FALedgEntry.SETRANGE("FA Posting Type");
      FALedgEntry.FINDSET;
      REPEAT
        BaseAmount += FALedgEntry.Amount;
      UNTIL FALedgEntry.NEXT = 0;
      CASE DepreciationMethod OF
        DepreciationMethod::"Straight-Line":
          DeprAmt := -(AcquisitionCost * FABlock."Depreciation %") / 100;
        DepreciationMethod::"Declining-Balance 1":
          DeprAmt := -(BaseAmount * FABlock."Depreciation %") / 100;
      END;
    END;

    LOCAL PROCEDURE GetFiscalYearStartDateInc@1500041(EndingDate@1500000 : Date) : Date;
    VAR
      FAAccountingPeriodIncTax@1500001 : Record 16519;
    BEGIN
      WITH FAAccountingPeriodIncTax DO BEGIN
        SETRANGE("New Fiscal Year",TRUE);
        SETRANGE("Starting Date",0D,EndingDate);
        IF FINDLAST THEN
          EXIT("Starting Date");
      END;
    END;

    LOCAL PROCEDURE GetFiscalYearEndDateInc@1500040(EndingDate@1500001 : Date) : Date;
    VAR
      FAAccountingPeriodIncTax@1500000 : Record 16519;
    BEGIN
      WITH FAAccountingPeriodIncTax DO BEGIN
        SETRANGE("New Fiscal Year",TRUE);
        SETFILTER("Starting Date",'>%1',EndingDate);
        IF FINDFIRST THEN
          EXIT("Starting Date" - 1);
      END;
    END;

    LOCAL PROCEDURE Initialize@1500005();
    BEGIN
      IF IsInitialized THEN
        EXIT;
      IsInitialized := TRUE;
      LibraryFixedAsset.CreateFAIncomeTaxAccPeriod(WORKDATE);
    END;

    LOCAL PROCEDURE InitializeBlockValue@1500002(FABlock@1500002 : Record 16518;VAR AssetNo@1500001 : Integer;VAR Blockbookvalue@1500000 : Decimal);
    BEGIN
      FABlock.CALCFIELDS("No. of Assets","Book Value");
      AssetNo := FABlock."No. of Assets";
      Blockbookvalue := FABlock."Book Value"
    END;

    LOCAL PROCEDURE RunCalculateDepreciation@1500013(No@1500008 : Code[20];DepreciationBookCode@1500007 : Code[10];BalAccount@1500006 : Boolean;NewPostingDate@1500005 : Date;VAR DocNo@1500004 : Code[20]);
    VAR
      FAJnlSetup@1500010 : Record 5605;
      FixedAsset@1500009 : Record 5600;
      FAJournalBatch@1500000 : Record 5620;
      CalculateDepreciation@1500002 : Report 5692;
    BEGIN
      CLEAR(CalculateDepreciation);
      FixedAsset.SETRANGE("No.",No);
      FAJnlSetup.SETRANGE("Depreciation Book Code",DepreciationBookCode);
      FAJnlSetup.FINDFIRST;
      FAJournalBatch.SETRANGE("Journal Template Name",FAJnlSetup."FA Jnl. Template Name");
      FAJournalBatch.SETRANGE(Name,FAJnlSetup."FA Jnl. Batch Name");
      FAJournalBatch.FINDFIRST;
      DocNo := GetDocumentNo(FAJournalBatch);
      CalculateDepreciation.SETTABLEVIEW(FixedAsset);
      CalculateDepreciation.InitializeRequest(
        DepreciationBookCode,NewPostingDate,FALSE,0,NewPostingDate,DocNo,FixedAsset.Description,BalAccount);
      CalculateDepreciation.USEREQUESTPAGE(FALSE);
      CalculateDepreciation.RUN;
    END;

    LOCAL PROCEDURE RunCalDeprAndVerifyFirstYrUtilise@1500014(VAR FAJournalLine@1500006 : Record 5621;No@1500003 : Code[20];DepreciationBookCode@1500002 : Code[10];VAR DocNo@1500008 : Code[20];VAR DeprAmount@1500012 : Decimal;VAR NewPostingDate@1500000 : Date;FirstYrUtilisationPeriod@1500005 : 'Half Year,Full Year');
    VAR
      DepreciationBook@1500001 : Record 5611;
      FADepreciationBook@1500014 : Record 5612;
      DayCalculation@1500004 : DateFormula;
    BEGIN
      DepreciationBook.SETRANGE(Code,DepreciationBookCode);
      DepreciationBook.FINDFIRST;
      NewPostingDate := GetFiscalYearEndDateInc(WORKDATE);
      FADepreciationBook.GET(No,DepreciationBookCode);
      CASE FirstYrUtilisationPeriod OF
        FirstYrUtilisationPeriod::"Full Year":
          EVALUATE(DayCalculation,FORMAT(-DepreciationBook."Depr. Threshold Days" -
              LibraryRandom.RandInt(DepreciationBook."Depr. Threshold Days")) + 'D');
        FirstYrUtilisationPeriod::"Half Year":
          EVALUATE(DayCalculation,FORMAT(-LibraryRandom.RandInt(DepreciationBook."Depr. Threshold Days")) + 'D');
      END;
      FADepreciationBook."Depreciation Starting Date" := CALCDATE(DayCalculation,NewPostingDate);
      FADepreciationBook.MODIFY;
      RunCalculateDepreciation(No,DepreciationBookCode,FALSE,NewPostingDate,DocNo);
      CASE FirstYrUtilisationPeriod OF
        FirstYrUtilisationPeriod::"Full Year":
          VerifyDeprBeforePostingFullYr(FAJournalLine,NewPostingDate,DocNo,No,DepreciationBookCode,DeprAmount);
        FirstYrUtilisationPeriod::"Half Year":
          VerifyDeprBeforePostingHalfYr(FAJournalLine,NewPostingDate,DocNo,No,DepreciationBookCode,DeprAmount);
      END;
    END;

    LOCAL PROCEDURE RunCalDeprAndVerifyFirstYrNoUse@1500037(VAR FAJournalLine@1500006 : Record 5621;No@1500003 : Code[20];DepreciationBookCode@1500002 : Code[10];VAR DocNo@1500008 : Code[20];VAR DeprAmount@1500012 : Decimal;VAR NewPostingDate@1500000 : Date);
    VAR
      DepreciationBook@1500001 : Record 5611;
      FADepreciationBook@1500014 : Record 5612;
      DayCalculation@1500004 : DateFormula;
    BEGIN
      LibraryFixedAsset.CreateFAIncomeTaxAccPeriod(CALCDATE('<1Y>',WORKDATE));
      DepreciationBook.SETRANGE(Code,DepreciationBookCode);
      DepreciationBook.FINDFIRST;
      NewPostingDate := GetFiscalYearEndDateInc(CALCDATE('<1y>',WORKDATE));
      FADepreciationBook.GET(No,DepreciationBookCode);
      EVALUATE(DayCalculation,FORMAT(-LibraryRandom.RandInt(DepreciationBook."Depr. Threshold Days")) + 'D');
      FADepreciationBook."Depreciation Starting Date" := CALCDATE(DayCalculation,NewPostingDate);
      FADepreciationBook.MODIFY;
      RunCalculateDepreciation(No,DepreciationBookCode,FALSE,NewPostingDate,DocNo);
      VerifyDeprBeforePostingFullYr(FAJournalLine,NewPostingDate,DocNo,No,DepreciationBookCode,DeprAmount);
    END;

    LOCAL PROCEDURE RunCalDeprAndVerifySecondYr@1500028(VAR FAJournalLine@1500006 : Record 5621;No@1500003 : Code[20];DepreciationBookCode@1500002 : Code[10];VAR DocNo@1500008 : Code[20];VAR DeprAmount@1500012 : Decimal;VAR NewPostingDate@1500000 : Date;FirstYrUtilisationPeriod@1500005 : 'Half Year,Full Year';DepreciationMethod@1500007 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual');
    VAR
      DepreciationBook@1500001 : Record 5611;
    BEGIN
      DepreciationBook.SETRANGE(Code,DepreciationBookCode);
      DepreciationBook.FINDFIRST;
      NewPostingDate := GetFiscalYearEndDateInc(CALCDATE('<1y>',WORKDATE));
      RunCalculateDepreciation(No,DepreciationBookCode,FALSE,NewPostingDate,DocNo);
      CASE FirstYrUtilisationPeriod OF
        FirstYrUtilisationPeriod::"Half Year":
          VerifySecondYrDeprBeforePostingHalfYr(
            FAJournalLine,NewPostingDate,DocNo,No,DepreciationBookCode,DeprAmount,DepreciationMethod);
      END;
    END;

    LOCAL PROCEDURE RunCalDeprAndVerifyThirdYr@1500034(VAR FAJournalLine@1500006 : Record 5621;No@1500003 : Code[20];DepreciationBookCode@1500002 : Code[10];VAR DocNo@1500008 : Code[20];VAR DeprAmount@1500012 : Decimal;VAR NewPostingDate@1500000 : Date;DepreciationMethod@1500007 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual');
    VAR
      DepreciationBook@1500001 : Record 5611;
    BEGIN
      DepreciationBook.SETRANGE(Code,DepreciationBookCode);
      DepreciationBook.FINDFIRST;
      NewPostingDate := GetFiscalYearEndDateInc(CALCDATE('<2y>',WORKDATE));
      RunCalculateDepreciation(No,DepreciationBookCode,FALSE,NewPostingDate,DocNo);
      VerifyThirdYrDeprBeforePosting(FAJournalLine,NewPostingDate,DocNo,No,DepreciationBookCode,DeprAmount,DepreciationMethod);
    END;

    LOCAL PROCEDURE RunCalDeprAndVerifyDisposal@1500060(No@1500003 : Code[20];DepreciationBookCode@1500002 : Code[10];DisposalYear@1500007 : 'First,Second');
    VAR
      FAJournalLine@1500001 : Record 5621;
      DocNo@1500006 : Code[20];
      NewPostingDate@1500000 : Date;
      Reccount@1500010 : Integer;
    BEGIN
      CASE DisposalYear OF
        DisposalYear::First:
          NewPostingDate := GetFiscalYearEndDateInc(WORKDATE);
        DisposalYear::Second:
          NewPostingDate := GetFiscalYearEndDateInc(CALCDATE('<1y>',WORKDATE));
      END;
      RunCalculateDepreciation(No,DepreciationBookCode,FALSE,NewPostingDate,DocNo);
      FAJournalLine.SETRANGE("FA No.",No);
      Reccount := FAJournalLine.COUNT;
      Assert.AreEqual(0,Reccount,AmountErr);
    END;

    LOCAL PROCEDURE ValidateDeprBookForIncomeTax@1500004(DepreciationBook@1500000 : Record 5611);
    BEGIN
      DepreciationBook.VALIDATE("Depr. Threshold Days",LibraryRandom.RandInt(365));
      DepreciationBook.VALIDATE("Depr. Reduction %",LibraryRandom.RandDecInRange(50,50,2));
      DepreciationBook.VALIDATE("G/L Integration - Acq. Cost",FALSE);
      DepreciationBook.VALIDATE("G/L Integration - Appreciation",FALSE);
      DepreciationBook.VALIDATE("G/L Integration - Custom 1",FALSE);
      DepreciationBook.VALIDATE("G/L Integration - Custom 2",FALSE);
      DepreciationBook.VALIDATE("G/L Integration - Depreciation",FALSE);
      DepreciationBook.VALIDATE("G/L Integration - Disposal",FALSE);
      DepreciationBook.VALIDATE("G/L Integration - Maintenance",FALSE);
      DepreciationBook.VALIDATE("G/L Integration - Write-Down",FALSE);
      DepreciationBook.MODIFY(TRUE)
    END;

    LOCAL PROCEDURE VerifyDeprBeforePostingFullYr@1500030(VAR FAJournalLine@1500000 : Record 5621;PostingDate@1500001 : Date;DocNo@1500002 : Code[20];FANo@1500003 : Code[20];DeprBookCode@1500004 : Code[10];VAR VerifyAmount@1500006 : Decimal);
    VAR
      FixedAsset@1500005 : Record 5600;
      AddDeprAmt@1500007 : Decimal;
      DeprAmt@1500008 : Decimal;
    BEGIN
      FAJournalLine.SETRANGE("FA No.",FANo);
      FAJournalLine.SETRANGE("Document No.",DocNo);
      FAJournalLine.FINDFIRST;
      FAJournalLine.TESTFIELD("FA Posting Date",PostingDate);
      FAJournalLine.TESTFIELD("Depreciation Book Code",DeprBookCode);
      FAJournalLine.TESTFIELD("FA Posting Type",FAJournalLine."FA Posting Type"::Depreciation);
      FixedAsset.SETRANGE("No.",FANo);
      FixedAsset.FINDFIRST;
      GetDeprAmtFullYr(FixedAsset,DeprBookCode,AddDeprAmt,DeprAmt);
      VerifyAmount := AddDeprAmt + DeprAmt;
      Assert.AreNearlyEqual(VerifyAmount,-FAJournalLine.Amount,1,
        STRSUBSTNO(AmountErr,FAJournalLine.FIELDNAME(Amount),FAJournalLine.TABLECAPTION));
    END;

    LOCAL PROCEDURE VerifyDeprBeforePostingHalfYr@1500062(VAR FAJournalLine@1500000 : Record 5621;PostingDate@1500001 : Date;DocNo@1500002 : Code[20];FANo@1500003 : Code[20];DeprBookCode@1500004 : Code[10];VAR VerifyAmount@1500006 : Decimal);
    VAR
      FixedAsset@1500005 : Record 5600;
      AddDeprAmt@1500007 : Decimal;
      DeprAmt@1500008 : Decimal;
    BEGIN
      FAJournalLine.SETRANGE("FA No.",FANo);
      FAJournalLine.SETRANGE("Document No.",DocNo);
      FAJournalLine.FINDFIRST;
      FAJournalLine.TESTFIELD("FA Posting Date",PostingDate);
      FAJournalLine.TESTFIELD("Depreciation Book Code",DeprBookCode);
      FAJournalLine.TESTFIELD("FA Posting Type",FAJournalLine."FA Posting Type"::Depreciation);
      FixedAsset.SETRANGE("No.",FANo);
      FixedAsset.FINDFIRST;
      GetDeprAmtHalfYr(FixedAsset,DeprBookCode,AddDeprAmt,DeprAmt);
      VerifyAmount := AddDeprAmt + DeprAmt;
      Assert.AreNearlyEqual(VerifyAmount,-FAJournalLine.Amount,1,
        STRSUBSTNO(AmountErr,FAJournalLine.FIELDNAME(Amount),FAJournalLine.TABLECAPTION));
    END;

    LOCAL PROCEDURE VerifySecondYrDeprBeforePostingHalfYr@1500029(VAR FAJournalLine@1500000 : Record 5621;PostingDate@1500001 : Date;DocNo@1500002 : Code[20];FANo@1500003 : Code[20];DeprBookCode@1500004 : Code[10];VAR VerifyAmount@1500006 : Decimal;DepreciationMethod@1500009 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual');
    VAR
      FixedAsset@1500005 : Record 5600;
      AddDeprAmt@1500007 : Decimal;
      DeprAmt@1500008 : Decimal;
    BEGIN
      FAJournalLine.SETRANGE("FA No.",FANo);
      FAJournalLine.SETRANGE("Document No.",DocNo);
      FAJournalLine.FINDFIRST;
      FAJournalLine.TESTFIELD("FA Posting Date",PostingDate);
      FAJournalLine.TESTFIELD("Depreciation Book Code",DeprBookCode);
      FAJournalLine.TESTFIELD("FA Posting Type",FAJournalLine."FA Posting Type"::Depreciation);
      FixedAsset.SETRANGE("No.",FANo);
      FixedAsset.FINDFIRST;
      GetSecondYrDeprAmtHalfYr(FixedAsset,DeprBookCode,AddDeprAmt,DeprAmt,DepreciationMethod);
      VerifyAmount := AddDeprAmt + DeprAmt;
      Assert.AreNearlyEqual(VerifyAmount,FAJournalLine.Amount,1,
        STRSUBSTNO(AmountErr,FAJournalLine.FIELDNAME(Amount),FAJournalLine.TABLECAPTION));
    END;

    LOCAL PROCEDURE VerifyThirdYrDeprBeforePosting@1500035(VAR FAJournalLine@1500000 : Record 5621;PostingDate@1500001 : Date;DocNo@1500002 : Code[20];FANo@1500003 : Code[20];DeprBookCode@1500004 : Code[10];VAR VerifyAmount@1500006 : Decimal;DepreciationMethod@1500009 : 'Straight-Line,Declining-Balance 1,Declining-Balance 2,DB1/SL,DB2/SL,User-Defined,Manual');
    VAR
      FixedAsset@1500005 : Record 5600;
    BEGIN
      FAJournalLine.SETRANGE("FA No.",FANo);
      FAJournalLine.SETRANGE("Document No.",DocNo);
      FAJournalLine.FINDFIRST;
      FAJournalLine.TESTFIELD("FA Posting Date",PostingDate);
      FAJournalLine.TESTFIELD("Depreciation Book Code",DeprBookCode);
      FAJournalLine.TESTFIELD("FA Posting Type",FAJournalLine."FA Posting Type"::Depreciation);
      FixedAsset.SETRANGE("No.",FANo);
      FixedAsset.FINDFIRST;
      GetThirdYrDeprAmt(FixedAsset,DeprBookCode,VerifyAmount,DepreciationMethod);
      Assert.AreNearlyEqual(VerifyAmount,FAJournalLine.Amount,1,
        STRSUBSTNO(AmountErr,FAJournalLine.FIELDNAME(Amount),FAJournalLine.TABLECAPTION));
    END;

    LOCAL PROCEDURE VerifyFAValueAfterDepreciation@1500011(FixedAsset@1500004 : Record 5600;FADepreciationBook@1500003 : Record 5612;FAValueOld@1500001 : Decimal;BLockValueOld@1500000 : Decimal;ExpectedAmount@1500002 : Decimal);
    VAR
      FABlock@1500005 : Record 16518;
    BEGIN
      FADepreciationBook.CALCFIELDS("Book Value");
      FABlock.GET(FixedAsset."FA Class Code",FixedAsset."FA Block Code");
      FABlock.CALCFIELDS("Book Value");
      Assert.AreNearlyEqual(ExpectedAmount,FAValueOld - FADepreciationBook."Book Value",1,
        STRSUBSTNO(AmountErr,FADepreciationBook.FIELDNAME("Book Value"),FADepreciationBook.TABLECAPTION));
      Assert.AreNearlyEqual(ExpectedAmount,BLockValueOld - FABlock."Book Value",1,
        STRSUBSTNO(AmountErr,FABlock.FIELDNAME("Book Value"),FABlock.TABLECAPTION));
    END;

    LOCAL PROCEDURE VerifyFALedgerEntriesFirstYrUtilise@1500024(DepreciationBook@1500003 : Record 5611;FixedAsset@1500002 : Record 5600;FADepreciationBook@1500001 : Record 5612;DocNo@1500005 : Code[20];ExpectedAmount@1500000 : Decimal;NewPostingDate@1500006 : Date;FirstYrUtilisationPeriod@1500010 : 'Half Year,Full Year');
    VAR
      FALedgerEntry@1500004 : Record 5601;
      DeprPct@1500008 : Decimal;
      AddDeprAmt@1500007 : Decimal;
      DeprAmt@1500009 : Decimal;
    BEGIN
      FALedgerEntry.SETRANGE("Document No.",DocNo);
      FALedgerEntry.FINDFIRST;
      FALedgerEntry.TESTFIELD("Posting Date",NewPostingDate);
      FALedgerEntry.TESTFIELD("FA Posting Type",FALedgerEntry."FA Posting Type"::Depreciation);
      CASE FirstYrUtilisationPeriod OF
        FirstYrUtilisationPeriod::"Full Year":
          BEGIN
            GetDepreciationPctFullYr(DeprPct,FixedAsset."FA Block Code",FixedAsset."FA Class Code");
            GetDeprAmtFullYr(FixedAsset,DepreciationBook.Code,AddDeprAmt,DeprAmt);
          END;
        FirstYrUtilisationPeriod::"Half Year":
          BEGIN
            GetDepreciationPctHalflYr(
              DeprPct,FixedAsset."FA Block Code",FixedAsset."FA Class Code",DepreciationBook."Depr. Reduction %");
            GetDeprAmtHalfYr(FixedAsset,DepreciationBook.Code,AddDeprAmt,DeprAmt);
          END;
      END;
      CASE FADepreciationBook."Depreciation Method" OF
        FADepreciationBook."Depreciation Method"::"Straight-Line":
          Assert.AreNearlyEqual(DeprPct,FALedgerEntry."Straight-Line %",1,
            STRSUBSTNO(AmountErr,FALedgerEntry.FIELDNAME("Straight-Line %"),FALedgerEntry.TABLECAPTION));
        FADepreciationBook."Depreciation Method"::"Declining-Balance 1":
          Assert.AreNearlyEqual(DeprPct,FALedgerEntry."Declining-Balance %",1,
            STRSUBSTNO(AmountErr,FALedgerEntry.FIELDNAME("Declining-Balance %"),FALedgerEntry.TABLECAPTION));
      END;
      FALedgerEntry.TESTFIELD("Add. Depreciation",TRUE);
      Assert.AreNearlyEqual(AddDeprAmt,-FALedgerEntry."Add. Depreciation Amount",1,
        STRSUBSTNO(AmountErr,FALedgerEntry.FIELDNAME("Add. Depreciation Amount"),FALedgerEntry.TABLECAPTION));
      Assert.AreNearlyEqual(ExpectedAmount,-FALedgerEntry.Amount,1,
        STRSUBSTNO(AmountErr,FALedgerEntry.FIELDNAME(Amount),FALedgerEntry.TABLECAPTION));
    END;

    LOCAL PROCEDURE VerifySecondYrFALedgerEntriesFirstYrUtilise@1500026(DepreciationBook@1500003 : Record 5611;FixedAsset@1500002 : Record 5600;FADepreciationBook@1500001 : Record 5612;DocNo@1500005 : Code[20];ExpectedAmount@1500000 : Decimal;NewPostingDate@1500006 : Date;FirstYrUtilisationPeriod@1500010 : 'Half Year,Full Year');
    VAR
      FALedgerEntry@1500004 : Record 5601;
      DeprPct@1500008 : Decimal;
      AddDeprAmt@1500007 : Decimal;
      DeprAmt@1500009 : Decimal;
    BEGIN
      FALedgerEntry.SETRANGE("Document No.",DocNo);
      FALedgerEntry.FINDFIRST;
      FALedgerEntry.TESTFIELD("Posting Date",NewPostingDate);
      FALedgerEntry.TESTFIELD("FA Posting Type",FALedgerEntry."FA Posting Type"::Depreciation);
      CASE FirstYrUtilisationPeriod OF
        FirstYrUtilisationPeriod::"Half Year":
          CASE FADepreciationBook."Depreciation Method" OF
            FADepreciationBook."Depreciation Method"::"Straight-Line":
              BEGIN
                GetSecondYrDepreciationPctHalflYr(
                  DeprPct,FixedAsset."FA Block Code",FixedAsset."FA Class Code",
                  FADepreciationBook."Depreciation Method"::"Straight-Line",DepreciationBook.Code,FixedAsset."No.");
                GetSecondYrDeprAmtHalfYr(FixedAsset,DepreciationBook.Code,AddDeprAmt,DeprAmt,
                  FADepreciationBook."Depreciation Method"::"Straight-Line");
              END;
            FADepreciationBook."Depreciation Method"::"Declining-Balance 1":
              BEGIN
                GetSecondYrDepreciationPctHalflYr(
                  DeprPct,FixedAsset."FA Block Code",FixedAsset."FA Class Code",
                  FADepreciationBook."Depreciation Method"::"Declining-Balance 1",DepreciationBook.Code,FixedAsset."No.");
                GetSecondYrDeprAmtHalfYr(FixedAsset,DepreciationBook.Code,AddDeprAmt,DeprAmt,
                  FADepreciationBook."Depreciation Method"::"Declining-Balance 1");
              END;
          END;
      END;
      CASE FADepreciationBook."Depreciation Method" OF
        FADepreciationBook."Depreciation Method"::"Straight-Line":
          Assert.AreNearlyEqual(DeprPct,FALedgerEntry."Straight-Line %",1,
            STRSUBSTNO(AmountErr,FALedgerEntry.FIELDNAME("Straight-Line %"),FALedgerEntry.TABLECAPTION));
        FADepreciationBook."Depreciation Method"::"Declining-Balance 1":
          Assert.AreNearlyEqual(DeprPct,FALedgerEntry."Declining-Balance %",1,
            STRSUBSTNO(AmountErr,FALedgerEntry.FIELDNAME("Declining-Balance %"),FALedgerEntry.TABLECAPTION));
      END;
      FALedgerEntry.TESTFIELD("Add. Depreciation",TRUE);
      Assert.AreNearlyEqual(AddDeprAmt,FALedgerEntry."Add. Depreciation Amount",1,
        STRSUBSTNO(AmountErr,FALedgerEntry.FIELDNAME("Add. Depreciation Amount"),FALedgerEntry.TABLECAPTION));
      Assert.AreNearlyEqual(ExpectedAmount,FALedgerEntry.Amount,1,
        STRSUBSTNO(AmountErr,FALedgerEntry.FIELDNAME(Amount),FALedgerEntry.TABLECAPTION));
    END;

    LOCAL PROCEDURE VerifyThirdYrFALedgerEntries@1500042(FixedAsset@1500002 : Record 5600;FADepreciationBook@1500001 : Record 5612;DocNo@1500005 : Code[20];ExpectedAmount@1500000 : Decimal;NewPostingDate@1500006 : Date);
    VAR
      FALedgerEntry@1500004 : Record 5601;
      DeprPct@1500008 : Decimal;
    BEGIN
      FALedgerEntry.SETRANGE("Document No.",DocNo);
      FALedgerEntry.FINDFIRST;
      FALedgerEntry.TESTFIELD("Posting Date",NewPostingDate);
      FALedgerEntry.TESTFIELD("FA Posting Type",FALedgerEntry."FA Posting Type"::Depreciation);
      GetThirdYrDepreciationPct(DeprPct,FixedAsset."FA Block Code",FixedAsset."FA Class Code");
      CASE FADepreciationBook."Depreciation Method" OF
        FADepreciationBook."Depreciation Method"::"Straight-Line":
          Assert.AreNearlyEqual(DeprPct,FALedgerEntry."Straight-Line %",1,
            STRSUBSTNO(AmountErr,FALedgerEntry.FIELDNAME("Straight-Line %"),FALedgerEntry.TABLECAPTION));
        FADepreciationBook."Depreciation Method"::"Declining-Balance 1":
          Assert.AreNearlyEqual(DeprPct,FALedgerEntry."Declining-Balance %",1,
            STRSUBSTNO(AmountErr,FALedgerEntry.FIELDNAME("Declining-Balance %"),FALedgerEntry.TABLECAPTION));
      END;
      Assert.AreNearlyEqual(ExpectedAmount,FALedgerEntry.Amount,1,
        STRSUBSTNO(AmountErr,FALedgerEntry.FIELDNAME(Amount),FALedgerEntry.TABLECAPTION));
    END;

    LOCAL PROCEDURE VerifyFAValueAfterDisposal@1500048(FANo@1500001 : Code[20];DepreBookCode@1500002 : Code[10]);
    VAR
      FADepreciationBook@1500000 : Record 5612;
      FADepreciationBookPage@1500003 : TestPage 5666;
    BEGIN
      FADepreciationBook.SETRANGE("FA No.",FANo);
      FADepreciationBook.SETRANGE("Depreciation Book Code",DepreBookCode);
      FADepreciationBook.FINDFIRST;
      FADepreciationBook.TESTFIELD("Disposal Date");
      FADepreciationBookPage.OPENVIEW;
      FADepreciationBookPage.GOTORECORD(FADepreciationBook);
      FADepreciationBookPage.Disposed.ASSERTEQUALS(TRUE);
      FADepreciationBookPage."Book Value".ASSERTEQUALS(0);
    END;

    LOCAL PROCEDURE VerifyFALedgerEntriesAfterDisposal@1500049(FANo@1500001 : Code[20];DepreBookCode@1500002 : Code[10];DisposalDate@1500005 : Date;DisposalDoc@1500004 : Code[20];DisposalAmount@1500008 : Decimal);
    VAR
      FALedgerEntry@1500003 : Record 5601;
      AcquisitionCost@1500006 : Decimal;
      DepreciationCost@1500007 : Decimal;
    BEGIN
      FALedgerEntry.SETRANGE("FA No.",FANo);
      FALedgerEntry.SETRANGE("Depreciation Book Code",DepreBookCode);
      FALedgerEntry.SETRANGE("FA Posting Category",FALedgerEntry."FA Posting Category"::" ");
      FALedgerEntry.SETRANGE("FA Posting Type",FALedgerEntry."FA Posting Type"::"Acquisition Cost");
      FALedgerEntry.FINDFIRST;
      AcquisitionCost := FALedgerEntry.Amount;

      FALedgerEntry.SETRANGE("FA Posting Type",FALedgerEntry."FA Posting Type"::Depreciation);
      FALedgerEntry.FINDFIRST;
      DepreciationCost := FALedgerEntry.Amount;
      FALedgerEntry.SETRANGE("Posting Date",DisposalDate);
      FALedgerEntry.SETRANGE("Document No.",DisposalDoc);
      FALedgerEntry.SETRANGE("FA Posting Category");
      FALedgerEntry.SETRANGE("FA Posting Type");
      Assert.RecordCount(FALedgerEntry,4);

      FALedgerEntry.SETRANGE("FA Posting Category",FALedgerEntry."FA Posting Category"::Disposal);
      FALedgerEntry.SETRANGE("FA Posting Type",FALedgerEntry."FA Posting Type"::"Acquisition Cost");
      FALedgerEntry.FINDFIRST;
      FALedgerEntry.TESTFIELD(Amount,-AcquisitionCost);

      FALedgerEntry.SETRANGE("FA Posting Type",FALedgerEntry."FA Posting Type"::Depreciation);
      FALedgerEntry.FINDFIRST;
      FALedgerEntry.TESTFIELD(Amount,-DepreciationCost);

      FALedgerEntry.SETRANGE("FA Posting Category");
      FALedgerEntry.SETRANGE("FA Posting Type",FALedgerEntry."FA Posting Type"::"Proceeds on Disposal");
      FALedgerEntry.FINDFIRST;
      FALedgerEntry.TESTFIELD(Amount,DisposalAmount);

      FALedgerEntry.SETRANGE("FA Posting Type",FALedgerEntry."FA Posting Type"::"Gain/Loss");
      FALedgerEntry.FINDFIRST;
      FALedgerEntry.TESTFIELD(Amount,AcquisitionCost + DepreciationCost + DisposalAmount);
    END;

    LOCAL PROCEDURE VerifyFALedgerEntriesAfterDisposalFirstYr@1500057(FANo@1500001 : Code[20];DepreBookCode@1500002 : Code[10];DisposalDate@1500005 : Date;DisposalDoc@1500004 : Code[20];DisposalAmount@1500008 : Decimal);
    VAR
      FALedgerEntry@1500003 : Record 5601;
      AcquisitionCost@1500006 : Decimal;
    BEGIN
      FALedgerEntry.SETRANGE("FA No.",FANo);
      FALedgerEntry.SETRANGE("Depreciation Book Code",DepreBookCode);
      FALedgerEntry.SETRANGE("FA Posting Category",FALedgerEntry."FA Posting Category"::" ");
      FALedgerEntry.SETRANGE("FA Posting Type",FALedgerEntry."FA Posting Type"::"Acquisition Cost");
      FALedgerEntry.FINDFIRST;
      AcquisitionCost := FALedgerEntry.Amount;

      FALedgerEntry.SETRANGE("Posting Date",DisposalDate);
      FALedgerEntry.SETRANGE("Document No.",DisposalDoc);
      FALedgerEntry.SETRANGE("FA Posting Category");
      FALedgerEntry.SETRANGE("FA Posting Type");
      Assert.RecordCount(FALedgerEntry,3);

      FALedgerEntry.SETRANGE("FA Posting Category",FALedgerEntry."FA Posting Category"::Disposal);
      FALedgerEntry.SETRANGE("FA Posting Type",FALedgerEntry."FA Posting Type"::"Acquisition Cost");
      FALedgerEntry.FINDFIRST;
      FALedgerEntry.TESTFIELD(Amount,-AcquisitionCost);

      FALedgerEntry.SETRANGE("FA Posting Category");
      FALedgerEntry.SETRANGE("FA Posting Type",FALedgerEntry."FA Posting Type"::"Proceeds on Disposal");
      FALedgerEntry.FINDFIRST;
      FALedgerEntry.TESTFIELD(Amount,DisposalAmount);

      FALedgerEntry.SETRANGE("FA Posting Type",FALedgerEntry."FA Posting Type"::"Gain/Loss");
      FALedgerEntry.FINDFIRST;
      FALedgerEntry.TESTFIELD(Amount,AcquisitionCost + DisposalAmount);
    END;

    BEGIN
    END.
  }
}

