OBJECT Table 13732 Excise Liability Line
{
  OBJECT-PROPERTIES
  {
    Date=07-09-12;
    Time=12:00:00 PM;
    Version List=NAVIN7.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Excise Liability Line;
               ENN=Excise Liability Line];
    LookupPageID=Page16439;
  }
  FIELDS
  {
    { 1   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ENN=Document No.];
                                                   Editable=No }
    { 2   ;   ;Document Line No.   ;Integer       ;CaptionML=[ENU=Document Line No.;
                                                              ENN=Document Line No.];
                                                   Editable=No }
    { 3   ;   ;Liability Document No.;Code20      ;CaptionML=[ENU=Liability Document No.;
                                                              ENN=Liability Document No.];
                                                   Editable=No }
    { 4   ;   ;Liability Document Line No.;Integer;CaptionML=[ENU=Liability Document Line No.;
                                                              ENN=Liability Document Line No.];
                                                   Editable=No }
    { 5   ;   ;Liability Date      ;Date          ;CaptionML=[ENU=Liability Date;
                                                              ENN=Liability Date];
                                                   Editable=No }
    { 6   ;   ;Parent Item No.     ;Code20        ;CaptionML=[ENU=Parent Item No.;
                                                              ENN=Parent Item No.];
                                                   Editable=No }
    { 8   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Item No.;
                                                              ENN=Item No.];
                                                   Editable=No }
    { 9   ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=[ENU=Unit of Measure;
                                                              ENN=Unit of Measure];
                                                   Editable=No }
    { 10  ;   ;Prod. BOM Quantity  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Component"."Expected Quantity" WHERE (Status=CONST(Released),
                                                                                                                      Prod. Order No.=FIELD(Production Order No.),
                                                                                                                      Prod. Order Line No.=FIELD(Production Order Line No.),
                                                                                                                      Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Prod. BOM Quantity;
                                                              ENN=Prod. BOM Quantity];
                                                   DecimalPlaces=2:5;
                                                   Editable=No }
    { 11  ;   ;Quantity To Send    ;Decimal       ;CaptionML=[ENU=Quantity To Send;
                                                              ENN=Quantity To Send];
                                                   Editable=No }
    { 12  ;   ;Quantity (Base)     ;Decimal       ;CaptionML=[ENU=Quantity (Base);
                                                              ENN=Quantity (Base)];
                                                   Editable=No }
    { 13  ;   ;Quantity To Send (Base);Decimal    ;CaptionML=[ENU=Quantity To Send (Base);
                                                              ENN=Quantity To Send (Base)];
                                                   Editable=No }
    { 14  ;   ;Description         ;Text30        ;CaptionML=[ENU=Description;
                                                              ENN=Description];
                                                   Editable=No }
    { 15  ;   ;Position            ;Code10        ;CaptionML=[ENU=Position;
                                                              ENN=Position];
                                                   Editable=No }
    { 16  ;   ;Position 2          ;Code10        ;CaptionML=[ENU=Position 2;
                                                              ENN=Position 2];
                                                   Editable=No }
    { 17  ;   ;Position 3          ;Code10        ;CaptionML=[ENU=Position 3;
                                                              ENN=Position 3];
                                                   Editable=No }
    { 18  ;   ;Production Lead Time;DateFormula   ;CaptionML=[ENU=Production Lead Time;
                                                              ENN=Production Lead Time];
                                                   Editable=No }
    { 19  ;   ;Routing Link Code   ;Code10        ;TableRelation="Routing Link";
                                                   CaptionML=[ENU=Routing Link Code;
                                                              ENN=Routing Link Code];
                                                   Editable=No }
    { 20  ;   ;Scrap %             ;Decimal       ;CaptionML=[ENU=Scrap %;
                                                              ENN=Scrap %];
                                                   DecimalPlaces=0:5;
                                                   MaxValue=100;
                                                   BlankNumbers=BlankNeg;
                                                   Editable=No }
    { 21  ;   ;Variant Code        ;Code10        ;CaptionML=[ENU=Variant Code;
                                                              ENN=Variant Code];
                                                   Editable=No }
    { 22  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              ENN=Shortcut Dimension 1 Code];
                                                   CaptionClass='1,2,1' }
    { 23  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              ENN=Shortcut Dimension 2 Code];
                                                   CaptionClass='1,2,2' }
    { 28  ;   ;Starting Date       ;Date          ;CaptionML=[ENU=Starting Date;
                                                              ENN=Starting Date];
                                                   Editable=No }
    { 29  ;   ;Ending Date         ;Date          ;CaptionML=[ENU=Ending Date;
                                                              ENN=Ending Date];
                                                   Editable=No }
    { 40  ;   ;Length              ;Decimal       ;CaptionML=[ENU=Length;
                                                              ENN=Length];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 41  ;   ;Width               ;Decimal       ;CaptionML=[ENU=Width;
                                                              ENN=Width];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 42  ;   ;Weight              ;Decimal       ;CaptionML=[ENU=Weight;
                                                              ENN=Weight];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 43  ;   ;Depth               ;Decimal       ;CaptionML=[ENU=Depth;
                                                              ENN=Depth];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 44  ;   ;Calculation Formula ;Option        ;CaptionML=[ENU=Calculation Formula;
                                                              ENN=Calculation Formula];
                                                   OptionCaptionML=[ENU=" ,Length,Length * Width,Length * Width * Depth,Weight";
                                                                    ENN=" ,Length,Length * Width,Length * Width * Depth,Weight"];
                                                   OptionString=[ ,Length,Length * Width,Length * Width * Depth,Weight];
                                                   Editable=No }
    { 45  ;   ;Quantity per        ;Decimal       ;CaptionML=[ENU=Quantity per;
                                                              ENN=Quantity per];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 46  ;   ;Company Location    ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No),
                                                                                 Subcontracting Location=CONST(No));
                                                   CaptionML=[ENU=Company Location;
                                                              ENN=Company Location];
                                                   Editable=No }
    { 47  ;   ;Vendor Location     ;Code10        ;CaptionML=[ENU=Vendor Location;
                                                              ENN=Vendor Location];
                                                   Editable=No }
    { 48  ;   ;Production Order No.;Code20        ;CaptionML=[ENU=Production Order No.;
                                                              ENN=Production Order No.];
                                                   Editable=No }
    { 49  ;   ;Production Order Line No.;Integer  ;CaptionML=[ENU=Production Order Line No.;
                                                              ENN=Production Order Line No.];
                                                   Editable=No }
    { 50  ;   ;Line Type           ;Option        ;CaptionML=[ENU=Line Type;
                                                              ENN=Line Type];
                                                   OptionCaptionML=[ENU=Production,Purchase;
                                                                    ENN=Production,Purchase];
                                                   OptionString=Production,Purchase;
                                                   Editable=No }
    { 51  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              ENN=Gen. Prod. Posting Group];
                                                   Editable=No }
    { 52  ;   ;Quantity at Vendor Location;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry"."Remaining Quantity" WHERE (Item No.=FIELD(Item No.),
                                                                                                                   Location Code=FIELD(Vendor Location)));
                                                   CaptionML=[ENU=Quantity at Vendor Location;
                                                              ENN=Quantity at Vendor Location];
                                                   Editable=No }
    { 53  ;   ;Total Scrap Quantity;Decimal       ;CaptionML=[ENU=Total Scrap Quantity;
                                                              ENN=Total Scrap Quantity];
                                                   Editable=No }
    { 54  ;   ;Deliver Challan No. ;Code10        ;CaptionML=[ENU=Deliver Challan No.;
                                                              ENN=Deliver Challan No.];
                                                   Editable=No }
    { 55  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ENN=Line No.];
                                                   Editable=No }
    { 56  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              ENN=Quantity];
                                                   Editable=No }
    { 57  ;   ;Remaining Quantity  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry"."Remaining Quantity" WHERE (Entry Type=CONST(Transfer),
                                                                                                                   Location Code=FIELD(Vendor Location),
                                                                                                                   External Document No.=FIELD(Deliver Challan No.),
                                                                                                                   Item No.=FIELD(Item No.),
                                                                                                                   Order Type=CONST(Production),
                                                                                                                   Order No.=FIELD(Production Order No.),
                                                                                                                   Order Line No.=FIELD(Production Order Line No.)));
                                                   CaptionML=[ENU=Remaining Quantity;
                                                              ENN=Remaining Quantity];
                                                   Editable=No }
    { 58  ;   ;Components in Rework Qty.;Decimal  ;CaptionML=[ENU=Components in Rework Qty.;
                                                              ENN=Components in Rework Qty.];
                                                   Editable=No }
    { 59  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ENN=Posting Date];
                                                   Editable=No }
    { 60  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Vendor No.;
                                                              ENN=Vendor No.];
                                                   Editable=No }
    { 61  ;   ;Process Description ;Text30        ;CaptionML=[ENU=Process Description;
                                                              ENN=Process Description];
                                                   Editable=No }
    { 62  ;   ;Prod. Order Comp. Line No.;Integer ;CaptionML=[ENU=Prod. Order Comp. Line No.;
                                                              ENN=Prod. Order Comp. Line No.];
                                                   Editable=No }
    { 63  ;   ;Excise Bus. Posting Group;Code10   ;TableRelation="Excise Bus. Posting Group";
                                                   CaptionML=[ENU=Excise Bus. Posting Group;
                                                              ENN=Excise Bus. Posting Group];
                                                   Editable=No }
    { 64  ;   ;Excise Prod. Posting Group;Code10  ;TableRelation="Excise Prod. Posting Group";
                                                   CaptionML=[ENU=Excise Prod. Posting Group;
                                                              ENN=Excise Prod. Posting Group];
                                                   Editable=No }
    { 65  ;   ;SSI                 ;Boolean       ;CaptionML=[ENU=SSI;
                                                              ENN=SSI];
                                                   Editable=No }
    { 66  ;   ;Amount Including Excise;Decimal    ;CaptionML=[ENU=Amount Including Excise;
                                                              ENN=Amount Including Excise];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 67  ;   ;Excise Amount       ;Decimal       ;CaptionML=[ENU=Excise Amount;
                                                              ENN=Excise Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 68  ;   ;Excise Base Amount  ;Decimal       ;CaptionML=[ENU=Excise Base Amount;
                                                              ENN=Excise Base Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 69  ;   ;AED(GSI) % / Amount ;Decimal       ;CaptionML=[ENU=AED(GSI) % / Amount;
                                                              ENN=AED(GSI) % / Amount];
                                                   Editable=No }
    { 70  ;   ;SED % / Amount      ;Decimal       ;CaptionML=[ENU=SED % / Amount;
                                                              ENN=SED % / Amount];
                                                   Editable=No }
    { 71  ;   ;BED Amount          ;Decimal       ;CaptionML=[ENU=BED Amount;
                                                              ENN=BED Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 72  ;   ;AED(GSI) Amount     ;Decimal       ;CaptionML=[ENU=AED(GSI) Amount;
                                                              ENN=AED(GSI) Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 73  ;   ;SED Amount          ;Decimal       ;CaptionML=[ENU=SED Amount;
                                                              ENN=SED Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 74  ;   ;SAED % / Amount     ;Decimal       ;CaptionML=[ENU=SAED % / Amount;
                                                              ENN=SAED % / Amount];
                                                   Editable=No }
    { 75  ;   ;CESS % / Amount     ;Decimal       ;CaptionML=[ENU=CESS % / Amount;
                                                              ENN=CESS % / Amount];
                                                   Editable=No }
    { 76  ;   ;NCCD % / Amount     ;Decimal       ;CaptionML=[ENU=NCCD % / Amount;
                                                              ENN=NCCD % / Amount];
                                                   Editable=No }
    { 77  ;   ;eCess % / Amount    ;Decimal       ;CaptionML=[ENU=eCess % / Amount;
                                                              ENN=eCess % / Amount];
                                                   Editable=No }
    { 78  ;   ;SAED Amount         ;Decimal       ;CaptionML=[ENU=SAED Amount;
                                                              ENN=SAED Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 79  ;   ;CESS Amount         ;Decimal       ;CaptionML=[ENU=CESS Amount;
                                                              ENN=CESS Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 80  ;   ;NCCD Amount         ;Decimal       ;CaptionML=[ENU=NCCD Amount;
                                                              ENN=NCCD Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 81  ;   ;eCess Amount        ;Decimal       ;CaptionML=[ENU=eCess Amount;
                                                              ENN=eCess Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 82  ;   ;Amount Added to Excise Base;Decimal;CaptionML=[ENU=Amount Added to Excise Base;
                                                              ENN=Amount Added to Excise Base];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 83  ;   ;Debit Note Created  ;Boolean       ;CaptionML=[ENU=Debit Note Created;
                                                              ENN=Debit Note Created];
                                                   Editable=No }
    { 84  ;   ;Return Date         ;Date          ;CaptionML=[ENU=Return Date;
                                                              ENN=Return Date];
                                                   Editable=No }
    { 85  ;   ;Debit Note Excise Amount;Decimal   ;CaptionML=[ENU=Debit Note Excise Amount;
                                                              ENN=Debit Note Excise Amount];
                                                   Editable=No }
    { 86  ;   ;Last Date           ;Date          ;CaptionML=[ENU=Last Date;
                                                              ENN=Last Date];
                                                   Editable=No }
    { 89  ;   ;AED(TTA) Amount     ;Decimal       ;CaptionML=[ENU=AED(TTA) Amount;
                                                              ENN=AED(TTA) Amount];
                                                   Editable=No }
    { 90  ;   ;ADET Amount         ;Decimal       ;CaptionML=[ENU=ADET Amount;
                                                              ENN=ADET Amount];
                                                   Editable=No }
    { 91  ;   ;ADE Amount          ;Decimal       ;CaptionML=[ENU=ADE Amount;
                                                              ENN=ADE Amount];
                                                   Editable=No }
    { 92  ;   ;SHE Cess Amount     ;Decimal       ;CaptionML=[ENU=SHE Cess Amount;
                                                              ENN=SHE Cess Amount];
                                                   Editable=No }
    { 93  ;   ;ADC VAT Amount      ;Decimal       ;CaptionML=[ENU=ADC VAT Amount;
                                                              ENN=ADC VAT Amount];
                                                   Editable=No }
    { 94  ;   ;Job Work Return Period;Integer     ;CaptionML=[ENU=Job Work Return Period;
                                                              ENN=Job Work Return Period];
                                                   Editable=No }
    { 95  ;   ;Excise Liability Created;Decimal   ;CaptionML=[ENU=Excise Liability Created;
                                                              ENN=Excise Liability Created];
                                                   Editable=No }
    { 96  ;   ;Excise Debit to Vendor;Boolean     ;CaptionML=[ENU=Excise Debit to Vendor;
                                                              ENN=Excise Debit to Vendor];
                                                   Editable=No }
    { 100 ;   ;Identification Mark ;Text20        ;CaptionML=[ENU=Identification Mark;
                                                              ENN=Identification Mark];
                                                   Editable=No }
    { 101 ;   ;Excise Amount (Total);Decimal      ;CaptionML=[ENU=Excise Amount (Total);
                                                              ENN=Excise Amount (Total)];
                                                   Editable=No }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              ENN=Dimension Set ID];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Liability Document No.,Liability Document Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ExcisePostBuffSubcon@1500005 : ARRAY [2] OF TEMPORARY Record 13716;
      SourceCodeSetup@1500000 : Record 242;
      ExciseLiabilityLine@1500002 : Record 13732;
      GeneralLedgerSetup@1500001 : Record 98;
      DimMgt@1500004 : Codeunit 408;
      Text002@1500009 : TextConst 'ENU=The dimensions used in excise liability line %1, line no. %2 are invalid. %3;ENN=The dimensions used in excise liability line %1, line no. %2 are invalid. %3';
      ExciseLiabilityAmt@1500011 : Decimal;

    PROCEDURE PostLiability@1500000();
    VAR
      PostedExciseLiabilityLine@1500000 : Record 13733;
      DeliveryChallanLine@1500001 : Record 16324;
      GeneralLedgerSetup@1500002 : Record 98;
    BEGIN
      SourceCodeSetup.GET;
      SourceCodeSetup.TESTFIELD("Excise Liability - Job Work");
      ExciseLiabilityLine.RESET;
      IF ExciseLiabilityLine.FINDSET THEN BEGIN
        CopyAndCheckDocDimToTempDocDim;
        REPEAT
          ExciseLiabilityLine.CALCFIELDS("Remaining Quantity","Prod. BOM Quantity","Quantity at Vendor Location");
          ExciseLiabilityAmt := 0;
          FillExcisePostingBuffer;

          PostedExciseLiabilityLine.INIT;
          PostedExciseLiabilityLine.TRANSFERFIELDS(ExciseLiabilityLine);
          PostedExciseLiabilityLine."Remaining Quantity" := ExciseLiabilityLine."Remaining Quantity";
          PostedExciseLiabilityLine."Prod. BOM Quantity" := ExciseLiabilityLine."Prod. BOM Quantity";
          PostedExciseLiabilityLine."Quantity at Vendor Location" := ExciseLiabilityLine."Quantity at Vendor Location";
          IF ExciseLiabilityLine."Excise Debit to Vendor" THEN
            PostedExciseLiabilityLine."Excise Debited to Account" := "Vendor No."
          ELSE BEGIN
            GeneralLedgerSetup.GET;
            GeneralLedgerSetup.TESTFIELD("Excise Expense Acc. - Job Work");
            PostedExciseLiabilityLine."Excise Debited to Account" := GeneralLedgerSetup."Excise Expense Acc. - Job Work";
          END;
          PostedExciseLiabilityLine."Excise Liability Created" := ExciseLiabilityAmt;
          PostedExciseLiabilityLine.INSERT;

          DeliveryChallanLine.RESET;
          DeliveryChallanLine.SETRANGE("Deliver Challan No.",ExciseLiabilityLine."Deliver Challan No.");
          DeliveryChallanLine.SETRANGE("Line No.",ExciseLiabilityLine."Line No.");
          IF DeliveryChallanLine.FINDFIRST THEN BEGIN
            DeliveryChallanLine."Excise Liability Created" += ExciseLiabilityAmt;
            DeliveryChallanLine."Excise Amount Remaining" := DeliveryChallanLine."Excise Amount Remaining" - ExciseLiabilityAmt;
            DeliveryChallanLine.MODIFY;
          END;
        UNTIL ExciseLiabilityLine.NEXT = 0;
      END;

      PostExcise;
    END;

    LOCAL PROCEDURE FillExcisePostingBuffer@1280034();
    VAR
      Location@1500001 : Record 14;
      Item@1500003 : Record 27;
      PostedExciseLiabilityLine@1500005 : Record 13733;
      ExcisePostingSetup@1500000 : Record 13711;
    BEGIN
      WITH ExciseLiabilityLine DO BEGIN
        ExcisePostingSetup.RESET;
        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group","Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group","Excise Prod. Posting Group");
        ExcisePostingSetup.SETFILTER("From Date",'<=%1',"Posting Date");
        ExcisePostingSetup.FINDLAST;
        ExcisePostingSetup.TESTFIELD("Excise Payable Account");

        PostedExciseLiabilityLine.RESET;
        PostedExciseLiabilityLine.SETCURRENTKEY("Deliver Challan No.","Line No.");
        PostedExciseLiabilityLine.SETRANGE("Deliver Challan No.","Deliver Challan No.");
        PostedExciseLiabilityLine.SETRANGE("Line No.","Line No.");
        PostedExciseLiabilityLine.CALCSUMS("BED Amount","AED(GSI) Amount","AED(TTA) Amount","SED Amount","SAED Amount",
          "CESS Amount","NCCD Amount","ADC VAT Amount","eCess Amount","SHE Cess Amount","ADET Amount","ADE Amount");

        ExcisePostBuffSubcon[1]."Excise Bus. Posting Group" := "Excise Bus. Posting Group";
        ExcisePostBuffSubcon[1]."Excise Prod. Posting Group" := "Excise Prod. Posting Group";
        Location.GET("Company Location");
        ExcisePostBuffSubcon[1]."E.C.C. No." := Location."E.C.C. No.";
        ExcisePostBuffSubcon[1]."Item No." := "Item No.";
        ExcisePostBuffSubcon[1]."System-Created Entry" := TRUE;
        Item.GET("Item No.");
        ExcisePostBuffSubcon[1]."Capital Item" := Item."Capital Item";
        ExcisePostBuffSubcon[1]."BED Amount" := "BED Amount" - PostedExciseLiabilityLine."BED Amount";
        ExcisePostBuffSubcon[1]."AED(GSI) Amount" := "AED(GSI) Amount" - PostedExciseLiabilityLine."AED(GSI) Amount";
        ExcisePostBuffSubcon[1]."AED(TTA) Amount" := "AED(TTA) Amount" - PostedExciseLiabilityLine."AED(TTA) Amount";
        ExcisePostBuffSubcon[1]."SED Amount" := "SED Amount" - PostedExciseLiabilityLine."SED Amount";
        ExcisePostBuffSubcon[1]."SAED Amount" := "SAED Amount" - PostedExciseLiabilityLine."SAED Amount";
        ExcisePostBuffSubcon[1]."CESS Amount" := "CESS Amount" - PostedExciseLiabilityLine."CESS Amount";
        ExcisePostBuffSubcon[1]."NCCD Amount" := "NCCD Amount" - PostedExciseLiabilityLine."NCCD Amount";
        ExcisePostBuffSubcon[1]."ADC VAT Amount" := "ADC VAT Amount" - PostedExciseLiabilityLine."ADC VAT Amount";
        ExcisePostBuffSubcon[1]."eCess Amount" := "eCess Amount" - PostedExciseLiabilityLine."eCess Amount";
        ExcisePostBuffSubcon[1]."SHE Cess Amount" := "SHE Cess Amount" - PostedExciseLiabilityLine."SHE Cess Amount";
        ExcisePostBuffSubcon[1]."ADET Amount" := "ADET Amount" - PostedExciseLiabilityLine."ADET Amount";
        ExcisePostBuffSubcon[1]."ADE Amount" := "ADE Amount" - PostedExciseLiabilityLine."ADE Amount";
        ExcisePostBuffSubcon[1].Quantity := "Remaining Quantity";
        ExcisePostBuffSubcon[1]."Global Dimension 1 Code" := "Shortcut Dimension 1 Code";
        ExcisePostBuffSubcon[1]."Global Dimension 2 Code" := "Shortcut Dimension 2 Code";
        ExcisePostBuffSubcon[1]."G/L Account" := ExcisePostingSetup."Excise Payable Account";
        IF "Excise Debit to Vendor" THEN BEGIN
          ExcisePostBuffSubcon[1]."Bal. Account" := "Vendor No.";
          ExcisePostBuffSubcon[1]."Excise Debit to Vendor" := TRUE;
        END ELSE BEGIN
          GeneralLedgerSetup.GET;
          GeneralLedgerSetup.TESTFIELD("Excise Expense Acc. - Job Work");
          ExcisePostBuffSubcon[1]."Bal. Account" := GeneralLedgerSetup."Excise Expense Acc. - Job Work";
          ExcisePostBuffSubcon[1]."Excise Debit to Vendor" := FALSE;
        END;
        ExciseLiabilityAmt := ExcisePostBuffSubcon[1]."BED Amount" + ExcisePostBuffSubcon[1]."AED(GSI) Amount" +
          ExcisePostBuffSubcon[1]."AED(TTA) Amount" + ExcisePostBuffSubcon[1]."SED Amount" + ExcisePostBuffSubcon[1]."SAED Amount" +
          ExcisePostBuffSubcon[1]."CESS Amount" + ExcisePostBuffSubcon[1]."NCCD Amount" + ExcisePostBuffSubcon[1]."ADC VAT Amount" +
          ExcisePostBuffSubcon[1]."eCess Amount" + ExcisePostBuffSubcon[1]."SHE Cess Amount" + ExcisePostBuffSubcon[1]."ADET Amount" +
          ExcisePostBuffSubcon[1]."ADE Amount";
        UpdExcisePostingBuffer;
      END;
    END;

    LOCAL PROCEDURE UpdExcisePostingBuffer@1280033();
    BEGIN
      ExcisePostBuffSubcon[1]."Dimension Set ID" := ExciseLiabilityLine."Dimension Set ID";
      ExcisePostBuffSubcon[2] := ExcisePostBuffSubcon[1];
      IF ExcisePostBuffSubcon[2].FIND THEN BEGIN
        ExcisePostBuffSubcon[2]."BED Amount" += ExcisePostBuffSubcon[1]."BED Amount";
        ExcisePostBuffSubcon[2]."AED(GSI) Amount" += ExcisePostBuffSubcon[1]."AED(GSI) Amount";
        ExcisePostBuffSubcon[2]."AED(TTA) Amount" += ExcisePostBuffSubcon[1]."AED(TTA) Amount";
        ExcisePostBuffSubcon[2]."SED Amount" += ExcisePostBuffSubcon[1]."SED Amount";
        ExcisePostBuffSubcon[2]."SAED Amount" += ExcisePostBuffSubcon[1]."SAED Amount";
        ExcisePostBuffSubcon[2]."CESS Amount" += ExcisePostBuffSubcon[1]."CESS Amount";
        ExcisePostBuffSubcon[2]."NCCD Amount" += ExcisePostBuffSubcon[1]."NCCD Amount";
        ExcisePostBuffSubcon[2]."eCess Amount" += ExcisePostBuffSubcon[1]."eCess Amount";
        ExcisePostBuffSubcon[2]."SHE Cess Amount" += ExcisePostBuffSubcon[1]."SHE Cess Amount";
        ExcisePostBuffSubcon[2]."ADET Amount" += ExcisePostBuffSubcon[1]."ADET Amount";
        ExcisePostBuffSubcon[2]."ADE Amount" += ExcisePostBuffSubcon[1]."ADE Amount";
        ExcisePostBuffSubcon[2]."ADC VAT Amount" += ExcisePostBuffSubcon[1]."ADC VAT Amount";
        ExcisePostBuffSubcon[2].Quantity += ExcisePostBuffSubcon[1].Quantity;
        ExcisePostBuffSubcon[2].MODIFY;
      END ELSE
        ExcisePostBuffSubcon[1].INSERT;
    END;

    PROCEDURE PostExcise@1500003();
    VAR
      TaxJnlLine@1500003 : Record 16587;
      TaxJournalMgt@1500005 : Codeunit 16508;
      LineNo@1500001 : Integer;
    BEGIN
      LineNo := 0;
      TaxJnlLine.LOCKTABLE;
      TaxJnlLine.RESET;
      TaxJnlLine.SETRANGE("Journal Template Name",'');
      TaxJnlLine.SETRANGE("Journal Batch Name",'');
      IF TaxJnlLine.FINDLAST THEN
        LineNo := TaxJnlLine."Line No." + 10000
      ELSE
        LineNo := 10000;

      IF ExcisePostBuffSubcon[1].FIND('+') THEN
        REPEAT
          TaxJnlLine.INIT;
          TaxJnlLine."Journal Template Name" := '';
          TaxJnlLine."Journal Batch Name" := '';
          TaxJnlLine."Line No." := LineNo;
          LineNo += 10000;
          TaxJnlLine.VALIDATE("Posting Date","Liability Date");
          TaxJnlLine.VALIDATE("Document No.","Liability Document No.");
          TaxJnlLine.VALIDATE("Account Type",TaxJnlLine."Account Type"::"G/L Account");

          TaxJnlLine.VALIDATE("Account No.",ExcisePostBuffSubcon[1]."G/L Account");
          TaxJnlLine.VALIDATE("Excise Charge",TRUE);

          IF ExcisePostBuffSubcon[1]."Excise Debit to Vendor" THEN
            TaxJnlLine.VALIDATE("Bal. Account Type",TaxJnlLine."Bal. Account Type"::Vendor)
          ELSE
            TaxJnlLine.VALIDATE("Bal. Account Type",TaxJnlLine."Bal. Account Type"::"G/L Account");
          TaxJnlLine.VALIDATE("Bal. Account No.",ExcisePostBuffSubcon[1]."Bal. Account");

          TaxJnlLine.VALIDATE("External Document No.","Liability Document No.");
          TaxJnlLine.VALIDATE("Item No.",ExcisePostBuffSubcon[1]."Item No.");
          TaxJnlLine.VALIDATE("System-Created Entry",ExcisePostBuffSubcon[1]."System-Created Entry");
          TaxJnlLine.VALIDATE("Excise Bus. Posting Group",ExcisePostBuffSubcon[1]."Excise Bus. Posting Group");
          TaxJnlLine.VALIDATE("Excise Prod. Posting Group",ExcisePostBuffSubcon[1]."Excise Prod. Posting Group");
          TaxJnlLine.VALIDATE("E.C.C. No.",ExcisePostBuffSubcon[1]."E.C.C. No.");

          TaxJnlLine.VALIDATE("BED Amount",-ExcisePostBuffSubcon[1]."BED Amount");
          TaxJnlLine.VALIDATE("AED(GSI) Amount",-ExcisePostBuffSubcon[1]."AED(GSI) Amount");
          TaxJnlLine.VALIDATE("AED(TTA) Amount",-ExcisePostBuffSubcon[1]."AED(TTA) Amount");
          TaxJnlLine.VALIDATE("SED Amount",-ExcisePostBuffSubcon[1]."SED Amount");
          TaxJnlLine.VALIDATE("SAED Amount",-ExcisePostBuffSubcon[1]."SAED Amount");
          TaxJnlLine.VALIDATE("CESS Amount",-ExcisePostBuffSubcon[1]."CESS Amount");
          TaxJnlLine.VALIDATE("NCCD Amount",-ExcisePostBuffSubcon[1]."NCCD Amount");
          TaxJnlLine.VALIDATE("eCess Amount",-ExcisePostBuffSubcon[1]."eCess Amount");
          TaxJnlLine.VALIDATE("SHE Cess Amount",-ExcisePostBuffSubcon[1]."SHE Cess Amount");
          TaxJnlLine.VALIDATE("ADET Amount",-ExcisePostBuffSubcon[1]."ADET Amount");
          TaxJnlLine.VALIDATE("ADE Amount",-ExcisePostBuffSubcon[1]."ADE Amount");
          TaxJnlLine.VALIDATE("ADC VAT Amount",-ExcisePostBuffSubcon[1]."ADC VAT Amount");

          TaxJnlLine.VALIDATE("Source Code",SourceCodeSetup."Excise Liability - Job Work");
          TaxJnlLine.VALIDATE("Capital Item",ExcisePostBuffSubcon[1]."Capital Item");
          TaxJnlLine.VALIDATE("Shortcut Dimension 1 Code",ExcisePostBuffSubcon[1]."Global Dimension 1 Code");
          TaxJnlLine.VALIDATE("Shortcut Dimension 2 Code",ExcisePostBuffSubcon[1]."Global Dimension 2 Code");
          TaxJnlLine."Dimension Set ID" := ExcisePostBuffSubcon[1]."Dimension Set ID";
          TaxJnlLine.INSERT;
        UNTIL ExcisePostBuffSubcon[1].NEXT(-1) = 0;
      TaxJournalMgt.PostTaxJournal(TaxJnlLine);
      ExcisePostBuffSubcon[1].DELETEALL;
    END;

    PROCEDURE ShowDimensions@25();
    BEGIN
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2 %3',TABLECAPTION,"Document No.","Line No."));
      DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    LOCAL PROCEDURE CopyAndCheckDocDimToTempDocDim@34();
    VAR
      DimSetEntry@1500000 : Record 480;
      CurrLineNo@1000 : Integer;
    BEGIN
      DimSetEntry.SETRANGE("Dimension Set ID",ExciseLiabilityLine."Dimension Set ID");
      DimMgt.CheckDimIDComb(ExciseLiabilityLine."Dimension Set ID");
      CheckDimValuePosting(CurrLineNo);
    END;

    LOCAL PROCEDURE CheckDimValuePosting@28(LineNo@1000 : Integer);
    VAR
      ExciseLiabilityLine2@1001 : Record 13732;
      TableIDArr@1002 : ARRAY [10] OF Integer;
      NumberArr@1003 : ARRAY [10] OF Code[20];
      ExcisePostingSetup@1500000 : Record 13711;
    BEGIN
      IF ExciseLiabilityLine2.GET(ExciseLiabilityLine."Liability Document No.",LineNo) THEN BEGIN
        IF ExciseLiabilityLine2."Excise Debit to Vendor" THEN BEGIN
          TableIDArr[1] := DATABASE::Vendor;
          NumberArr[1] := ExciseLiabilityLine2."Vendor No.";
        END ELSE BEGIN
          TableIDArr[1] := DATABASE::"G/L Account";
          NumberArr[1] := GeneralLedgerSetup."Excise Expense Acc. - Job Work";
        END;
        ExcisePostingSetup.RESET;
        ExcisePostingSetup.SETRANGE("Excise Bus. Posting Group",ExciseLiabilityLine2."Excise Bus. Posting Group");
        ExcisePostingSetup.SETRANGE("Excise Prod. Posting Group",ExciseLiabilityLine2."Excise Prod. Posting Group");
        ExcisePostingSetup.SETFILTER("From Date",'<=%1',ExciseLiabilityLine2."Posting Date");
        ExcisePostingSetup.FINDLAST;
        ExcisePostingSetup.TESTFIELD("Excise Payable Account");

        TableIDArr[2] := DATABASE::"G/L Account";
        NumberArr[2] := ExcisePostingSetup."Excise Payable Account";

        IF NOT DimMgt.CheckDimValuePosting(TableIDArr,NumberArr,ExciseLiabilityLine2."Dimension Set ID") THEN
          ERROR(
            Text002,
            ExciseLiabilityLine."Liability Document No.",LineNo,DimMgt.GetDimValuePostingErr);
      END;
    END;

    PROCEDURE ValidateShortcutDimCode@19(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    VAR
      DimMgt@1500000 : Codeunit 408;
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    BEGIN
    END.
  }
}

