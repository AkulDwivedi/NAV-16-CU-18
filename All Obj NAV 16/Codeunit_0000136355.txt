OBJECT Codeunit 136355 UT T Job WIP Warning
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
            IsInitialized := FALSE;
          END;

  }
  CODE
  {
    VAR
      Job@1001 : Record 167;
      JobTask@1003 : Record 1001;
      JobWIPTotal@1005 : Record 1021;
      JobWIPWarning@1004 : Record 1007;
      Assert@1000 : Codeunit 130000;
      Text001@1002 : TextConst 'ENU=Rolling back changes...';
      IsInitialized@1006 : Boolean;

    LOCAL PROCEDURE Initialize@7();
    VAR
      LibraryERMCountryData@1000 : Codeunit 131305;
    BEGIN
      IF IsInitialized THEN
        EXIT;

      LibraryERMCountryData.UpdateGeneralPostingSetup;

      IsInitialized := TRUE;
    END;

    [Normal]
    LOCAL PROCEDURE SetUp@1();
    VAR
      LibraryJob@1000 : Codeunit 131920;
    BEGIN
      LibraryJob.CreateJob(Job);
      LibraryJob.CreateJobTask(Job,JobTask);

      JobWIPTotal.INIT;
      JobWIPTotal."Job No." := Job."No.";
      JobWIPTotal."Job Task No." := JobTask."Job Task No.";
      JobWIPTotal."Contract (Total Price)" := 0;
      JobWIPTotal."Schedule (Total Cost)" := 0;
      JobWIPTotal."Schedule (Total Price)" := 0;
      JobWIPTotal."Usage (Total Cost)" := 1;
      JobWIPTotal.INSERT;
    END;

    [Normal]
    LOCAL PROCEDURE TearDown@2();
    BEGIN
      CLEAR(Job);
      CLEAR(JobTask);
      CLEAR(JobWIPWarning);
      ASSERTERROR ERROR(Text001);
      IsInitialized := FALSE;
    END;

    [Test]
    PROCEDURE TestCreation@3();
    BEGIN
      Initialize;
      SetUp;

      // Validate that the generated Job WIP Entry generates 4 warnings.
      JobWIPWarning.CreateEntries(JobWIPTotal);
      JobWIPWarning.SETRANGE("Job No.",Job."No.");
      JobWIPWarning.SETRANGE("Job Task No.",JobTask."Job Task No.");
      Assert.AreEqual(4,JobWIPWarning.COUNT,'The Job WIP Warning CreatEntries function did not create 4 warning messages.');

      TearDown;
    END;

    [Test]
    PROCEDURE TestFunctionsDeleteEntries@5();
    BEGIN
      Initialize;
      SetUp;

      // Validate that the generated Job WIP Warnings are deleted when the Job WIP Entry is deleted.
      JobWIPWarning.CreateEntries(JobWIPTotal);
      JobWIPWarning.DeleteEntries(JobWIPTotal);
      JobWIPWarning.SETRANGE("Job WIP Total Entry No.",JobWIPTotal."Entry No.");
      Assert.IsTrue(JobWIPWarning.ISEMPTY,'The Job WIP Warnings were not deleted when the DeleteEntries function was run.');

      TearDown;
    END;

    BEGIN
    {
      // [FEATURE] [WIP Warning] [Job]
      This unit test tests all fields added / modified during implementation of feature 92860 - "Jobs and WIP Compliance":

      "Entry No."
      "Job WIP Entry No."
      "Warning Message"

      In order to make the unit test orthogonal (i.e. independent) to other functionalities and tests,
      data will be purely artificial (i.e. not real data created by other functionalities such as posting routines and the like).

      Code snippets:
      IF NOT CONFIRM('%1',TRUE,VAR) THEN ERROR('');
    }
    END.
  }
}

