OBJECT Codeunit 230 GenJnlManagement
{
  OBJECT-PROPERTIES
  {
    Date=24-04-16;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.45778,NAVIN9.00.00.45778;
  }
  PROPERTIES
  {
    Permissions=TableData 80=imd,
                TableData 232=imd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Fixed Asset G/L Journal;ENN=Fixed Asset G/L Journal';
      Text001@1001 : TextConst 'ENU=%1 journal;ENN=%1 journal';
      Text002@1002 : TextConst 'ENU=RECURRING;ENN=RECURRING';
      Text003@1003 : TextConst 'ENU=Recurring General Journal;ENN=Recurring General Journal';
      Text004@1004 : TextConst 'ENU=DEFAULT;ENN=DEFAULT';
      Text005@1005 : TextConst 'ENU=Default Journal;ENN=Default Journal';
      LastGenJnlLine@1006 : Record 81;
      OpenFromBatch@1007 : Boolean;
      Text16501@1500001 : TextConst 'ENU=CASH RCPT;ENN=CASH RCPT';
      LastTaxJnlLine@1500000 : Record 16587;

    PROCEDURE TemplateSelection@1(PageID@1005 : Integer;PageTemplate@1000 : 'General,Sales,Purchases,Cash Receipts,Payments,Assets,Intercompany,Jobs,,,,,,,,,,,,,,,,TDS Adjustments,LC,VAT Adjustments,TCS Adjustments,Service Tax Adjustments';RecurringJnl@1001 : Boolean;VAR GenJnlLine@1004 : Record 81;VAR JnlSelected@1003 : Boolean);
    VAR
      GenJnlTemplate@1002 : Record 80;
    BEGIN
      JnlSelected := TRUE;

      GenJnlTemplate.RESET;
      GenJnlTemplate.SETRANGE("Page ID",PageID);
      GenJnlTemplate.SETRANGE(Recurring,RecurringJnl);
      IF NOT RecurringJnl THEN
        GenJnlTemplate.SETRANGE(Type,PageTemplate);
      GenJnlTemplate.SETRANGE("Sub Type",0);

      CASE GenJnlTemplate.COUNT OF
        0:
          BEGIN
            GenJnlTemplate.INIT;
            GenJnlTemplate.Type := PageTemplate;
            GenJnlTemplate.Recurring := RecurringJnl;
            IF NOT RecurringJnl THEN BEGIN
              GenJnlTemplate.Name := FORMAT(GenJnlTemplate.Type,MAXSTRLEN(GenJnlTemplate.Name));
              IF PageTemplate = PageTemplate::Assets THEN
                GenJnlTemplate.Description := Text000
              ELSE
                GenJnlTemplate.Description := STRSUBSTNO(Text001,GenJnlTemplate.Type);
            END ELSE BEGIN
              GenJnlTemplate.Name := Text002;
              GenJnlTemplate.Description := Text003;
            END;
            GenJnlTemplate.VALIDATE(Type);
            GenJnlTemplate.INSERT;
            COMMIT;
          END;
        1:
          GenJnlTemplate.FINDFIRST;
        ELSE
          JnlSelected := PAGE.RUNMODAL(0,GenJnlTemplate) = ACTION::LookupOK;
      END;
      IF JnlSelected THEN BEGIN
        GenJnlLine.FILTERGROUP := 2;
        GenJnlLine.SETRANGE("Journal Template Name",GenJnlTemplate.Name);
        GenJnlLine.FILTERGROUP := 0;
        IF OpenFromBatch THEN BEGIN
          GenJnlLine."Journal Template Name" := '';
          PAGE.RUN(GenJnlTemplate."Page ID",GenJnlLine);
        END;
      END;
    END;

    PROCEDURE TemplateSelectionFromBatch@9(VAR GenJnlBatch@1000 : Record 232);
    VAR
      GenJnlLine@1002 : Record 81;
      GenJnlTemplate@1003 : Record 80;
    BEGIN
      OpenFromBatch := TRUE;
      GenJnlTemplate.GET(GenJnlBatch."Journal Template Name");
      GenJnlTemplate.TESTFIELD("Page ID");
      GenJnlBatch.TESTFIELD(Name);

      GenJnlLine.FILTERGROUP := 2;
      GenJnlLine.SETRANGE("Journal Template Name",GenJnlTemplate.Name);
      GenJnlLine.FILTERGROUP := 0;

      GenJnlLine."Journal Template Name" := '';
      GenJnlLine."Journal Batch Name" := GenJnlBatch.Name;
      PAGE.RUN(GenJnlTemplate."Page ID",GenJnlLine);
    END;

    PROCEDURE OpenJnl@2(VAR CurrentJnlBatchName@1000 : Code[10];VAR GenJnlLine@1001 : Record 81);
    BEGIN
      CheckTemplateName(GenJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
      GenJnlLine.FILTERGROUP := 2;
      GenJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      GenJnlLine.FILTERGROUP := 0;
    END;

    PROCEDURE OpenJnlBatch@10(VAR GenJnlBatch@1000 : Record 232);
    VAR
      GenJnlTemplate@1002 : Record 80;
      GenJnlLine@1004 : Record 81;
      JnlSelected@1003 : Boolean;
    BEGIN
      IF GenJnlBatch.GETFILTER("Journal Template Name") <> '' THEN
        EXIT;
      GenJnlBatch.FILTERGROUP(2);
      IF GenJnlBatch.GETFILTER("Journal Template Name") <> '' THEN BEGIN
        GenJnlBatch.FILTERGROUP(0);
        EXIT;
      END;
      GenJnlBatch.FILTERGROUP(0);

      IF NOT GenJnlBatch.FIND('-') THEN
        FOR GenJnlTemplate.Type := GenJnlTemplate.Type::General TO GenJnlTemplate.Type::Jobs DO BEGIN
          GenJnlTemplate.SETRANGE(Type,GenJnlTemplate.Type);
          IF NOT GenJnlTemplate.FINDFIRST THEN
            TemplateSelection(0,GenJnlTemplate.Type,FALSE,GenJnlLine,JnlSelected);
          IF GenJnlTemplate.FINDFIRST THEN
            CheckTemplateName(GenJnlTemplate.Name,GenJnlBatch.Name);
          IF GenJnlTemplate.Type = GenJnlTemplate.Type::General THEN BEGIN
            GenJnlTemplate.SETRANGE(Recurring,TRUE);
            IF NOT GenJnlTemplate.FINDFIRST THEN
              TemplateSelection(0,GenJnlTemplate.Type,TRUE,GenJnlLine,JnlSelected);
            IF GenJnlTemplate.FINDFIRST THEN
              CheckTemplateName(GenJnlTemplate.Name,GenJnlBatch.Name);
            GenJnlTemplate.SETRANGE(Recurring);
          END;
        END;

      GenJnlBatch.FIND('-');
      JnlSelected := TRUE;
      GenJnlBatch.CALCFIELDS("Template Type",Recurring);
      GenJnlTemplate.SETRANGE(Recurring,GenJnlBatch.Recurring);
      GenJnlTemplate.SETRANGE("Sub Type",GenJnlBatch."Sub Type");
      IF NOT GenJnlBatch.Recurring THEN
        GenJnlTemplate.SETRANGE(Type,GenJnlBatch."Template Type");
      IF GenJnlBatch.GETFILTER("Journal Template Name") <> '' THEN
        GenJnlTemplate.SETRANGE(Name,GenJnlBatch.GETFILTER("Journal Template Name"));
      CASE GenJnlTemplate.COUNT OF
        1:
          GenJnlTemplate.FINDFIRST;
        ELSE
          JnlSelected := PAGE.RUNMODAL(0,GenJnlTemplate) = ACTION::LookupOK;
      END;
      IF NOT JnlSelected THEN
        ERROR('');

      GenJnlBatch.FILTERGROUP(0);
      GenJnlBatch.SETRANGE("Journal Template Name",GenJnlTemplate.Name);
      GenJnlBatch.FILTERGROUP(2);
    END;

    LOCAL PROCEDURE CheckTemplateName@3(CurrentJnlTemplateName@1000 : Code[10];VAR CurrentJnlBatchName@1001 : Code[10]);
    VAR
      GenJnlBatch@1002 : Record 232;
    BEGIN
      GenJnlBatch.SETRANGE("Journal Template Name",CurrentJnlTemplateName);
      IF NOT GenJnlBatch.GET(CurrentJnlTemplateName,CurrentJnlBatchName) THEN BEGIN
        IF NOT GenJnlBatch.FINDFIRST THEN BEGIN
          GenJnlBatch.INIT;
          GenJnlBatch."Journal Template Name" := CurrentJnlTemplateName;
          GenJnlBatch.SetupNewBatch;
          GenJnlBatch.Name := Text004;
          GenJnlBatch.Description := Text005;
          GenJnlBatch.INSERT(TRUE);
          COMMIT;
        END;
        CurrentJnlBatchName := GenJnlBatch.Name
      END;
    END;

    PROCEDURE CheckName@4(CurrentJnlBatchName@1000 : Code[10];VAR GenJnlLine@1001 : Record 81);
    VAR
      GenJnlBatch@1002 : Record 232;
    BEGIN
      GenJnlBatch.GET(GenJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
    END;

    PROCEDURE SetName@5(CurrentJnlBatchName@1000 : Code[10];VAR GenJnlLine@1001 : Record 81);
    BEGIN
      GenJnlLine.FILTERGROUP := 2;
      GenJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      GenJnlLine.FILTERGROUP := 0;
      IF GenJnlLine.FIND('-') THEN;
    END;

    PROCEDURE LookupName@6(VAR CurrentJnlBatchName@1000 : Code[10];VAR GenJnlLine@1001 : Record 81);
    VAR
      GenJnlBatch@1002 : Record 232;
    BEGIN
      COMMIT;
      GenJnlBatch."Journal Template Name" := GenJnlLine.GETRANGEMAX("Journal Template Name");
      GenJnlBatch.Name := GenJnlLine.GETRANGEMAX("Journal Batch Name");
      GenJnlBatch.FILTERGROUP(2);
      GenJnlBatch.SETRANGE("Journal Template Name",GenJnlBatch."Journal Template Name");
      GenJnlBatch.FILTERGROUP(0);
      IF PAGE.RUNMODAL(0,GenJnlBatch) = ACTION::LookupOK THEN BEGIN
        CurrentJnlBatchName := GenJnlBatch.Name;
        SetName(CurrentJnlBatchName,GenJnlLine);
      END;
    END;

    PROCEDURE GetAccounts@7(VAR GenJnlLine@1000 : Record 81;VAR AccName@1001 : Text[50];VAR BalAccName@1002 : Text[50]);
    VAR
      GLAcc@1003 : Record 15;
      Cust@1004 : Record 18;
      Vend@1005 : Record 23;
      BankAcc@1006 : Record 270;
      FA@1007 : Record 5600;
      IC@1008 : Record 413;
    BEGIN
      IF (GenJnlLine."Account Type" <> LastGenJnlLine."Account Type") OR
         (GenJnlLine."Account No." <> LastGenJnlLine."Account No.")
      THEN BEGIN
        AccName := '';
        IF GenJnlLine."Account No." <> '' THEN
          CASE GenJnlLine."Account Type" OF
            GenJnlLine."Account Type"::"G/L Account":
              IF GLAcc.GET(GenJnlLine."Account No.") THEN
                AccName := GLAcc.Name;
            GenJnlLine."Account Type"::Customer:
              IF Cust.GET(GenJnlLine."Account No.") THEN
                AccName := Cust.Name;
            GenJnlLine."Account Type"::Vendor:
              IF Vend.GET(GenJnlLine."Account No.") THEN
                AccName := Vend.Name;
            GenJnlLine."Account Type"::"Bank Account":
              IF BankAcc.GET(GenJnlLine."Account No.") THEN
                AccName := BankAcc.Name;
            GenJnlLine."Account Type"::"Fixed Asset":
              IF FA.GET(GenJnlLine."Account No.") THEN
                AccName := FA.Description;
            GenJnlLine."Account Type"::"IC Partner":
              IF IC.GET(GenJnlLine."Account No.") THEN
                AccName := IC.Name;
          END;
      END;

      IF (GenJnlLine."Bal. Account Type" <> LastGenJnlLine."Bal. Account Type") OR
         (GenJnlLine."Bal. Account No." <> LastGenJnlLine."Bal. Account No.")
      THEN BEGIN
        BalAccName := '';
        IF GenJnlLine."Bal. Account No." <> '' THEN
          CASE GenJnlLine."Bal. Account Type" OF
            GenJnlLine."Bal. Account Type"::"G/L Account":
              IF GLAcc.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := GLAcc.Name;
            GenJnlLine."Bal. Account Type"::Customer:
              IF Cust.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := Cust.Name;
            GenJnlLine."Bal. Account Type"::Vendor:
              IF Vend.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := Vend.Name;
            GenJnlLine."Bal. Account Type"::"Bank Account":
              IF BankAcc.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := BankAcc.Name;
            GenJnlLine."Bal. Account Type"::"Fixed Asset":
              IF FA.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := FA.Description;
            GenJnlLine."Bal. Account Type"::"IC Partner":
              IF IC.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := IC.Name;
          END;
      END;

      LastGenJnlLine := GenJnlLine;
    END;

    PROCEDURE CalcBalance@8(VAR GenJnlLine@1000 : Record 81;LastGenJnlLine@1001 : Record 81;VAR Balance@1002 : Decimal;VAR TotalBalance@1003 : Decimal;VAR ShowBalance@1004 : Boolean;VAR ShowTotalBalance@1005 : Boolean);
    VAR
      TempGenJnlLine@1006 : Record 81;
    BEGIN
      TempGenJnlLine.COPYFILTERS(GenJnlLine);
      ShowTotalBalance := TempGenJnlLine.CALCSUMS("Balance (LCY)");
      IF ShowTotalBalance THEN BEGIN
        TotalBalance := TempGenJnlLine."Balance (LCY)";
        IF GenJnlLine."Line No." = 0 THEN
          TotalBalance := TotalBalance + LastGenJnlLine."Balance (LCY)";
      END;

      IF GenJnlLine."Line No." <> 0 THEN BEGIN
        TempGenJnlLine.SETRANGE("Line No.",0,GenJnlLine."Line No.");
        ShowBalance := TempGenJnlLine.CALCSUMS("Balance (LCY)");
        IF ShowBalance THEN
          Balance := TempGenJnlLine."Balance (LCY)";
      END ELSE BEGIN
        TempGenJnlLine.SETRANGE("Line No.",0,LastGenJnlLine."Line No.");
        ShowBalance := TempGenJnlLine.CALCSUMS("Balance (LCY)");
        IF ShowBalance THEN BEGIN
          Balance := TempGenJnlLine."Balance (LCY)";
          TempGenJnlLine.COPYFILTERS(GenJnlLine);
          TempGenJnlLine := LastGenJnlLine;
          IF TempGenJnlLine.NEXT = 0 THEN
            Balance := Balance + LastGenJnlLine."Balance (LCY)";
        END;
      END;
    END;

    PROCEDURE TemplateSelectionForVouchers@1500000(PageID@1005 : Integer;RecurringJnl@1001 : Boolean;SubType@1500000 : ' ,Cash Receipt Voucher,Cash Payment Voucher,Bank Receipt Voucher,Bank Payment Voucher,Contra Voucher,Journal Voucher';VAR GenJnlLine@1004 : Record 81;VAR JnlSelected@1003 : Boolean);
    VAR
      GenJnlTemplate@1002 : Record 80;
    BEGIN
      JnlSelected := TRUE;
      GenJnlTemplate.RESET;
      GenJnlTemplate.SETRANGE("Page ID",PageID);
      GenJnlTemplate.SETRANGE(Recurring,RecurringJnl);
      IF NOT RecurringJnl THEN
        GenJnlTemplate.SETRANGE(Type,0);
      GenJnlTemplate.SETRANGE("Sub Type",SubType);
      CASE GenJnlTemplate.COUNT OF
        0:
          BEGIN
            GenJnlTemplate.INIT;
            GenJnlTemplate.Type := 0;
            GenJnlTemplate."Sub Type" := SubType;
            GenJnlTemplate.Recurring := RecurringJnl;
            IF NOT RecurringJnl THEN BEGIN
              IF GenJnlTemplate."Sub Type" = GenJnlTemplate."Sub Type"::"Cash Receipt Voucher" THEN
                GenJnlTemplate.Name := FORMAT(Text16501,MAXSTRLEN(GenJnlTemplate.Name))
              ELSE
                GenJnlTemplate.Name := FORMAT(GenJnlTemplate."Sub Type",MAXSTRLEN(GenJnlTemplate.Name));
              GenJnlTemplate.Description := STRSUBSTNO(Text001,GenJnlTemplate.Type);
            END ELSE BEGIN
              GenJnlTemplate.Name := Text002;
              GenJnlTemplate.Description := Text003;
            END;
            GenJnlTemplate.VALIDATE(Type);
            GenJnlTemplate.VALIDATE("Sub Type");
            GenJnlTemplate.INSERT;
            GenJnlTemplate.TESTFIELD("Source Code");
            COMMIT;
          END;
        1:
          GenJnlTemplate.FIND('-');
        ELSE
          JnlSelected := PAGE.RUNMODAL(0,GenJnlTemplate) = ACTION::LookupOK;
      END;
      IF JnlSelected THEN BEGIN
        GenJnlLine.FILTERGROUP := 2;
        GenJnlLine.SETRANGE("Journal Template Name",GenJnlTemplate.Name);
        GenJnlLine.FILTERGROUP := 0;
      END;
    END;

    PROCEDURE CalcTotDebitTotCreditAmount@1500001(VAR GenJnlLine@1000 : Record 81;VAR TotalDebitAmount@1003 : Decimal;VAR TotalCreditAmount@1500001 : Decimal;Post@1500003 : Boolean);
    VAR
      TempGenJnlLine@1006 : Record 81;
    BEGIN
      TotalDebitAmount := 0;
      TotalCreditAmount := 0;
      TempGenJnlLine.SETCURRENTKEY("Journal Template Name","Journal Batch Name","Posting Date","Document No.");
      TempGenJnlLine.COPYFILTERS(GenJnlLine);
      IF TempGenJnlLine.FINDSET THEN
        REPEAT
          IF TempGenJnlLine."Debit Amount" > 0 THEN
            TotalDebitAmount += TempGenJnlLine."Debit Amount" ;
          IF TempGenJnlLine."Credit Amount" > 0 THEN
            TotalCreditAmount += TempGenJnlLine."Credit Amount" ;

          IF TempGenJnlLine."Bal. Account No." <> '' THEN BEGIN
            IF TempGenJnlLine."Debit Amount" > 0 THEN
              TotalCreditAmount += TempGenJnlLine."Debit Amount";
            IF TempGenJnlLine."Credit Amount" > 0 THEN
              TotalDebitAmount += TempGenJnlLine."Credit Amount" ;
          END;
        UNTIL TempGenJnlLine.NEXT = 0;
    END;

    PROCEDURE TaxTemplateSelection@1500003(FormID@1500004 : Integer;FormTemplate@1500003 : 'Excise,VAT Opening,VAT Adjustments,Service Tax Opening,Service Tax Adjustments,TDS Adjustments,TCS Adjustments';VAR TaxJnlLine@1500001 : Record 16587;VAR JnlSelected@1500000 : Boolean);
    VAR
      TaxJnlTemplate@1500002 : Record 16585;
    BEGIN
      JnlSelected := TRUE;

      TaxJnlTemplate.RESET;
      IF NOT OpenFromBatch THEN
        TaxJnlTemplate.SETRANGE("Form ID",FormID);
      TaxJnlTemplate.SETRANGE(Type,FormTemplate);

      CASE TaxJnlTemplate.COUNT OF
        0:
          BEGIN
            TaxJnlTemplate.INIT;
            TaxJnlTemplate.Type := FormTemplate;
            TaxJnlTemplate.Name := FORMAT(TaxJnlTemplate.Type,MAXSTRLEN(TaxJnlTemplate.Name));
            TaxJnlTemplate.Description := STRSUBSTNO(Text001,TaxJnlTemplate.Type);
            TaxJnlTemplate.VALIDATE(Type);
            TaxJnlTemplate.INSERT;
            COMMIT;
          END;
        1:
          TaxJnlTemplate.FIND('-');
        ELSE
          JnlSelected := PAGE.RUNMODAL(0,TaxJnlTemplate) = ACTION::LookupOK;
      END;
      IF JnlSelected THEN BEGIN
        TaxJnlLine.FILTERGROUP := 2;
        TaxJnlLine.SETRANGE("Journal Template Name",TaxJnlTemplate.Name);
        TaxJnlLine.FILTERGROUP := 0;
        IF OpenFromBatch THEN BEGIN
          TaxJnlLine."Journal Template Name" := '';
          PAGE.RUN(TaxJnlTemplate."Form ID",TaxJnlLine);
        END;
      END;
    END;

    PROCEDURE TemplateSelectionFromTaxBatch@1500008(VAR TaxJnlBatch@1500000 : Record 16586);
    VAR
      TaxJnlLine@1500002 : Record 16587;
      JnlSelected@1500001 : Boolean;
    BEGIN
      OpenFromBatch := TRUE;
      TaxJnlBatch.CALCFIELDS("Template Type");
      TaxJnlLine."Journal Batch Name" := TaxJnlBatch.Name;
      TaxTemplateSelection(0,TaxJnlBatch."Template Type",TaxJnlLine,JnlSelected);
    END;

    PROCEDURE OpenTaxJnl@1500006(VAR CurrentTaxJnlBatchName@1500001 : Code[10];VAR TaxJnlLine@1500000 : Record 16587);
    BEGIN
      CheckTaxTemplateName(TaxJnlLine.GETRANGEMAX("Journal Template Name"),CurrentTaxJnlBatchName);
      TaxJnlLine.FILTERGROUP := 2;
      TaxJnlLine.SETRANGE("Journal Batch Name",CurrentTaxJnlBatchName);
      TaxJnlLine.FILTERGROUP := 0;
    END;

    PROCEDURE OpenTaxJnlBatch@1500002(VAR TaxJnlBatch@1000 : Record 16586);
    VAR
      CopyOfTaxJnlBatch@1500003 : Record 16586;
      TaxJnlTemplate@1500002 : Record 16585;
      TaxJnlLine@1500001 : Record 16587;
      JnlSelected@1500000 : Boolean;
    BEGIN
      CopyOfTaxJnlBatch := TaxJnlBatch;
      IF NOT TaxJnlBatch.FIND('-') THEN BEGIN
        FOR TaxJnlTemplate.Type := TaxJnlTemplate.Type::Excise TO TaxJnlTemplate.Type::"TCS Adjustments" DO BEGIN
          TaxJnlTemplate.SETRANGE(Type,TaxJnlTemplate.Type);
          IF NOT TaxJnlTemplate.FIND('-') THEN
            TaxTemplateSelection(0,TaxJnlTemplate.Type,TaxJnlLine,JnlSelected);
          IF TaxJnlTemplate.FIND('-') THEN
            CheckTaxTemplateName(TaxJnlTemplate.Name,TaxJnlBatch.Name);
        END;
        IF TaxJnlBatch.FIND('-') THEN;
          CopyOfTaxJnlBatch := TaxJnlBatch;
      END;
      IF TaxJnlBatch.GETFILTER("Journal Template Name") = '' THEN BEGIN
         TaxJnlBatch.FILTERGROUP(2);
         TaxJnlBatch.SETRANGE("Journal Template Name",TaxJnlBatch."Journal Template Name");
         TaxJnlBatch.FILTERGROUP(0);
      END;
      TaxJnlBatch := CopyOfTaxJnlBatch;
    END;

    PROCEDURE CheckTaxTemplateName@1500004(CurrentTaxTemplateName@1500001 : Code[10];VAR CurrentTaxBatchName@1500000 : Code[10]);
    VAR
      TaxJnlBatch@1500002 : Record 16586;
    BEGIN
      TaxJnlBatch.SETRANGE("Journal Template Name",CurrentTaxTemplateName);
      IF NOT TaxJnlBatch.GET(CurrentTaxTemplateName,CurrentTaxBatchName) THEN BEGIN
        IF NOT TaxJnlBatch.FIND('-') THEN BEGIN
          TaxJnlBatch.INIT;
          TaxJnlBatch."Journal Template Name" := CurrentTaxTemplateName;
          TaxJnlBatch.SetupNewBatch;
          TaxJnlBatch.Name := Text004;
          TaxJnlBatch.Description := Text005;
          TaxJnlBatch.INSERT(TRUE);
          COMMIT;
        END;
        CurrentTaxBatchName := TaxJnlBatch.Name
      END;
    END;

    PROCEDURE SetNameTax@1500010(CurrentTaxJnlBatchName@1500001 : Code[10];VAR TaxJnlLine@1500000 : Record 16587);
    BEGIN
      TaxJnlLine.FILTERGROUP := 2;
      TaxJnlLine.SETRANGE("Journal Batch Name",CurrentTaxJnlBatchName);
      TaxJnlLine.FILTERGROUP := 0;
      IF TaxJnlLine.FIND('-') THEN;
    END;

    PROCEDURE CheckNameTax@1500009(CurrentTaxJnlBatchName@1500001 : Code[10];VAR TaxJnlLine@1500000 : Record 16587);
    VAR
      TaxJnlBatch@1500002 : Record 16586;
    BEGIN
      TaxJnlBatch.GET(TaxJnlLine.GETRANGEMAX("Journal Template Name"),CurrentTaxJnlBatchName);
    END;

    PROCEDURE LookupNameTax@1500011(VAR CurrentTaxJnlBatchName@1500001 : Code[10];VAR TaxJnlLine@1500000 : Record 16587);
    VAR
      TaxJnlBatch@1500002 : Record 16586;
    BEGIN
      COMMIT;
      TaxJnlBatch."Journal Template Name" := TaxJnlLine.GETRANGEMAX("Journal Template Name");
      TaxJnlBatch.Name := TaxJnlLine.GETRANGEMAX("Journal Batch Name");
      TaxJnlBatch.FILTERGROUP := 2;
      TaxJnlBatch.SETRANGE("Journal Template Name",TaxJnlBatch."Journal Template Name");
      TaxJnlBatch.FILTERGROUP := 0;
      IF PAGE.RUNMODAL(0,TaxJnlBatch) = ACTION::LookupOK THEN BEGIN
        CurrentTaxJnlBatchName := TaxJnlBatch.Name;
        SetNameTax(CurrentTaxJnlBatchName,TaxJnlLine);
      END;
    END;

    PROCEDURE GetAccountsTax@1500007(VAR TaxJnlLine@1500002 : Record 16587;VAR AccName@1500001 : Text[50];VAR BalAccName@1500000 : Text[50]);
    VAR
      GLAcc@1500008 : Record 15;
      Cust@1500007 : Record 18;
      Vend@1500006 : Record 23;
      BankAcc@1500005 : Record 270;
    BEGIN
      IF (TaxJnlLine."Account Type" <> LastTaxJnlLine."Account Type") OR
         (TaxJnlLine."Account No." <> LastTaxJnlLine."Account No.")
      THEN BEGIN
        AccName := '';
        IF TaxJnlLine."Account No." <> '' THEN
          CASE TaxJnlLine."Account Type" OF
            TaxJnlLine."Account Type"::"G/L Account":
              IF GLAcc.GET(TaxJnlLine."Account No.") THEN
                AccName := GLAcc.Name;
            TaxJnlLine."Account Type"::Customer:
              IF Cust.GET(TaxJnlLine."Account No.") THEN
                AccName := Cust.Name;
            TaxJnlLine."Account Type"::Vendor:
              IF Vend.GET(TaxJnlLine."Account No.") THEN
                AccName := Vend.Name;
            TaxJnlLine."Account Type"::"Bank Account":
              IF BankAcc.GET(TaxJnlLine."Account No.") THEN
                AccName := BankAcc.Name;
          END;
      END;

      IF (TaxJnlLine."Bal. Account Type" <> LastTaxJnlLine."Bal. Account Type") OR
         (TaxJnlLine."Bal. Account No." <> LastTaxJnlLine."Bal. Account No.") THEN BEGIN
        BalAccName := '';
        IF TaxJnlLine."Bal. Account No." <> '' THEN
          CASE TaxJnlLine."Bal. Account Type" OF
            TaxJnlLine."Bal. Account Type"::"G/L Account":
              IF GLAcc.GET(TaxJnlLine."Bal. Account No.") THEN
                BalAccName := GLAcc.Name;
            TaxJnlLine."Bal. Account Type"::Customer:
              IF Cust.GET(TaxJnlLine."Bal. Account No.") THEN
                BalAccName := Cust.Name;
            TaxJnlLine."Bal. Account Type"::Vendor:
              IF Vend.GET(TaxJnlLine."Bal. Account No.") THEN
                BalAccName := Vend.Name;
            TaxJnlLine."Bal. Account Type"::"Bank Account":
              IF BankAcc.GET(TaxJnlLine."Bal. Account No.") THEN
                BalAccName := BankAcc.Name;
          END;
      END;

      LastTaxJnlLine := TaxJnlLine;
    END;

    PROCEDURE CalcTaxBalance@1500005(VAR TaxJnlLine@1500005 : Record 16587;LastTaxJnlLine@1500004 : Record 16587;VAR Balance@1500003 : Decimal;VAR TotalBalance@1500002 : Decimal;VAR ShowBalance@1500001 : Boolean;VAR ShowTotalBalance@1500000 : Boolean);
    VAR
      TempTaxJnlLine@1500006 : Record 16587;
    BEGIN
      TempTaxJnlLine.COPYFILTERS(TaxJnlLine);
      ShowTotalBalance := TempTaxJnlLine.CALCSUMS("Balance (LCY)");
      IF ShowTotalBalance THEN BEGIN
        TotalBalance := TempTaxJnlLine."Balance (LCY)";
        IF TaxJnlLine."Line No." = 0 THEN
          TotalBalance := TotalBalance + LastTaxJnlLine."Balance (LCY)";
      END;

      IF TaxJnlLine."Line No." <> 0 THEN BEGIN
        TempTaxJnlLine.SETRANGE("Line No.",0,TaxJnlLine."Line No.");
        ShowBalance := TempTaxJnlLine.CALCSUMS("Balance (LCY)");
        IF ShowBalance THEN
          Balance := TempTaxJnlLine."Balance (LCY)";
      END ELSE BEGIN
        TempTaxJnlLine.SETRANGE("Line No.",0,LastTaxJnlLine."Line No.");
        ShowBalance := TempTaxJnlLine.CALCSUMS("Balance (LCY)");
        IF ShowBalance THEN BEGIN
          Balance := TempTaxJnlLine."Balance (LCY)";
          TempTaxJnlLine.COPYFILTERS(TaxJnlLine);
          TempTaxJnlLine := LastTaxJnlLine;
          IF TempTaxJnlLine.NEXT = 0 THEN
            Balance := Balance + LastTaxJnlLine."Balance (LCY)";
        END;
      END;
    END;

    PROCEDURE TaxJnlShowCard@1500012(VAR TaxJnlLine@1500000 : Record 16587);
    VAR
      GLAcc@1500004 : Record 15;
      Cust@1500003 : Record 18;
      Vend@1500002 : Record 23;
      BankAcc@1500001 : Record 270;
    BEGIN
      WITH TaxJnlLine DO BEGIN
        CASE "Account Type" OF
          "Account Type"::"G/L Account":
            BEGIN
              GLAcc."No." := "Account No.";
              PAGE.RUN(PAGE::"G/L Account Card",GLAcc);
            END;
          "Account Type"::Customer:
            BEGIN
              Cust."No." := "Account No.";
              PAGE.RUN(PAGE::"Customer Card",Cust);
            END;
          "Account Type"::Vendor:
            BEGIN
              Vend."No." := "Account No.";
              PAGE.RUN(PAGE::"Vendor Card",Vend);
            END;
          "Account Type"::"Bank Account":
            BEGIN
              BankAcc."No." := "Account No.";
              PAGE.RUN(PAGE::"Bank Account Card",BankAcc);
            END;
        END;
      END;
    END;

    PROCEDURE TaxJnlShowEntries@1500013(VAR TaxJnlLine@1500000 : Record 16587);
    VAR
      GLEntry@1500004 : Record 17;
      CustLedgEntry@1500003 : Record 21;
      VendLedgEntry@1500002 : Record 25;
      BankAccLedgEntry@1500001 : Record 271;
    BEGIN
      WITH TaxJnlLine DO BEGIN
        CASE "Account Type" OF
          "Account Type"::"G/L Account":
            BEGIN
              GLEntry.SETCURRENTKEY("G/L Account No.","Posting Date");
              GLEntry.SETRANGE("G/L Account No.","Account No.");
              IF GLEntry.FINDLAST THEN;
              PAGE.RUN(PAGE::"General Ledger Entries",GLEntry);
            END;
          "Account Type"::Customer:
            BEGIN
              CustLedgEntry.SETCURRENTKEY("Customer No.","Posting Date");
              CustLedgEntry.SETRANGE("Customer No.","Account No.");
              IF CustLedgEntry.FINDLAST THEN;
              PAGE.RUN(PAGE::"Customer Ledger Entries",CustLedgEntry);
            END;
          "Account Type"::Vendor:
            BEGIN
              VendLedgEntry.SETCURRENTKEY("Vendor No.","Posting Date");
              VendLedgEntry.SETRANGE("Vendor No.","Account No.");
              IF VendLedgEntry.FINDLAST THEN;
              PAGE.RUN(PAGE::"Vendor Ledger Entries",VendLedgEntry);
            END;
          "Account Type"::"Bank Account":
            BEGIN
              BankAccLedgEntry.SETCURRENTKEY("Bank Account No.","Posting Date");
              BankAccLedgEntry.SETRANGE("Bank Account No.","Account No.");
              IF BankAccLedgEntry.FINDLAST THEN;
              PAGE.RUN(PAGE::"Bank Account Ledger Entries",BankAccLedgEntry);
            END;
        END;
      END;
    END;

    PROCEDURE UpdateBankCharges@1500014(GenJnlLine@1500001 : Record 81;VAR BankCharges@1500000 : Decimal);
    VAR
      JnlBankCharges@1500002 : Record 16511;
    BEGIN
      WITH GenJnlLine DO BEGIN
        JnlBankCharges.RESET;
        JnlBankCharges.SETRANGE("Journal Template Name","Journal Template Name");
        JnlBankCharges.SETRANGE("Journal Batch Name","Journal Batch Name");
        JnlBankCharges.SETRANGE("Line No.","Line No.");
        JnlBankCharges.CALCSUMS("Amount (LCY)");
        BankCharges := JnlBankCharges."Amount (LCY)";
      END;
    END;

    BEGIN
    END.
  }
}

