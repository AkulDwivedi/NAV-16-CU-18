OBJECT Codeunit 91 Purch.-Post (Yes/No)
{
  OBJECT-PROPERTIES
  {
    Date=03-08-16;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.46621,NAVIN9.00.00.46621;
  }
  PROPERTIES
  {
    TableNo=38;
    OnRun=BEGIN
            IF NOT FIND THEN
              ERROR(NothingToPostErr);

            PurchHeader.COPY(Rec);
            Code;
            Rec := PurchHeader;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=&Receive,&Invoice,Receive &and Invoice;ENN=&Receive,&Invoice,Receive &and Invoice';
      Text001@1001 : TextConst 'ENU=Do you want to post the %1?;ENN=Do you want to post the %1?';
      Text002@1002 : TextConst 'ENU=&Ship,&Invoice,Ship &and Invoice;ENN=&Ship,&Invoice,Ship &and Invoice';
      PurchHeader@1003 : Record 38;
      PurchPost@1006 : Codeunit 90;
      Selection@1005 : Integer;
      PreviewMode@1004 : Boolean;
      Text13700@1280001 : TextConst 'ENU=You have to attach transit document for this invoice.;ENN=You have to attach transit document for this invoice.';
      Text13701@1280000 : TextConst 'ENU=Transit document are not required for this invoice.;ENN=Transit document are not required for this invoice.';
      Text13702@1280003 : TextConst 'ENU=Do you want to Invoice the Sub Contracting Order ?;ENN=Do you want to Invoice the Sub Contracting Order ?';
      NothingToPostErr@1007 : TextConst 'ENU=There is nothing to post.;ENN=There is nothing to post.';

    [TryFunction]
    LOCAL PROCEDURE Code@1();
    VAR
      PurchSetup@1000 : Record 312;
      PurchPostViaJobQueue@1001 : Codeunit 98;
    BEGIN
      CheckTransDocDetails(PurchHeader);
      WITH PurchHeader DO
        IF NOT PreviewMode THEN BEGIN
          IF NOT Subcontracting THEN BEGIN
            CASE "Document Type" OF
              "Document Type"::Order:
                BEGIN
                  Selection := STRMENU(Text000,3);
                  IF Selection = 0 THEN
                    EXIT;
                  Receive := Selection IN [1,3];
                  Invoice := Selection IN [2,3];
                END;
              "Document Type"::"Return Order":
                BEGIN
                  Selection := STRMENU(Text002,3);
                  IF Selection = 0 THEN
                    EXIT;
                  Ship := Selection IN [1,3];
                  Invoice := Selection IN [2,3];
                END
              ELSE
              IF NOT
                 CONFIRM(
                   Text001,FALSE,
                   "Document Type")
              THEN
                EXIT;
            END;
          END ELSE BEGIN
            IF CONFIRM(Text13702,TRUE) THEN BEGIN
              Invoice := TRUE;
              Receive := FALSE;
            END ELSE
             EXIT;
          END;
          "Print Posted Documents" := FALSE;

          PurchSetup.GET;
          IF PurchSetup."Post with Job Queue" THEN
            PurchPostViaJobQueue.EnqueuePurchDoc(PurchHeader)
          ELSE
            CODEUNIT.RUN(CODEUNIT::"Purch.-Post",PurchHeader)
        END ELSE BEGIN
          IF NOT Subcontracting THEN BEGIN
            Ship := "Document Type" = "Document Type"::"Return Order";
            Receive := "Document Type" = "Document Type"::Order;
          END ELSE
            Receive := FALSE;
          Invoice := TRUE;
          PurchPost.SetPreviewMode(TRUE);
          PurchPost.RUN(PurchHeader);
        END;
    END;

    PROCEDURE CheckTransDocDetails@1500000(VAR PurchHeader2@1500001 : Record 38);
    VAR
      TransDocDetails@1500000 : Record 13768;
    BEGIN
      WITH PurchHeader2 DO
        IF "Form Code" <> '' THEN BEGIN
          TransDocDetails.SETRANGE(Type,TransDocDetails.Type::Purchase);
          TransDocDetails.SETRANGE("PO / SO No.","No.");
          IF "Transit Document" AND TransDocDetails.ISEMPTY THEN
            ERROR(Text13700);
          IF NOT "Transit Document" AND NOT TransDocDetails.ISEMPTY THEN
            ERROR(Text13701);
        END;
    END;

    PROCEDURE Preview@2(VAR PurchaseHeader@1000 : Record 38);
    VAR
      GenJnlPostPreview@1002 : Codeunit 19;
    BEGIN
      GenJnlPostPreview.Start;
      PreviewMode := TRUE;
      PurchHeader.COPY(PurchaseHeader);
      IF NOT Code THEN BEGIN
        GenJnlPostPreview.Finish;
        IF GETLASTERRORTEXT <> GenJnlPostPreview.GetPreviewModeErrMessage THEN
          ERROR(GETLASTERRORTEXT);
        GenJnlPostPreview.ShowAllEntries;
        ERROR('');
      END;
    END;

    BEGIN
    END.
  }
}

