OBJECT Codeunit 103 Cust. Entry-Edit
{
  OBJECT-PROPERTIES
  {
    Date=29-06-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.48822,NAVIN9.00.00.48822;
  }
  PROPERTIES
  {
    TableNo=21;
    Permissions=TableData 21=imd,
                TableData 379=m;
    OnRun=VAR
            CustLedgerEntry1@1500004 : Record 21;
            GSTGroupRemAmount@1500000 : Decimal;
            InvoiceGSTAmount@1500002 : Decimal;
            AppliedGSTAmount@1500001 : Decimal;
            InvoiceBase@1500003 : Decimal;
          BEGIN
            CustLedgerEntry := Rec;
            CustLedgerEntry.LOCKTABLE;
            CustLedgerEntry.FIND;
            CustLedgerEntry."On Hold" := "On Hold";
            IF CustLedgerEntry.Open THEN BEGIN
              CustLedgerEntry."Due Date" := "Due Date";
              DtldCustLedgEntry.SETCURRENTKEY("Cust. Ledger Entry No.");
              DtldCustLedgEntry.SETRANGE("Cust. Ledger Entry No.",CustLedgerEntry."Entry No.");
              DtldCustLedgEntry.MODIFYALL("Initial Entry Due Date","Due Date");
              CustLedgerEntry."Pmt. Discount Date" := "Pmt. Discount Date";
              CustLedgerEntry."Applies-to ID" := "Applies-to ID";
              CustLedgerEntry.VALIDATE("Payment Method Code","Payment Method Code");
              CustLedgerEntry.VALIDATE("Remaining Pmt. Disc. Possible","Remaining Pmt. Disc. Possible");
              CustLedgerEntry."Pmt. Disc. Tolerance Date" := "Pmt. Disc. Tolerance Date";
              CustLedgerEntry.VALIDATE("Max. Payment Tolerance","Max. Payment Tolerance");
              CustLedgerEntry.VALIDATE("Accepted Payment Tolerance","Accepted Payment Tolerance");
              CustLedgerEntry.VALIDATE("Accepted Pmt. Disc. Tolerance","Accepted Pmt. Disc. Tolerance");
              CustLedgerEntry.CALCFIELDS("Remaining Amount");
              IF CustLedgerEntry."GST on Advance Payment" AND OnlineApplication AND (NOT ServiceInvoice) AND
                (("Amount to Apply" <> 0)) AND (CustLedgerEntry."Remaining Amount" <> 0) THEN
                IF GSTApplicationManagement.FillGSTApplicationBufferSales(SalesHeader,CustLedgerEntry) THEN BEGIN
                    GSTGroupRemAmount := GSTApplicationManagement.GetApplicationRemainingAmount(
                      TransactionType2::Sales,SalesHeader."Document Type",SalesHeader."No.",
                      CustLedgerEntry."Customer No.",CustLedgerEntry."GST Group Code","Amount to Apply",
                      CustLedgerEntry."Remaining Amount" + CustLedgerEntry."Total TDS/TCS Incl SHE CESS",
                      CustLedgerEntry."Entry No.",TRUE,InvoiceGSTAmount,AppliedGSTAmount,InvoiceBase);
                     IF "Amount to Apply" = 0 THEN
                       "Amount to Apply" := GSTGroupRemAmount;
                     GSTApplicationManagement.CheckGroupAmount(
                       SalesHeader."Document Type",SalesHeader."No.","Amount to Apply",GSTGroupRemAmount,
                       CustLedgerEntry."Remaining Amount",CustLedgerEntry."GST Group Code");
                     GSTApplicationManagement.CheckAppliedAmount(
                      TransactionType2::Sales,CustLedgerEntry."Entry No.",CustLedgerEntry."Customer No.",
                      InvoiceBase + InvoiceGSTAmount,"Amount to Apply",CustLedgerEntry."GST Group Code",TRUE);
                END;
              IF CustLedgerEntry."GST on Advance Payment" AND OnlineApplication AND ServiceInvoice AND
                (("Amount to Apply" <> 0)) AND (CustLedgerEntry."Remaining Amount" <> 0) THEN
                IF GSTApplicationManagement.FillGSTApplicationBufferService(ServiceHeader,CustLedgerEntry) THEN BEGIN
                    GSTGroupRemAmount := GSTApplicationManagement.GetApplicationRemainingAmount(
                      TransactionType2::Sales,ServiceHeader."Document Type",ServiceHeader."No.",
                      CustLedgerEntry."Customer No.",CustLedgerEntry."GST Group Code","Amount to Apply",
                      CustLedgerEntry."Remaining Amount",CustLedgerEntry."Entry No.",TRUE,
                      InvoiceGSTAmount,AppliedGSTAmount,InvoiceBase);
                     IF "Amount to Apply" = 0 THEN
                       "Amount to Apply" := GSTGroupRemAmount;
                     GSTApplicationManagement.CheckGroupAmount(
                       ServiceHeader."Document Type",
                       ServiceHeader."No.","Amount to Apply",GSTGroupRemAmount,CustLedgerEntry."Remaining Amount",
                       CustLedgerEntry."GST Group Code");
                     GSTApplicationManagement.CheckAppliedAmount(
                      TransactionType2::Sales,CustLedgerEntry."Entry No.",CustLedgerEntry."Customer No.",
                      InvoiceBase + InvoiceGSTAmount,"Amount to Apply",CustLedgerEntry."GST Group Code",TRUE);
                END;
                IF IsGSTOnAdvancePayment(CustLedgerEntry) AND (NOT OnlineApplication) AND
                  (ApplyingCustLedgerEntry."Entry No." > 1)  AND ("Amount to Apply" <> 0)THEN BEGIN
                  GSTApplicationManagement.GetSalesInvoiceAmountOffline(
                    CustLedgerEntry,ApplyingCustLedgerEntry,
                    ApplyingCustLedgerEntry."Total TDS/TCS Incl SHE CESS");
                  GSTGroupRemAmount :=
                    GSTApplicationManagement.GetApplicationRemainingAmount(
                      TransactionType2::Sales,ApplyingCustLedgerEntry."Document Type",
                      ApplyingCustLedgerEntry."Document No.",CustLedgerEntry."Customer No.",
                      CustLedgerEntry."GST Group Code","Amount to Apply",
                      CustLedgerEntry."Remaining Amount" + CustLedgerEntry."Total TDS/TCS Incl SHE CESS",
                      CustLedgerEntry."Entry No.",TRUE,
                      InvoiceGSTAmount,AppliedGSTAmount,InvoiceBase);
                   IF "Amount to Apply" = 0 THEN
                      "Amount to Apply" := GSTGroupRemAmount;
                    GSTApplicationManagement.CheckGroupAmount(
                      ApplyingCustLedgerEntry."Document Type",
                      ApplyingCustLedgerEntry."Document No.","Amount to Apply",GSTGroupRemAmount,
                      CustLedgerEntry."Remaining Amount",CustLedgerEntry."GST Group Code");
                   GSTApplicationManagement.CheckAppliedAmount(
                      TransactionType2::Sales,CustLedgerEntry."Entry No.",CustLedgerEntry."Customer No.",
                      InvoiceBase + InvoiceGSTAmount,"Amount to Apply",CustLedgerEntry."GST Group Code",TRUE);
                END;
                ApplyingCustLedgerEntry.CALCFIELDS("Remaining Amount");
                IF IsGSTOnAdvancePayment(ApplyingCustLedgerEntry) THEN BEGIN
                  GSTApplicationManagement.GetSalesInvoiceAmountWithPaymentOffline(
                    CustLedgerEntry,ApplyingCustLedgerEntry,ApplyingCustLedgerEntry."Total TDS/TCS Incl SHE CESS");
                  GSTGroupRemAmount :=
                    GSTApplicationManagement.GetApplicationRemainingAmount(
                      TransactionType2::Sales,CustLedgerEntry."Document Type",
                      CustLedgerEntry."Document No.",ApplyingCustLedgerEntry."Customer No.",
                      ApplyingCustLedgerEntry."GST Group Code","Amount to Apply",ApplyingCustLedgerEntry."Remaining Amount",
                      ApplyingCustLedgerEntry."Entry No.",TRUE,
                      InvoiceGSTAmount,AppliedGSTAmount,InvoiceBase);
                     IF "Amount to Apply" = 0 THEN
                       "Amount to Apply" := GSTGroupRemAmount * -1;
                    GSTApplicationManagement.CheckGroupAmount(
                      CustLedgerEntry."Document Type",
                      CustLedgerEntry."Document No.","Amount to Apply",GSTGroupRemAmount,
                      ApplyingCustLedgerEntry."Remaining Amount",ApplyingCustLedgerEntry."GST Group Code");
                END;
              CheckSalesCreditMemoAppOffline(Rec,ApplyingCustLedgerEntry);
              CustLedgerEntry.VALIDATE("Amount to Apply","Amount to Apply");
              CustLedgerEntry.VALIDATE("Applying Entry","Applying Entry");
              CustLedgerEntry.VALIDATE("Applies-to Ext. Doc. No.","Applies-to Ext. Doc. No.");
              CustLedgerEntry.VALIDATE("Message to Recipient","Message to Recipient");
              CustLedgerEntry."Direct Debit Mandate ID" := "Direct Debit Mandate ID";
            END;
            CustLedgerEntry.VALIDATE("Exported to Payment File","Exported to Payment File");
            CustLedgerEntry.MODIFY;
            Rec := CustLedgerEntry;
          END;

  }
  CODE
  {
    VAR
      CustLedgerEntry@1000 : Record 21;
      DtldCustLedgEntry@1001 : Record 379;
      SalesHeader@1500001 : Record 36;
      ApplyingCustLedgerEntry@1500004 : Record 21;
      ServiceHeader@1500006 : Record 5900;
      GSTApplicationManagement@1500002 : Codeunit 16403;
      OnlineApplication@1500000 : Boolean;
      TransactionType2@1500007 : 'Purchase,Sales,Transfer,Service';
      ServiceInvoice@1500005 : Boolean;

    PROCEDURE SetGSTType@1500000(VAR SalesHeader2@1500002 : Record 36;OnlineApplicationL@1500000 : Boolean);
    BEGIN
      SalesHeader := SalesHeader2;
      OnlineApplication := OnlineApplicationL;
    END;

    PROCEDURE SetGSTTypeDirect@1500001(VAR CustLedgerEntry@1500002 : Record 21;OnlineApplicationL@1500000 : Boolean);
    BEGIN
      ApplyingCustLedgerEntry := CustLedgerEntry;
      OnlineApplication := OnlineApplicationL;
    END;

    LOCAL PROCEDURE IsGSTOnAdvancePayment@1500002(VAR CustLedgerEntry@1500000 : Record 21) : Boolean;
    BEGIN
      WITH CustLedgerEntry DO
        EXIT(
          "GST on Advance Payment" AND ("Document Type" = "Document Type"::Payment) AND
          ("Remaining Amount" <> 0));
    END;

    PROCEDURE SetGSTTypeService@1500003(VAR ServiceHeader2@1500002 : Record 5900;OnlineApplicationL@1500000 : Boolean);
    BEGIN
      ServiceHeader := ServiceHeader2;
      OnlineApplication := OnlineApplicationL;
      ServiceInvoice := TRUE;
    END;

    LOCAL PROCEDURE CheckSalesCreditMemoAppOffline@1500022(CustLedgEntry@1500001 : Record 21;ApplyingCustLedgEntry@1500000 : Record 21);
    VAR
      CustLedgerEntry1@1170000000 : Record 21;
      GSTApplicationManagement@1500002 : Codeunit 16403;
    BEGIN
      CustLedgerEntry1.COPY(CustLedgerEntry);
      CustLedgerEntry1.SETCURRENTKEY("Customer No.","Applies-to ID","Document No.");
      CustLedgerEntry1.SETRANGE("Customer No.",ApplyingCustLedgerEntry."Customer No.");
      CustLedgerEntry1.SETRANGE("Applies-to ID",ApplyingCustLedgerEntry."Applies-to ID");
      CustLedgerEntry1.SETFILTER("Document No.",'<>%1',ApplyingCustLedgerEntry."Document No.");
      IF CustLedgerEntry1.FINDFIRST THEN BEGIN
        IF (ApplyingCustLedgerEntry."Entry No." > 1) AND (CustLedgerEntry."Applies-to ID" <> '') THEN
          IF ((CustLedgerEntry."Document Type" = CustLedgerEntry."Document Type"::"Credit Memo") AND
            (ApplyingCustLedgerEntry."Document Type" = ApplyingCustLedgerEntry."Document Type"::Invoice)) OR
            ((CustLedgerEntry."Document Type" = CustLedgerEntry."Document Type"::Invoice) AND
            (ApplyingCustLedgerEntry."Document Type" = ApplyingCustLedgerEntry."Document Type"::"Credit Memo"))THEN
              GSTApplicationManagement.CheckGSTSalesCrMemoValidationsOffline(CustLedgerEntry,
                ApplyingCustLedgerEntry,CustLedgerEntry1.COUNT);
      END
    END;

    BEGIN
    END.
  }
}

