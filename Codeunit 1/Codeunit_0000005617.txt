OBJECT Codeunit 5617 FA Date Calculation
{
  OBJECT-PROPERTIES
  {
    Date=07-09-12;
    Time=12:00:00 PM;
    Version List=NAVW17.00,NAVIN7.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=is later than %1;ENN=is later than %1';
      Text001@1001 : TextConst 'ENU=It was not possible to find a %1 in %2.;ENN=It was not possible to find a %1 in %2.';
      DeprBook@1002 : Record 5611;

    PROCEDURE GetFiscalYear@1(DeprBookCode@1000 : Code[10];EndingDate@1001 : Date) : Date;
    VAR
      AccountingPeriod@1002 : Record 50;
      AccountingPeriodIncTax@1500000 : Record 16519;
      FAJnlLine@1003 : Record 5621;
    BEGIN
      WITH DeprBook DO BEGIN
        GET(DeprBookCode);
        IF "New Fiscal Year Starting Date" > 0D THEN BEGIN
          IF "New Fiscal Year Starting Date" > EndingDate THEN
            FIELDERROR(
              "New Fiscal Year Starting Date",
              STRSUBSTNO(Text000,FAJnlLine.FIELDCAPTION("FA Posting Date")));
          EXIT("New Fiscal Year Starting Date");
        END;
      END;

      IF DeprBook."FA Book Type" = DeprBook."FA Book Type"::"Income Tax" THEN
        WITH AccountingPeriodIncTax DO BEGIN
          SETRANGE("New Fiscal Year",TRUE);
          SETRANGE("Starting Date",0D,EndingDate);
          IF FINDLAST THEN
            EXIT("Starting Date");

          ERROR(Text001,FIELDCAPTION("Starting Date"),TABLECAPTION);
        END;

      WITH AccountingPeriod DO BEGIN
        SETRANGE("New Fiscal Year",TRUE);
        SETRANGE("Starting Date",0D,EndingDate);
        IF FINDLAST THEN
          EXIT("Starting Date");

        ERROR(Text001,FIELDCAPTION("Starting Date"),TABLECAPTION);
      END;
    END;

    PROCEDURE CalculateDate@2(StartingDate@1000 : Date;NumberOfDays@1001 : Integer;Year365Days@1006 : Boolean) : Date;
    VAR
      Years@1002 : Integer;
      Days@1003 : Integer;
      Months@1004 : Integer;
      LocalDate@1005 : Date;
    BEGIN
      IF NumberOfDays <= 0 THEN
        EXIT(StartingDate);
      IF Year365Days THEN
        EXIT(CalculateDate365(StartingDate,NumberOfDays));
      Years := DATE2DMY(StartingDate,3);
      Months := DATE2DMY(StartingDate,2);
      Days := DATE2DMY(StartingDate,1);
      IF DATE2DMY(StartingDate + 1,1) = 1 THEN
        Days := 30;
      Days := Days + NumberOfDays;
      Months := Months + (Days DIV 30);
      Days := Days MOD 30;
      IF Days = 0 THEN BEGIN
        Days := 30;
        Months := Months - 1;
      END;
      Years := Years + (Months DIV 12);
      Months := Months MOD 12;
      IF Months = 0 THEN BEGIN
        Months := 12;
        Years := Years - 1;
      END;
      IF (Months = 2) AND (Days > 28) THEN BEGIN
        Days := 28;
        LocalDate := DMY2DATE(28,2,Years) + 1;
        IF DATE2DMY(LocalDate,1) = 29 THEN
          Days := 29;
      END;
      CASE Months OF
        1,3,5,7,8,10,12:
          IF Days = 30 THEN
            Days := 31;
      END;
      EXIT(DMY2DATE(Days,Months,Years));
    END;

    LOCAL PROCEDURE CalculateDate365@3(StartingDate@1000 : Date;NumberOfDays@1001 : Integer) : Date;
    VAR
      Calendar@1002 : Record 2000000007;
      NoOfDays@1003 : Integer;
      EndingDate@1005 : Date;
      FirstDate@1004 : Boolean;
    BEGIN
      WITH Calendar DO BEGIN
        SETRANGE("Period Type","Period Type"::Date);
        SETRANGE("Period Start",StartingDate,31129999D);
        NoOfDays := 1;
        FirstDate := TRUE;
        IF FIND('-') THEN
          REPEAT
            IF (NOT ((DATE2DMY("Period Start",1) = 29) AND (DATE2DMY("Period Start",2) = 2))) OR
               FirstDate
            THEN
              NoOfDays := NoOfDays + 1;
            FirstDate := FALSE;
          UNTIL (NEXT = 0) OR (NumberOfDays < NoOfDays);
        EndingDate := "Period Start";
        IF (DATE2DMY(EndingDate,1) = 29) AND (DATE2DMY(EndingDate,2) = 2) THEN
          EndingDate := EndingDate + 1;
        EXIT(EndingDate);
      END;
    END;

    PROCEDURE GetFiscalYearStartDate@1500004(EndingDate@1001 : Date) : Date;
    VAR
      AccountingPeriod@1002 : Record 50;
    BEGIN
      WITH AccountingPeriod DO BEGIN
        SETRANGE("New Fiscal Year",TRUE);
        SETRANGE("Starting Date",0D,EndingDate);
        IF FINDLAST THEN
          EXIT("Starting Date");

        ERROR(Text001,FIELDCAPTION("Starting Date"),TABLECAPTION);
      END;
    END;

    PROCEDURE GetFiscalYearEndDate@1500000(EndingDate@1001 : Date) : Date;
    VAR
      AccountingPeriod@1002 : Record 50;
    BEGIN
      WITH AccountingPeriod DO BEGIN
        SETRANGE("New Fiscal Year",TRUE);
        SETRANGE("Starting Date",0D,EndingDate);
        IF FIND('+') THEN BEGIN
          SETRANGE("Starting Date");
          IF FIND('>') THEN
            EXIT("Starting Date" - 1);
        END;
        ERROR(Text001,FIELDCAPTION("Starting Date"),TABLECAPTION);
      END;
    END;

    PROCEDURE GetDaysInFiscalYear@1500001(EndDate@1500002 : Date) : Integer;
    BEGIN
      EXIT(1 + (GetFiscalYearEndDate(EndDate) - GetFiscalYearStartDate(EndDate)));
    END;

    PROCEDURE CalculateDate2@1500002(StartingDate@1000 : Date;NumberOfMonths@1001 : Decimal) : Date;
    VAR
      Months@1500000 : Integer;
      Days@1500001 : Decimal;
      LocalDate@1005 : Date;
      x@1500002 : Integer;
      DaysInMonth@1500003 : Integer;
    BEGIN
      IF NumberOfMonths <= 0 THEN
        EXIT(StartingDate);

      Months := ROUND(NumberOfMonths,1,'<');
      Days := NumberOfMonths - Months;
      LocalDate := StartingDate;
      FOR x := 1 TO Months DO
        LocalDate := CALCDATE('+1M',LocalDate);
      DaysInMonth := DATE2DMY(CALCDATE('CM',LocalDate),1);
      LocalDate := LocalDate + ROUND(DaysInMonth * Days,1);
      EXIT(LocalDate - 1);
    END;

    PROCEDURE GetFiscalYearStartDateInc@1500005(EndingDate@1001 : Date) : Date;
    VAR
      AccountingPeriod@1002 : Record 16519;
    BEGIN
      WITH AccountingPeriod DO BEGIN
        SETRANGE("New Fiscal Year",TRUE);
        SETRANGE("Starting Date",0D,EndingDate);
        IF FINDLAST THEN
          EXIT("Starting Date");

        ERROR(Text001,FIELDCAPTION("Starting Date"),TABLECAPTION);
      END;
    END;

    PROCEDURE GetFiscalYearEndDateInc@1500003(EndingDate@1001 : Date) : Date;
    VAR
      AccountingPeriod@1002 : Record 16519;
    BEGIN
      WITH AccountingPeriod DO BEGIN
        SETRANGE("New Fiscal Year",TRUE);
        SETRANGE("Starting Date",0D,EndingDate);
        IF FIND('+') THEN BEGIN
          SETRANGE("Starting Date");
          IF FIND('>') THEN
            EXIT("Starting Date" - 1);
        END;
        ERROR(Text001,FIELDCAPTION("Starting Date"),TABLECAPTION);
      END;
    END;

    PROCEDURE GetDaysInFiscalYearInc@1500006(EndDate@1500002 : Date) : Integer;
    BEGIN
      EXIT(1 + (GetFiscalYearEndDateInc(EndDate) - GetFiscalYearStartDateInc(EndDate)));
    END;

    BEGIN
    END.
  }
}

