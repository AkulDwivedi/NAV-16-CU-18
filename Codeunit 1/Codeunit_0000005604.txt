OBJECT Codeunit 5604 Make FA Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=03-08-16;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.46621,NAVIN9.00.00.46621;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      FAShiftLineNo@1500002 : Integer;

    PROCEDURE CopyFromFAJnlLine@1(VAR FALedgEntry@1000 : Record 5601;VAR FAJnlLine@1001 : Record 5621);
    BEGIN
      WITH FALedgEntry DO BEGIN
        INIT;
        "User ID" := USERID;
        "Entry No." := FAJnlLine."FA Error Entry No.";
        "G/L Entry No." := 0;
        "Depreciation Book Code" := FAJnlLine."Depreciation Book Code";
        "FA No." := FAJnlLine."FA No.";
        "FA Posting Date" := FAJnlLine."FA Posting Date";
        "Posting Date" := FAJnlLine."Posting Date";
        "Document Date" := FAJnlLine."Document Date";
        IF "Document Date" = 0D THEN
          "Document Date" := "Posting Date";
        "Document Type" := FAJnlLine."Document Type";
        "Document No." := FAJnlLine."Document No.";
        "External Document No." := FAJnlLine."External Document No.";
        Description := FAJnlLine.Description;
        Amount := FAJnlLine.Amount;
        Quantity := FAJnlLine.Quantity;
        Correction := FAJnlLine.Correction;
        "Reclassification Entry" := FAJnlLine."FA Reclassification Entry";
        "Index Entry" := FAJnlLine."Index Entry";
        "No. of Depreciation Days" := FAJnlLine."No. of Depreciation Days";
        "FA Posting Group" := FAJnlLine."FA Posting Group";
        "Global Dimension 1 Code" := FAJnlLine."Shortcut Dimension 1 Code";
        "Global Dimension 2 Code" := FAJnlLine."Shortcut Dimension 2 Code";
        "Dimension Set ID" := FAJnlLine."Dimension Set ID";
        "Reason Code" := FAJnlLine."Reason Code";
        "Source Code" := FAJnlLine."Source Code";
        "Journal Batch Name" := FAJnlLine."Journal Batch Name";
        "FA Posting Type" := FAJnlLine.ConvertToLedgEntry(FAJnlLine);
        "No. Series" := FAJnlLine."Posting No. Series";
        "Shift Type" := FAJnlLine."Shift Type";
        "Industry Type" := FAJnlLine."Industry Type";
        "No. of Days for Shift" := FAJnlLine."No. of Days for Shift";
        "Shift Entry" := FAJnlLine."FA Shift Line No." <> 0
      END;
    END;

    PROCEDURE CopyFromGenJnlLine@2(VAR FALedgEntry@1000 : Record 5601;VAR GenJnlLine@1001 : Record 81);
    VAR
      FAJnlLine@1002 : Record 5621;
    BEGIN
      WITH FALedgEntry DO BEGIN
        INIT;
        "User ID" := USERID;
        "Entry No." := GenJnlLine."FA Error Entry No.";
        "G/L Entry No." := 1;
        "Depreciation Book Code" := GenJnlLine."Depreciation Book Code";
        "FA No." := GenJnlLine."Account No.";
        "FA Posting Date" := GenJnlLine."FA Posting Date";
        "Posting Date" := GenJnlLine."Posting Date";
        "Document Date" := GenJnlLine."Document Date";
        IF "Document Date" = 0D THEN
          "Document Date" := "Posting Date";
        "Document Type" := GenJnlLine."Document Type";
        "Document No." := GenJnlLine."Document No.";
        "External Document No." := GenJnlLine."External Document No.";
        Description := GenJnlLine.Description;
        Quantity := GenJnlLine.Quantity;
        Correction := GenJnlLine.Correction;
        "Index Entry" := GenJnlLine."Index Entry";
        "Reclassification Entry" := GenJnlLine."FA Reclassification Entry";
        "No. of Depreciation Days" := GenJnlLine."No. of Depreciation Days";
        "FA Posting Group" := GenJnlLine."Posting Group";
        "Global Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
        "Global Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";
        "Dimension Set ID" := GenJnlLine."Dimension Set ID";
        "Reason Code" := GenJnlLine."Reason Code";
        "Source Code" := GenJnlLine."Source Code";
        "Journal Batch Name" := GenJnlLine."Journal Batch Name";
        "Bal. Account Type" := GenJnlLine."Bal. Account Type";
        "Bal. Account No." := GenJnlLine."Bal. Account No.";
        "Gen. Posting Type" := GenJnlLine."Gen. Posting Type";
        "Gen. Bus. Posting Group" := GenJnlLine."Gen. Bus. Posting Group";
        "Gen. Prod. Posting Group" := GenJnlLine."Gen. Prod. Posting Group";
        "VAT Bus. Posting Group" := GenJnlLine."VAT Bus. Posting Group";
        "VAT Prod. Posting Group" := GenJnlLine."VAT Prod. Posting Group";
        "Tax Area Code" := GenJnlLine."Tax Area Code";
        "Tax Liable" := GenJnlLine."Tax Liable";
        "Tax Group Code" := GenJnlLine."Tax Group Code";
        "Use Tax" := GenJnlLine."Use Tax";
        "No. Series" := GenJnlLine."Posting No. Series";
        FAJnlLine."FA Posting Type" := GenJnlLine."FA Posting Type" - 1;
        "FA Posting Type" := FAJnlLine.ConvertToLedgEntry(FAJnlLine);
        CWIP := GenJnlLine.CWIP;
        "Shift Type" := GenJnlLine."Shift Type";
        "Industry Type" := GenJnlLine."Industry Type";
        "No. of Days for Shift" := GenJnlLine."No. of Days for Shift";
        "Shift Entry" := GenJnlLine."FA Shift Line No." <> 0
      END;
    END;

    PROCEDURE CopyFromFACard@3(VAR FALedgEntry@1000 : Record 5601;VAR FA@1001 : Record 5600;VAR FADeprBook@1002 : Record 5612);
    VAR
      FABlock@1500005 : Record 16518;
      DeprBook@1500004 : Record 5611;
      FAShift@1500001 : Record 16520;
      CalcNormalDepr@1500000 : Codeunit 5611;
      DeprCalculation@1500006 : Codeunit 5616;
      AddDeprAmt@1500002 : ARRAY [2] OF Decimal;
      AddDeprPct@1500003 : Decimal;
    BEGIN
      WITH FALedgEntry DO BEGIN
        "FA Class Code" := FA."FA Class Code";
        "FA Subclass Code" := FA."FA Subclass Code";
        "FA Location Code" := FA."FA Location Code";
        "Location Code" := FA."Location Code";
        IF FAShiftLineNo <> 0 THEN
          FAShift.GET(FA."No.",FADeprBook."Depreciation Book Code",FAShiftLineNo);
        IF FAShiftLineNo = 0 THEN BEGIN
          "FA Exchange Rate" := FADeprBook.GetExchangeRate;
          "Depreciation Method" := FADeprBook."Depreciation Method";
          "Depreciation Starting Date" := FADeprBook."Depreciation Starting Date";
        END ELSE BEGIN
          "FA Exchange Rate" := FAShift.GetExchangeRate;
          "Depreciation Method" := FAShift."Depreciation Method";
          "Depreciation Starting Date" := FAShift."Depreciation Starting Date";
        END;

        IF FADeprBook."FA Book Type" = FADeprBook."FA Book Type"::"Income Tax" THEN BEGIN
          CalcNormalDepr.CheckFiscalYearForIncTax("FA Posting Date");
          DeprBook.GET("Depreciation Book Code");
          FA.TESTFIELD("FA Block Code");
          FABlock.GET("FA Class Code",FA."FA Block Code");
          IF "Depreciation Method" IN ["Depreciation Method"::"Straight-Line","Depreciation Method"::"DB1/SL",
                                      "Depreciation Method"::"DB2/SL"]
          THEN
            AddDeprAmt[1] := FABlock."Add. Depreciation %";
          IF "Depreciation Method" IN ["Depreciation Method"::"Declining-Balance 1","Depreciation Method"::"Declining-Balance 2",
                                      "Depreciation Method"::"DB1/SL","Depreciation Method"::"DB2/SL"]
          THEN
            AddDeprAmt[2] := FABlock."Add. Depreciation %";
          IF ("FA Posting Type" = "FA Posting Type"::Depreciation) AND ("Depreciation Starting Date" <> 0D) THEN BEGIN
            "Add. Depreciation" :=
               CalcNormalDepr.CheckAddedDeprApplicable(FADeprBook,"FA Posting Date",FA."Add. Depr. Applicable") AND
               ("FA Posting Category" = "FA Posting Category"::" ") AND
               (FABlock."Add. Depreciation %" <> 0);

            IF "Add. Depreciation" THEN BEGIN
              "Add. Depreciation Amount" := Amount * FABlock."Add. Depreciation %" /
                (FABlock."Depreciation %" + FABlock."Add. Depreciation %");
              IF DeprBook."Use Rounding in Periodic Depr." THEN
                "Add. Depreciation Amount" := DeprCalculation.CalcRounding("Depreciation Book Code","Add. Depreciation Amount");
            END ELSE BEGIN
              AddDeprAmt[1] := 0;
              AddDeprAmt[2] := 0;
            END;
            IF FA."Add. Depr. Applicable" THEN
              IF CalcAddDeprSecondYear(
                "Add. Depreciation Amount",AddDeprPct,FA."No.","Depreciation Book Code",DeprBook."Depr. Threshold Days")
              THEN
                "Add. Depreciation" := TRUE;

            "Depr. Reduction Applied" :=
               CalcNormalDepr.CheckDeprRedApllicable(FADeprBook,DeprBook."Depr. Threshold Days","FA Posting Date");
          END;
        END;

        IF FAShiftLineNo = 0 THEN BEGIN
          "Depreciation Ending Date" := FADeprBook."Depreciation Ending Date";
          "Straight-Line %" := FADeprBook."Straight-Line %" + AddDeprAmt[1];
          IF "Depr. Reduction Applied" THEN
            "Straight-Line %" -= ("Straight-Line %" * DeprBook."Depr. Reduction %"/100);
          "No. of Depreciation Years" := FADeprBook."No. of Depreciation Years";
          "Fixed Depr. Amount" := FADeprBook."Fixed Depr. Amount";
          "Declining-Balance %" := FADeprBook."Declining-Balance %" + AddDeprAmt[2];
          IF "Depr. Reduction Applied" THEN
            "Declining-Balance %" -= ("Declining-Balance %" * DeprBook."Depr. Reduction %"/100);
          "Depreciation Table Code" := FADeprBook."Depreciation Table Code";
          "Use FA Ledger Check" := FADeprBook."Use FA Ledger Check";
          "Depr. Starting Date (Custom 1)" := FADeprBook."Depr. Starting Date (Custom 1)";
          "Depr. Ending Date (Custom 1)" := FADeprBook."Depr. Ending Date (Custom 1)";
          "Accum. Depr. % (Custom 1)" := FADeprBook."Accum. Depr. % (Custom 1)";
          "Depr. % this year (Custom 1)" := FADeprBook."Depr. This Year % (Custom 1)";
          "Property Class (Custom 1)" := FADeprBook."Property Class (Custom 1)";
        END ELSE BEGIN
          "Depreciation Ending Date" := FAShift."Depreciation Ending Date";
          "Straight-Line %" := FAShift."Straight-Line %";
          "No. of Depreciation Years" := FAShift."No. of Depreciation Years";
          "Fixed Depr. Amount" := FAShift."Fixed Depr. Amount";
          "Declining-Balance %" := FAShift."Declining-Balance %";
          "Depreciation Table Code" := FAShift."Depreciation Table Code";
          "Use FA Ledger Check" := FAShift."Use FA Ledger Check";
          "Depr. Starting Date (Custom 1)" := FAShift."Depr. Starting Date (Custom 1)";
          "Depr. Ending Date (Custom 1)" := FAShift."Depr. Ending Date (Custom 1)";
          "Accum. Depr. % (Custom 1)" := FAShift."Accum. Depr. % (Custom 1)";
          "Depr. % this year (Custom 1)" := FAShift."Depr. This Year % (Custom 1)";
          "Property Class (Custom 1)" := FAShift."Property Class (Custom 1)";
        END;
        IF "Add. Depreciation" THEN
          CalcAddDeprPercentage(FALedgEntry,AddDeprPct,FA."No.","Depreciation Book Code");
      END;
    END;

    PROCEDURE SetFAShiftLineNo@1500001(LineNo@1500000 : Integer);
    BEGIN
      FAShiftLineNo := LineNo;
    END;

    PROCEDURE CalcAddDeprSecondYear@1500002(VAR AddDeprAmount@1500005 : Decimal;VAR AddDeprPct@1500006 : Decimal;FANumber@1500001 : Code[20];DeprBookCode2@1500000 : Code[10];DeprBookThresholdDays@1500002 : Integer) : Boolean;
    VAR
      FALedgerEntry@1500003 : Record 5601;
      FADateCalculation@1500009 : Codeunit 5617;
      Count@1500004 : Integer;
      AcquisitionCost@1500007 : Decimal;
      AcquisitionFiscalEndDate@1500008 : Date;
    BEGIN
      FALedgerEntry.SETRANGE("FA No.",FANumber);
      FALedgerEntry.SETRANGE("Depreciation Book Code",DeprBookCode2);
      FALedgerEntry.SETRANGE("FA Posting Type",FALedgerEntry."FA Posting Type"::"Acquisition Cost");
      IF FALedgerEntry.FINDFIRST THEN
        AcquisitionCost := FALedgerEntry.Amount;

      AcquisitionFiscalEndDate := FADateCalculation.GetFiscalYearEndDateInc(FALedgerEntry."Posting Date");
      FALedgerEntry.SETRANGE("FA Posting Type",FALedgerEntry."FA Posting Type"::Depreciation);
      IF NOT FALedgerEntry.FINDFIRST THEN
        EXIT(FALSE);
      Count := FALedgerEntry.COUNT;

      IF FALedgerEntry."Posting Date" <= AcquisitionFiscalEndDate THEN BEGIN
        IF (Count = 1) AND (FALedgerEntry."Add. Depreciation Amount" <> 0) AND
           (FALedgerEntry."No. of Depreciation Days" <= DeprBookThresholdDays)
        THEN BEGIN
          AddDeprAmount += FALedgerEntry."Add. Depreciation Amount";
          AddDeprPct := ABS((AddDeprAmount/AcquisitionCost) * 100);
          EXIT(TRUE);
        END;
        EXIT(FALSE);
      END;
      EXIT (FALSE);
    END;

    LOCAL PROCEDURE CalcAddDeprPercentage@1500003(VAR FALedgerEntry@1500002 : Record 5601;AddDeprPct@1500006 : Decimal;FANumber@1500001 : Code[20];DeprBkCode@1500000 : Code[10]);
    VAR
      FixedAssetLedgerEntry@1500003 : Record 5601;
      DeprBaseAmount@1500004 : Decimal;
    BEGIN
      FixedAssetLedgerEntry.SETRANGE("FA No.",FANumber);
      FixedAssetLedgerEntry.SETRANGE("Depreciation Book Code",DeprBkCode);
      FixedAssetLedgerEntry.SETRANGE("FA Posting Type",FixedAssetLedgerEntry."FA Posting Type"::Depreciation);
      IF FixedAssetLedgerEntry.ISEMPTY THEN
        EXIT;

      IF FALedgerEntry."Straight-Line %" <> 0 THEN
        FALedgerEntry."Straight-Line %" += AddDeprPct
      ELSE
        IF FALedgerEntry."Declining-Balance %" <> 0 THEN BEGIN
          FixedAssetLedgerEntry.SETRANGE("FA Posting Type");
          IF FixedAssetLedgerEntry.FINDSET THEN
            REPEAT
              DeprBaseAmount += FixedAssetLedgerEntry.Amount;
            UNTIL FixedAssetLedgerEntry.NEXT = 0;

          FALedgerEntry."Declining-Balance %" := ABS((FALedgerEntry.Amount / DeprBaseAmount) * 100);
        END;
    END;

    BEGIN
    END.
  }
}

