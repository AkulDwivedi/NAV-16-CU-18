OBJECT Codeunit 131009 Library - Setup Storage
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      TempIntegerStoredTables@1001 : TEMPORARY Record 2000000026;
      Assert@1004 : Codeunit 130000;
      TableBackupErr@1002 : TextConst '@@@="%1 = Table Caption";ENU=Table %1 already added to backup';
      OnlyOneEntryAllowedErr@1006 : TextConst 'ENU=Setup table with only one entry is allowed';
      CompositePrimaryKeyErr@1003 : TextConst 'ENU=Composite primary key is not allowed';
      RecordRefStorage@1000 : ARRAY [100] OF RecordRef;

    PROCEDURE Save@2(TableId@1000 : Integer);
    VAR
      RecRef@1001 : RecordRef;
    BEGIN
      IF TempIntegerStoredTables.GET(TableId) THEN
        ERROR(STRSUBSTNO(TableBackupErr,TableId));

      RecRef.OPEN(TableId);
      Assert.AreEqual(1,RecRef.COUNT,OnlyOneEntryAllowedErr);
      RecRef.FIND;
      ValidatePrimaryKey(RecRef);

      TempIntegerStoredTables.Number := TableId;
      TempIntegerStoredTables.INSERT(TRUE);
      RecordRefStorage[TempIntegerStoredTables.COUNT] := RecRef;
    END;

    PROCEDURE Restore@3();
    VAR
      RecordRefSource@1000 : RecordRef;
      RecordRefDestination@1001 : RecordRef;
      Index@1002 : Integer;
    BEGIN
      Index := TempIntegerStoredTables.COUNT;
      WHILE Index > 0 DO BEGIN
        RecordRefSource := RecordRefStorage[Index];
        RecordRefDestination.OPEN(RecordRefSource.NUMBER);
        CopyFields(RecordRefSource,RecordRefDestination);
        RecordRefDestination.MODIFY;
        RecordRefDestination.CLOSE;
        Index -= 1;
      END;
    END;

    LOCAL PROCEDURE ValidatePrimaryKey@4(VAR RecRef@1001 : RecordRef);
    VAR
      KeyRef@1000 : KeyRef;
    BEGIN
      KeyRef := RecRef.KEYINDEX(1);
      Assert.AreEqual(1,KeyRef.FIELDCOUNT,CompositePrimaryKeyErr);
    END;

    LOCAL PROCEDURE CopyFields@23(RecordRefSource@1000 : RecordRef;VAR RecordRefDestination@1001 : RecordRef);
    VAR
      SourceFieldRef@1003 : FieldRef;
      DestinationFieldRef@1004 : FieldRef;
      i@1002 : Integer;
    BEGIN
      FOR i := 1 TO RecordRefSource.FIELDCOUNT DO BEGIN
        SourceFieldRef := RecordRefSource.FIELDINDEX(i);
        IF FORMAT(SourceFieldRef.CLASS) = 'Normal' THEN BEGIN
          DestinationFieldRef := RecordRefDestination.FIELDINDEX(i);
          DestinationFieldRef.VALUE(SourceFieldRef.VALUE)
        END;
      END
    END;

    BEGIN
    END.
  }
}

