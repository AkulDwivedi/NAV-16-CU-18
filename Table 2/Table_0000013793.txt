OBJECT Table 13793 Structure Details
{
  OBJECT-PROPERTIES
  {
    Date=23-02-17;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.48067;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               StructureDetails.RESET;
               StructureDetails.SETRANGE(Code,Code);
               IF StructureDetails.FIND('+') THEN
                 "Calculation Order" := StructureDetails."Calculation Order" + 1
               ELSE
                 "Calculation Order" := 1;
             END;

    CaptionML=[ENU=Structure Details;
               ENN=Structure Details];
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ENN=Code] }
    { 2   ;   ;Calculation Order   ;Integer       ;CaptionML=[ENU=Calculation Order;
                                                              ENN=Calculation Order];
                                                   MinValue=1;
                                                   MaxValue=100;
                                                   Editable=No }
    { 3   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                CASE Type OF
                                                                  Type::"Sales Tax":
                                                                    BEGIN
                                                                      CheckGST;
                                                                      "Header/Line" := "Header/Line"::Line;
                                                                      "Tax/Charge Code" := Text001;
                                                                      IF "Tax/Charge Group" <> '' THEN
                                                                        ERROR(Text005);
                                                                    END;
                                                                  Type::Excise:
                                                                    BEGIN
                                                                      CheckGST;
                                                                      "Header/Line" := "Header/Line"::Line;
                                                                      "Tax/Charge Code" := Text002;
                                                                      IF "Tax/Charge Group" <> '' THEN
                                                                        ERROR(Text005);
                                                                    END;
                                                                  Type::Charges:
                                                                    BEGIN
                                                                      "Charge Basis" := "Charge Basis"::Amount;
                                                                      "Tax/Charge Code" := '';
                                                                    END;
                                                                  Type::"Service Tax":
                                                                    BEGIN
                                                                      CheckGST;
                                                                      "Header/Line" := "Header/Line"::Line;
                                                                      "Tax/Charge Code" := Text004;
                                                                      IF "Tax/Charge Group" <> '' THEN
                                                                        ERROR(Text005);
                                                                    END;
                                                                  Type::GST:
                                                                    BEGIN
                                                                      CheckExciseServiceSalesTax;
                                                                      "Header/Line" := "Header/Line"::Line;
                                                                      "Tax/Charge Code" := GSTTxt;
                                                                      IF "Tax/Charge Group" <> '' THEN
                                                                        ERROR(Text005);
                                                                    END;
                                                                  ELSE
                                                                    "Charge Basis" := "Charge Basis"::" ";
                                                                    "Tax/Charge Code" := '';
                                                                END;

                                                                "Include in TDS Base" := FALSE;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ENN=Type];
                                                   OptionCaptionML=[ENU=Charges,Sales Tax,Excise,Other Taxes,Service Tax,GST;
                                                                    ENN=Charges,Sales Tax,Excise,Other Taxes,Service Tax,GST];
                                                   OptionString=Charges,Sales Tax,Excise,Other Taxes,Service Tax,GST }
    { 4   ;   ;Tax/Charge Group    ;Code10        ;TableRelation=IF (Type=CONST(Charges)) "Tax/Charge Group".Code WHERE (Other Tax=CONST(No))
                                                                 ELSE IF (Type=CONST(Other Taxes)) "Tax/Charge Group".Code WHERE (Other Tax=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                CASE Type OF
                                                                  Type::"Sales Tax":
                                                                    BEGIN
                                                                      CheckGST;
                                                                      "Header/Line" := "Header/Line"::Line;
                                                                      "Tax/Charge Code" := Text001;
                                                                      IF "Tax/Charge Group" <> '' THEN
                                                                        ERROR(Text005);
                                                                    END;
                                                                  Type::Excise:
                                                                    BEGIN
                                                                      CheckGST;
                                                                      "Header/Line" := "Header/Line"::Line;
                                                                      "Tax/Charge Code" := Text002;
                                                                      IF "Tax/Charge Group" <> '' THEN
                                                                        ERROR(Text005);
                                                                    END;
                                                                  Type::"Service Tax":
                                                                    BEGIN
                                                                      CheckGST;
                                                                      "Header/Line" := "Header/Line"::Line;
                                                                      "Tax/Charge Code" := Text004;
                                                                      IF "Tax/Charge Group" <> '' THEN
                                                                        ERROR(Text005);
                                                                    END;
                                                                  Type::GST:
                                                                    BEGIN
                                                                      CheckExciseServiceSalesTax;
                                                                      "Header/Line" := "Header/Line"::Line;
                                                                      "Tax/Charge Code" := GSTTxt;
                                                                      IF "Tax/Charge Group" <> '' THEN
                                                                        ERROR(Text005);
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Tax/Charge Group;
                                                              ENN=Tax/Charge Group] }
    { 5   ;   ;Tax/Charge Code     ;Code10        ;TableRelation=IF (Type=FILTER(Charges|Other Taxes)) "Tax/Charge Group Details"."Tax/Charge Code" WHERE (Tax/Charge Group=FIELD(Tax/Charge Group));
                                                   OnValidate=BEGIN
                                                                CASE Type OF
                                                                  Type::"Sales Tax":
                                                                    BEGIN
                                                                      CheckGST;
                                                                      "Header/Line" := "Header/Line"::Line;
                                                                      "Tax/Charge Code" := Text001;
                                                                      IF "Tax/Charge Group" <> '' THEN
                                                                        ERROR(Text005);
                                                                    END;
                                                                  Type::Excise:
                                                                    BEGIN
                                                                      CheckGST;
                                                                      "Header/Line" := "Header/Line"::Line;
                                                                      "Tax/Charge Code" := Text002;
                                                                      IF "Tax/Charge Group" <> '' THEN
                                                                        ERROR(Text005);
                                                                    END;
                                                                  Type::"Service Tax":
                                                                    BEGIN
                                                                      CheckGST;
                                                                      "Header/Line" := "Header/Line"::Line;
                                                                      "Tax/Charge Code" := Text004;
                                                                      IF "Tax/Charge Group" <> '' THEN
                                                                        ERROR(Text005);
                                                                    END;
                                                                  Type::GST:
                                                                    BEGIN
                                                                      CheckExciseServiceSalesTax;
                                                                      "Header/Line" := "Header/Line"::Line;
                                                                      "Tax/Charge Code" := GSTTxt;
                                                                      IF "Tax/Charge Group" <> '' THEN
                                                                        ERROR(Text005);
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Tax/Charge Code;
                                                              ENN=Tax/Charge Code] }
    { 6   ;   ;Calculation Type    ;Option        ;OnValidate=BEGIN
                                                                IF "Calculation Type" = "Calculation Type"::"Amount Per Qty" THEN
                                                                  "Quantity Per" := 1
                                                                ELSE
                                                                  "Quantity Per" := 0;
                                                              END;

                                                   CaptionML=[ENU=Calculation Type;
                                                              ENN=Calculation Type];
                                                   OptionCaptionML=[ENU=" ,Percentage,Amount Per Qty,Fixed Value";
                                                                    ENN=" ,Percentage,Amount Per Qty,Fixed Value"];
                                                   OptionString=[ ,Percentage,Amount Per Qty,Fixed Value] }
    { 7   ;   ;Calculation Value   ;Decimal       ;CaptionML=[ENU=Calculation Value;
                                                              ENN=Calculation Value];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 8   ;   ;Quantity Per        ;Decimal       ;CaptionML=[ENU=Quantity Per;
                                                              ENN=Quantity Per];
                                                   BlankZero=Yes }
    { 9   ;   ;Loading on Inventory;Boolean       ;OnValidate=BEGIN
                                                                IF (Type = Type::Excise) OR (Type = Type::GST) THEN
                                                                  TESTFIELD("Loading on Inventory",FALSE);
                                                                IF "Loading on Inventory" THEN
                                                                  "% Loading on Inventory" := 100
                                                                ELSE
                                                                  "% Loading on Inventory" := 0;
                                                              END;

                                                   CaptionML=[ENU=Loading on Inventory;
                                                              ENN=Loading on Inventory] }
    { 10  ;   ;% Loading on Inventory;Decimal     ;CaptionML=[ENU=% Loading on Inventory;
                                                              ENN=% Loading on Inventory];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 11  ;   ;Payable to Third Party;Boolean     ;OnValidate=BEGIN
                                                                IF Type IN [Type::Excise,Type::"Sales Tax",Type::"Service Tax",Type::GST] THEN
                                                                  TESTFIELD("Payable to Third Party",FALSE);
                                                              END;

                                                   CaptionML=[ENU=Payable to Third Party;
                                                              ENN=Payable to Third Party] }
    { 12  ;   ;Account No.         ;Code20        ;TableRelation=IF (Type=FILTER(Charges|Other Taxes)) "G/L Account";
                                                   CaptionML=[ENU=Account No.;
                                                              ENN=Account No.] }
    { 13  ;   ;Base Formula        ;Text80        ;CaptionML=[ENU=Base Formula;
                                                              ENN=Base Formula] }
    { 14  ;   ;Include Base        ;Boolean       ;CaptionML=[ENU=Include Base;
                                                              ENN=Include Base] }
    { 15  ;   ;Include Line Discount;Boolean      ;CaptionML=[ENU=Include Line Discount;
                                                              ENN=Include Line Discount] }
    { 16  ;   ;Include Invoice Discount;Boolean   ;CaptionML=[ENU=Include Invoice Discount;
                                                              ENN=Include Invoice Discount] }
    { 17  ;   ;Charge Basis        ;Option        ;CaptionML=[ENU=Charge Basis;
                                                              ENN=Charge Basis];
                                                   OptionCaptionML=[ENU=" ,Equally,Amount";
                                                                    ENN=" ,Equally,Amount"];
                                                   OptionString=[ ,Equally,Amount] }
    { 18  ;   ;Header/Line         ;Option        ;CaptionML=[ENU=Header/Line;
                                                              ENN=Header/Line];
                                                   OptionCaptionML=[ENU=Header,Line;
                                                                    ENN=Header,Line];
                                                   OptionString=Header,Line }
    { 24  ;   ;Available for VAT Input;Boolean    ;CaptionML=[ENU=Available for VAT Input;
                                                              ENN=Available for VAT Input] }
    { 25  ;   ;CVD                 ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT CVD THEN BEGIN
                                                                  "CVD Payable to Third Party" := FALSE;
                                                                  "CVD Third Party Code" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=CVD;
                                                              ENN=CVD] }
    { 26  ;   ;CVD Payable to Third Party;Boolean ;OnValidate=BEGIN
                                                                TESTFIELD(CVD,TRUE);
                                                                IF Type <> Type::Excise THEN
                                                                  TESTFIELD("CVD Payable to Third Party",FALSE);
                                                                IF NOT ((Type = Type::Excise) AND CVD)
                                                                THEN
                                                                  TESTFIELD("Payable to Third Party",FALSE);
                                                                IF NOT "CVD Payable to Third Party" THEN
                                                                  "CVD Third Party Code" := '';
                                                              END;

                                                   CaptionML=[ENU=CVD Payable to Third Party;
                                                              ENN=CVD Payable to Third Party] }
    { 27  ;   ;CVD Third Party Code;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                TESTFIELD("CVD Payable to Third Party",TRUE);
                                                              END;

                                                   CaptionML=[ENU=CVD Third Party Code;
                                                              ENN=CVD Third Party Code] }
    { 28  ;   ;Include PIT Calculation;Boolean    ;OnValidate=BEGIN
                                                                UpdateInlcPITCalc;
                                                              END;

                                                   CaptionML=[ENU=Include PIT Calculation;
                                                              ENN=Include PIT Calculation] }
    { 29  ;   ;Include in TDS Base ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Type,Type::"Service Tax");
                                                              END;

                                                   CaptionML=[ENU=Include in TDS Base;
                                                              ENN=Include in TDS Base] }
    { 30  ;   ;Inc. GST in TDS Base;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Type,Type::GST);
                                                              END;

                                                   CaptionML=[ENU=Inc. GST in TDS Base;
                                                              ENN=Inc. GST in TDS Base] }
  }
  KEYS
  {
    {    ;Code,Calculation Order,Type,Tax/Charge Group,Tax/Charge Code;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      StructureDetails@1280000 : Record 13793;
      Text001@1000 : TextConst 'ENU=Sales Tax;ENN=Sales Tax';
      Text002@1001 : TextConst 'ENU=Excise;ENN=Excise';
      Text004@1003 : TextConst 'ENU=ServiceTax;ENN=ServiceTax';
      Text005@1500000 : TextConst 'ENU=Please do not enter Tax/Charge Group code where type is Sales Tax, Excise or Service Tax.;ENN=Please do not enter Tax/Charge Group code where type is Sales Tax, Excise or Service Tax.';
      GSTTxt@1500001 : TextConst 'ENU=GST;ENN=GST';
      TaxTypeErr@1500002 : TextConst 'ENU=GST and Other taxes (Service Tax/Excise/Sales Tax) cannot be clubbed in same structure.;ENN=GST and Other taxes (Service Tax/Excise/Sales Tax) cannot be clubbed in same structure.';

    PROCEDURE UpdateInlcPITCalc@1500000();
    VAR
      InclPITCalc@1500001 : Boolean;
    BEGIN
      InclPITCalc := "Include PIT Calculation";
      LOCKTABLE;
      StructureDetails.LOCKTABLE;
      StructureDetails.RESET;
      StructureDetails.SETRANGE(Code,Code);
      StructureDetails := Rec;
      IF InclPITCalc THEN BEGIN
        IF StructureDetails.NEXT(-1) = 0 THEN
          EXIT
          ;
        REPEAT
          StructureDetails."Include PIT Calculation" := InclPITCalc;
          StructureDetails.MODIFY;
        UNTIL StructureDetails.NEXT(-1) = 0;
      END ELSE BEGIN
        IF StructureDetails.NEXT = 0 THEN
          EXIT
          ;
        REPEAT
          StructureDetails."Include PIT Calculation" := InclPITCalc;
          StructureDetails.MODIFY;
        UNTIL StructureDetails.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CheckGST@1500001();
    VAR
      GSTManagement@1500001 : Codeunit 16401;
    BEGIN
      IF GSTManagement.CheckGSTStrucure(Code) THEN
        ERROR(TaxTypeErr);
    END;

    LOCAL PROCEDURE CheckExciseServiceSalesTax@1500004();
    VAR
      StructureDetails@1500000 : Record 13793;
    BEGIN
      StructureDetails.SETRANGE(Code,Code);
      StructureDetails.SETFILTER(Type,'%1|%2|%3',StructureDetails.Type::Excise,StructureDetails.Type::"Sales Tax",
        StructureDetails.Type::"Service Tax");
      IF StructureDetails.FINDFIRST THEN
        ERROR(TaxTypeErr);
    END;

    BEGIN
    END.
  }
}

