OBJECT Table 16552 Gate Entry Header
{
  OBJECT-PROPERTIES
  {
    Date=24-04-16;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.45778;
  }
  PROPERTIES
  {
    DataCaptionFields=No.;
    OnInsert=BEGIN
               "Document Date" := WORKDATE;
               "Document Time" := TIME;
               "Posting Date" := WORKDATE;
               "Posting Time" := TIME;
               "User ID" := USERID;
               InventSetup.GET;

               CASE "Entry Type" OF
                 "Entry Type"::Inward:
                   IF "No." = '' THEN BEGIN
                     InventSetup.TESTFIELD("Inward Gate Entry Nos.");
                     NoSeriesMgt.InitSeries(InventSetup."Inward Gate Entry Nos.",xRec."No. Series","Posting Date","No.","No. Series");
                   END;
                 "Entry Type"::Outward:
                   IF "No." = '' THEN BEGIN
                     InventSetup.TESTFIELD("Outward Gate Entry Nos.");
                     NoSeriesMgt.InitSeries(InventSetup."Outward Gate Entry Nos.",xRec."No. Series","Posting Date","No.","No. Series");
                   END;
               END;
             END;

    OnDelete=BEGIN
               GateEntryLine.RESET;
               GateEntryLine.SETRANGE("Entry Type","Entry Type");
               GateEntryLine.SETRANGE("Gate Entry No.","No.");
               GateEntryLine.DELETEALL;

               GateEntryCommentLine.SETRANGE("Gate Entry Type","Entry Type");
               GateEntryCommentLine.SETRANGE("No.","No.");
               GateEntryCommentLine.DELETEALL;
             END;

    CaptionML=[ENU=Gate Entry Header;
               ENN=Gate Entry Header];
    LookupPageID=Page16592;
  }
  FIELDS
  {
    { 1   ;   ;Entry Type          ;Option        ;CaptionML=[ENU=Entry Type;
                                                              ENN=Entry Type];
                                                   OptionCaptionML=[ENU=Inward,Outward;
                                                                    ENN=Inward,Outward];
                                                   OptionString=Inward,Outward }
    { 2   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              ENN=No.] }
    { 3   ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ENN=No. Series] }
    { 4   ;   ;Document Date       ;Date          ;OnValidate=BEGIN
                                                                "Posting Date" := "Document Date";
                                                              END;

                                                   CaptionML=[ENU=Document Date;
                                                              ENN=Document Date] }
    { 5   ;   ;Document Time       ;Time          ;OnValidate=BEGIN
                                                                "Posting Time" := "Document Time";
                                                              END;

                                                   CaptionML=[ENU=Document Time;
                                                              ENN=Document Time] }
    { 7   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   OnValidate=BEGIN
                                                                CASE "Entry Type" OF
                                                                  "Entry Type"::Inward:
                                                                    IF GateEntryLocSetup.GET("Entry Type","Location Code") THEN
                                                                      IF ("No. Series" <> '') AND (InventSetup."Inward Gate Entry Nos." = GateEntryLocSetup."Posting No. Series") THEN
                                                                        "Posting No. Series" := "No. Series"
                                                                      ELSE
                                                                        NoSeriesMgt.SetDefaultSeries("Posting No. Series",GateEntryLocSetup."Posting No. Series");
                                                                  "Entry Type"::Outward:
                                                                    IF GateEntryLocSetup.GET("Entry Type","Location Code") THEN
                                                                      IF ("No. Series" <> '') AND (InventSetup."Inward Gate Entry Nos." = GateEntryLocSetup."Posting No. Series") THEN
                                                                        "Posting No. Series" := "No. Series"
                                                                      ELSE
                                                                        NoSeriesMgt.SetDefaultSeries("Posting No. Series",GateEntryLocSetup."Posting No. Series");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Location Code;
                                                              ENN=Location Code] }
    { 8   ;   ;Description         ;Text120       ;CaptionML=[ENU=Description;
                                                              ENN=Description] }
    { 9   ;   ;Item Description    ;Text120       ;CaptionML=[ENU=Item Description;
                                                              ENN=Item Description] }
    { 10  ;   ;LR/RR No.           ;Code20        ;CaptionML=[ENU=LR/RR No.;
                                                              ENN=LR/RR No.] }
    { 11  ;   ;LR/RR Date          ;Date          ;CaptionML=[ENU=LR/RR Date;
                                                              ENN=LR/RR Date] }
    { 12  ;   ;Vehicle No.         ;Code20        ;CaptionML=[ENU=Vehicle No.;
                                                              ENN=Vehicle No.] }
    { 13  ;   ;Station From/To     ;Code20        ;CaptionML=[ENU=Station From/To;
                                                              ENN=Station From/To] }
    { 15  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Gate Entry Comment Line" WHERE (Gate Entry Type=FIELD(Entry Type),
                                                                                                      No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              ENN=Comment] }
    { 16  ;   ;Posting No. Series  ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Posting No. Series;
                                                              ENN=Posting No. Series] }
    { 17  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ENN=Posting Date] }
    { 18  ;   ;Posting Time        ;Time          ;CaptionML=[ENU=Posting Time;
                                                              ENN=Posting Time] }
    { 19  ;   ;Posting No.         ;Code20        ;CaptionML=[ENU=Posting No.;
                                                              ENN=Posting No.] }
    { 20  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1500000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              ENN=User ID] }
  }
  KEYS
  {
    {    ;Entry Type,No.                          ;Clustered=Yes }
    {    ;Location Code,Posting Date,No.           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GateEntryLine@1500000 : Record 16553;
      InventSetup@1500001 : Record 313;
      GateEntryLocSetup@1500003 : Record 16554;
      GateEntryCommentLine@1500004 : Record 16559;
      NoSeriesMgt@1500002 : Codeunit 396;

    PROCEDURE AssistEdit@1500000(OldGateEntryHeader@1500000 : Record 16552) : Boolean;
    BEGIN
      InventSetup.GET;
      CASE "Entry Type" OF
        "Entry Type"::Inward:
          BEGIN
            InventSetup.TESTFIELD("Inward Gate Entry Nos.");
            IF NoSeriesMgt.SelectSeries(InventSetup."Inward Gate Entry Nos.",OldGateEntryHeader."No. Series","No. Series") THEN BEGIN
              InventSetup.GET;
              InventSetup.TESTFIELD("Inward Gate Entry Nos.");
              NoSeriesMgt.SetSeries("No.");
              EXIT(TRUE);
            END;
          END;
        "Entry Type"::Outward:
          BEGIN
            InventSetup.TESTFIELD("Outward Gate Entry Nos.");
            IF NoSeriesMgt.SelectSeries(InventSetup."Outward Gate Entry Nos.",OldGateEntryHeader."No. Series","No. Series") THEN BEGIN
              InventSetup.GET;
              InventSetup.TESTFIELD("Outward Gate Entry Nos.");
              NoSeriesMgt.SetSeries("No.");
              EXIT(TRUE);
            END;
          END;
      END;
    END;

    BEGIN
    END.
  }
}

