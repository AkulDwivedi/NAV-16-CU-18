OBJECT Table 16597 Capitalize CWIP Header
{
  OBJECT-PROPERTIES
  {
    Date=24-04-16;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.45778;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 JobsSetup.GET;
                 JobsSetup.TESTFIELD("Capitalize CWIP Nos.");
                 JobsSetup.TESTFIELD("Posted Capitalize CWIP Nos.");
                 NoSeries.GET(JobsSetup."Capitalize CWIP Nos.");
                 "No." := NoSeriesMgt.GetNextNo(NoSeries.Code,WORKDATE,TRUE);
                 "No. Series" := JobsSetup."Capitalize CWIP Nos.";
                 "Posting No. Series" := JobsSetup."Posted Capitalize CWIP Nos.";
               END;
               "Posting Date" := WORKDATE;
               "User ID" := USERID;
             END;

    OnDelete=BEGIN
               DeleteLines("No.");
             END;

    CaptionML=[ENU=Capitalize CWIP Header;
               ENN=Capitalize CWIP Header];
    LookupPageID=Page16454;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  JobsSetup.GET;
                                                                  NoSeriesMgt.TestManual(JobsSetup."Capitalize CWIP Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ENN=No.] }
    { 2   ;   ;Job No.             ;Code20        ;TableRelation=Job WHERE (Job Type=CONST(Capital WIP));
                                                   OnValidate=BEGIN
                                                                IF "Job No." <> xRec."Job No." THEN BEGIN
                                                                  Job.GET("Job No.");
                                                                  Description := Job.Description;
                                                                  IF xRec."Job No." <> '' THEN
                                                                    DeleteLines("No.");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Job No.;
                                                              ENN=Job No.] }
    { 3   ;   ;No. Series          ;Code20        ;CaptionML=[ENU=No. Series;
                                                              ENN=No. Series] }
    { 4   ;   ;Posting No. Series  ;Code20        ;CaptionML=[ENU=Posting No. Series;
                                                              ENN=Posting No. Series] }
    { 5   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENN=Description] }
    { 6   ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                IF "Posting Date" <> xRec."Posting Date" THEN
                                                                  UpdatePostingDateLines;
                                                              END;

                                                   CaptionML=[ENU=Posting Date;
                                                              ENN=Posting Date] }
    { 7   ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1500000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              ENN=User ID] }
    { 8   ;   ;Depreciation Book   ;Code10        ;TableRelation="Depreciation Book";
                                                   OnValidate=BEGIN
                                                                IF "Depreciation Book" <> '' THEN BEGIN
                                                                  DepreciationBook.GET("Depreciation Book");
                                                                  DepreciationBook.TESTFIELD("FA Book Type",DepreciationBook."FA Book Type"::" ");
                                                                  DepreciationBook.TESTFIELD("G/L Integration - Acq. Cost",TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Depreciation Book;
                                                              ENN=Depreciation Book] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      JobsSetup@1500000 : Record 315;
      NoSeriesMgt@1500001 : Codeunit 396;
      NoSeries@1500002 : Record 308;
      Job@1500003 : Record 167;
      CapitalizeCWIPLine@1500004 : Record 16598;
      Capitalization@1500005 : Record 16596;
      DepreciationBook@1500006 : Record 5611;
      Text16500@1500009 : TextConst 'ENU=There is nothing to get.;ENN=There is nothing to get.';
      CWIPFADetails@1500011 : Record 13703;

    PROCEDURE DeleteLines@1500000(DocNo@1500000 : Code[20]);
    BEGIN
      CapitalizeCWIPLine.RESET;
      CapitalizeCWIPLine.SETRANGE("Document No.",DocNo);
      CapitalizeCWIPLine.DELETEALL;
      Capitalization.RESET;
      Capitalization.SETRANGE("Document No.",DocNo);
      Capitalization.DELETEALL;
      CWIPFADetails.RESET;
      CWIPFADetails.SETRANGE("Document No.",DocNo);
      CWIPFADetails.DELETEALL;
    END;

    PROCEDURE GetJobTaskLines@1500001(JobNo@1500001 : Code[20]);
    VAR
      GetJobTask@1500000 : Report 16597;
      JobTask@1500002 : Record 1001;
    BEGIN
      CLEAR(GetJobTask);
      JobTask.RESET;
      JobTask.SETRANGE("Job No.",JobNo);
      IF JobTask.FINDFIRST THEN BEGIN
        GetJobTask.SETTABLEVIEW(JobTask);
        GetJobTask.InitReport("No.",JobNo);
        GetJobTask.RUNMODAL;
      END ELSE
        ERROR(Text16500);
    END;

    PROCEDURE AssistEdit@1(OldCapitalizeCWIPHeader@1000 : Record 16597) : Boolean;
    VAR
      CapitalizeCWIPHeader@1500000 : Record 16597;
    BEGIN
      WITH CapitalizeCWIPHeader DO BEGIN
        COPY(Rec);
        JobsSetup.GET;
        JobsSetup.TESTFIELD("Capitalize CWIP Nos.");
        IF NoSeriesMgt.SelectSeries(JobsSetup."Capitalize CWIP Nos.","No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := CapitalizeCWIPHeader;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE EnterFixedAssetDetails@1500003();
    VAR
      CWIPFADetails@1500000 : Record 13703;
    BEGIN
      FillFADetails("No.","Job No.");
      CWIPFADetails.RESET;
      CWIPFADetails.SETRANGE("Document No.","No.");
      CWIPFADetails.SETRANGE("Job No.","Job No.");
      PAGE.RUN(PAGE::"CWIP Fixed Asset Details",CWIPFADetails);
    END;

    PROCEDURE FillFADetails@1500002(DocNo@1500000 : Code[20];JobNo@1500001 : Code[20]);
    VAR
      CWIPFADetails@1500002 : Record 13703;
      CWIPFADetails1@1500003 : Record 13703;
      CWIPFADetails2@1500004 : Record 13703;
      CapitalizeCWIPHeader@1500005 : Record 16597;
    BEGIN
      Capitalization.RESET;
      Capitalization.SETRANGE("Document No.",DocNo);
      Capitalization.SETRANGE("Job No.",JobNo);
      IF Capitalization.FINDSET THEN
        REPEAT
          CWIPFADetails.RESET;
          CWIPFADetails.SETRANGE("Document No.",DocNo);
          CWIPFADetails.SETRANGE("Job No.",JobNo);
          CWIPFADetails.SETRANGE("FA Code",Capitalization."FA Code");
          IF NOT CWIPFADetails.FINDFIRST THEN BEGIN
            Job.GET(JobNo);
            CWIPFADetails1.RESET;
            CWIPFADetails1.INIT;
            CapitalizeCWIPHeader.GET(DocNo);
            CWIPFADetails1."Document No." := DocNo;
            CWIPFADetails1."Job No." := JobNo;
            CWIPFADetails1."FA Code" := Capitalization."FA Code";
            CWIPFADetails1."Posting Date" := CapitalizeCWIPHeader."Posting Date";
            CWIPFADetails2.RESET;
            CWIPFADetails2.SETRANGE("Document No.",DocNo);
            CWIPFADetails2.SETRANGE("Job No.",JobNo);
            IF CWIPFADetails2.FINDLAST THEN
              CWIPFADetails1."Line No." := CWIPFADetails2."Line No." + 10000
            ELSE
              CWIPFADetails1."Line No." := 10000;
            CWIPFADetails1.INSERT;
          END;
        UNTIL (Capitalization.NEXT = 0);
    END;

    PROCEDURE UpdatePostingDateLines@1500004();
    BEGIN
      CapitalizeCWIPLine.RESET;
      CapitalizeCWIPLine.SETRANGE("Document No.","No.");
      IF CapitalizeCWIPLine.FINDSET THEN
        REPEAT
          CapitalizeCWIPLine.VALIDATE("Posting Date","Posting Date");
          CapitalizeCWIPLine.MODIFY;
        UNTIL CapitalizeCWIPLine.NEXT = 0;
      Capitalization.RESET;
      Capitalization.SETRANGE("Document No.","No.");
      IF Capitalization.FINDSET THEN
        REPEAT
          Capitalization.VALIDATE("Posting Date","Posting Date");
          Capitalization.MODIFY;
        UNTIL Capitalization.NEXT = 0;
      CWIPFADetails.RESET;
      CWIPFADetails.SETRANGE("Document No.","No.");
      IF CWIPFADetails.FINDSET THEN
        REPEAT
          CWIPFADetails.VALIDATE("Posting Date","Posting Date");
          CWIPFADetails.MODIFY;
        UNTIL CWIPFADetails.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

