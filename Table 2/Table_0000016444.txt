OBJECT Table 16444 GST Distribution Header
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.49326;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 GeneralLedgerSetup.GET;
                 GeneralLedgerSetup.TESTFIELD("GST Distribution Nos.");
                 NoSeries.GET(GeneralLedgerSetup."GST Distribution Nos.");
                 "No." := NoSeriesManagement.GetNextNo(NoSeries.Code,WORKDATE,TRUE);
                 "No. Series" := GeneralLedgerSetup."GST Distribution Nos.";
               END;
               "Creation Date" := WORKDATE;
               "User ID" := USERID;
               "Posting Date" := WORKDATE;
             END;

    CaptionML=[ENU=Distribution Header;
               ENN=Distribution Header];
    LookupPageID=Page16337;
    DrillDownPageID=Page16337;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  GeneralLedgerSetup.GET;
                                                                  NoSeriesManagement.TestManual(GeneralLedgerSetup."GST Distribution Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ENN=No.];
                                                   NotBlank=No }
    { 2   ;   ;From GSTIN No.      ;Code15        ;TableRelation="GST Registration Nos." WHERE (Input Service Distributor=FILTER(Yes));
                                                   CaptionML=[ENU=From GSTIN No.;
                                                              ENN=From GSTIN No.];
                                                   Editable=No }
    { 6   ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                IF NOT Reversal THEN
                                                                  TESTFIELD("Total Amout Applied for Dist.",0)
                                                                ELSE
                                                                  IF GSTDistributionLinesExist THEN BEGIN
                                                                    GSTDistributionLine.RESET;
                                                                    GSTDistributionLine.SETRANGE("Distribution No.","No.");
                                                                    IF GSTDistributionLine.FINDSET THEN
                                                                      REPEAT
                                                                        GSTDistributionLine."Posting Date" := "Posting Date";
                                                                        GSTDistributionLine.MODIFY;
                                                                      UNTIL GSTDistributionLine.NEXT = 0;
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Posting Date;
                                                              ENN=Posting Date] }
    { 7   ;   ;No. Series          ;Code20        ;CaptionML=[ENU=No. Series;
                                                              ENN=No. Series] }
    { 8   ;   ;Creation Date       ;Date          ;CaptionML=[ENU=Creation Date;
                                                              ENN=Creation Date] }
    { 9   ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1500000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              ENN=User ID] }
    { 10  ;   ;Dist. Document Type ;Option        ;OnValidate=BEGIN
                                                                TESTFIELD("Total Amout Applied for Dist.",0);
                                                                TESTFIELD("From Location Code");
                                                                Location.GET("From Location Code");
                                                                CASE "Dist. Document Type" OF
                                                                  "Dist. Document Type"::Invoice:
                                                                    BEGIN
                                                                      Location.TESTFIELD("Posted Dist. Invoice Nos.");
                                                                      "Posting No. Series" := Location."Posted Dist. Invoice Nos.";
                                                                      "ISD Document Type" := "ISD Document Type"::Invoice;
                                                                    END;
                                                                  "Dist. Document Type"::"Credit Memo":
                                                                    BEGIN
                                                                      Location.TESTFIELD("Posted Dist. Cr. Memo Nos.");
                                                                      "Posting No. Series" := Location."Posted Dist. Cr. Memo Nos.";
                                                                      "ISD Document Type" := "ISD Document Type"::"Credit Memo";
                                                                    END
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Dist. Document Type;
                                                              ENN=Dist. Document Type];
                                                   OptionCaptionML=[ENU=" ,Invoice,Credit Memo";
                                                                    ENN=" ,Invoice,Credit Memo"];
                                                   OptionString=[ ,Invoice,Credit Memo] }
    { 11  ;   ;Reversal            ;Boolean       ;CaptionML=[ENU=Reversal;
                                                              ENN=Reversal];
                                                   Editable=No }
    { 12  ;   ;Reversal Invoice No.;Code20        ;TableRelation="Posted GST Distribution Header" WHERE (Reversal=CONST(No),
                                                                                                         Completely Reversed=CONST(No));
                                                   OnValidate=BEGIN
                                                                InsertDistHeaderReversal;
                                                                InsertDistLineReversal;
                                                              END;

                                                   CaptionML=[ENU=Reversal Invoice No.;
                                                              ENN=Reversal Invoice No.] }
    { 13  ;   ;ISD Document Type   ;Option        ;CaptionML=[ENU=ISD Document Type;
                                                              ENN=ISD Document Type];
                                                   OptionCaptionML=[ENU=Invoice,Credit Memo;
                                                                    ENN=Invoice,Credit Memo];
                                                   OptionString=Invoice,Credit Memo;
                                                   Editable=No }
    { 14  ;   ;From Location Code  ;Code10        ;TableRelation=Location WHERE (GST Input Service Distributor=FILTER(Yes));
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Total Amout Applied for Dist.",0);
                                                                IF Location.GET("From Location Code") THEN BEGIN
                                                                  "From GSTIN No." := Location."GST Registration No.";
                                                                  CASE "Dist. Document Type" OF
                                                                    "Dist. Document Type"::Invoice:
                                                                      BEGIN
                                                                        Location.TESTFIELD("Posted Dist. Invoice Nos.");
                                                                        "Posting No. Series" := Location."Posted Dist. Invoice Nos.";
                                                                        "ISD Document Type" := "ISD Document Type"::Invoice;
                                                                      END;
                                                                    "Dist. Document Type"::"Credit Memo":
                                                                      BEGIN
                                                                        Location.TESTFIELD("Posted Dist. Cr. Memo Nos.");
                                                                        "Posting No. Series" := Location."Posted Dist. Cr. Memo Nos.";
                                                                        "ISD Document Type" := "ISD Document Type"::"Credit Memo";
                                                                      END
                                                                  END;
                                                                END ELSE BEGIN
                                                                  "From GSTIN No." := '';
                                                                  "Posting No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=From Location Code;
                                                              ENN=From Location Code] }
    { 16  ;   ;Dist. Credit Type   ;Option        ;OnValidate=BEGIN
                                                                TESTFIELD("Total Amout Applied for Dist.",0);
                                                              END;

                                                   CaptionML=[ENU=Dist. Credit Type;
                                                              ENN=Dist. Credit Type];
                                                   OptionCaptionML=[ENU=" ,Availment,Non-Availment";
                                                                    ENN=" ,Availment,Non-Availment"];
                                                   OptionString=[ ,Availment,Non-Availment] }
    { 17  ;   ;Posting No. Series  ;Code20        ;CaptionML=[ENU=Posting No. Series;
                                                              ENN=Posting No. Series] }
    { 18  ;   ;Total Amout Applied for Dist.;Decimal;
                                                   CaptionML=[ENU=Total Amout Applied for Dist.;
                                                              ENN=Total Amout Applied for Dist.] }
    { 19  ;   ;Distribution Basis  ;Text50        ;CaptionML=[ENU=Distribution Basis;
                                                              ENN=Distribution Basis] }
    { 25  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              ENN=Shortcut Dimension 1 Code];
                                                   CaptionClass='1,2,1' }
    { 26  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              ENN=Shortcut Dimension 2 Code];
                                                   CaptionClass='1,2,2' }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDocDim;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              ENN=Dimension Set ID];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GeneralLedgerSetup@1500002 : Record 98;
      NoSeries@1500001 : Record 308;
      Location@1500005 : Record 14;
      GSTDistributionLine@1500456 : Record 16445;
      NoSeriesManagement@1500000 : Codeunit 396;
      GSTInputTaxCredit@1500006 : Codeunit 16405;
      DimMgt@1500007 : Codeunit 408;
      UpdateDimQst@1500008 : TextConst 'ENU=You may have changed a dimension.Do you want to update the lines?;ENN=You may have changed a dimension.Do you want to update the lines?';

    PROCEDURE AssistEdit@1500001(GSTDistributionHeader@1500000 : Record 16444) : Boolean;
    BEGIN
      WITH GSTDistributionHeader DO BEGIN
        COPY(Rec);
        GeneralLedgerSetup.GET;
        GeneralLedgerSetup.TESTFIELD("GST Distribution Nos.");
        IF NoSeriesManagement.SelectSeries(GeneralLedgerSetup."GST Distribution Nos.","No. Series","No. Series") THEN BEGIN
          NoSeriesManagement.SetSeries("No.");
          Rec := GSTDistributionHeader;
          EXIT(TRUE);
        END;
      END;
    END;

    LOCAL PROCEDURE InsertDistHeaderReversal@1500005();
    VAR
      PostedGSTDistributionHeader@1500000 : Record 16452;
    BEGIN
      TESTFIELD("Posting Date");
      IF "Reversal Invoice No." <> '' THEN BEGIN
        GSTInputTaxCredit.DeleteGSTDistributionLine("No.");
        PostedGSTDistributionHeader.GET("Reversal Invoice No.");
        "From GSTIN No." := PostedGSTDistributionHeader."From GSTIN No.";
        "Creation Date" := WORKDATE;
        "User ID" := USERID;
        "From Location Code" := PostedGSTDistributionHeader."From Location Code";
        "Dist. Document Type" := PostedGSTDistributionHeader."Dist. Document Type";
        Location.GET("From Location Code");
        IF PostedGSTDistributionHeader."Dist. Document Type" = PostedGSTDistributionHeader."Dist. Document Type"::Invoice THEN BEGIN
          "ISD Document Type" := "ISD Document Type"::"Credit Memo";
          "Posting No. Series" := Location."Posted Dist. Cr. Memo Nos.";
        END ELSE BEGIN
          "ISD Document Type" := "ISD Document Type"::Invoice;
          "Posting No. Series" := Location."Posted Dist. Invoice Nos.";
        END;
        "Dist. Credit Type" := PostedGSTDistributionHeader."Dist. Credit Type";
        "Total Amout Applied for Dist." := 0;
      END ELSE BEGIN
        "From GSTIN No." := '';
        "Posting Date" := 0D;
        "Dist. Document Type" := "Dist. Document Type"::" ";
        "From Location Code" := '';
        "Dist. Credit Type" := "Dist. Credit Type"::" ";
        "Total Amout Applied for Dist." := 0;
        GSTInputTaxCredit.DeleteGSTDistributionLine("No.");
      END;
    END;

    LOCAL PROCEDURE InsertDistLineReversal@1500000();
    VAR
      PostedGSTDistributionLine@1500000 : Record 16453;
      GSTDistributionLine@1500001 : Record 16445;
      GSTDistributionHeader@1500002 : Record 16444;
    BEGIN
      GSTDistributionHeader.GET("No.");
      PostedGSTDistributionLine.SETRANGE("Distribution No.","Reversal Invoice No.");
      IF PostedGSTDistributionLine.FINDSET THEN
        REPEAT
          GSTDistributionLine.INIT;
          GSTDistributionLine.TRANSFERFIELDS(PostedGSTDistributionLine);
          GSTDistributionLine."Distribution No." := "No.";
          GSTDistributionLine."Posting Date" := GSTDistributionHeader."Posting Date";
          GSTDistributionLine."Distribution Amount" := 0;
          GSTDistributionLine.INSERT(TRUE);
        UNTIL PostedGSTDistributionLine.NEXT = 0;
    END;

    PROCEDURE ValidateShortcutDimCode@19(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    VAR
      OldDimSetID@1500000 : Integer;
    BEGIN
      OldDimSetID := "Dimension Set ID";
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
      IF "No." <> '' THEN
        MODIFY;

      IF OldDimSetID <> "Dimension Set ID" THEN BEGIN
        MODIFY;
        IF GSTDistributionLinesExist THEN
          UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      END;
    END;

    LOCAL PROCEDURE GSTDistributionLinesExist@1500004() : Boolean;
    VAR
      GSTDistributionLine@1500000 : Record 16445;
    BEGIN
      GSTDistributionLine.SETRANGE("Distribution No.","No.");
      EXIT(GSTDistributionLine.FINDFIRST);
    END;

    LOCAL PROCEDURE UpdateAllLineDim@34(NewParentDimSetID@1000 : Integer;OldParentDimSetID@1001 : Integer);
    VAR
      GSTDistributionLine@1500000 : Record 16445;
      NewDimSetID@1002 : Integer;
    BEGIN
      IF NewParentDimSetID = OldParentDimSetID THEN
        EXIT;
      IF NOT CONFIRM(UpdateDimQst) THEN
        EXIT;

      GSTDistributionLine.SETRANGE("Distribution No.","No.");
      GSTDistributionLine.LOCKTABLE;
      IF GSTDistributionLine.FINDSET THEN
        REPEAT
          NewDimSetID := DimMgt.GetDeltaDimSetID(GSTDistributionLine."Dimension Set ID",NewParentDimSetID,OldParentDimSetID);
          IF GSTDistributionLine."Dimension Set ID" <> NewDimSetID THEN BEGIN
            GSTDistributionLine."Dimension Set ID" := NewDimSetID;
            DimMgt.UpdateGlobalDimFromDimSetID(
              GSTDistributionLine."Dimension Set ID",GSTDistributionLine."Shortcut Dimension 1 Code",
              GSTDistributionLine."Shortcut Dimension 2 Code");
            GSTDistributionLine.MODIFY;
          END;
        UNTIL GSTDistributionLine.NEXT = 0;
    END;

    PROCEDURE ShowDocDim@32();
    VAR
      OldDimSetID@1000 : Integer;
    BEGIN
      OldDimSetID := "Dimension Set ID";
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1',"No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      IF OldDimSetID <> "Dimension Set ID" THEN BEGIN
        MODIFY;
        IF GSTDistributionLinesExist THEN
          UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      END;
    END;

    BEGIN
    END.
  }
}

