OBJECT Table 16578 Distribution Line
{
  OBJECT-PROPERTIES
  {
    Date=24-04-16;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.45778;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               DistributionHeader.GET("Document No.");
               "From Location" := DistributionHeader."From Location";
             END;

    OnDelete=VAR
               SvcTaxEntryDetail@1500000 : Record 16474;
               DistributionLine2@1500001 : Record 16578;
               DistributionHeader2@1500002 : Record 16577;
             BEGIN
               DistributionLine2.RESET;
               DistributionLine2.SETRANGE("Document No.","Document No.");
               IF DistributionLine2.COUNT - 1 = 0 THEN BEGIN
                 SvcTaxEntryDetail.RESET;
                 SvcTaxEntryDetail.SETRANGE("Distribution No.","Document No.");
                 SvcTaxEntryDetail.MODIFYALL("Dist. Input Service Tax Credit",FALSE);
                 SvcTaxEntryDetail.MODIFYALL("Distribution No.",'');
                 DistributionHeader2.RESET;
                 DistributionHeader2.SETRANGE("No.","Document No.");
                 DistributionHeader2.MODIFYALL("Total Applied Amount",0)
               END;
             END;

    CaptionML=[ENU=Distribution Line;
               ENN=Distribution Line];
  }
  FIELDS
  {
    { 1   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ENN=Document No.];
                                                   Editable=No }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ENN=Line No.];
                                                   Editable=No }
    { 3   ;   ;From Location       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[ENU=From Location;
                                                              ENN=From Location];
                                                   Editable=No }
    { 4   ;   ;To Location         ;Code10        ;TableRelation=Location.Code WHERE (Use As In-Transit=FILTER(No));
                                                   OnValidate=BEGIN
                                                                IF "To Location" <> '' THEN BEGIN
                                                                  DistributionLine.RESET;
                                                                  DistributionLine.SETRANGE("Document No.","Document No.");
                                                                  DistributionLine.SETRANGE("To Location","To Location");
                                                                  IF DistributionLine.FINDFIRST THEN
                                                                    IF "Line No." <> DistributionLine."Line No." THEN
                                                                      ERROR(Text16500,"To Location","Document No.");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=To Location;
                                                              ENN=To Location] }
    { 5   ;   ;Distribution %      ;Decimal       ;OnValidate=BEGIN
                                                                "Distribution Amount" := GetDistributionAmt;
                                                              END;

                                                   CaptionML=[ENU=Distribution %;
                                                              ENN=Distribution %];
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 6   ;   ;Distribution Amount ;Decimal       ;CaptionML=[ENU=Distribution Amount;
                                                              ENN=Distribution Amount];
                                                   DecimalPlaces=2:2;
                                                   Editable=No }
    { 7   ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              ENN=Shortcut Dimension 1 Code];
                                                   CaptionClass='1,2,1' }
    { 8   ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              ENN=Shortcut Dimension 2 Code];
                                                   CaptionClass='1,2,2' }
    { 13  ;   ;Loading on Services Account;Boolean;CaptionML=[ENU=Loading on Services Account;
                                                              ENN=Loading on Services Account] }
    { 15  ;   ;Total Distribution %;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Distribution Line"."Distribution %" WHERE (Document No.=FIELD(Document No.)));
                                                   CaptionML=[ENU=Total Distribution %;
                                                              ENN=Total Distribution %] }
    { 16  ;   ;Total Distribution Amount;Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Distribution Line"."Distribution Amount" WHERE (Document No.=FIELD(Document No.)));
                                                   CaptionML=[ENU=Total Distribution Amount;
                                                              ENN=Total Distribution Amount] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              ENN=Dimension Set ID];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;SumIndexFields=Distribution %,Distribution Amount;
                                                   Clustered=Yes }
    {    ;Document No.,Loading on Services Account;SumIndexFields=Distribution % }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DistributionHeader@1500000 : Record 16577;
      DistributionLine@1500002 : Record 16578;
      DimMgt@1500001 : Codeunit 408;
      Text16500@1500003 : TextConst 'ENU=Location Code %1 already exists for Document No. %2.;ENN=Location Code %1 already exists for Document No. %2.';

    PROCEDURE ShowDimensions@1500000();
    BEGIN
      TESTFIELD("Document No.");
      TESTFIELD("Line No.");
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',"Document No.","Line No."));
      DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE GetDistributionAmt@1500002() : Decimal;
    VAR
      GenLedgSetup@1500001 : Record 98;
      RoundDifference@1500000 : Decimal;
    BEGIN
      DistributionHeader.GET("Document No.");
      GenLedgSetup.GET;
      CALCFIELDS("Total Distribution %","Total Distribution Amount");
      IF "Total Distribution %" + "Distribution %" = 100 THEN BEGIN
        IF "Total Distribution Amount" + ROUND(DistributionHeader."Total Applied Amount" * "Distribution %" / 100,
             GenLedgSetup."Amount Rounding Precision") = DistributionHeader."Total Applied Amount"
        THEN
          EXIT(ROUND(DistributionHeader."Total Applied Amount" * "Distribution %" / 100,GenLedgSetup."Amount Rounding Precision"));

        RoundDifference := DistributionHeader."Total Applied Amount" - ("Total Distribution Amount" +
                                                                        ROUND(
                                                                          DistributionHeader."Total Applied Amount" *
                                                                          "Distribution %" / 100,
                                                                          GenLedgSetup."Amount Rounding Precision"));
        EXIT(ROUND(DistributionHeader."Total Applied Amount" * "Distribution %" / 100,GenLedgSetup."Amount Rounding Precision") +
          RoundDifference);;
      END;
        EXIT(ROUND(DistributionHeader."Total Applied Amount" * "Distribution %" / 100,GenLedgSetup."Amount Rounding Precision"));
    END;

    PROCEDURE ValidateShortcutDimCode@19(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    BEGIN
    END.
  }
}

