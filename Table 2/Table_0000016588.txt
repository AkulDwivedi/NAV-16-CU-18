OBJECT Table 16588 Service Tax Return Period
{
  OBJECT-PROPERTIES
  {
    Date=23-09-13;
    Time=12:00:00 PM;
    Version List=NAVIN7.10;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD(Year);
               TESTFIELD("Return Period");
             END;

    OnModify=BEGIN
               TESTFIELD(Year);
               TESTFIELD("Return Period");
             END;

    OnDelete=BEGIN
               ServiceTaxPeriodDueDates.RESET;
               ServiceTaxPeriodDueDates.SETRANGE(Year,Year);
               ServiceTaxPeriodDueDates.SETRANGE("Return Period","Return Period");
               ServiceTaxPeriodDueDates.DELETEALL;
             END;

    CaptionML=[ENU=Service Tax Return Period;
               ENN=Service Tax Return Period];
    LookupPageID=Page16362;
    DrillDownPageID=Page16362;
  }
  FIELDS
  {
    { 1   ;   ;Year                ;Integer       ;CaptionML=[ENU=Year;
                                                              ENN=Year] }
    { 2   ;   ;Return Period       ;Option        ;CaptionML=[ENU=Return Period;
                                                              ENN=Return Period];
                                                   OptionCaptionML=[ENU=" ,Apr-Sep,Oct-Mar";
                                                                    ENN=" ,Apr-Sep,Oct-Mar"];
                                                   OptionString=[ ,Apr-Sep,Oct-Mar] }
    { 3   ;   ;Return Filing Due Date;Date        ;CaptionML=[ENU=Return Filing Due Date;
                                                              ENN=Return Filing Due Date] }
    { 4   ;   ;Actual Return Filed Date;Date      ;CaptionML=[ENU=Actual Return Filed Date;
                                                              ENN=Actual Return Filed Date] }
  }
  KEYS
  {
    {    ;Year,Return Period                      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1500000 : TextConst 'ENU=Return Year should not be zero and Return Period cannot be blank;ENN=Return Year should not be zero and Return Period cannot be blank';
      ServiceTaxPeriodDueDates@1500001 : Record 16589;
      CompanyInfo@1500002 : Record 79;

    PROCEDURE CreatePeriodDueDates@1500000(ReturnYear@1500000 : Integer;ReturnPeriod@1500001 : ' ,Apr-Sep,Oct-Mar');
    VAR
      NoofRecords@1500002 : Integer;
      MonthQtr@1500003 : ARRAY [6] OF Integer;
      StartingDate@1500004 : ARRAY [6] OF Date;
      EndingDate@1500005 : ARRAY [6] OF Date;
      DueDate@1500006 : ARRAY [6] OF Date;
      DueDay@1500007 : Integer;
      I@1500008 : Integer;
    BEGIN
      IF (ReturnYear = 0) OR (ReturnPeriod = ReturnPeriod::" ") THEN
        ERROR(Text001);

      GET(ReturnYear,ReturnPeriod);
      CLEAR(MonthQtr);
      CLEAR(StartingDate);
      CLEAR(EndingDate);
      CompanyInfo.GET;
      CompanyInfo.TESTFIELD("ST Payment Due Day");
      DueDay := CompanyInfo."ST Payment Due Day";
      ServiceTaxPeriodDueDates.RESET;
      ServiceTaxPeriodDueDates.SETRANGE(Year,ReturnYear);
      ServiceTaxPeriodDueDates.SETRANGE("Return Period",ReturnPeriod);
      IF NOT ServiceTaxPeriodDueDates.FINDFIRST THEN BEGIN
        IF (CompanyInfo."ST Payment Period" = CompanyInfo."ST Payment Period"::Monthly) AND
           (ReturnPeriod = ReturnPeriod::"Apr-Sep")
        THEN BEGIN
          NoofRecords := 6;

          MonthQtr[1] := 4;
          StartingDate[1] := DMY2DATE(1,4,Year);
          EndingDate[1] := DMY2DATE(1,4 + 1,Year) - 1;
          DueDate[1] := DMY2DATE(DueDay,4 + 1,Year);
          MonthQtr[2] := 5;
          StartingDate[2] := DMY2DATE(1,5,Year);
          EndingDate[2] := DMY2DATE(1,5 + 1,Year) - 1;
          DueDate[2] := DMY2DATE(DueDay,5 + 1,Year);
          MonthQtr[3] := 6;
          StartingDate[3] := DMY2DATE(1,6,Year);
          EndingDate[3] := DMY2DATE(1,6 + 1,Year) - 1;
          DueDate[3] := DMY2DATE(DueDay,6 + 1,Year);
          MonthQtr[4] := 7;
          StartingDate[4] := DMY2DATE(1,7,Year);
          EndingDate[4] := DMY2DATE(1,7 + 1,Year) - 1;
          DueDate[4] := DMY2DATE(DueDay,7 + 1,Year);
          MonthQtr[5] := 8;
          StartingDate[5] := DMY2DATE(1,8,Year);
          EndingDate[5] := DMY2DATE(1,8 + 1,Year) - 1;
          DueDate[5] := DMY2DATE(DueDay,8 + 1,Year);
          MonthQtr[6] := 9;
          StartingDate[6] := DMY2DATE(1,9,Year);
          EndingDate[6] := DMY2DATE(1,9 + 1,Year) - 1;
          DueDate[6] := DMY2DATE(DueDay,9 + 1,Year);
        END;
        IF (CompanyInfo."ST Payment Period" = CompanyInfo."ST Payment Period"::Monthly) AND
           (ReturnPeriod = ReturnPeriod::"Oct-Mar")
        THEN BEGIN
          NoofRecords := 6;

          MonthQtr[1] := 10;
          StartingDate[1] := DMY2DATE(1,10,Year);
          EndingDate[1] := DMY2DATE(1,10 + 1,Year) - 1;
          DueDate[1] := DMY2DATE(DueDay,10 + 1,Year);
          MonthQtr[2] := 11;
          StartingDate[2] := DMY2DATE(1,11,Year);
          EndingDate[2] := DMY2DATE(1,11 + 1,Year) - 1;
          DueDate[2] := DMY2DATE(DueDay,11 + 1,Year);
          MonthQtr[3] := 12;
          StartingDate[3] := DMY2DATE(1,12,Year);
          EndingDate[3] := DMY2DATE(1,1,Year + 1) - 1;
          DueDate[3] := DMY2DATE(DueDay,1,Year + 1);
          MonthQtr[4] := 1;
          StartingDate[4] := DMY2DATE(1,1,Year + 1);
          EndingDate[4] := DMY2DATE(1,1 + 1,Year + 1) - 1;
          DueDate[4] := DMY2DATE(DueDay,1 + 1,Year + 1);
          MonthQtr[5] := 2;
          StartingDate[5] := DMY2DATE(1,2,Year + 1);
          EndingDate[5] := DMY2DATE(1,2 + 1,Year + 1) - 1;
          DueDate[5] := DMY2DATE(DueDay,2 + 1,Year + 1);
          MonthQtr[6] := 3;
          StartingDate[6] := DMY2DATE(1,3,Year + 1);
          EndingDate[6] := DMY2DATE(1,3 + 1,Year + 1) - 1;
          DueDate[6] := DMY2DATE(31,3,Year + 1);
        END;
        IF (CompanyInfo."ST Payment Period" = CompanyInfo."ST Payment Period"::Quarterly) AND
           (ReturnPeriod = ReturnPeriod::"Apr-Sep")
        THEN BEGIN
          NoofRecords := 2;

          MonthQtr[1] := 1;
          StartingDate[1] := DMY2DATE(1,4,Year);
          EndingDate[1] := DMY2DATE(1,6 + 1,Year) - 1;
          DueDate[1] := DMY2DATE(DueDay,6 + 1,Year);
          MonthQtr[2] := 2;
          StartingDate[2] := DMY2DATE(1,7,Year);
          EndingDate[2] := DMY2DATE(1,9 + 1,Year) - 1;
          DueDate[2] := DMY2DATE(DueDay,9 + 1,Year);
        END;
        IF (CompanyInfo."ST Payment Period" = CompanyInfo."ST Payment Period"::Quarterly) AND
           (ReturnPeriod = ReturnPeriod::"Oct-Mar")
        THEN BEGIN
          NoofRecords := 2;

          MonthQtr[1] := 3;
          StartingDate[1] := DMY2DATE(1,10,Year);
          EndingDate[1] := DMY2DATE(1,1,Year + 1) - 1;
          DueDate[1] := DMY2DATE(DueDay,1,Year + 1);
          MonthQtr[2] := 4;
          StartingDate[2] := DMY2DATE(1,1,Year + 1);
          EndingDate[2] := DMY2DATE(1,3 + 1,Year + 1) - 1;
          DueDate[2] := DMY2DATE(31,3,Year + 1);
        END;

        FOR I := 1 TO NoofRecords DO BEGIN
          ServiceTaxPeriodDueDates.INIT;
          ServiceTaxPeriodDueDates.Year := ReturnYear;
          ServiceTaxPeriodDueDates."Return Period" := ReturnPeriod;
          ServiceTaxPeriodDueDates."ST Payment Period" := CompanyInfo."ST Payment Period";
          ServiceTaxPeriodDueDates."Month/Qtr" := MonthQtr[I];
          ServiceTaxPeriodDueDates."Starting Date" := StartingDate[I];
          ServiceTaxPeriodDueDates."Ending Date" := EndingDate[I];
          ServiceTaxPeriodDueDates."Payment Due Date" := DueDate[I];
          ServiceTaxPeriodDueDates.INSERT;
        END;
      END;
    END;

    BEGIN
    END.
  }
}

