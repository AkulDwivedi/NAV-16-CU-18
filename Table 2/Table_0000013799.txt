OBJECT Table 13799 Str Order Line Archive Details
{
  OBJECT-PROPERTIES
  {
    Date=23-02-17;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.48067;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Str Order Line Archive Details;
               ENN=Str Order Line Archive Details];
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              ENN=Type];
                                                   OptionCaptionML=[ENU=" ,Purchase,Sale,Transfer,Service";
                                                                    ENN=" ,Purchase,Sale,Transfer,Service"];
                                                   OptionString=[ ,Purchase,Sale,Transfer,Service];
                                                   Editable=No }
    { 2   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ENN=Document Type];
                                                   OptionCaptionML=[ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                                    ENN=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order];
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                   Editable=No }
    { 3   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ENN=Document No.];
                                                   Editable=No }
    { 4   ;   ;Item No.            ;Code20        ;CaptionML=[ENU=Item No.;
                                                              ENN=Item No.];
                                                   Editable=No }
    { 5   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ENN=Line No.];
                                                   Editable=No }
    { 6   ;   ;Structure Code      ;Code10        ;CaptionML=[ENU=Structure Code;
                                                              ENN=Structure Code];
                                                   Editable=No }
    { 7   ;   ;Calculation Order   ;Integer       ;CaptionML=[ENU=Calculation Order;
                                                              ENN=Calculation Order];
                                                   Editable=No }
    { 8   ;   ;Tax/Charge Type     ;Option        ;CaptionML=[ENU=Tax/Charge Type;
                                                              ENN=Tax/Charge Type];
                                                   OptionCaptionML=[ENU=Charges,Sales Tax,Excise,Other Taxes,Service Tax,GST;
                                                                    ENN=Charges,Sales Tax,Excise,Other Taxes,Service Tax,GST];
                                                   OptionString=Charges,Sales Tax,Excise,Other Taxes,Service Tax,GST;
                                                   Editable=No }
    { 9   ;   ;Tax/Charge Group    ;Code10        ;CaptionML=[ENU=Tax/Charge Group;
                                                              ENN=Tax/Charge Group];
                                                   Editable=No }
    { 10  ;   ;Tax/Charge Code     ;Code10        ;CaptionML=[ENU=Tax/Charge Code;
                                                              ENN=Tax/Charge Code];
                                                   Editable=No }
    { 11  ;   ;Calculation Type    ;Option        ;OnValidate=BEGIN
                                                                Calculate;
                                                              END;

                                                   CaptionML=[ENU=Calculation Type;
                                                              ENN=Calculation Type];
                                                   OptionCaptionML=[ENU=" ,Percentage,Amount Per Qty,Fixed Value";
                                                                    ENN=" ,Percentage,Amount Per Qty,Fixed Value"];
                                                   OptionString=[ ,Percentage,Amount Per Qty,Fixed Value] }
    { 12  ;   ;Calculation Value   ;Decimal       ;OnValidate=BEGIN
                                                                Calculate;
                                                              END;

                                                   CaptionML=[ENU=Calculation Value;
                                                              ENN=Calculation Value];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 13  ;   ;Quantity Per        ;Decimal       ;OnValidate=BEGIN
                                                                Calculate;
                                                              END;

                                                   CaptionML=[ENU=Quantity Per;
                                                              ENN=Quantity Per];
                                                   BlankZero=Yes }
    { 14  ;   ;Loading on Inventory;Boolean       ;OnValidate=BEGIN
                                                                IF "Tax/Charge Type" IN ["Tax/Charge Type"::Excise,"Tax/Charge Type"::GST] THEN
                                                                  TESTFIELD("Loading on Inventory",FALSE);

                                                                IF "Loading on Inventory" THEN
                                                                  "% Loading on Inventory" := 100
                                                                ELSE
                                                                  "% Loading on Inventory" := 0;

                                                                Calculate;
                                                              END;

                                                   CaptionML=[ENU=Loading on Inventory;
                                                              ENN=Loading on Inventory] }
    { 15  ;   ;% Loading on Inventory;Decimal     ;OnValidate=BEGIN
                                                                Calculate;
                                                              END;

                                                   CaptionML=[ENU=% Loading on Inventory;
                                                              ENN=% Loading on Inventory];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 16  ;   ;Payable to Third Party;Boolean     ;CaptionML=[ENU=Payable to Third Party;
                                                              ENN=Payable to Third Party] }
    { 17  ;   ;Third Party Code    ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Third Party Code;
                                                              ENN=Third Party Code] }
    { 18  ;   ;Account No.         ;Code20        ;TableRelation=IF (Tax/Charge Type=FILTER(Charges|Other Taxes)) "G/L Account";
                                                   CaptionML=[ENU=Account No.;
                                                              ENN=Account No.];
                                                   Editable=No }
    { 19  ;   ;Base Formula        ;Text80        ;CaptionML=[ENU=Base Formula;
                                                              ENN=Base Formula];
                                                   Editable=No }
    { 20  ;   ;Base Amount         ;Decimal       ;CaptionML=[ENU=Base Amount;
                                                              ENN=Base Amount];
                                                   Editable=No }
    { 21  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ENN=Amount];
                                                   Editable=No }
    { 22  ;   ;Include Base        ;Boolean       ;OnValidate=BEGIN
                                                                Calculate;
                                                              END;

                                                   CaptionML=[ENU=Include Base;
                                                              ENN=Include Base];
                                                   Editable=Yes }
    { 23  ;   ;Include Line Discount;Boolean      ;CaptionML=[ENU=Include Line Discount;
                                                              ENN=Include Line Discount];
                                                   Editable=No }
    { 24  ;   ;Include Invoice Discount;Boolean   ;CaptionML=[ENU=Include Invoice Discount;
                                                              ENN=Include Invoice Discount];
                                                   Editable=No }
    { 25  ;   ;Charge Basis        ;Option        ;CaptionML=[ENU=Charge Basis;
                                                              ENN=Charge Basis];
                                                   OptionCaptionML=[ENU=" ,Equally,Amount";
                                                                    ENN=" ,Equally,Amount"];
                                                   OptionString=[ ,Equally,Amount];
                                                   Editable=No }
    { 26  ;   ;Amount (LCY)        ;Decimal       ;CaptionML=[ENU=Amount (LCY);
                                                              ENN=Amount (LCY)];
                                                   Editable=No }
    { 27  ;   ;Header/Line         ;Option        ;CaptionML=[ENU=Header/Line;
                                                              ENN=Header/Line];
                                                   OptionCaptionML=[ENU=Header,Line;
                                                                    ENN=Header,Line];
                                                   OptionString=Header,Line;
                                                   Editable=No }
    { 28  ;   ;Manually Changed    ;Boolean       ;CaptionML=[ENU=Manually Changed;
                                                              ENN=Manually Changed] }
    { 29  ;   ;LCY                 ;Boolean       ;CaptionML=[ENU=LCY;
                                                              ENN=LCY] }
    { 30  ;   ;Available for VAT input;Boolean    ;OnValidate=VAR
                                                                Text16350@1280000 : TextConst 'ENU=VAT input is only available for Purchase Transactions;ENN=VAT input is only available for Purchase Transactions';
                                                                Text16351@1280001 : TextConst 'ENU=VAT input is not available for Charges;ENN=VAT input is not available for Charges';
                                                              BEGIN
                                                                IF Type <> Type::Purchase THEN
                                                                  ERROR(Text16350);
                                                                IF NOT ("Tax/Charge Type" IN ["Tax/Charge Type"::"Other Taxes","Tax/Charge Type"::"Sales Tax",
                                                                                              "Tax/Charge Type"::Excise,"Tax/Charge Type"::GST])
                                                                THEN
                                                                  ERROR(Text16351,"Tax/Charge Type");
                                                                "Manually Changed" := TRUE;
                                                              END;

                                                   CaptionML=[ENU=Available for VAT input;
                                                              ENN=Available for VAT input] }
    { 31  ;   ;Version No.         ;Integer       ;CaptionML=[ENU=Version No.;
                                                              ENN=Version No.] }
    { 32  ;   ;Doc. No. Occurrence ;Integer       ;CaptionML=[ENU=Doc. No. Occurrence;
                                                              ENN=Doc. No. Occurrence] }
    { 40  ;   ;CVD                 ;Boolean       ;CaptionML=[ENU=CVD;
                                                              ENN=CVD] }
    { 41  ;   ;CVD Payable to Third Party;Boolean ;CaptionML=[ENU=CVD Payable to Third Party;
                                                              ENN=CVD Payable to Third Party] }
    { 42  ;   ;CVD Third Party Code;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=CVD Third Party Code;
                                                              ENN=CVD Third Party Code] }
    { 47  ;   ;Price Inclusive of Tax;Boolean     ;CaptionML=[ENU=Price Inclusive of Tax;
                                                              ENN=Price Inclusive of Tax] }
    { 48  ;   ;Include PIT Calculation;Boolean    ;CaptionML=[ENU=Include PIT Calculation;
                                                              ENN=Include PIT Calculation] }
    { 49  ;   ;Include in TDS Base ;Boolean       ;CaptionML=[ENU=Include in TDS Base;
                                                              ENN=Include in TDS Base] }
    { 50  ;   ;Inc. GST in TDS Base;Boolean       ;CaptionML=[ENU=Inc. GST in TDS Base;
                                                              ENN=Inc. GST in TDS Base];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Type,Calculation Order,Document Type,Document No.,Item No.,Line No.,Tax/Charge Type,Tax/Charge Group,Tax/Charge Code,Doc. No. Occurrence,Version No.;
                                                   Clustered=Yes }
    {    ;Document Type,Document No.,Type,Structure Code,Tax/Charge Type,Tax/Charge Group,Tax/Charge Code,Calculation Type }
    {    ;Document Type,Document No.,Type          }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PurchLine@1280000 : Record 39;
      SalesLine@1280001 : Record 37;

    PROCEDURE Calculate@1280000();
    BEGIN
      IF Type = Type::Purchase THEN BEGIN
        PurchLine.SETRANGE("Document Type","Document Type");
        PurchLine.SETRANGE("Document No.","Document No.");
        PurchLine.SETRANGE("No.","Item No.");
        PurchLine.SETRANGE("Line No.","Line No.");
        IF PurchLine.FINDFIRST THEN BEGIN
          IF "Calculation Type" = "Calculation Type"::"Fixed Value" THEN BEGIN
            Amount := "Calculation Value";
            "Amount (LCY)" := Amount;
          END;
          IF "Calculation Type" = "Calculation Type"::Percentage THEN BEGIN
            IF "Include Base" THEN
              "Base Amount" := PurchLine.Quantity * PurchLine."Direct Unit Cost";
            Amount := "Base Amount" * "Calculation Value" / 100;
            "Amount (LCY)" := Amount;
          END;
          IF "Calculation Type" = "Calculation Type"::"Amount Per Qty" THEN BEGIN
            Amount := PurchLine.Quantity * "Calculation Value" / "Quantity Per";
            "Amount (LCY)" := Amount;
          END;
          IF "Loading on Inventory" THEN BEGIN
            PurchLine."Amount Added to Inventory" := PurchLine."Amount Added to Inventory" + Amount * "% Loading on Inventory" / 100;
            PurchLine.MODIFY;
          END;
          IF "Header/Line" = "Header/Line"::Line THEN
            "Manually Changed" := TRUE;
        END;
      END;

      IF Type = Type::Sale THEN BEGIN
        SalesLine.SETRANGE("Document Type","Document Type");
        SalesLine.SETRANGE("Document No.","Document No.");
        SalesLine.SETRANGE("No.","Item No.");
        SalesLine.SETRANGE("Line No.","Line No.");
        IF SalesLine.FINDFIRST THEN BEGIN
          IF "Calculation Type" = "Calculation Type"::"Fixed Value" THEN BEGIN
            Amount := "Calculation Value";
            "Amount (LCY)" := Amount;
          END;
          IF "Calculation Type" = "Calculation Type"::Percentage THEN BEGIN
            IF "Include Base" THEN
              "Base Amount" := SalesLine.Quantity * SalesLine."Unit Price";
            Amount := "Base Amount" * "Calculation Value" / 100;
            "Amount (LCY)" := Amount;
          END;
          IF "Calculation Type" = "Calculation Type"::"Amount Per Qty" THEN BEGIN
            Amount := SalesLine.Quantity * "Calculation Value" / "Quantity Per";
            "Amount (LCY)" := Amount;
          END;
          IF "Header/Line" = "Header/Line"::Line THEN
            "Manually Changed" := TRUE;
        END;
      END;
    END;

    BEGIN
    END.
  }
}

