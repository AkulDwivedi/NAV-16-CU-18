OBJECT Table 16437 Service Transfer Header
{
  OBJECT-PROPERTIES
  {
    Date=27-04-17;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.48466;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               GetInventorySetup;
               IF "No." = '' THEN BEGIN
                 InventorySetup.TESTFIELD("Service Transfer Order Nos.");
                 NoSeriesManagement.InitSeries(GetNoSeriesCode,xRec."No. Series","Shipment Date","No.","No. Series");
               END;
               InitRecord;
             END;

    OnDelete=BEGIN
               TestStatusOpen;
               ServiceTransferLine.SETRANGE("Document No.","No.");
               ServiceTransferLine.DELETEALL(TRUE);
             END;

    OnRename=BEGIN
               ERROR(RenameErr,TABLECAPTION);
             END;

    CaptionML=[ENU=Service Transfer Header;
               ENN=Service Transfer Header];
    LookupPageID=Page16387;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  GetInventorySetup;
                                                                  NoSeriesManagement.TestManual(GetNoSeriesCode);
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ENN=No.] }
    { 2   ;   ;Transfer-from Code  ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   OnValidate=VAR
                                                                Location@1500000 : Record 14;
                                                                Location1@1500001 : Record 14;
                                                              BEGIN
                                                                TestStatusOpen;
                                                                IF ("Transfer-from Code" = "Transfer-to Code") AND
                                                                   ("Transfer-from Code" <> '')
                                                                THEN
                                                                  ERROR(
                                                                    SameLocErr,
                                                                    FIELDCAPTION("Transfer-from Code"),FIELDCAPTION("Transfer-to Code"),
                                                                    TABLECAPTION,"No.");
                                                                Location.GET("Transfer-from Code");
                                                                Location.TESTFIELD("GST Registration No.");
                                                                IF Location1.GET("Transfer-to Code") THEN
                                                                  IF Location."GST Registration No." = Location1."GST Registration No." THEN
                                                                    ERROR(SameLocRegErr,FIELDCAPTION("Transfer-from Code"),FIELDCAPTION("Transfer-to Code"),
                                                                      TABLECAPTION,"No.");
                                                                IF xRec."Transfer-from Code" <> "Transfer-from Code" THEN BEGIN
                                                                  IF xRec."Transfer-from Code" = '' THEN
                                                                    Confirmed := TRUE
                                                                  ELSE
                                                                    Confirmed := CONFIRM(LocChangeQst,FALSE,FIELDCAPTION("Transfer-from Code"));
                                                                  IF Confirmed THEN BEGIN
                                                                    "Transfer-from Name" := Location.Name;
                                                                    "Transfer-from Name 2" := Location."Name 2";
                                                                    "Transfer-from Address" := Location.Address;
                                                                    "Transfer-from Address 2" := Location."Address 2";
                                                                    "Transfer-from Post Code" := Location."Post Code";
                                                                    "Transfer-from City" := Location.City;
                                                                    "Transfer-from State" := Location."State Code";
                                                                    ClearGSTAmount;
                                                                  END ELSE
                                                                    "Transfer-from Code" := xRec."Transfer-from Code";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Transfer-from Code;
                                                              ENN=Transfer-from Code] }
    { 3   ;   ;Transfer-from Name  ;Text50        ;CaptionML=[ENU=Transfer-from Name;
                                                              ENN=Transfer-from Name] }
    { 4   ;   ;Transfer-from Name 2;Text50        ;CaptionML=[ENU=Transfer-from Name 2;
                                                              ENN=Transfer-from Name 2] }
    { 5   ;   ;Transfer-from Address;Text50       ;CaptionML=[ENU=Transfer-from Address;
                                                              ENN=Transfer-from Address] }
    { 6   ;   ;Transfer-from Address 2;Text50     ;CaptionML=[ENU=Transfer-from Address 2;
                                                              ENN=Transfer-from Address 2] }
    { 7   ;   ;Transfer-from Post Code;Code20     ;OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(
                                                                  "Transfer-from City","Transfer-from Post Code",
                                                                  County,Region,(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   CaptionML=[ENU=Transfer-from Post Code;
                                                              ENN=Transfer-from Post Code] }
    { 8   ;   ;Transfer-from City  ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity(
                                                                  "Transfer-from City","Transfer-from Post Code",
                                                                  County,Region,(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   CaptionML=[ENU=Transfer-from City;
                                                              ENN=Transfer-from City] }
    { 9   ;   ;Transfer-from State ;Code10        ;TableRelation=State;
                                                   CaptionML=[ENU=Transfer-from State;
                                                              ENN=Transfer-from State];
                                                   Editable=No }
    { 10  ;   ;Transfer-to Code    ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   OnValidate=VAR
                                                                Location@1500000 : Record 14;
                                                                Location1@1500001 : Record 14;
                                                              BEGIN
                                                                TestStatusOpen;
                                                                IF ("Transfer-from Code" = "Transfer-to Code") AND
                                                                   ("Transfer-to Code" <> '')
                                                                THEN
                                                                  ERROR(
                                                                    SameLocErr,
                                                                    FIELDCAPTION("Transfer-from Code"),FIELDCAPTION("Transfer-to Code"),
                                                                    TABLECAPTION,"No.");
                                                                Location.GET("Transfer-to Code");
                                                                Location.TESTFIELD("GST Registration No.");
                                                                IF Location1.GET("Transfer-from Code") THEN
                                                                  IF Location."GST Registration No." = Location1."GST Registration No." THEN
                                                                    ERROR(SameLocRegErr,FIELDCAPTION("Transfer-from Code"),FIELDCAPTION("Transfer-to Code"),
                                                                      TABLECAPTION,"No.");
                                                                IF xRec."Transfer-to Code" <> "Transfer-to Code" THEN BEGIN
                                                                  IF xRec."Transfer-to Code" = '' THEN
                                                                    Confirmed := TRUE
                                                                  ELSE
                                                                    Confirmed := CONFIRM(LocChangeQst,FALSE,FIELDCAPTION("Transfer-to Code"));
                                                                  IF Confirmed THEN BEGIN
                                                                    "Transfer-to Name" := Location.Name;
                                                                    "Transfer-to Name 2" := Location."Name 2";
                                                                    "Transfer-to Address" := Location.Address;
                                                                    "Transfer-to Address 2" := Location."Address 2";
                                                                    "Transfer-to Post Code" := Location."Post Code";
                                                                    "Transfer-to City" := Location.City;
                                                                    "Transfer-to State" := Location."State Code";
                                                                    ClearGSTAmount;
                                                                  END ELSE
                                                                    "Transfer-to Code" := xRec."Transfer-to Code";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Transfer-to Code;
                                                              ENN=Transfer-to Code] }
    { 11  ;   ;Transfer-to Name    ;Text50        ;CaptionML=[ENU=Transfer-to Name;
                                                              ENN=Transfer-to Name] }
    { 12  ;   ;Transfer-to Name 2  ;Text50        ;CaptionML=[ENU=Transfer-to Name 2;
                                                              ENN=Transfer-to Name 2] }
    { 13  ;   ;Transfer-to Address ;Text50        ;CaptionML=[ENU=Transfer-to Address;
                                                              ENN=Transfer-to Address] }
    { 14  ;   ;Transfer-to Address 2;Text50       ;CaptionML=[ENU=Transfer-to Address 2;
                                                              ENN=Transfer-to Address 2] }
    { 15  ;   ;Transfer-to Post Code;Code20       ;OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(
                                                                  "Transfer-to City","Transfer-to Post Code",County,
                                                                  Region,(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   CaptionML=[ENU=Transfer-to Post Code;
                                                              ENN=Transfer-to Post Code] }
    { 16  ;   ;Transfer-to City    ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity(
                                                                  "Transfer-to City","Transfer-to Post Code",County,
                                                                  Region,(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   CaptionML=[ENU=Transfer-to City;
                                                              ENN=Transfer-to City] }
    { 17  ;   ;Transfer-to State   ;Code10        ;TableRelation=State;
                                                   CaptionML=[ENU=Transfer-to State;
                                                              ENN=Transfer-to State];
                                                   Editable=No }
    { 19  ;   ;Shipment Date       ;Date          ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                VALIDATE("Receipt Date","Shipment Date");
                                                                ClearGSTAmount;
                                                              END;

                                                   CaptionML=[ENU=Shipment Date;
                                                              ENN=Shipment Date] }
    { 20  ;   ;Receipt Date        ;Date          ;OnValidate=BEGIN
                                                                CheckReceiptDate;
                                                              END;

                                                   CaptionML=[ENU=Receipt Date;
                                                              ENN=Receipt Date] }
    { 21  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              ENN=Status];
                                                   OptionCaptionML=[ENU=Open,Shipped;
                                                                    ENN=Open,Shipped];
                                                   OptionString=Open,Shipped;
                                                   Editable=No }
    { 22  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              ENN=Shortcut Dimension 1 Code];
                                                   CaptionClass='1,2,1' }
    { 23  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              ENN=Shortcut Dimension 2 Code];
                                                   CaptionClass='1,2,2' }
    { 24  ;   ;Ship Control Account;Code20        ;TableRelation="G/L Account" WHERE (Direct Posting=CONST(Yes));
                                                   OnValidate=VAR
                                                                GLAccount@1500000 : Record 15;
                                                              BEGIN
                                                                TestStatusOpen;
                                                                GLAccount.GET("Ship Control Account");
                                                                GLAccount.TESTFIELD(Blocked,FALSE);
                                                                UpdateServiceTransLines(FIELDNO("Ship Control Account"));
                                                              END;

                                                   CaptionML=[ENU=Ship Control Account;
                                                              ENN=Ship Control Account] }
    { 25  ;   ;Receive Control Account;Code20     ;TableRelation="G/L Account" WHERE (Direct Posting=CONST(Yes));
                                                   OnValidate=VAR
                                                                GLAccount@1500000 : Record 15;
                                                              BEGIN
                                                                GLAccount.GET("Receive Control Account");
                                                                GLAccount.TESTFIELD(Blocked,FALSE);
                                                                UpdateServiceTransLines(FIELDNO("Receive Control Account"));
                                                              END;

                                                   CaptionML=[ENU=Receive Control Account;
                                                              ENN=Receive Control Account] }
    { 27  ;   ;External Doc No.    ;Code20        ;CaptionML=[ENU=External Doc No.;
                                                              ENN=External Doc No.] }
    { 28  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ENN=No. Series] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDocDim;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              ENN=Dimension Set ID] }
    { 9000;   ;Assigned User ID    ;Code50        ;TableRelation="User Setup";
                                                   CaptionML=[ENU=Assigned User ID;
                                                              ENN=Assigned User ID] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      RenameErr@1500006 : TextConst '@@@="%1 = Table Name";ENU=You cannot rename a %1.;ENN=You cannot rename a %1.';
      SameLocErr@1500001 : TextConst '@@@="%1 = From Location, %2 = To Location, %3 = Table Name, %4 = Document No";ENU=%1 and %2 cannot be the same in %3 %4.;ENN=%1 and %2 cannot be the same in %3 %4.';
      InventorySetup@1500003 : Record 313;
      PostCode@1500007 : Record 225;
      ServiceTransferLine@1500004 : Record 16438;
      ServiceTransferHeader@1500013 : Record 16437;
      NoSeriesManagement@1500002 : Codeunit 396;
      DimensionManagement@1500012 : Codeunit 408;
      Confirmed@1500005 : Boolean;
      HasInventorySetup@1500000 : Boolean;
      LocChangeQst@1500008 : TextConst '@@@="%1 = Location Code.";ENU=Do you want to change %1?;ENN=Do you want to change %1?';
      County@1500009 : Text[30];
      Region@1500010 : Code[10];
      DimChangeQst@1500014 : TextConst 'ENU=You may have changed a dimension.\\Do you want to update the lines?;ENN=You may have changed a dimension.\\Do you want to update the lines?';
      SameLocRegErr@1500015 : TextConst '@@@="%1 = From Location, %2 = To Location, %3 = Table Name, %4 = Document No";ENU=Registration No.s in %1 and %2 cannot be the same in %3 %4.;ENN=Registration No.s in %1 and %2 cannot be the same in %3 %4.';
      ReceiptDateErr@1500016 : TextConst '@@@="%1 = Receipt Date, %2 = Shipment Date";ENU=%1 can not be less than %2.;ENN=%1 can not be less than %2.';

    PROCEDURE InitRecord@1500006();
    BEGIN
      VALIDATE("Shipment Date",WORKDATE);
    END;

    LOCAL PROCEDURE GetInventorySetup@1500003();
    BEGIN
      IF NOT HasInventorySetup THEN BEGIN
        InventorySetup.GET;
        HasInventorySetup := TRUE;
      END;
    END;

    LOCAL PROCEDURE GetNoSeriesCode@1500004() : Code[10];
    BEGIN
      EXIT(InventorySetup."Service Transfer Order Nos.");
    END;

    LOCAL PROCEDURE TestStatusOpen@1500001();
    BEGIN
      TESTFIELD(Status,Status::Open);
      ServiceTransferLine.SETRANGE("Document No.","No.");
      ServiceTransferLine.SETRANGE(Shipped,TRUE);
      IF ServiceTransferLine.FINDFIRST THEN
        ServiceTransferLine.TESTFIELD(Shipped,FALSE);
    END;

    LOCAL PROCEDURE ValidateShortcutDimCode@1500007(FieldNumber@1500002 : Integer;VAR ShortcutDimCode@1500001 : Code[20]);
    VAR
      OldDimSetID@1500000 : Integer;
    BEGIN
      OldDimSetID := "Dimension Set ID";
      DimensionManagement.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");

      IF OldDimSetID <> "Dimension Set ID" THEN BEGIN
        MODIFY;
        IF ServiceTransferLinesExist THEN
          UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      END;
    END;

    LOCAL PROCEDURE ServiceTransferLinesExist@1500009() : Boolean;
    BEGIN
      ServiceTransferLine.RESET;
      ServiceTransferLine.SETRANGE("Document No.","No.");
      EXIT(ServiceTransferLine.FINDFIRST);
    END;

    LOCAL PROCEDURE UpdateAllLineDim@1500008(NewParentDimSetID@1500001 : Integer;OldParentDimSetID@1500000 : Integer);
    VAR
      NewDimSetID@1500003 : Integer;
      ShippedLineDimChangeConfirmed@1500002 : Boolean;
    BEGIN
      // Update all lines with changed dimensions.

      IF NewParentDimSetID = OldParentDimSetID THEN
        EXIT;
      IF NOT CONFIRM(DimChangeQst) THEN
        EXIT;

      ServiceTransferLine.RESET;
      ServiceTransferLine.SETRANGE("Document No.","No.");
      ServiceTransferLine.LOCKTABLE;
      IF ServiceTransferLine.FINDSET THEN
        REPEAT
          NewDimSetID :=
            DimensionManagement.GetDeltaDimSetID(ServiceTransferLine."Dimension Set ID",NewParentDimSetID,OldParentDimSetID);
          IF ServiceTransferLine."Dimension Set ID" <> NewDimSetID THEN BEGIN
            ServiceTransferLine."Dimension Set ID" := NewDimSetID;

            VerifyShippedLineDimChange(ShippedLineDimChangeConfirmed);

            DimensionManagement.UpdateGlobalDimFromDimSetID(
              ServiceTransferLine."Dimension Set ID",ServiceTransferLine."Shortcut Dimension 1 Code",
              ServiceTransferLine."Shortcut Dimension 2 Code");
            ServiceTransferLine.MODIFY;
          END;
        UNTIL ServiceTransferLine.NEXT = 0;
    END;

    LOCAL PROCEDURE VerifyShippedLineDimChange@1500010(VAR ShippedLineDimChangeConfirmed@1500001 : Boolean);
    BEGIN
      IF ServiceTransferLine.IsShippedDimChanged THEN
        IF NOT ShippedLineDimChangeConfirmed THEN
          ShippedLineDimChangeConfirmed := ServiceTransferLine.ConfirmShippedDimChange;
    END;

    PROCEDURE ShowDocDim@1500002();
    VAR
      OldDimSetID@1500000 : Integer;
    BEGIN
      OldDimSetID := "Dimension Set ID";
      "Dimension Set ID" :=
        DimensionManagement.EditDimensionSet2("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      IF OldDimSetID <> "Dimension Set ID" THEN BEGIN
        MODIFY;
        IF ServiceTransferLinesExist THEN
          UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      END;
    END;

    LOCAL PROCEDURE UpdateServiceTransLines@1500005(FieldRef@1500000 : Integer);
    VAR
      ServiceTransferLine@1500001 : Record 16438;
    BEGIN
      ServiceTransferLine.SETRANGE("Document No.","No.");
      ServiceTransferLine.SETFILTER("Transfer From G/L Account No.",'<>%1','');
      IF ServiceTransferLine.FINDSET THEN BEGIN
        ServiceTransferLine.LOCKTABLE;
        REPEAT
          CASE FieldRef OF
            FIELDNO("Ship Control Account"):
              ServiceTransferLine.VALIDATE("Ship Control A/C No.","Ship Control Account");
            FIELDNO("Receive Control Account"):
              ServiceTransferLine.VALIDATE("Receive Control A/C No.","Receive Control Account");
          END;
          ServiceTransferLine.MODIFY(TRUE);
        UNTIL ServiceTransferLine.NEXT = 0;
      END;
    END;

    PROCEDURE AssistEdit@1500000(OldServiceTransferHeader@1500000 : Record 16437) : Boolean;
    BEGIN
      WITH ServiceTransferHeader DO BEGIN
        ServiceTransferHeader := Rec;
        GetInventorySetup;
        InventorySetup.TESTFIELD("Service Transfer Order Nos.");
        IF NoSeriesManagement.SelectSeries(GetNoSeriesCode,OldServiceTransferHeader."No. Series","No. Series") THEN BEGIN
          NoSeriesManagement.SetSeries("No.");
          Rec := ServiceTransferHeader;
          EXIT(TRUE);
        END;
      END;
    END;

    LOCAL PROCEDURE ClearGSTAmount@1500011();
    VAR
      ServiceTransferLine@1500000 : Record 16438;
    BEGIN
      ServiceTransferLine.SETRANGE("Document No.","No.");
      ServiceTransferLine.MODIFYALL("Total GST Amount",0);
    END;

    LOCAL PROCEDURE CheckReceiptDate@1500012();
    BEGIN
      IF ("Shipment Date" <> 0D) AND ("Receipt Date" <> 0D) THEN
        IF "Shipment Date" > "Receipt Date" THEN
          ERROR(ReceiptDateErr,FIELDCAPTION("Receipt Date"),FIELDCAPTION("Shipment Date"));
    END;

    BEGIN
    END.
  }
}

