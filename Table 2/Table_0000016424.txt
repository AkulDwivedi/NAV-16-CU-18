OBJECT Table 16424 GST Liability Line
{
  OBJECT-PROPERTIES
  {
    Date=27-09-17;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.49326;
  }
  PROPERTIES
  {
    CaptionML=[ENU=GST Liability Line;
               ENN=GST Liability Line];
  }
  FIELDS
  {
    { 1   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ENN=Document No.] }
    { 2   ;   ;Document Line No.   ;Integer       ;CaptionML=[ENU=Document Line No.;
                                                              ENN=Document Line No.] }
    { 3   ;   ;Liability Document No.;Code20      ;CaptionML=[ENU=Liability Document No.;
                                                              ENN=Liability Document No.] }
    { 4   ;   ;Liability Document Line No.;Integer;CaptionML=[ENU=Liability Document Line No.;
                                                              ENN=Liability Document Line No.] }
    { 5   ;   ;Liability Date      ;Date          ;CaptionML=[ENU=Liability Date;
                                                              ENN=Liability Date] }
    { 6   ;   ;Parent Item No.     ;Code20        ;CaptionML=[ENU=Parent Item No.;
                                                              ENN=Parent Item No.] }
    { 8   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Item No.;
                                                              ENN=Item No.] }
    { 9   ;   ;Unit of Measure     ;Code20        ;CaptionML=[ENU=Unit of Measure;
                                                              ENN=Unit of Measure] }
    { 10  ;   ;Prod. BOM Quantity  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Component"."Expected Quantity" WHERE (Status=CONST(Released),
                                                                                                                      Prod. Order No.=FIELD(Production Order No.),
                                                                                                                      Prod. Order Line No.=FIELD(Production Order Line No.),
                                                                                                                      Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Prod. BOM Quantity;
                                                              ENN=Prod. BOM Quantity] }
    { 11  ;   ;Quantity To Send    ;Decimal       ;CaptionML=[ENU=Quantity To Send;
                                                              ENN=Quantity To Send] }
    { 12  ;   ;Quantity (Base)     ;Decimal       ;CaptionML=[ENU=Quantity (Base);
                                                              ENN=Quantity (Base)] }
    { 13  ;   ;Quantity To Send (Base);Decimal    ;CaptionML=[ENU=Quantity To Send (Base);
                                                              ENN=Quantity To Send (Base)] }
    { 14  ;   ;Description         ;Text30        ;CaptionML=[ENU=Description;
                                                              ENN=Description] }
    { 15  ;   ;Position            ;Code10        ;CaptionML=[ENU=Position;
                                                              ENN=Position] }
    { 16  ;   ;Position 2          ;Code10        ;CaptionML=[ENU=Position 2;
                                                              ENN=Position 2] }
    { 17  ;   ;Position 3          ;Code10        ;CaptionML=[ENU=Position 3;
                                                              ENN=Position 3] }
    { 18  ;   ;Production Lead Time;DateFormula   ;CaptionML=[ENU=Production Lead Time;
                                                              ENN=Production Lead Time] }
    { 19  ;   ;Routing Link Code   ;Code10        ;TableRelation="Routing Link";
                                                   CaptionML=[ENU=Routing Link Code;
                                                              ENN=Routing Link Code] }
    { 20  ;   ;Scrap %             ;Decimal       ;CaptionML=[ENU=Scrap %;
                                                              ENN=Scrap %] }
    { 21  ;   ;Variant Code        ;Code10        ;CaptionML=[ENU=Variant Code;
                                                              ENN=Variant Code] }
    { 22  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              ENN=Shortcut Dimension 1 Code] }
    { 23  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              ENN=Shortcut Dimension 2 Code] }
    { 28  ;   ;Starting Date       ;Date          ;CaptionML=[ENU=Starting Date;
                                                              ENN=Starting Date] }
    { 29  ;   ;Ending Date         ;Date          ;CaptionML=[ENU=Ending Date;
                                                              ENN=Ending Date] }
    { 40  ;   ;Length              ;Decimal       ;CaptionML=[ENU=Length;
                                                              ENN=Length] }
    { 41  ;   ;Width               ;Decimal       ;CaptionML=[ENU=Width;
                                                              ENN=Width] }
    { 42  ;   ;Weight              ;Decimal       ;CaptionML=[ENU=Weight;
                                                              ENN=Weight] }
    { 43  ;   ;Depth               ;Decimal       ;CaptionML=[ENU=Depth;
                                                              ENN=Depth] }
    { 44  ;   ;Calculation Formula ;Option        ;CaptionML=[ENU=Calculation Formula;
                                                              ENN=Calculation Formula];
                                                   OptionCaptionML=[ENU=" ,Length,Length*Width,Length*Width*Depth,Weight";
                                                                    ENN=" ,Length,Length*Width,Length*Width*Depth,Weight"];
                                                   OptionString=[ ,Length,Length*Width,Length*Width*Depth,Weight] }
    { 45  ;   ;Quantity Per        ;Decimal       ;CaptionML=[ENU=Quantity Per;
                                                              ENN=Quantity Per] }
    { 46  ;   ;Company Location    ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No),
                                                                                 Subcontracting Location=CONST(No));
                                                   CaptionML=[ENU=Company Location;
                                                              ENN=Company Location] }
    { 47  ;   ;Vendor Location     ;Code10        ;CaptionML=[ENU=Vendor Location;
                                                              ENN=Vendor Location] }
    { 48  ;   ;Production Order No.;Code20        ;CaptionML=[ENU=Production Order No.;
                                                              ENN=Production Order No.] }
    { 49  ;   ;Production Order Line No.;Integer  ;CaptionML=[ENU=Production Order Line No.;
                                                              ENN=Production Order Line No.] }
    { 50  ;   ;Line Type           ;Option        ;CaptionML=[ENU=Line Type;
                                                              ENN=Line Type];
                                                   OptionCaptionML=[ENU=Production,Purchase;
                                                                    ENN=Production,Purchase];
                                                   OptionString=Production,Purchase }
    { 51  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              ENN=Gen. Prod. Posting Group] }
    { 52  ;   ;Quantity at Vendor Location;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry"."Remaining Quantity" WHERE (Item No.=FIELD(Item No.),
                                                                                                                   Location Code=FIELD(Vendor Location)));
                                                   CaptionML=[ENU=Quantity at Vendor Location;
                                                              ENN=Quantity at Vendor Location] }
    { 53  ;   ;Total Scrap Quantity;Decimal       ;CaptionML=[ENU=Total Scrap Quantity;
                                                              ENN=Total Scrap Quantity] }
    { 54  ;   ;Deliver Challan No. ;Code10        ;CaptionML=[ENU=Deliver Challan No.;
                                                              ENN=Deliver Challan No.] }
    { 55  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ENN=Line No.] }
    { 56  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              ENN=Quantity] }
    { 57  ;   ;Remaining Quantity  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry"."Remaining Quantity" WHERE (Entry Type=CONST(Transfer),
                                                                                                                   Location Code=FIELD(Vendor Location),
                                                                                                                   External Document No.=FIELD(Deliver Challan No.),
                                                                                                                   Item No.=FIELD(Item No.),
                                                                                                                   Order Type=CONST(Production),
                                                                                                                   Order No.=FIELD(Production Order No.),
                                                                                                                   Order Line No.=FIELD(Production Order Line No.)));
                                                   CaptionML=[ENU=Remaining Quantity;
                                                              ENN=Remaining Quantity] }
    { 58  ;   ;Components in Rework Qty.;Decimal  ;CaptionML=[ENU=Components in Rework Qty.;
                                                              ENN=Components in Rework Qty.] }
    { 59  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ENN=Posting Date] }
    { 60  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Vendor No.;
                                                              ENN=Vendor No.] }
    { 61  ;   ;Process Description ;Text30        ;CaptionML=[ENU=Process Description;
                                                              ENN=Process Description] }
    { 62  ;   ;Prod. Order Comp. Line No.;Integer ;CaptionML=[ENU=Prod. Order Comp. Line No.;
                                                              ENN=Prod. Order Comp. Line No.] }
    { 83  ;   ;Debit Note Created  ;Boolean       ;CaptionML=[ENU=Debit Note Created;
                                                              ENN=Debit Note Created] }
    { 84  ;   ;Return Date         ;Date          ;CaptionML=[ENU=Return Date;
                                                              ENN=Return Date] }
    { 94  ;   ;Job Work Return Period (GST);Integer;
                                                   CaptionML=[ENU=Job Work Return Period (GST);
                                                              ENN=Job Work Return Period (GST)] }
    { 100 ;   ;Identification Mark ;Text20        ;CaptionML=[ENU=Identification Mark;
                                                              ENN=Identification Mark] }
    { 102 ;   ;GST Group Code      ;Code20        ;TableRelation="GST Group";
                                                   CaptionML=[ENU=GST Group Code;
                                                              ENN=GST Group Code] }
    { 103 ;   ;HSN/SAC Code        ;Code8         ;TableRelation=HSN/SAC.Code WHERE (GST Group Code=FIELD(GST Group Code));
                                                   CaptionML=[ENU=HSN/SAC Code;
                                                              ENN=HSN/SAC Code] }
    { 104 ;   ;GST Base Amount     ;Decimal       ;CaptionML=[ENU=GST Base Amount;
                                                              ENN=GST Base Amount] }
    { 105 ;   ;GST Amount          ;Decimal       ;CaptionML=[ENU=GST Amount;
                                                              ENN=GST Amount] }
    { 106 ;   ;GST Liability Created;Decimal      ;CaptionML=[ENU=GST Liability Created;
                                                              ENN=GST Liability Created] }
    { 107 ;   ;GST Last Date       ;Date          ;CaptionML=[ENU=GST Last Date;
                                                              ENN=GST Last Date] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;CaptionML=[ENU=Dimension Set ID;
                                                              ENN=Dimension Set ID] }
  }
  KEYS
  {
    {    ;Liability Document No.,Liability Document Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      JnlQst@1500007 : TextConst 'ENU=Do you want to post the journal lines?;ENN=Do you want to post the journal lines?';
      TempGSTPostingBuffer@1500006 : ARRAY [2] OF TEMPORARY Record 16420;
      GLSetup@1500005 : Record 98;
      SourceCodeSetup@1500004 : Record 242;
      DimMgt@1500003 : Codeunit 408;
      GSTManagement@1500002 : Codeunit 16401;
      GenJnlPostLine@1500001 : Codeunit 12;
      NoSeriesMgt@1500000 : Codeunit 396;
      TransctionNo@1500008 : Integer;
      DeliveryChallanNo@1500009 : Code[10];
      DocumentNo@1500018 : Code[20];

    PROCEDURE PostGSTLiability@1500000();
    VAR
      PostedGSTLiabilityLine@1500003 : Record 16425;
      DeliveryChallanLine@1500002 : Record 16324;
      DetailedGSTEntryBuffer@1500001 : Record 16412;
      GSTLiabilityLine@1500000 : Record 16424;
      deliveryChallanNo@1500005 : Code[20];
    BEGIN
      IF NOT CONFIRM(JnlQst) THEN
        ERROR('');

      GSTLiabilityLine.COPY(Rec);
      IF GSTLiabilityLine.FINDSET THEN BEGIN
        REPEAT
          GSTLiabilityLine.CALCFIELDS("Remaining Quantity","Prod. BOM Quantity","Quantity at Vendor Location");
          TempGSTPostingBuffer[1].DELETEALL;
          IF deliveryChallanNo <> GSTLiabilityLine."Deliver Challan No." THEN
            FillGSTPostingBuffer(GSTLiabilityLine."Deliver Challan No.",GSTLiabilityLine."Liability Document No.");
          deliveryChallanNo := GSTLiabilityLine."Deliver Challan No.";
          PostedGSTLiabilityLine.INIT;
          PostedGSTLiabilityLine.TRANSFERFIELDS(GSTLiabilityLine);
          PostedGSTLiabilityLine."Remaining Quantity" := GSTLiabilityLine."Remaining Quantity";
          PostedGSTLiabilityLine."Prod. BOM Quantity" := GSTLiabilityLine."Prod. BOM Quantity";
          PostedGSTLiabilityLine."Quantity at Vendor Location" := GSTLiabilityLine."Quantity at Vendor Location";
          PostedGSTLiabilityLine."GST Liability Created" := GSTLiabilityLine."GST Amount";
          PostedGSTLiabilityLine.INSERT(TRUE);
          DeliveryChallanLine.RESET;
          DeliveryChallanLine.SETRANGE("Deliver Challan No.",GSTLiabilityLine."Deliver Challan No.");
          DeliveryChallanLine.SETRANGE("Line No.",GSTLiabilityLine."Line No.");
          IF DeliveryChallanLine.FINDFIRST THEN BEGIN
            DeliveryChallanLine."GST Liability Created" += GSTLiabilityLine."GST Amount";
            DeliveryChallanLine."GST Amount Remaining" := DeliveryChallanLine."GST Amount Remaining" - GSTLiabilityLine."GST Amount";
            DeliveryChallanLine.MODIFY;
          END;
        UNTIL GSTLiabilityLine.NEXT = 0;
      END;
      REPEAT
        GSTManagement.DeleteGSTBuffer(
          DetailedGSTEntryBuffer."Transaction Type"::Production,0,"Deliver Challan No.","Line No.");
      UNTIL NEXT = 0;
    END;

    PROCEDURE FillGSTPostingBuffer@1500006(DCNo@1500006 : Code[20];LiabilityDocumentNo@15000024 : Code[20]);
    VAR
      DetailedGSTEntryBuffer@1500007 : Record 16412;
      Location@1500005 : Record 14;
      Vendor@1500004 : Record 23;
      GSTLiabilityLine@1500002 : Record 16424;
      GSTStateCode@1500003 : Code[10];
    BEGIN
      GLSetup.GET;
      GLSetup.TESTFIELD("Sub-Con Interim Account");
      SourceCodeSetup.GET;
      SourceCodeSetup.TESTFIELD("GST Liability - Job Work");
      CLEAR(GenJnlPostLine);
      GSTLiabilityLine.RESET;
      GSTLiabilityLine.SETRANGE("Deliver Challan No.",DCNo);
      GSTLiabilityLine.SETRANGE("Liability Document No.",LiabilityDocumentNo);
      IF GSTLiabilityLine.FINDSET THEN
        REPEAT
          CALCFIELDS("Remaining Quantity");
          DetailedGSTEntryBuffer.RESET;
          DetailedGSTEntryBuffer.SETCURRENTKEY("Transaction Type","Document Type","Document No.","Line No.");
          DetailedGSTEntryBuffer.SETRANGE("Transaction Type",DetailedGSTEntryBuffer."Transaction Type"::Production);
          DetailedGSTEntryBuffer.SETRANGE("Document No.",GSTLiabilityLine."Deliver Challan No.");
          DetailedGSTEntryBuffer.SETRANGE("Posting Date",GSTLiabilityLine."GST Last Date");
          DetailedGSTEntryBuffer.SETRANGE("No.",GSTLiabilityLine."Item No.");
          DetailedGSTEntryBuffer.SETFILTER("GST Base Amount",'<>%1',0);
          IF DetailedGSTEntryBuffer.FINDSET THEN BEGIN
            REPEAT
              IF Vendor.GET(GSTLiabilityLine."Vendor No.") THEN;
              Location.GET(GSTLiabilityLine."Company Location");
              Location.TESTFIELD("GST Liability Invoice");
              Location.TESTFIELD("State Code");
              CLEAR(NoSeriesMgt);
              IF GSTLiabilityLine."Deliver Challan No." <> DeliveryChallanNo THEN
                DocumentNo := NoSeriesMgt.GetNextNo(Location."GST Liability Invoice",GSTLiabilityLine."Posting Date",TRUE);
              TempGSTPostingBuffer[1]."Transaction Type" := TempGSTPostingBuffer[1]."Transaction Type"::Purchase;
              TempGSTPostingBuffer[1].Type := DetailedGSTEntryBuffer.Type;
              TempGSTPostingBuffer[1]."Gen. Bus. Posting Group" := Vendor."Gen. Bus. Posting Group";
              TempGSTPostingBuffer[1]."Gen. Prod. Posting Group" := "Gen. Prod. Posting Group";
              TempGSTPostingBuffer[1]."GST Component Code" := DetailedGSTEntryBuffer."GST Component Code";
              TempGSTPostingBuffer[1]."GST Group Code" := DetailedGSTEntryBuffer."GST Group Code";
              TempGSTPostingBuffer[1]."Global Dimension 1 Code" := GSTLiabilityLine."Shortcut Dimension 1 Code";
              TempGSTPostingBuffer[1]."Global Dimension 2 Code" := GSTLiabilityLine."Shortcut Dimension 2 Code";
              TempGSTPostingBuffer[1]."GST %" := DetailedGSTEntryBuffer."GST %";
              TempGSTPostingBuffer[1]."Party Code" := DetailedGSTEntryBuffer."Source No.";
              TempGSTPostingBuffer[1]."GST Base Amount" := DetailedGSTEntryBuffer."GST Base Amount";
              TempGSTPostingBuffer[1]."GST Amount" := DetailedGSTEntryBuffer."GST Amount";
              GSTStateCode := Location."State Code";
              TempGSTPostingBuffer[1]."Account No." :=
                GSTManagement.GetGSTPayableAccountNo(GSTStateCode,TempGSTPostingBuffer[1]."GST Component Code");
              TempGSTPostingBuffer[1]."Bal. Account No." := GLSetup."Sub-Con Interim Account";
              UpdateGSTPostingBuffer(GSTLiabilityLine."Dimension Set ID");
              FillGSTInGenJnlLine(
                TempGSTPostingBuffer[1],GSTLiabilityLine."Liability Date",GSTLiabilityLine."Item No.",
                DocumentNo,"Dimension Set ID",TransctionNo);
              InsertGSTLedgerEntry(
                TempGSTPostingBuffer[1],GSTLiabilityLine."Liability Date",DocumentNo,
                SourceCodeSetup."GST Liability - Job Work",GSTLiabilityLine."Deliver Challan No.");
              InsertDetailedGSTLedgerEntry(TempGSTPostingBuffer[1],GSTLiabilityLine,DetailedGSTEntryBuffer,DocumentNo);
              DeliveryChallanNo := GSTLiabilityLine."Deliver Challan No.";
            UNTIL DetailedGSTEntryBuffer.NEXT = 0;
          END;
        UNTIL GSTLiabilityLine.NEXT = 0;
    END;

    LOCAL PROCEDURE UpdateGSTPostingBuffer@1500008(DimensionSetID@1500000 : Integer);
    BEGIN
      TempGSTPostingBuffer[1]."Dimension Set ID" := DimensionSetID;
      DimMgt.UpdateGlobalDimFromDimSetID(TempGSTPostingBuffer[1]."Dimension Set ID",
        TempGSTPostingBuffer[1]."Global Dimension 1 Code",TempGSTPostingBuffer[1]."Global Dimension 2 Code");

      TempGSTPostingBuffer[2] := TempGSTPostingBuffer[1];
      IF TempGSTPostingBuffer[2].FIND THEN BEGIN
        TempGSTPostingBuffer[2]."GST Base Amount" += TempGSTPostingBuffer[1]."GST Base Amount";
        TempGSTPostingBuffer[2]."GST Amount" += TempGSTPostingBuffer[1]."GST Amount";
        TempGSTPostingBuffer[2]."Interim Amount" += TempGSTPostingBuffer[1]."Interim Amount";
        TempGSTPostingBuffer[2].MODIFY;
      END ELSE
        TempGSTPostingBuffer[1].INSERT;
    END;

    PROCEDURE FillGSTInGenJnlLine@1500011(GSTPostingBuffer@1500004 : Record 16420;LiabilityDate@1500003 : Date;ItemNo@1500009 : Code[20];DocumentNo@1500002 : Code[20];DimensionSetID@1500000 : Integer;VAR GLEntryNo@1500008 : Integer);
    VAR
      GenJournalLine@1500005 : Record 81;
      LineNo@1500001 : Integer;
    BEGIN
      LineNo := 0;
      SourceCodeSetup.GET;
      GenJournalLine.LOCKTABLE;
      GenJournalLine.RESET;
      GenJournalLine.SETRANGE("Journal Template Name",'');
      GenJournalLine.SETRANGE("Journal Batch Name",'');
      IF GenJournalLine.FINDLAST THEN
        LineNo := GenJournalLine."Line No." + 10000
      ELSE
        LineNo := 10000;
      GenJournalLine.INIT;
      GenJournalLine."Journal Template Name" := '';
      GenJournalLine."Journal Batch Name" := '';
      GenJournalLine."Line No." := LineNo;
      LineNo += 10000;
      GenJournalLine.VALIDATE("Posting Date",LiabilityDate);
      GenJournalLine.VALIDATE("Document No.",DocumentNo);
      GenJournalLine.VALIDATE("Account Type",GenJournalLine."Account Type"::"G/L Account");
      GenJournalLine.VALIDATE("Source Code",SourceCodeSetup."GST Liability - Job Work");
      GenJournalLine.VALIDATE("Account No.",GSTPostingBuffer."Account No.");
      GenJournalLine.VALIDATE("Bal. Account Type",GenJournalLine."Bal. Account Type"::"G/L Account");
      GenJournalLine.VALIDATE("Bal. Account No.",GSTPostingBuffer."Bal. Account No.");
      GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",GSTPostingBuffer."Global Dimension 1 Code");
      GenJournalLine.VALIDATE("Shortcut Dimension 2 Code",GSTPostingBuffer."Global Dimension 2 Code");
      GenJournalLine."Dimension Set ID" := DimensionSetID;
      GenJournalLine.VALIDATE(Amount,GSTPostingBuffer."GST Amount");
      GenJournalLine.VALIDATE("Item No.",ItemNo);
      GenJournalLine."Gen. Posting Type" := GenJournalLine."Gen. Posting Type"::Purchase;
      GenJournalLine.VALIDATE("System-Created Entry",TRUE);
      GenJournalLine.VALIDATE("Gen. Prod. Posting Group",GSTPostingBuffer."Gen. Prod. Posting Group");
      GenJournalLine.INSERT;
      GenJnlPostLine.RunWithCheck(GenJournalLine);
      GLEntryNo := GenJnlPostLine.GetNextTransactionNo;
    END;

    PROCEDURE ShowDimensions@1500156();
    BEGIN
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2 %3',TABLECAPTION,"Document No.","Line No."));
      DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE ValidateShortcutDimCode@19(FieldNumber@1500160 : Integer;VAR ShortcutDimCode@1500161 : Code[20]);
    VAR
      DimMgt@1500000 : Codeunit 408;
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE InsertGSTLedgerEntry@1500071(GSTPostingBuffer@1500001 : Record 16420;LiabilityDate@1500004 : Date;DocumentNo@1500000 : Code[20];LiabilityJobWork@1500003 : Code[10];ExternalDocumentno@15000021 : Code[35]);
    VAR
      GSTLedgerEntry@1500002 : Record 16418;
    BEGIN
      GSTLedgerEntry.INIT;
      GSTLedgerEntry."Entry No." := GSTManagement.GetNextGSTLedgerEntryNo;
      GSTLedgerEntry."Posting Date" := LiabilityDate;
      GSTLedgerEntry."Document Type" := GSTLedgerEntry."Document Type"::Invoice;
      GSTLedgerEntry."Document No." := DocumentNo;
      GSTLedgerEntry."Transaction Type" := GSTLedgerEntry."Transaction Type"::Sales;
      GSTLedgerEntry."GST Base Amount" := GSTPostingBuffer."GST Base Amount";
      GSTLedgerEntry."GST Amount" := GSTPostingBuffer."GST Amount";
      GSTLedgerEntry."Source Type" := GSTLedgerEntry."Source Type"::"G/L Account";
      GSTLedgerEntry."Source No." := GSTPostingBuffer."Account No.";
      GSTLedgerEntry."Source Code" := LiabilityJobWork;
      GSTLedgerEntry."Gen. Bus. Posting Group" := GSTPostingBuffer."Gen. Bus. Posting Group";
      GSTLedgerEntry."Gen. Prod. Posting Group" := GSTPostingBuffer."Gen. Prod. Posting Group";
      GSTLedgerEntry."GST Component Code" := GSTPostingBuffer."GST Component Code";
      GSTLedgerEntry."External Document No." := ExternalDocumentno;
      GSTLedgerEntry."Transaction No." := TransctionNo;
      GSTLedgerEntry."User ID" := USERID;
      GSTLedgerEntry.INSERT(TRUE);
    END;

    LOCAL PROCEDURE InsertDetailedGSTLedgerEntry@1500003(GSTPostingBuffer@1500004 : Record 16420;GSTLiabilityLine@1500003 : Record 16424;DetailedGSTEntryBuffer@1500002 : Record 16412;DocumentNo@1500001 : Code[20]);
    VAR
      DetailedGSTLedgerEntry@1500000 : Record 16419;
      Vendor@1500005 : Record 23;
      GeneralLedgerSetup@15000015 : Record 98;
    BEGIN
      GeneralLedgerSetup.GET;
      DetailedGSTLedgerEntry.INIT;
      DetailedGSTLedgerEntry."Entry No." := GSTManagement.GetNextGSTDetailEntryNo;
      DetailedGSTLedgerEntry."Entry Type" := DetailedGSTLedgerEntry."Entry Type"::"Initial Entry";
      DetailedGSTLedgerEntry."Transaction Type" := DetailedGSTLedgerEntry."Transaction Type"::Sales;
      DetailedGSTLedgerEntry."Posting Date" := GSTLiabilityLine."Liability Date";
      DetailedGSTLedgerEntry."Document Type" := DetailedGSTLedgerEntry."Document Type"::Invoice;
      DetailedGSTLedgerEntry."Document No." := DocumentNo;
      DetailedGSTLedgerEntry."External Document No." := GSTLiabilityLine."Deliver Challan No.";
      DetailedGSTLedgerEntry."Source Type" := DetailedGSTLedgerEntry."Source Type"::Vendor;
      DetailedGSTLedgerEntry."Source No." := GSTLiabilityLine."Vendor No.";
      IF Vendor.GET(GSTLiabilityLine."Vendor No.") THEN
        DetailedGSTLedgerEntry."GST Vendor Type" := Vendor."GST Vendor Type";
      DetailedGSTLedgerEntry."GST Customer Type" := DetailedGSTLedgerEntry."GST Customer Type"::Registered;
      DetailedGSTLedgerEntry."G/L Account No." := GSTPostingBuffer."Account No.";
      DetailedGSTLedgerEntry."GST Base Amount" := GSTPostingBuffer."GST Base Amount";
      DetailedGSTLedgerEntry."GST Amount" := GSTPostingBuffer."GST Amount";
      DetailedGSTLedgerEntry."GST %" := GSTPostingBuffer."GST %";
      DetailedGSTLedgerEntry."GST Component Code" := GSTPostingBuffer."GST Component Code";
      DetailedGSTLedgerEntry."HSN/SAC Code" := DetailedGSTEntryBuffer."HSN/SAC Code";
      DetailedGSTLedgerEntry."GST Group Code" := DetailedGSTEntryBuffer."GST Group Code";
      DetailedGSTLedgerEntry.Type := DetailedGSTEntryBuffer.Type;
      DetailedGSTLedgerEntry."No." := DetailedGSTEntryBuffer."No.";
      DetailedGSTLedgerEntry.Quantity := DetailedGSTEntryBuffer.Quantity;
      DetailedGSTLedgerEntry."Document Line No." := GSTLiabilityLine."Line No.";
      DetailedGSTLedgerEntry."Location Code" := DetailedGSTEntryBuffer."Location Code";
      DetailedGSTLedgerEntry."Location  Reg. No." := DetailedGSTEntryBuffer."Location  Reg. No.";
      DetailedGSTLedgerEntry."Location State Code" := DetailedGSTEntryBuffer."Location State Code";
      DetailedGSTLedgerEntry."Buyer/Seller State Code" := DetailedGSTEntryBuffer."Buyer/Seller State Code";
      DetailedGSTLedgerEntry."Buyer/Seller Reg. No." := DetailedGSTEntryBuffer."Buyer/Seller Reg. No.";
      DetailedGSTLedgerEntry."GST Credit" := DetailedGSTLedgerEntry."GST Credit"::Availment;
      DetailedGSTLedgerEntry."Product Type" := DetailedGSTLedgerEntry."Product Type"::Item;
      DetailedGSTLedgerEntry."Delivery Challan Amount" := DetailedGSTEntryBuffer."Delivery Challan Amount";
      DetailedGSTLedgerEntry."Subcon Document No." := GSTLiabilityLine."Document No.";
      DetailedGSTLedgerEntry."GST Rounding Precision" := GeneralLedgerSetup."GST Rounding Precision";
      DetailedGSTLedgerEntry."GST Rounding Type" := GeneralLedgerSetup."GST Rounding Type";
      DetailedGSTLedgerEntry."User ID" := USERID;
      DetailedGSTLedgerEntry."Liable to Pay" := TRUE;
      DetailedGSTLedgerEntry."Component Calc. Type" := DetailedGSTEntryBuffer."Component Calc. Type";
      DetailedGSTLedgerEntry."Cess Amount Per Unit Factor" := DetailedGSTEntryBuffer."Cess Amt Per Unit Factor (LCY)";
      DetailedGSTLedgerEntry."Cess UOM" := DetailedGSTEntryBuffer."Cess UOM";
      DetailedGSTLedgerEntry."Cess Factor Quantity" := DetailedGSTEntryBuffer."Cess Factor Quantity";
      DetailedGSTLedgerEntry.UOM := DetailedGSTEntryBuffer.UOM;
      DetailedGSTLedgerEntry.INSERT(TRUE);
    END;

    PROCEDURE FillGSTInGenJnlLineBalancing@1500001(GSTPostingBuffer@1500004 : Record 16420;LiabilityDate@1500003 : Date;DocumentNo@1500002 : Code[20];DimensionSetID@1500000 : Integer;GSTAmount@1500005 : Decimal);
    VAR
      GenJournalLine@1500007 : Record 81;
      LineNo@1500001 : Integer;
    BEGIN
      LineNo := 0;
      SourceCodeSetup.GET;
      GenJournalLine.LOCKTABLE;
      GenJournalLine.RESET;
      GenJournalLine.SETRANGE("Journal Template Name",'');
      GenJournalLine.SETRANGE("Journal Batch Name",'');
      IF GenJournalLine.FINDLAST THEN
        LineNo := GenJournalLine."Line No." + 10000
      ELSE
        LineNo := 10000;
      GenJournalLine.INIT;
      GenJournalLine."Journal Template Name" := '';
      GenJournalLine."Journal Batch Name" := '';
      GenJournalLine."Line No." := LineNo;
      LineNo += 10000;
      GenJournalLine.VALIDATE("Posting Date",LiabilityDate);
      GenJournalLine.VALIDATE("Document No.",DocumentNo);
      GenJournalLine.VALIDATE("Account Type",GenJournalLine."Account Type"::"G/L Account");
      GenJournalLine.VALIDATE("Source Code",SourceCodeSetup."GST Liability - Job Work");
      GenJournalLine.VALIDATE("Account No.",GSTPostingBuffer."Bal. Account No.");
      GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",GSTPostingBuffer."Global Dimension 1 Code");
      GenJournalLine.VALIDATE("Shortcut Dimension 2 Code",GSTPostingBuffer."Global Dimension 2 Code");
      GenJournalLine."Dimension Set ID" := DimensionSetID;
      GenJournalLine.VALIDATE(Amount,GSTAmount);
      GenJournalLine."Gen. Posting Type" := GenJournalLine."Gen. Posting Type"::Purchase;
      GenJournalLine.VALIDATE("System-Created Entry",TRUE);
      GenJournalLine.VALIDATE("Gen. Prod. Posting Group",GSTPostingBuffer."Gen. Prod. Posting Group");
      GenJournalLine.INSERT;
      GenJnlPostLine.RunWithCheck(GenJournalLine);
    END;

    BEGIN
    END.
  }
}

