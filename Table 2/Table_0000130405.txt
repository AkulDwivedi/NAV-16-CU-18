OBJECT Table 130405 CAL Test Result
{
  OBJECT-PROPERTIES
  {
    Date=26-09-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00,Test;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Integer       ;AutoIncrement=Yes }
    { 2   ;   ;Test Run No.        ;Integer        }
    { 3   ;   ;Codeunit ID         ;Integer       ;OnValidate=BEGIN
                                                                SetCodeunitName;
                                                              END;
                                                               }
    { 4   ;   ;Codeunit Name       ;Text30         }
    { 5   ;   ;Function Name       ;Text128        }
    { 6   ;   ;Platform            ;Option        ;OptionString=Classic,ServiceTier }
    { 7   ;   ;Result              ;Option        ;InitValue=Incomplete;
                                                   OptionString=Passed,Failed,Inconclusive,Incomplete }
    { 8   ;   ;Restore             ;Boolean        }
    { 9   ;   ;Execution Time      ;Duration       }
    { 10  ;   ;Error Code          ;Text250        }
    { 11  ;   ;Error Message       ;Text250        }
    { 12  ;   ;File                ;Text250        }
    { 14  ;   ;Call Stack          ;BLOB          ;Compressed=No }
    { 15  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No }
    { 16  ;   ;Start Time          ;DateTime      ;Editable=No }
    { 17  ;   ;Finish Time         ;DateTime      ;Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Test Run No.,Codeunit ID,Function Name,Platform }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE Add@1(SourceCALTestLine@1000 : Record 130401;TestRunNo@1003 : Integer);
    BEGIN
      Initialize(TestRunNo,SourceCALTestLine."Test Codeunit",SourceCALTestLine."Function",SourceCALTestLine."Start Time");
      Update(SourceCALTestLine.Result = SourceCALTestLine.Result::Success,SourceCALTestLine."Finish Time");
    END;

    PROCEDURE Initialize@7(TestRunNo@1003 : Integer;CodeunitId@1000 : Integer;FunctionName@1002 : Text[128];StartTime@1001 : DateTime) : Boolean;
    BEGIN
      INIT;
      "No." := GetNextNo;
      "Test Run No." := TestRunNo;
      VALIDATE("Codeunit ID",CodeunitId);
      "Function Name" := FunctionName;
      "Start Time" := StartTime;
      "User ID" := USERID;
      Result := Result::Incomplete;
      Platform := Platform::ServiceTier;
      INSERT;
    END;

    PROCEDURE Update@6(Success@1000 : Boolean;FinishTime@1001 : DateTime);
    VAR
      Out@1002 : OutStream;
    BEGIN
      IF Success THEN BEGIN
        Result := Result::Passed;
        CLEARLASTERROR;
      END ELSE BEGIN
        "Error Code" := CropTo(GETLASTERRORCODE,250);
        "Error Message" := CropTo(GETLASTERRORTEXT,250);
        "Call Stack".CREATEOUTSTREAM(Out);
        Out.WRITETEXT(GETLASTERRORCALLSTACK);
        IF STRPOS("Error Message",'Known failure:') = 1 THEN
          Result := Result::Inconclusive
        ELSE
          Result := Result::Failed;
      END;

      "Finish Time" := FinishTime;
      "Execution Time" := "Finish Time" - "Start Time";
      MODIFY;
    END;

    LOCAL PROCEDURE GetNextNo@5() : Integer;
    VAR
      CALTestResult@1000 : Record 130405;
    BEGIN
      IF CALTestResult.FINDLAST THEN
        EXIT(CALTestResult."No." + 1);
      EXIT(1);
    END;

    LOCAL PROCEDURE CropTo@8(String@1000 : Text;Length@1001 : Integer) : Text[250];
    BEGIN
      IF STRLEN(String) > Length THEN
        EXIT(PADSTR(String,Length));
      EXIT(String);
    END;

    PROCEDURE LastTestRunNo@2() : Integer;
    BEGIN
      SETCURRENTKEY("Test Run No.","Codeunit ID","Function Name",Platform);
      IF FINDLAST THEN;
      EXIT("Test Run No.");
    END;

    LOCAL PROCEDURE SetCodeunitName@4();
    VAR
      AllObjWithCaption@1000 : Record 2000000058;
    BEGIN
      AllObjWithCaption.SETRANGE("Object Type",AllObjWithCaption."Object Type"::Codeunit);
      AllObjWithCaption.SETRANGE("Object ID","Codeunit ID");
      IF AllObjWithCaption.FINDFIRST THEN
        "Codeunit Name" := AllObjWithCaption."Object Name";
    END;

    BEGIN
    END.
  }
}

