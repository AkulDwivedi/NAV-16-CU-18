OBJECT Table 16476 Service Tax Payment Buffer
{
  OBJECT-PROPERTIES
  {
    Date=03-08-16;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.46621;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Tax Payment Buffer;
               ENN=Service Tax Payment Buffer];
  }
  FIELDS
  {
    { 1   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ENN=Document No.];
                                                   Editable=No }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ENN=Line No.];
                                                   Editable=No }
    { 3   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ENN=Posting Date];
                                                   Editable=No }
    { 4   ;   ;Service Tax Group Code;Code20      ;TableRelation="Service Tax Groups";
                                                   CaptionML=[ENU=Service Tax Group Code;
                                                              ENN=Service Tax Group Code];
                                                   Editable=No }
    { 5   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENN=Description];
                                                   Editable=No }
    { 10  ;   ;Payment Liability   ;Decimal       ;CaptionML=[ENU=Payment Liability;
                                                              ENN=Payment Liability];
                                                   Editable=No }
    { 11  ;   ;Credit Available    ;Decimal       ;CaptionML=[ENU=Credit Available;
                                                              ENN=Credit Available];
                                                   Editable=No }
    { 12  ;   ;Credit Availed      ;Decimal       ;OnValidate=BEGIN
                                                                IF "Same Group Set Off" THEN BEGIN
                                                                  IF "Credit Availed" > ("Payment Liability" + "Other Amount" + "Interest Amount" - "Payment Amount") THEN
                                                                    ERROR(Text001,FIELDCAPTION("Credit Availed"),FIELDCAPTION("Payment Liability"));
                                                                  IF "Credit Availed" > "Credit Available" THEN
                                                                    ERROR(Text001,FIELDCAPTION("Credit Availed"),FIELDCAPTION("Credit Available"));
                                                                END;
                                                                IF "Service Tax Group Code" = '' THEN
                                                                  ERROR(Text16502);
                                                              END;

                                                   CaptionML=[ENU=Credit Availed;
                                                              ENN=Credit Availed] }
    { 13  ;   ;Payment Amount      ;Decimal       ;OnValidate=BEGIN
                                                                IF "Same Group Set Off" THEN
                                                                  IF "Payment Amount" > ("Payment Liability" - "Credit Availed" + "Interest Amount" + "Other Amount") THEN
                                                                    ERROR(Text001,FIELDCAPTION("Payment Amount"),'total liability');
                                                              END;

                                                   CaptionML=[ENU=Payment Amount;
                                                              ENN=Payment Amount] }
    { 14  ;   ;Account Type        ;Option        ;CaptionML=[ENU=Account Type;
                                                              ENN=Account Type];
                                                   OptionCaptionML=[ENU=G/L Account,Bank;
                                                                    ENN=G/L Account,Bank];
                                                   OptionString=G/L Account,Bank }
    { 15  ;   ;Account No.         ;Code20        ;TableRelation=IF (Account Type=FILTER(G/L Account)) "G/L Account".No.
                                                                 ELSE IF (Account Type=FILTER(Bank)) "Bank Account".No.;
                                                   OnValidate=BEGIN
                                                                IF "Account Type" = "Account Type"::"G/L Account" THEN
                                                                  CheckGLAcc("Account No.");
                                                                IF ("Payment Amount" + "Payment Amount (eCess)" + "Payment Amount (SHECess)" = 0) AND
                                                                  ("Payment Amount (KKC)" =0) AND ("Payment Amount (SBC)" = 0) THEN
                                                                  ERROR(Text16503);
                                                              END;

                                                   CaptionML=[ENU=Account No.;
                                                              ENN=Account No.] }
    { 16  ;   ;Cheque No.          ;Code20        ;CaptionML=[ENU=Cheque No.;
                                                              ENN=Cheque No.] }
    { 20  ;   ;Same Group Set Off  ;Boolean       ;CaptionML=[ENU=Same Group Set Off;
                                                              ENN=Same Group Set Off] }
    { 21  ;   ;Service Tax Registration No.;Code20;TableRelation="Service Tax Registration Nos.";
                                                   CaptionML=[ENU=Service Tax Registration No.;
                                                              ENN=Service Tax Registration No.];
                                                   Editable=No }
    { 25  ;   ;Interest Amount     ;Decimal       ;CaptionML=[ENU=Interest Amount;
                                                              ENN=Interest Amount] }
    { 26  ;   ;Interest Account No.;Code20        ;TableRelation="G/L Account".No.;
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Interest Account No.");
                                                              END;

                                                   CaptionML=[ENU=Interest Account No.;
                                                              ENN=Interest Account No.] }
    { 27  ;   ;Other Amount        ;Decimal       ;CaptionML=[ENU=Other Amount;
                                                              ENN=Other Amount] }
    { 28  ;   ;Other Account No.   ;Code20        ;TableRelation="G/L Account".No.;
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Other Account No.");
                                                              END;

                                                   CaptionML=[ENU=Other Account No.;
                                                              ENN=Other Account No.] }
    { 30  ;   ;STG Credit Availed  ;Decimal       ;CaptionML=[ENU=STG Credit Availed;
                                                              ENN=STG Credit Availed] }
    { 31  ;   ;STG Credit Availed (eCess);Decimal ;CaptionML=[ENU=STG Credit Availed (eCess);
                                                              ENN=STG Credit Availed (eCess)] }
    { 40  ;   ;Payment Liability (eCess);Decimal  ;CaptionML=[ENU=Payment Liability (eCess);
                                                              ENN=Payment Liability (eCess)];
                                                   Editable=No }
    { 41  ;   ;Credit Available (eCess);Decimal   ;CaptionML=[ENU=Credit Available (eCess);
                                                              ENN=Credit Available (eCess)];
                                                   Editable=No }
    { 42  ;   ;Credit Availed (eCess);Decimal     ;OnValidate=BEGIN
                                                                IF "Same Group Set Off" THEN BEGIN
                                                                  IF "Credit Availed (eCess)" > ("Payment Liability (eCess)" - "Payment Amount (eCess)") THEN
                                                                    ERROR(Text001,FIELDCAPTION("Credit Availed (eCess)"),FIELDCAPTION("Payment Liability (eCess)"));
                                                                  IF "Credit Availed (eCess)" > "Credit Available (eCess)" THEN
                                                                    ERROR(Text001,FIELDCAPTION("Credit Availed (eCess)"),FIELDCAPTION("Credit Available (eCess)"));
                                                                END;
                                                                IF "Service Tax Group Code" = '' THEN
                                                                  ERROR(Text16502);
                                                              END;

                                                   CaptionML=[ENU=Credit Availed (eCess);
                                                              ENN=Credit Availed (eCess)] }
    { 43  ;   ;Payment Amount (eCess);Decimal     ;OnValidate=BEGIN
                                                                IF "Same Group Set Off" THEN
                                                                  IF "Payment Amount" > ("Payment Liability" - "Credit Availed" + "Interest Amount" + "Other Amount") THEN
                                                                    ERROR(Text001,FIELDCAPTION("Payment Amount"),'total liability');
                                                              END;

                                                   CaptionML=[ENU=Payment Amount (eCess);
                                                              ENN=Payment Amount (eCess)] }
    { 44  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              ENN=Global Dimension 1 Code];
                                                   CaptionClass='1,1,1' }
    { 45  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              ENN=Global Dimension 2 Code];
                                                   CaptionClass='1,1,2' }
    { 46  ;   ;STG Credit Availed (SHECess);Decimal;
                                                   CaptionML=[ENU=STG Credit Availed (SHECess);
                                                              ENN=STG Credit Availed (SHECess)] }
    { 47  ;   ;Payment Liability (SHECess);Decimal;CaptionML=[ENU=Payment Liability (SHECess);
                                                              ENN=Payment Liability (SHECess)];
                                                   Editable=No }
    { 48  ;   ;Credit Available (SHECess);Decimal ;CaptionML=[ENU=Credit Available (SHECess);
                                                              ENN=Credit Available (SHECess)];
                                                   Editable=No }
    { 49  ;   ;Credit Availed (SHECess);Decimal   ;OnValidate=BEGIN
                                                                IF "Same Group Set Off" THEN BEGIN
                                                                  IF "Credit Availed (SHECess)" > ("Payment Liability (SHECess)" - "Payment Amount (SHECess)") THEN
                                                                    ERROR(Text001,FIELDCAPTION("Credit Availed (SHECess)"),FIELDCAPTION("Payment Liability (SHECess)"));
                                                                  IF "Credit Availed (SHECess)" > "Credit Available (SHECess)" THEN
                                                                    ERROR(Text001,FIELDCAPTION("Credit Availed (SHECess)"),FIELDCAPTION("Credit Available (SHECess)"));
                                                                END;
                                                                IF "Service Tax Group Code" = '' THEN
                                                                  ERROR(Text16502);
                                                              END;

                                                   CaptionML=[ENU=Credit Availed (SHECess);
                                                              ENN=Credit Availed (SHECess)] }
    { 50  ;   ;Payment Amount (SHECess);Decimal   ;OnValidate=BEGIN
                                                                IF "Same Group Set Off" THEN
                                                                  IF "Payment Amount" > ("Payment Liability" - "Credit Availed" + "Interest Amount" + "Other Amount") THEN
                                                                    ERROR(Text001,FIELDCAPTION("Payment Amount"),'total liability');
                                                              END;

                                                   CaptionML=[ENU=Payment Amount (SHECess);
                                                              ENN=Payment Amount (SHECess)] }
    { 51  ;   ;E.C.C. No.          ;Code20        ;TableRelation="E.C.C. Nos.";
                                                   CaptionML=[ENU=E.C.C. No.;
                                                              ENN=E.C.C. No.];
                                                   Editable=No }
    { 52  ;   ;Credit Available RG23A;Decimal     ;CaptionML=[ENU=Credit Available RG23A;
                                                              ENN=Credit Available RG23A];
                                                   Editable=No }
    { 53  ;   ;Credit Available RG23C;Decimal     ;CaptionML=[ENU=Credit Available RG23C;
                                                              ENN=Credit Available RG23C];
                                                   Editable=No }
    { 54  ;   ;Credit Available RG23A eCess;Decimal;
                                                   CaptionML=[ENU=Credit Available RG23A eCess;
                                                              ENN=Credit Available RG23A eCess];
                                                   Editable=No }
    { 55  ;   ;Credit Available RG23C eCess;Decimal;
                                                   CaptionML=[ENU=Credit Available RG23C eCess;
                                                              ENN=Credit Available RG23C eCess];
                                                   Editable=No }
    { 56  ;   ;Credit Available RG23A SHECess;Decimal;
                                                   CaptionML=[ENU=Credit Available RG23A SHECess;
                                                              ENN=Credit Available RG23A SHECess];
                                                   Editable=No }
    { 57  ;   ;Credit Available RG23C SHECess;Decimal;
                                                   CaptionML=[ENU=Credit Available RG23C SHECess;
                                                              ENN=Credit Available RG23C SHECess];
                                                   Editable=No }
    { 58  ;   ;Pay. Liability Arrear;Decimal      ;CaptionML=[ENU=Pay. Liability Arrear;
                                                              ENN=Pay. Liability Arrear];
                                                   Editable=No }
    { 59  ;   ;Pay. Liability(eCess) Arrear;Decimal;
                                                   CaptionML=[ENU=Pay. Liability(eCess) Arrear;
                                                              ENN=Pay. Liability(eCess) Arrear];
                                                   Editable=No }
    { 60  ;   ;Pay. Liability(SHECess) Arrear;Decimal;
                                                   CaptionML=[ENU=Pay. Liability(SHECess) Arrear;
                                                              ENN=Pay. Liability(SHECess) Arrear];
                                                   Editable=No }
    { 61  ;   ;Pay. Amount Arrear  ;Decimal       ;CaptionML=[ENU=Pay. Amount Arrear;
                                                              ENN=Pay. Amount Arrear] }
    { 62  ;   ;Pay. Amount (eCess) Arrear;Decimal ;CaptionML=[ENU=Pay. Amount (eCess) Arrear;
                                                              ENN=Pay. Amount (eCess) Arrear] }
    { 63  ;   ;Pay. Amount (SHECess) Arrear;Decimal;
                                                   CaptionML=[ENU=Pay. Amount (SHECess) Arrear;
                                                              ENN=Pay. Amount (SHECess) Arrear] }
    { 64  ;   ;Penalty Paid        ;Decimal       ;CaptionML=[ENU=Penalty Paid;
                                                              ENN=Penalty Paid] }
    { 65  ;   ;Penalty Account No. ;Code20        ;TableRelation="G/L Account".No.;
                                                   CaptionML=[ENU=Penalty Account No.;
                                                              ENN=Penalty Account No.] }
    { 66  ;   ;Section 73 A Amount ;Decimal       ;CaptionML=[ENU=Section 73 A Amount;
                                                              ENN=Section 73 A Amount] }
    { 67  ;   ;Section 73 A Account No.;Code20    ;TableRelation="G/L Account".No.;
                                                   CaptionML=[ENU=Section 73 A Account No.;
                                                              ENN=Section 73 A Account No.] }
    { 68  ;   ;Other Amt. Arrear   ;Decimal       ;CaptionML=[ENU=Other Amt. Arrear;
                                                              ENN=Other Amt. Arrear] }
    { 69  ;   ;Other Amt. Arrear Account No;Code20;TableRelation="G/L Account".No.;
                                                   CaptionML=[ENU=Other Amt. Arrear Account No;
                                                              ENN=Other Amt. Arrear Account No] }
    { 70  ;   ;Other Amt. eCess Arrear;Decimal    ;CaptionML=[ENU=Other Amt. eCess Arrear;
                                                              ENN=Other Amt. eCess Arrear] }
    { 71  ;   ;Other Amt. SHECess Arrear;Decimal  ;CaptionML=[ENU=Other Amt. SHECess Arrear;
                                                              ENN=Other Amt. SHECess Arrear] }
    { 72  ;   ;RG Set Off Date     ;Date          ;CaptionML=[ENU=RG Set Off Date;
                                                              ENN=RG Set Off Date] }
    { 73  ;   ;STG Credit Availed (SBC);Decimal   ;CaptionML=[ENU=STG Credit Availed (SBC);
                                                              ENN=STG Credit Availed (SBC)] }
    { 74  ;   ;Payment Liability (SBC);Decimal    ;CaptionML=[ENU=Payment Liability (SBC);
                                                              ENN=Payment Liability (SBC)];
                                                   Editable=No }
    { 75  ;   ;Credit Available (SBC);Decimal     ;CaptionML=[ENU=Credit Available (SBC);
                                                              ENN=Credit Available (SBC)];
                                                   Editable=No }
    { 76  ;   ;Credit Availed (SBC);Decimal       ;OnValidate=BEGIN
                                                                IF "Same Group Set Off" THEN BEGIN
                                                                  IF "Credit Availed (SBC)" > ("Payment Liability (SBC)" - "Payment Amount (SBC)") THEN
                                                                    ERROR(Text001,FIELDCAPTION("Credit Availed (SBC)"),FIELDCAPTION("Payment Liability (SBC)"));
                                                                  IF "Credit Availed (SBC)" > "Credit Available (SBC)" THEN
                                                                    ERROR(Text001,FIELDCAPTION("Credit Availed (SBC)"),FIELDCAPTION("Credit Available (SBC)"));
                                                                END;
                                                                IF "Service Tax Group Code" = '' THEN
                                                                  ERROR(Text16502);
                                                              END;

                                                   CaptionML=[ENU=Credit Availed (SBC);
                                                              ENN=Credit Availed (SBC)] }
    { 77  ;   ;Payment Amount (SBC);Decimal       ;OnValidate=BEGIN
                                                                IF "Same Group Set Off" THEN
                                                                  IF "Payment Amount (SBC)" > ("Payment Liability (SBC)" - "Credit Availed (SBC)" + "Other Amt. Arrear (SBC)") THEN
                                                                    ERROR(Text001,FIELDCAPTION("Payment Amount (SBC)"),'total liability (SBC)');
                                                              END;

                                                   CaptionML=[ENU=Payment Amount (SBC);
                                                              ENN=Payment Amount (SBC)] }
    { 78  ;   ;Other Amt. Arrear (SBC);Decimal    ;CaptionML=[ENU=Other Amt. Arrear (SBC);
                                                              ENN=Other Amt. Arrear (SBC)] }
    { 79  ;   ;Pay. Amount Arrear (SBC);Decimal   ;CaptionML=[ENU=Pay. Amount Arrear (SBC);
                                                              ENN=Pay. Amount Arrear (SBC)] }
    { 80  ;   ;Pay. Liability Arrear (SBC);Decimal;CaptionML=[ENU=Pay. Liability Arrear (SBC);
                                                              ENN=Pay. Liability Arrear (SBC)];
                                                   Editable=No }
    { 81  ;   ;Credit Available RG23A (SBC);Decimal;
                                                   CaptionML=[ENU=Credit Available RG23A (SBC);
                                                              ENN=Credit Available RG23A (SBC)];
                                                   Editable=No }
    { 82  ;   ;Credit Available RG23C (SBC);Decimal;
                                                   CaptionML=[ENU=Credit Available RG23C (SBC);
                                                              ENN=Credit Available RG23C (SBC)];
                                                   Editable=No }
    { 83  ;   ;Payment Liability (KKC);Decimal    ;CaptionML=[ENU=Payment Liability (KKC);
                                                              ENN=Payment Liability (KKC)];
                                                   Editable=No }
    { 84  ;   ;Credit Available (KKC);Decimal     ;CaptionML=[ENU=Credit Available (KKC);
                                                              ENN=Credit Available (KKC)];
                                                   Editable=No }
    { 85  ;   ;Credit Availed (KKC);Decimal       ;OnValidate=BEGIN
                                                                IF "Same Group Set Off" THEN BEGIN
                                                                  IF "Credit Availed (KKC)" > ("Payment Liability (KKC)" - "Payment Amount (KKC)") THEN
                                                                    ERROR(Text001,FIELDCAPTION("Credit Availed (KKC)"),FIELDCAPTION("Payment Liability (KKC)"));
                                                                  IF "Credit Availed (KKC)" > "Credit Available (KKC)" THEN
                                                                    ERROR(Text001,FIELDCAPTION("Credit Availed (KKC)"),FIELDCAPTION("Credit Available (KKC)"));
                                                                END;
                                                                IF "Service Tax Group Code" = '' THEN
                                                                  ERROR(Text16502);
                                                              END;

                                                   CaptionML=[ENU=Credit Availed (KKC);
                                                              ENN=Credit Availed (KKC)] }
    { 86  ;   ;Payment Amount (KKC);Decimal       ;OnValidate=BEGIN
                                                                IF "Same Group Set Off" THEN
                                                                  IF "Payment Amount (KKC)" > ("Payment Liability (KKC)" - "Credit Availed (KKC)" + "Other Amt. Arrear (KKC)") THEN
                                                                    ERROR(Text001,FIELDCAPTION("Payment Amount (KKC)"),'total liability (KKC)');
                                                              END;

                                                   CaptionML=[ENU=Payment Amount (KKC);
                                                              ENN=Payment Amount (KKC)] }
    { 87  ;   ;Other Amt. Arrear (KKC);Decimal    ;CaptionML=[ENU=Other Amt. Arrear (KKC);
                                                              ENN=Other Amt. Arrear (KKC)] }
    { 88  ;   ;Pay. Amount Arrear (KKC);Decimal   ;CaptionML=[ENU=Pay. Amount Arrear (KKC);
                                                              ENN=Pay. Amount Arrear (KKC)] }
    { 89  ;   ;Pay. Liability Arrear (KKC);Decimal;CaptionML=[ENU=Pay. Liability Arrear (KKC);
                                                              ENN=Pay. Liability Arrear (KKC)];
                                                   Editable=No }
    { 90  ;   ;STG Credit Availed (KKC);Decimal   ;CaptionML=[ENU=STG Credit Availed (KKC);
                                                              ENN=STG Credit Availed (KKC)] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   CaptionML=[ENU=Dimension Set ID;
                                                              ENN=Dimension Set ID];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Document No.,Service Tax Group Code     ;SumIndexFields=Credit Available,Credit Available (KKC),Credit Available (eCess),Payment Liability,Payment Liability (KKC),Payment Liability (eCess),Credit Availed,Credit Availed (KKC),Credit Availed (eCess),Payment Amount,Payment Amount (KKC),Payment Amount (eCess),Credit Available (SHECess),Credit Availed (SHECess),Payment Liability (SHECess),Payment Amount (SHECess),Credit Available (SBC),Payment Liability (SBC),Credit Availed (SBC),Payment Amount (SBC);
                                                   Clustered=Yes }
    {    ;Document No.,Same Group Set Off         ;SumIndexFields=Credit Availed,Credit Availed (KKC),Credit Availed (eCess),Credit Availed (SHECess),Credit Availed (SBC) }
    {    ;Document No.,Posting Date,Same Group Set Off;
                                                   SumIndexFields=Payment Liability,Payment Liability (KKC),Payment Liability (eCess),Payment Liability (SHECess),Credit Availed,Credit Availed (eCess),Credit Availed (SHECess),Payment Amount,Payment Amount (eCess),Payment Amount (SHECess),Interest Amount,Other Amount,Section 73 A Amount,Penalty Paid,Other Amt. Arrear,Other Amt. eCess Arrear,Other Amt. SHECess Arrear,Payment Liability (SBC),Payment Amount (SBC),Payment Amount (KKC) }
    {    ;Document No.,Same Group Set Off,Posting Date;
                                                   SumIndexFields=Payment Liability (KKC),Credit Availed (KKC),Other Amt. Arrear (KKC),Payment Amount (KKC) }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1280000 : TextConst 'ENU=%1 cannot be more than %2;ENN=%1 cannot be more than %2';
      Text16500@1500005 : TextConst 'ENU=Excise Cenvat Claim does not match with the Credit Availed or Credit Availed (eCess) for %1.;ENN=Excise Cenvat Claim does not match with the Credit Availed or Credit Availed (eCess) for %1.';
      Text16501@1500006 : TextConst 'ENU=Excise Cenvat Claim cannot be opened for Service Tax Group Code %1.;ENN=Excise Cenvat Claim cannot be opened for Service Tax Group Code %1.';
      Text16502@1500001 : TextConst 'ENU=Please enter the Component wise breakup in the Excise Cenvat Claim form.;ENN=Please enter the Component wise breakup in the Excise Cenvat Claim form.';
      Text16503@1500002 : TextConst 'ENU=Sum of Payment Amount, Payment Amount (eCess), Payment Amount (SHECess) should not be 0.;ENN=Sum of Payment Amount, Payment Amount (eCess), Payment Amount (SHECess) should not be 0.';
      ExciseCenvatClaim@1500003 : Record 16584;

    LOCAL PROCEDURE CheckGLAcc@2(AccNo@1000 : Code[20]);
    VAR
      GLAcc@1001 : Record 15;
    BEGIN
      IF AccNo <> '' THEN BEGIN
        GLAcc.GET(AccNo);
        GLAcc.CheckGLAcc;
      END;
    END;

    PROCEDURE OpenExciseCentvatClaimForm@1500002();
    VAR
      SourceCodeSetup@1500001 : Record 242;
      NextLineNo@1500012 : Integer;
      ExciseCenvatClaimFrm@1500011 : Page 16584;
      GenJnlLine@1500000 : Record 81;
    BEGIN
      IF "Service Tax Group Code" <> '' THEN
        ERROR(Text16501,"Service Tax Group Code");

      SourceCodeSetup.GET;
      GenJnlLine.RESET;
      GenJnlLine.SETRANGE("Journal Template Name",'');
      GenJnlLine.SETRANGE("Journal Batch Name",'');
      IF GenJnlLine.FINDLAST THEN
        NextLineNo := 10000 + GenJnlLine."Line No."
      ELSE
        NextLineNo := 10000;
      GenJnlLine.SETRANGE("Document No.","Document No.");
      IF NOT GenJnlLine.FINDLAST THEN BEGIN
        GenJnlLine.INIT;
        GenJnlLine."Account Type" := GenJnlLine."Account Type"::"G/L Account";
        GenJnlLine."Posting Date" := "Posting Date";
        GenJnlLine."Document Date" := "Posting Date";
        GenJnlLine."Document No." := "Document No.";
        GenJnlLine."Source Code" := SourceCodeSetup.Sales;
        GenJnlLine."System-Created Entry" := TRUE;
        GenJnlLine."VAT Posting" := GenJnlLine."VAT Posting"::"Automatic VAT Entry";
        GenJnlLine."VAT Calculation Type" := GenJnlLine."VAT Calculation Type"::"Normal VAT";
        GenJnlLine."Allow Application" := TRUE;
        GenJnlLine."Bal. Account Type" := GenJnlLine."Bal. Account Type"::"G/L Account";
        GenJnlLine."Bal. VAT Calculation Type" := GenJnlLine."Bal. VAT Calculation Type"::"Normal VAT";
        GenJnlLine."Additional-Currency Posting" := GenJnlLine."Additional-Currency Posting"::None;
        GenJnlLine."Line No." := NextLineNo;
        GenJnlLine."E.C.C. No." := "E.C.C. No.";
        GenJnlLine."Excise as Service Tax Credit" := TRUE;
        GenJnlLine.INSERT;
      END;

      InsertCenvatDetails(GenJnlLine);
      ExciseCenvatClaim.SETRANGE("Document No.","Document No.");
      ExciseCenvatClaimFrm.SETTABLEVIEW(ExciseCenvatClaim);
      ExciseCenvatClaimFrm.SetECCNo("E.C.C. No.");
      ExciseCenvatClaimFrm.SetDocNo("Document No.");
      ExciseCenvatClaimFrm.SetRGSetOffDate("RG Set Off Date");
      COMMIT;
      ExciseCenvatClaimFrm.RUNMODAL;
      UpdateCreditAvailed;
    END;

    PROCEDURE CalcPaymentLiability@1500000(DocumentNo@1500000 : Code[20];"Credit/Payment"@1500002 : ' ,Credit,Payment') : Decimal;
    VAR
      ServiceTaxPayBuffer@1500001 : Record 16476;
    BEGIN
      ServiceTaxPayBuffer.RESET;
      ServiceTaxPayBuffer.SETRANGE("Document No.",DocumentNo);
      ServiceTaxPayBuffer.CALCSUMS("Credit Available","Payment Liability");
      IF "Credit/Payment" = "Credit/Payment"::Credit THEN
        EXIT(ServiceTaxPayBuffer."Credit Available");
      IF "Credit/Payment" = "Credit/Payment"::Payment THEN
        EXIT(ServiceTaxPayBuffer."Payment Liability");
    END;

    PROCEDURE CalcPaymentLiabilityeCess@1500001(DocumentNo@1500000 : Code[20];"Credit/Payment"@1500002 : ' ,Credit,Payment') : Decimal;
    VAR
      ServiceTaxPayBuffer@1500001 : Record 16476;
    BEGIN
      ServiceTaxPayBuffer.RESET;
      ServiceTaxPayBuffer.SETRANGE("Document No.",DocumentNo);
      ServiceTaxPayBuffer.CALCSUMS("Credit Available (eCess)","Payment Liability (eCess)");
      IF "Credit/Payment" = "Credit/Payment"::Credit THEN
        EXIT(ServiceTaxPayBuffer."Credit Available (eCess)");
      IF "Credit/Payment" = "Credit/Payment"::Payment THEN
        EXIT(ServiceTaxPayBuffer."Payment Liability (eCess)");
    END;

    PROCEDURE CalcPaymentLiabilitySHECess@1500007(DocumentNo@1500000 : Code[20];"Credit/Payment"@1500002 : ' ,Credit,Payment') : Decimal;
    VAR
      ServiceTaxPayBuffer@1500001 : Record 16476;
    BEGIN
      ServiceTaxPayBuffer.RESET;
      ServiceTaxPayBuffer.SETRANGE("Document No.",DocumentNo);
      ServiceTaxPayBuffer.CALCSUMS("Credit Available (SHECess)","Payment Liability (SHECess)");
      IF "Credit/Payment" = "Credit/Payment"::Credit THEN
        EXIT(ServiceTaxPayBuffer."Credit Available (SHECess)");
      IF "Credit/Payment" = "Credit/Payment"::Payment THEN
        EXIT(ServiceTaxPayBuffer."Payment Liability (SHECess)");
    END;

    PROCEDURE CalcExcise@1500003();
    VAR
      RG23ARec@1500001 : Record 13720;
      RG23CRec@1500000 : Record 13722;
    BEGIN
      RG23ARec.RESET;
      RG23ARec.SETCURRENTKEY("Location E.C.C. No.","Excise as Service Tax Credit","Posting Date");
      RG23ARec.SETRANGE("Location E.C.C. No.","E.C.C. No.");
      RG23ARec.SETRANGE("Excise as Service Tax Credit",TRUE);
      IF "RG Set Off Date" <> 0D THEN
        RG23ARec.SETRANGE("Posting Date",0D,"RG Set Off Date");
      RG23ARec.CALCSUMS("Remaining BED Credit","Remaining AED(GSI) Credit","Remaining AED(TTA) Credit","Remaining SED Credit",
        "Remaining SAED Credit","Remaining NCCD Credit","Remaining ADET Credit","Remaining ADE Credit","Remaining eCess Credit",
        "Remaining SHECess Credit");
      "Credit Available RG23A" := RG23ARec."Remaining BED Credit" + RG23ARec."Remaining AED(GSI) Credit" +
        RG23ARec."Remaining AED(TTA) Credit" + RG23ARec."Remaining SED Credit" + RG23ARec."Remaining SAED Credit" +
        RG23ARec."Remaining NCCD Credit" + RG23ARec."Remaining ADET Credit" + RG23ARec."Remaining ADE Credit";
      "Credit Available RG23A eCess" := RG23ARec."Remaining eCess Credit";
      "Credit Available RG23A SHECess" := RG23ARec."Remaining SHECess Credit";

      RG23CRec.RESET;
      RG23CRec.SETCURRENTKEY("Location E.C.C. No.","Excise as Service Tax Credit","Posting Date");
      RG23CRec.SETRANGE("Location E.C.C. No.","E.C.C. No.");
      RG23CRec.SETRANGE("Excise as Service Tax Credit",TRUE);
      IF "RG Set Off Date" <> 0D THEN
        RG23CRec.SETRANGE("Posting Date",0D,"RG Set Off Date");
      RG23CRec.CALCSUMS("Remaining BED Credit","Remaining AED(GSI) Credit","Remaining AED(TTA) Credit","Remaining SED Credit",
        "Remaining SAED Credit","Remaining NCCD Credit","Remaining ADET Credit","Remaining ADE Credit","Remaining eCess Credit",
        "Remaining SHECess Credit");
      "Credit Available RG23C" := RG23CRec."Remaining BED Credit" + RG23CRec."Remaining AED(GSI) Credit" +
        RG23CRec."Remaining AED(TTA) Credit" + RG23CRec."Remaining SED Credit" + RG23CRec."Remaining SAED Credit" +
        RG23CRec."Remaining NCCD Credit" + RG23CRec."Remaining ADET Credit" + RG23CRec."Remaining ADE Credit";
      "Credit Available RG23C eCess" := RG23CRec."Remaining eCess Credit";
      "Credit Available RG23C SHECess" := RG23CRec."Remaining SHECess Credit";
    END;

    PROCEDURE UpdateCreditAvailed@1500004();
    BEGIN
      ExciseCenvatClaim.RESET;
      ExciseCenvatClaim.SETRANGE("Document No.","Document No.");
      IF ExciseCenvatClaim.FINDFIRST THEN BEGIN
        "Credit Availed" := ExciseCenvatClaim."RG 23 A PART II BED Amount" + ExciseCenvatClaim."RG 23A PART II AED(GSI) Amount" +
          ExciseCenvatClaim."RG 23A PART II AED(TTA) Amount" + ExciseCenvatClaim."RG 23 A PART II SED Amount" +
          ExciseCenvatClaim."RG 23 A PART II SAED Amount" + ExciseCenvatClaim."RG 23 A PART II CESS Amount" +
          ExciseCenvatClaim."RG 23 A PART II NCCD Amount" + ExciseCenvatClaim."RG 23 A Part II ADET Amount" +
          ExciseCenvatClaim."RG 23 A Part II ADE Amount" + ExciseCenvatClaim."RG 23 C PART II BED Amount" +
          ExciseCenvatClaim."RG 23C PART II AED(GSI) Amount" + ExciseCenvatClaim."RG 23C PART II AED(TTA) Amount" +
          ExciseCenvatClaim."RG 23 C PART II SED Amount" + ExciseCenvatClaim."RG 23 C PART II SAED Amount" +
          ExciseCenvatClaim."RG 23 C PART II CESS Amount" + ExciseCenvatClaim."RG 23 C PART II NCCD Amount" +
          ExciseCenvatClaim."RG 23 C Part II ADET Amount" + ExciseCenvatClaim."RG 23 C Part II ADE Amount";
        "Credit Availed (eCess)" :=
          ExciseCenvatClaim."RG 23 A PART II eCess Amount" + ExciseCenvatClaim."RG 23 C PART II eCess Amount";
        "Credit Availed (SHECess)" := ExciseCenvatClaim."RG 23 A Part II SHECess Amount" +
          ExciseCenvatClaim."RG 23 C Part II SHECess Amount";
      END;
    END;

    PROCEDURE CheckExciseCrClaim@1500006(GenJnlLIne2@1500001 : Record 81);
    VAR
      ServTaxPayBuffer@1500000 : Record 16476;
    BEGIN
      WITH GenJnlLIne2 DO BEGIN
        ExciseCenvatClaim.SETRANGE("Journal Template Name","Journal Template Name");
        ExciseCenvatClaim.SETRANGE("Journal Batch Name","Journal Batch Name");
        ExciseCenvatClaim.SETRANGE("Line No.","Line No.");
        ExciseCenvatClaim.SETRANGE("Document No.","Document No.");
        IF ExciseCenvatClaim.FINDFIRST THEN;
        ServTaxPayBuffer.RESET;
        ServTaxPayBuffer.SETRANGE("Document No.","Document No.");
        ServTaxPayBuffer.SETRANGE("Service Tax Group Code",'');
        IF ServTaxPayBuffer.FINDFIRST THEN BEGIN
          IF (ServTaxPayBuffer."Credit Availed" <> ExciseCenvatClaim."BED Amount" + ExciseCenvatClaim."AED(GSI) Amount" +
              ExciseCenvatClaim."SED Amount" + ExciseCenvatClaim."SAED Amount" + ExciseCenvatClaim."NCCD Amount" +
              ExciseCenvatClaim."ADET Amount" + ExciseCenvatClaim."AED(TTA) Amount") OR
             (ServTaxPayBuffer."Credit Availed (eCess)" <> + ExciseCenvatClaim."eCess Amount") OR
             (ServTaxPayBuffer."Credit Availed (SHECess)" <> + ExciseCenvatClaim."SHE Cess Amount")
          THEN
            ERROR(Text16500,ServTaxPayBuffer.Description);
        END;
      END;
    END;

    PROCEDURE InsertCenvatDetails@1500005(GenJnlLine@1500000 : Record 81);
    BEGIN
      ExciseCenvatClaim.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
      ExciseCenvatClaim.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
      ExciseCenvatClaim.SETRANGE("Line No.",GenJnlLine."Line No.");
      IF NOT ExciseCenvatClaim.FINDFIRST THEN BEGIN
        ExciseCenvatClaim.INIT;
        ExciseCenvatClaim."Journal Template Name" := GenJnlLine."Journal Template Name";
        ExciseCenvatClaim."Journal Batch Name" := GenJnlLine."Journal Batch Name";
        ExciseCenvatClaim."Line No." := GenJnlLine."Line No.";
        ExciseCenvatClaim."Document No." := GenJnlLine."Document No.";
        ExciseCenvatClaim."E.C.C. No." := "E.C.C. No.";
        ExciseCenvatClaim.INSERT(TRUE);
      END ELSE BEGIN
        ExciseCenvatClaim."Journal Template Name" := GenJnlLine."Journal Template Name";
        ExciseCenvatClaim."Journal Batch Name" := GenJnlLine."Journal Batch Name";
        ExciseCenvatClaim."Line No." := GenJnlLine."Line No.";
        ExciseCenvatClaim."Document No." := GenJnlLine."Document No.";
        ExciseCenvatClaim."E.C.C. No." := "E.C.C. No.";
        ExciseCenvatClaim.MODIFY(TRUE);
      END;
    END;

    PROCEDURE InitSrcDocPaymentDetail@1500008();
    VAR
      SrcDocDetail@1500000 : Record 16595;
      SourceDocDetail@1500001 : Page 16360;
    BEGIN
      SrcDocDetail.RESET;
      SrcDocDetail.SETRANGE("Document No.","Document No.");
      SrcDocDetail.SETRANGE("Service Tax Registration No.","Service Tax Registration No.");
      SrcDocDetail.SETRANGE("Service Tax Group Code","Service Tax Group Code");
      SrcDocDetail.SETRANGE("Line No.","Line No.");
      SourceDocDetail.SETTABLEVIEW(SrcDocDetail);
      SourceDocDetail.GetPaymentBuffer(Rec);
      SourceDocDetail.RUN;
    END;

    PROCEDURE ShowDimensions@6();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      // DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1',TABLECAPTION,"Service Tax Registration No."));
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet("Dimension Set ID",STRSUBSTNO('%1',"Service Tax Registration No."));
    END;

    PROCEDURE CalcKKCessPaymentLiability@1500009(DocumentNo@1500000 : Code[20];"Credit/Payment"@1500002 : ' ,Credit,Payment') : Decimal;
    VAR
      ServiceTaxPayBuffer@1500001 : Record 16476;
    BEGIN
      ServiceTaxPayBuffer.RESET;
      ServiceTaxPayBuffer.SETRANGE("Document No.",DocumentNo);
      ServiceTaxPayBuffer.CALCSUMS("Credit Available (KKC)","Payment Liability (KKC)");
      IF "Credit/Payment" = "Credit/Payment"::Credit THEN
        EXIT(ServiceTaxPayBuffer."Credit Available (KKC)");
      IF "Credit/Payment" = "Credit/Payment"::Payment THEN
        EXIT(ServiceTaxPayBuffer."Payment Liability (KKC)");
    END;

    BEGIN
    END.
  }
}

