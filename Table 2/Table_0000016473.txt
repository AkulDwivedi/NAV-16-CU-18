OBJECT Table 16473 Service Tax Entry
{
  OBJECT-PROPERTIES
  {
    Date=03-08-16;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.46621;
  }
  PROPERTIES
  {
    OnInsert=VAR
               GenJnlPostPreview@1500000 : Codeunit 19;
             BEGIN
               GenJnlPostPreview.SaveServiceTaxEntry(Rec);
             END;

    CaptionML=[ENU=Service Tax Entry;
               ENN=Service Tax Entry];
    LookupPageID=Page16473;
    DrillDownPageID=Page16473;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=Entry No.;
                                                              ENN=Entry No.];
                                                   Editable=No }
    { 2   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              ENN=Type];
                                                   OptionCaptionML=[ENU=Sale,Purchase,Charge;
                                                                    ENN=Sale,Purchase,Charge];
                                                   OptionString=Sale,Purchase,Charge;
                                                   Editable=No }
    { 3   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ENN=Document No.];
                                                   Editable=No }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ENN=Posting Date];
                                                   Editable=No }
    { 5   ;   ;Service Tax Group Code;Code20      ;TableRelation="Service Tax Groups";
                                                   CaptionML=[ENU=Service Tax Group Code;
                                                              ENN=Service Tax Group Code];
                                                   Editable=No }
    { 6   ;   ;Service Tax Registration No.;Code20;TableRelation="Service Tax Registration Nos.";
                                                   CaptionML=[ENU=Service Tax Registration No.;
                                                              ENN=Service Tax Registration No.];
                                                   Editable=No }
    { 10  ;   ;Party Code          ;Code20        ;CaptionML=[ENU=Party Code;
                                                              ENN=Party Code];
                                                   Editable=No }
    { 15  ;   ;Service Tax Base Amount;Decimal    ;CaptionML=[ENU=Service Tax Base Amount;
                                                              ENN=Service Tax Base Amount];
                                                   Editable=No }
    { 16  ;   ;Service Tax Amount  ;Decimal       ;CaptionML=[ENU=Service Tax Amount;
                                                              ENN=Service Tax Amount];
                                                   Editable=No }
    { 17  ;   ;Amount Including Service Tax;Decimal;
                                                   CaptionML=[ENU=Amount Including Service Tax;
                                                              ENN=Amount Including Service Tax];
                                                   Editable=No }
    { 18  ;   ;Service Tax %       ;Decimal       ;CaptionML=[ENU=Service Tax %;
                                                              ENN=Service Tax %];
                                                   Editable=No }
    { 19  ;   ;Service Tax Abatement;Decimal      ;CaptionML=[ENU=Service Tax Abatement;
                                                              ENN=Service Tax Abatement];
                                                   Editable=No }
    { 20  ;   ;G/L Account No.     ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=G/L Account No.;
                                                              ENN=G/L Account No.];
                                                   Editable=No }
    { 25  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              ENN=Date Filter] }
    { 26  ;   ;Amount Received/Paid;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Service Tax Entry Details".Amount WHERE (Service Tax Entry No.=FIELD(Entry No.),
                                                                                                             Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Amount Received/Paid;
                                                              ENN=Amount Received/Paid];
                                                   Editable=No }
    { 35  ;   ;Transaction No.     ;Integer       ;CaptionML=[ENU=Transaction No.;
                                                              ENN=Transaction No.];
                                                   Editable=No }
    { 40  ;   ;Goes to Excise Entry;Boolean       ;CaptionML=[ENU=Goes to Excise Entry;
                                                              ENN=Goes to Excise Entry];
                                                   Editable=No }
    { 41  ;   ;From Excise         ;Boolean       ;CaptionML=[ENU=From Excise;
                                                              ENN=From Excise];
                                                   Editable=No }
    { 45  ;   ;Service Tax eCess % ;Decimal       ;CaptionML=[ENU=Service Tax eCess %;
                                                              ENN=Service Tax eCess %];
                                                   Editable=No }
    { 46  ;   ;eCess Amount        ;Decimal       ;CaptionML=[ENU=eCess Amount;
                                                              ENN=eCess Amount];
                                                   Editable=No }
    { 50  ;   ;Location E.C.C. No. ;Code20        ;TableRelation="E.C.C. Nos.";
                                                   CaptionML=[ENU=Location E.C.C. No.;
                                                              ENN=Location E.C.C. No.];
                                                   Editable=No }
    { 51  ;   ;RG Record Type      ;Option        ;CaptionML=[ENU=RG Record Type;
                                                              ENN=RG Record Type];
                                                   OptionCaptionML=[ENU=" ,RG23A,RG23C";
                                                                    ENN=" ,RG23A,RG23C"];
                                                   OptionString=[ ,RG23A,RG23C];
                                                   Editable=No }
    { 55  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ENN=Line No.];
                                                   Editable=No }
    { 56  ;   ;Reverse Charge      ;Boolean       ;CaptionML=[ENU=Reverse Charge;
                                                              ENN=Reverse Charge];
                                                   Editable=No }
    { 57  ;   ;Positive            ;Boolean       ;CaptionML=[ENU=Positive;
                                                              ENN=Positive];
                                                   Editable=No }
    { 58  ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ENN=Document Type];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    ENN=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund];
                                                   Editable=No }
    { 59  ;   ;Service Type (Rev. Chrg.);Option   ;CaptionML=[ENU=Service Type (Rev. Chrg.);
                                                              ENN=Service Type (Rev. Chrg.)];
                                                   OptionCaptionML=[ENU=" ,Inward,Outward Stock Transfer,Outward Input Service,Outward";
                                                                    ENN=" ,Inward,Outward Stock Transfer,Outward Input Service,Outward"];
                                                   OptionString=[ ,Inward,Outward Stock Transfer,Outward Input Service,Outward] }
    { 60  ;   ;Service Tax SHE Cess %;Decimal     ;CaptionML=[ENU=Service Tax SHE Cess %;
                                                              ENN=Service Tax SHE Cess %];
                                                   Editable=No }
    { 61  ;   ;SHE Cess Amount     ;Decimal       ;CaptionML=[ENU=SHE Cess Amount;
                                                              ENN=SHE Cess Amount];
                                                   Editable=No }
    { 62  ;   ;Serv. Tax on Advance Payment;Boolean;
                                                   CaptionML=[ENU=Serv. Tax on Advance Payment;
                                                              ENN=Serv. Tax on Advance Payment];
                                                   Editable=No }
    { 63  ;   ;Remaining Serv. Tax Amt;Decimal    ;CaptionML=[ENU=Remaining Serv. Tax Amt;
                                                              ENN=Remaining Serv. Tax Amt];
                                                   Editable=No }
    { 64  ;   ;Remaining Serv. Tax eCess Amt;Decimal;
                                                   CaptionML=[ENU=Remaining Serv. Tax eCess Amt;
                                                              ENN=Remaining Serv. Tax eCess Amt];
                                                   Editable=No }
    { 65  ;   ;Remaining Serv. Tax Base Amt;Decimal;
                                                   CaptionML=[ENU=Remaining Serv. Tax Base Amt;
                                                              ENN=Remaining Serv. Tax Base Amt];
                                                   Editable=No }
    { 66  ;   ;Adjusted            ;Boolean       ;CaptionML=[ENU=Adjusted;
                                                              ENN=Adjusted];
                                                   Editable=No }
    { 67  ;   ;Adjusted Agst Entry No.;Integer    ;TableRelation="Service Tax Entry"."Entry No.";
                                                   CaptionML=[ENU=Adjusted Agst Entry No.;
                                                              ENN=Adjusted Agst Entry No.];
                                                   Editable=No }
    { 68  ;   ;Remaining Serv Tax SHECess Amt;Decimal;
                                                   CaptionML=[ENU=Remaining Serv Tax SHECess Amt;
                                                              ENN=Remaining Serv Tax SHECess Amt];
                                                   Editable=No }
    { 69  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              ENN=Location Code] }
    { 70  ;   ;Input Service Distribution;Boolean ;CaptionML=[ENU=Input Service Distribution;
                                                              ENN=Input Service Distribution] }
    { 71  ;   ;Input Service Credit Entry No.;Integer;
                                                   CaptionML=[ENU=Input Service Credit Entry No.;
                                                              ENN=Input Service Credit Entry No.] }
    { 72  ;   ;Nature of Services  ;Option        ;CaptionML=[ENU=Nature of Services;
                                                              ENN=Nature of Services];
                                                   OptionCaptionML=[ENU=" ,Exempted,Export";
                                                                    ENN=" ,Exempted,Export"];
                                                   OptionString=[ ,Exempted,Export] }
    { 73  ;   ;ST Pure Agent       ;Boolean       ;CaptionML=[ENU=ST Pure Agent;
                                                              ENN=ST Pure Agent] }
    { 74  ;   ;Service Tax Rounding Precision;Decimal;
                                                   CaptionML=[ENU=Service Tax Rounding Precision;
                                                              ENN=Service Tax Rounding Precision];
                                                   Editable=No }
    { 75  ;   ;Service Tax Rounding Type;Option   ;CaptionML=[ENU=Service Tax Rounding Type;
                                                              ENN=Service Tax Rounding Type];
                                                   OptionCaptionML=[ENU=Nearest,Up,Down;
                                                                    ENN=Nearest,Up,Down];
                                                   OptionString=Nearest,Up,Down;
                                                   Editable=No }
    { 113 ;   ;Corrected Appln. Entry No.;Integer ;CaptionML=[ENU=Corrected Appln. Entry No.;
                                                              ENN=Corrected Appln. Entry No.];
                                                   Editable=No }
    { 114 ;   ;Entry Type          ;Option        ;CaptionML=[ENU=Entry Type;
                                                              ENN=Entry Type];
                                                   OptionCaptionML=[ENU=" ,Initial Entry,Application,Unrealized Loss,Unrealized Gain,Realized Loss,Realized Gain";
                                                                    ENN=" ,Initial Entry,Application,Unrealized Loss,Unrealized Gain,Realized Loss,Realized Gain"];
                                                   OptionString=[ ,Initial Entry,Application,Unrealized Loss,Unrealized Gain,Realized Loss,Realized Gain];
                                                   Editable=No }
    { 16500;  ;Original S.T. Base Amount;Decimal  ;CaptionML=[ENU=Original S.T. Base Amount;
                                                              ENN=Original S.T. Base Amount] }
    { 16501;  ;Original S.T. Amount;Decimal       ;CaptionML=[ENU=Original S.T. Amount;
                                                              ENN=Original S.T. Amount] }
    { 16502;  ;Original S.T. eCess Amount;Decimal ;CaptionML=[ENU=Original S.T. eCess Amount;
                                                              ENN=Original S.T. eCess Amount] }
    { 16503;  ;Original S.T. SHE Cess Amount;Decimal;
                                                   CaptionML=[ENU=Original S.T. SHE Cess Amount;
                                                              ENN=Original S.T. SHE Cess Amount] }
    { 16504;  ;PoT                 ;Boolean       ;CaptionML=[ENU=PoT;
                                                              ENN=PoT];
                                                   Editable=No }
    { 16505;  ;PoT G/L Account     ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=PoT G/L Account;
                                                              ENN=PoT G/L Account] }
    { 16539;  ;Service Tax SBC %   ;Decimal       ;CaptionML=[ENU=Service Tax SBC %;
                                                              ENN=Service Tax SBC %];
                                                   Editable=No }
    { 16540;  ;Service Tax SBC Amount;Decimal     ;CaptionML=[ENU=Service Tax SBC Amount(LCY);
                                                              ENN=Service Tax SBC Amount(LCY)];
                                                   Editable=No }
    { 16541;  ;SBC G/L Account     ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=SBC G/L Account;
                                                              ENN=SBC G/L Account];
                                                   Editable=No }
    { 16542;  ;Original S.T. SBC Amount;Decimal   ;CaptionML=[ENU=Original S.T. SBC Amount;
                                                              ENN=Original S.T. SBC Amount] }
    { 16543;  ;Remaining Serv. Tax SBC Amt;Decimal;CaptionML=[ENU=Remaining Serv. Tax SBC Amt;
                                                              ENN=Remaining Serv. Tax SBC Amt];
                                                   Editable=No }
    { 16544;  ;KK Cess%            ;Decimal       ;CaptionML=[ENU=KK Cess%;
                                                              ENN=KK Cess%];
                                                   Editable=No }
    { 16545;  ;KK Cess Amount      ;Decimal       ;CaptionML=[ENU=KK Cess Amount;
                                                              ENN=KK Cess Amount];
                                                   Editable=No }
    { 16546;  ;KK Cess G/L Account ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=KK Cess G/L Account;
                                                              ENN=KK Cess G/L Account];
                                                   Editable=No }
    { 16547;  ;Original KK Cess Amount;Decimal    ;CaptionML=[ENU=Original KK Cess Amount;
                                                              ENN=Original KK Cess Amount];
                                                   Editable=No }
    { 16548;  ;Remaining KK Cess Amount;Decimal   ;CaptionML=[ENU=Remaining KK Cess Amount;
                                                              ENN=Remaining KK Cess Amount];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Document No.,Posting Date,Transaction No. }
    {    ;Service Tax Registration No.,Service Tax Group Code,Posting Date,Type,Input Service Distribution;
                                                   SumIndexFields=Amount Including Service Tax,Service Tax Base Amount,Service Tax Amount,Service Tax SBC Amount }
    {    ;Transaction No.                          }
    {    ;Adjusted,Adjusted Agst Entry No.         }
    {    ;Document No.,Posting Date,Transaction No.,Service Tax Group Code,Service Tax Registration No. }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Document No.,Posting Date,Type,Service Tax Group Code,Party Code,Service Tax Amount,eCess Amount,SHE Cess Amount }
  }
  CODE
  {

    PROCEDURE CalcRemainingAmount@1500002() RemainingAmount : Decimal;
    BEGIN
      IF PoT THEN BEGIN
        IF "Serv. Tax on Advance Payment" THEN
          RemainingAmount := GetTotalTaxAmount
        ELSE
          RemainingAmount := "Amount Including Service Tax";
      END ELSE BEGIN
        CALCFIELDS("Amount Received/Paid");
        RemainingAmount := "Amount Including Service Tax" - "Amount Received/Paid";
        IF "Reverse Charge" THEN
          RemainingAmount -= (FullTaxAmount + FullTaxSBCAmount + KKCessAmount);
      END;
    END;

    LOCAL PROCEDURE GetTotalTaxAmount@1500007() : Decimal;
    VAR
      ServiceTaxEntryDetails@1500000 : Record 16474;
    BEGIN
      ServiceTaxEntryDetails.SETCURRENTKEY("Service Tax Entry No.");
      ServiceTaxEntryDetails.SETRANGE("Service Tax Entry No.","Entry No.");
      ServiceTaxEntryDetails.CALCSUMS("Service Tax Amount","Base Amount","Service Tax eCess Amount","Service Tax SHE Cess Amount",
        "Service Tax SBC Amount","KK Cess Amount");
      EXIT(ServiceTaxEntryDetails."Base Amount" + ServiceTaxEntryDetails.FullTaxAmount +
        ServiceTaxEntryDetails.FullTaxSBCAmount + ServiceTaxEntryDetails.KKCessAmount);
    END;

    PROCEDURE FullTaxAmount@1500000() : Decimal;
    BEGIN
      EXIT("Service Tax Amount" + "eCess Amount" + "SHE Cess Amount");
    END;

    PROCEDURE Initialize@1500016(GenJnlLine@1500000 : Record 81);
    VAR
      ServiceTaxSetup@1500001 : Record 16472;
      LocationECC@1500003 : Record 14;
      CompanyInfo@1500002 : Record 79;
    BEGIN
      ServiceTaxSetup.FindOnDate(GenJnlLine."Service Tax Group Code",GenJnlLine."Posting Date");

      INIT;
      "Entry No." := 0;
      Type := GenJnlLine."Service Tax Type";
      "Document No." := GenJnlLine."Document No.";
      "Document Type" := GenJnlLine."Document Type";
      "Posting Date" := GenJnlLine."Posting Date";
      "Service Tax Group Code" := GenJnlLine."Service Tax Group Code";
      "Service Tax Registration No." := GenJnlLine."Service Tax Registration No.";
      "Party Code" := GenJnlLine."Account No.";
      "Service Tax Base Amount" := GenJnlLine."Service Tax Base Amount (LCY)";
      "Service Tax Amount" := GenJnlLine."Service Tax Amount";
      "eCess Amount" := GenJnlLine."Service Tax eCess Amount";
      "SHE Cess Amount" := GenJnlLine."Service Tax SHE Cess Amount";
      "Amount Including Service Tax" :=
        GenJnlLine."Service Tax Base Amount (LCY)" + GenJnlLine.FullServiceTaxAmount +
        GenJnlLine.FullServiceTaxSBCAmount + GenJnlLine.KKCessAmount;
      "Service Tax %" := ServiceTaxSetup."Service Tax %";
      "Service Tax eCess %" := ServiceTaxSetup."eCess %";
      "Service Tax SHE Cess %" := ServiceTaxSetup."SHE Cess %";
      "Service Tax SBC %" := GenJnlLine."Service Tax SBC %";
      "Service Tax SBC Amount" := GenJnlLine."Service Tax SBC Amount";
      "KK Cess%" := GenJnlLine."KK Cess%";
      "KK Cess Amount" := GenJnlLine."KK Cess Amount";
      PoT := GenJnlLine.PoT;
      "Location E.C.C. No." := GenJnlLine."E.C.C. No.";
      "Line No." := GenJnlLine."Line No.";
      Positive := GenJnlLine."Service Tax Amount" > 0;
      "Serv. Tax on Advance Payment" := GenJnlLine."Serv. Tax on Advance Payment";
      IF "Serv. Tax on Advance Payment" AND
         (GenJnlLine."Document Type" <> GenJnlLine."Document Type"::Refund)
      THEN BEGIN
        "Remaining Serv. Tax Amt" := "Service Tax Amount";
        "Remaining Serv. Tax eCess Amt" := "eCess Amount";
        "Remaining Serv. Tax Base Amt" := "Service Tax Base Amount";
        "Remaining Serv Tax SHECess Amt" := "SHE Cess Amount";
        "Remaining Serv. Tax SBC Amt" := "Service Tax SBC Amount";
        "Remaining KK Cess Amount" := "KK Cess Amount";
      END;
      "Location Code" := GenJnlLine."Location Code";
      "ST Pure Agent" := GenJnlLine."ST Pure Agent";
      "Nature of Services" := GenJnlLine."Nature of Services";
      "Service Tax Rounding Precision" := GenJnlLine."Service Tax Rounding Precision";
      "Service Tax Rounding Type" := GenJnlLine."Service Tax Rounding Type";
      IF GenJnlLine."Location Code" <> '' THEN BEGIN
        LocationECC.GET(GenJnlLine."Location Code");
        "Location E.C.C. No." := LocationECC."E.C.C. No.";
      END ELSE BEGIN
        CompanyInfo.GET;
        "Location E.C.C. No." := CompanyInfo."E.C.C. No.";
      END;
      "Original S.T. Base Amount" := "Service Tax Base Amount";
      "Original S.T. Amount" := "Service Tax Amount";
      "Original S.T. eCess Amount" := "eCess Amount";
      "Original S.T. SHE Cess Amount" := "SHE Cess Amount";
      "Original S.T. SBC Amount" := "Service Tax SBC Amount";
      "Original KK Cess Amount" := "KK Cess Amount"
    END;

    PROCEDURE IsRealizedGainOrLoss@1500005() : Boolean;
    BEGIN
      EXIT("Entry Type" IN ["Entry Type"::"Realized Loss","Entry Type"::"Realized Gain"]);
    END;

    PROCEDURE ReverseAmounts@1500001();
    BEGIN
      "Service Tax Base Amount" := -"Service Tax Base Amount";
      "Service Tax Amount" := -"Service Tax Amount";
      "eCess Amount" := -"eCess Amount";
      "SHE Cess Amount" := -"SHE Cess Amount";
      "Service Tax SBC Amount" := -"Service Tax SBC Amount";
      "KK Cess Amount" := -"KK Cess Amount";
      "Amount Including Service Tax" := -"Amount Including Service Tax";
      "Service Tax Abatement" := -"Service Tax Abatement";
      "Original S.T. Base Amount" := -"Original S.T. Base Amount";
      "Original S.T. Amount" := -"Original S.T. Amount";
      "Original S.T. eCess Amount" := -"Original S.T. eCess Amount";
      "Original S.T. SHE Cess Amount" := -"Original S.T. SHE Cess Amount";
      "Original S.T. SBC Amount" := -"Original S.T. SBC Amount";
      "Original KK Cess Amount" := -"Original KK Cess Amount";
    END;

    PROCEDURE RoundAmount@1500003(OriginalAmount@1500000 : Decimal) : Decimal;
    VAR
      GLSetup@1500003 : Record 98;
      ServiceTaxRoundingDirection@1500002 : Text[1];
      ServiceTaxRoundingPrecision@1500001 : Decimal;
    BEGIN
      CASE "Service Tax Rounding Type" OF
        "Service Tax Rounding Type"::Nearest:
          ServiceTaxRoundingDirection := '=';
        "Service Tax Rounding Type"::Up:
          ServiceTaxRoundingDirection := '>';
        "Service Tax Rounding Type"::Down:
          ServiceTaxRoundingDirection := '<';
      END;
      IF "Service Tax Rounding Precision" <> 0 THEN
        ServiceTaxRoundingPrecision := "Service Tax Rounding Precision"
      ELSE BEGIN
        GLSetup.GET;
        ServiceTaxRoundingPrecision := GLSetup."Service Tax Rounding Precision";
      END;
      IF ServiceTaxRoundingPrecision = 0 THEN
        EXIT(OriginalAmount);
      EXIT(ROUND(OriginalAmount,ServiceTaxRoundingPrecision,ServiceTaxRoundingDirection));
    END;

    PROCEDURE FullServiceTaxAmount@1500020() : Decimal;
    BEGIN
      EXIT("Service Tax Amount" + "eCess Amount" + "SHE Cess Amount");
    END;

    PROCEDURE RoundServiceTaxAmount@1500087(ServiceTaxAmount@1280000 : Decimal) : Decimal;
    VAR
      ServiceTaxRoundingDirection@1280003 : Text[1];
      ServiceTaxRoundingPrecision@1280002 : Decimal;
    BEGIN
      CASE "Service Tax Rounding Type" OF
        "Service Tax Rounding Type"::Nearest:
          ServiceTaxRoundingDirection := '=';
        "Service Tax Rounding Type"::Up:
          ServiceTaxRoundingDirection := '>';
        "Service Tax Rounding Type"::Down:
          ServiceTaxRoundingDirection := '<';
      END;
      IF "Service Tax Rounding Precision" <> 0 THEN
        ServiceTaxRoundingPrecision := "Service Tax Rounding Precision"
      ELSE
        ServiceTaxRoundingPrecision := 0.01;
      EXIT(
        ROUND(
          ServiceTaxAmount,ServiceTaxRoundingPrecision,ServiceTaxRoundingDirection));
    END;

    PROCEDURE FullTaxSBCAmount@1500421() : Decimal;
    BEGIN
      EXIT("Service Tax SBC Amount");
    END;

    PROCEDURE FullServiceTaxSBCAmount@1500423() : Decimal;
    BEGIN
      EXIT("Service Tax SBC Amount");
    END;

    PROCEDURE KKCessAmount@1500004() : Decimal;
    BEGIN
      EXIT("KK Cess Amount");
    END;

    BEGIN
    END.
  }
}

