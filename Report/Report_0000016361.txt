OBJECT Report 16361 Create Vendor Exp. Debit Note
{
  OBJECT-PROPERTIES
  {
    Date=07-09-12;
    Time=12:00:00 PM;
    Version List=NAVIN7.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create Vendor Exp. Debit Note;
               ENN=Create Vendor Exp. Debit Note];
    ProcessingOnly=Yes;
    UseRequestPage=No;
  }
  DATASET
  {
    { 6547;    ;DataItem;                    ;
               DataItemTable=Table39;
               OnAfterGetRecord=BEGIN
                                  PurchaseHeader.INIT;
                                  PurchaseHeader."Document Type" := PurchaseHeader."Document Type"::"Credit Memo";
                                  PurchaseHeader."No." := '';
                                  PurchaseHeader.INSERT(TRUE);
                                  PurchaseHeader.VALIDATE("Buy-from Vendor No.","Purchase Line"."Buy-from Vendor No.");
                                  PurchaseHeader."Subcon. Order No." := "Purchase Line"."Document No.";
                                  PurchaseHeader."Subcon. Order Line No." := "Purchase Line"."Line No.";
                                  PurchaseHeader.MODIFY;
                                END;
                                 }

    { 2561;1   ;DataItem;                    ;
               DataItemTable=Table16322;
               OnAfterGetRecord=VAR
                                  I@1280000 : Integer;
                                BEGIN
                                  CALCFIELDS("Charge Recoverable");
                                  DebitNoteAmount := "Charge Recoverable" - "Debit Note Amount";
                                  IF DebitNoteAmount <> 0 THEN BEGIN
                                    PurchaseLine.RESET;
                                    PurchaseLine.SETRANGE("Document Type",PurchaseLine."Document Type"::"Credit Memo");
                                    PurchaseLine.SETFILTER("Document No.",PurchaseHeader."No.");
                                    IF PurchaseLine.FINDFIRST THEN
                                      NextLineNo += 10000
                                    ELSE
                                      NextLineNo := 10000;

                                    PurchaseLine.INIT;
                                    PurchaseLine."Document Type" := PurchaseHeader."Document Type";
                                    PurchaseLine."Document No." := PurchaseHeader."No.";
                                    PurchaseLine."Component Item No." := "Item No.";
                                    PurchaseLine."Line No." := NextLineNo;
                                    PurchaseLine.Description := 'Subcon. Order No. ' + "Purchase Line"."Document No." +
                                      'Item No. ' + "Item No." ;
                                    PurchaseLine.Subcontracting := TRUE;
                                    PurchaseLine."Excise Credit Reversal" := TRUE;
                                    PurchaseLine.VALIDATE("Buy-from Vendor No.","Purchase Line"."Buy-from Vendor No.");
                                    PurchaseLine.Type := PurchaseLine.Type::"G/L Account";
                                    PurchaseLine."No." := GetInventoryAdjAccount;
                                    GLAccount.GET(PurchaseLine."No.");
                                    PurchaseLine."Gen. Bus. Posting Group" := GLAccount."Gen. Bus. Posting Group";
                                    PurchaseLine."Gen. Prod. Posting Group" := GLAccount."Gen. Prod. Posting Group";
                                    PurchaseLine.VALIDATE(Quantity,1);
                                    PurchaseLine.VALIDATE("Unit Price (LCY)",DebitNoteAmount);
                                    PurchaseLine.VALIDATE("Direct Unit Cost",DebitNoteAmount);
                                    PurchaseLine.Amount := DebitNoteAmount;
                                    "Debit Note Amount" += DebitNoteAmount;
                                    MODIFY;
                                    PurchaseLine.INSERT;
                                    TotalAmount += DebitNoteAmount;
                                    DebitNoteAmount := 0;
                                  END;
                                  Item.GET("Item No.");
                                  IF NOT Item."Capital Item" THEN BEGIN
                                    IF "Excise Amount" - "DN Excise Amount" <> 0 THEN BEGIN
                                      PurchaseLine.RESET;
                                      PurchaseLine.SETRANGE("Document Type",PurchaseLine."Document Type"::"Credit Memo");
                                      PurchaseLine.SETFILTER("Document No.",PurchaseHeader."No.");
                                      IF PurchaseLine.FINDFIRST THEN
                                        NextLineNo += 10000
                                      ELSE
                                        NextLineNo := 10000;

                                      PurchaseLine.INIT;
                                      PurchaseLine."Document Type" := PurchaseHeader."Document Type";
                                      PurchaseLine."Document No." := PurchaseHeader."No.";
                                      PurchaseLine."Line No." := NextLineNo;
                                      PurchaseLine.Subcontracting := TRUE;
                                      PurchaseLine.Description := 'Subcon. Order No. ' + "Purchase Line"."Document No." +
                                        'Item No. ' + "Item No." ;
                                      PurchaseLine."Excise Credit Reversal" := TRUE;
                                      PurchaseLine."Component Item No." := "Item No.";
                                      PurchaseLine.VALIDATE("Buy-from Vendor No.","Purchase Line"."Buy-from Vendor No.");
                                      PurchaseLine.Type := PurchaseLine.Type::"G/L Account";
                                      PurchaseLine."No." := GetExcisePayableAccount;
                                      GLAccount.GET(PurchaseLine."No.");
                                      PurchaseLine."Gen. Bus. Posting Group" := GLAccount."Gen. Bus. Posting Group";
                                      PurchaseLine."Gen. Prod. Posting Group" := GLAccount."Gen. Prod. Posting Group";
                                      PurchaseLine.VALIDATE(Quantity,1);
                                      PurchaseLine.VALIDATE("Unit Price (LCY)","Excise Amount" - "DN Excise Amount");
                                      PurchaseLine.VALIDATE("Direct Unit Cost","Excise Amount" - "DN Excise Amount");
                                      PurchaseLine.Amount := "Excise Amount" - "DN Excise Amount";
                                      PurchaseLine."Excise Amount" := "Excise Amount" - "DN Excise Amount";
                                      PurchaseLine."BED Amount" := "BED Amount" - "DN BED Amount";
                                      PurchaseLine."AED(GSI) Amount" := "AED(GSI) Amount" - "DN AED Amount";
                                      PurchaseLine."SED Amount" := "SED Amount" - "DN SED Amount";
                                      PurchaseLine."SAED Amount" := "SAED Amount" - "DN SAED Amount";
                                      PurchaseLine."CESS Amount" := "CESS Amount" - "DN CESS Amount";
                                      PurchaseLine."NCCD Amount" := "NCCD Amount" - "DN NCCD Amount";
                                      PurchaseLine."eCess Amount" := "eCess Amount" - "DN eCess Amount";
                                      PurchaseLine."AED(TTA) Amount" := "AED(TTA) Amount" - "DN AED(TTA) Amount";
                                      PurchaseLine."ADET Amount" := "ADET Amount" - "DN ADET Amount";
                                      PurchaseLine."ADE Amount" := "ADE Amount" - "DN ADE Amount";
                                      PurchaseLine."SHE Cess Amount" := "SHE Cess Amount" - "DN SHE Cess Amount";
                                      PurchaseLine."ADC VAT Amount" := "ADC VAT Amount" - "DN ADC VAT Amount";
                                      "DN Excise Amount" += PurchaseLine."Excise Amount";
                                      "DN BED Amount" += PurchaseLine."BED Amount";
                                      "DN AED Amount" += PurchaseLine."AED(GSI) Amount" ;
                                      "DN SED Amount" += PurchaseLine."SED Amount";
                                      "DN SAED Amount" += PurchaseLine."SAED Amount";
                                      "DN CESS Amount" += PurchaseLine."CESS Amount";
                                      "DN NCCD Amount" += PurchaseLine."NCCD Amount";
                                      "DN eCess Amount" += PurchaseLine."eCess Amount";
                                      "DN AED(TTA) Amount" += PurchaseLine."AED(TTA) Amount";
                                      "DN ADET Amount" += PurchaseLine."ADET Amount";
                                      "DN ADE Amount" += PurchaseLine."ADE Amount";
                                      "DN SHE Cess Amount" += PurchaseLine."SHE Cess Amount";
                                      "DN ADC VAT Amount" += PurchaseLine."ADC VAT Amount";
                                      MODIFY;
                                      PurchaseLine.INSERT;
                                      TotalAmount += "Excise Amount";
                                      DebitNoteAmount := 0;
                                    END;
                                  END ELSE
                                    FOR I := 1 TO 2 DO BEGIN
                                      IF "Excise Amount" - "DN Excise Amount" <> 0 THEN BEGIN
                                        PurchaseLine.RESET;
                                        PurchaseLine.SETRANGE("Document Type",PurchaseLine."Document Type"::"Credit Memo");
                                        PurchaseLine.SETFILTER("Document No.",PurchaseHeader."No.");
                                        IF PurchaseLine.FINDFIRST THEN
                                          NextLineNo += 10000
                                        ELSE
                                          NextLineNo := 10000;
                                        PurchaseLine.INIT;
                                        PurchaseLine."Document Type" := PurchaseHeader."Document Type";
                                        PurchaseLine."Document No." := PurchaseHeader."No.";
                                        PurchaseLine."Line No." := NextLineNo;
                                        PurchaseLine.Subcontracting := TRUE;
                                        PurchaseLine."Capital Item" := TRUE;
                                        PurchaseLine.Description := 'Subcon. Order No. ' + "Purchase Line"."Document No." +
                                          'Item No. ' + "Item No." ;
                                        // PurchaseLine."Excise Credit Reversal" := TRUE;
                                        PurchaseLine."Component Item No." := "Item No.";
                                        PurchaseLine.VALIDATE("Buy-from Vendor No.","Purchase Line"."Buy-from Vendor No.");
                                        PurchaseLine.Type := PurchaseLine.Type::"G/L Account";
                                        IF I = 1 THEN
                                          PurchaseLine."No." := GetExcisePayableAccount
                                        ELSE
                                          PurchaseLine."No." := GetExcisePayableAccount2;
                                        GLAccount.GET(PurchaseLine."No.");
                                        PurchaseLine."Gen. Bus. Posting Group" := GLAccount."Gen. Bus. Posting Group";
                                        PurchaseLine."Gen. Prod. Posting Group" := GLAccount."Gen. Prod. Posting Group";
                                        PurchaseLine.VALIDATE(Quantity,1);
                                        PurchaseLine.VALIDATE("Unit Price (LCY)",("Excise Amount" - "DN Excise Amount") / 2);
                                        PurchaseLine.VALIDATE("Direct Unit Cost",("Excise Amount" - "DN Excise Amount") / 2);
                                        PurchaseLine.Amount := ("Excise Amount" - "DN Excise Amount") / 2;
                                        PurchaseLine."Excise Amount" := ("Excise Amount" - "DN Excise Amount") / 2;
                                        PurchaseLine."BED Amount" := ("BED Amount" - "DN BED Amount") / 2;
                                        PurchaseLine."AED(GSI) Amount" := ("AED(GSI) Amount" - "DN AED Amount") / 2;
                                        PurchaseLine."SED Amount" := ("SED Amount" - "DN SED Amount") / 2;
                                        PurchaseLine."SAED Amount" := ("SAED Amount" - "DN SAED Amount") / 2;
                                        PurchaseLine."CESS Amount" := ("CESS Amount" - "DN CESS Amount") / 2;
                                        PurchaseLine."NCCD Amount" := ("NCCD Amount" - "DN NCCD Amount") / 2;
                                        PurchaseLine."eCess Amount" := ("eCess Amount" - "DN eCess Amount") / 2;
                                        PurchaseLine."AED(TTA) Amount" := ("AED(TTA) Amount" - "DN AED(TTA) Amount") / 2;
                                        PurchaseLine."ADET Amount" := ("ADET Amount" - "DN ADET Amount") / 2;
                                        PurchaseLine."ADE Amount" := ("ADE Amount" - "DN ADE Amount") / 2;
                                        PurchaseLine."SHE Cess Amount" := ("SHE Cess Amount" - "DN SHE Cess Amount") / 2;
                                        PurchaseLine."ADC VAT Amount" := ("ADC VAT Amount" - "DN ADC VAT Amount") / 2;
                                        IF I = 2 THEN BEGIN
                                          "DN Excise Amount" += PurchaseLine."Excise Amount" * 2;
                                          "DN BED Amount" += PurchaseLine."BED Amount" * 2;
                                          "DN AED Amount" += PurchaseLine."AED(GSI) Amount" * 2 ;
                                          "DN SED Amount" += PurchaseLine."SED Amount" * 2;
                                          "DN SAED Amount" += PurchaseLine."SAED Amount" * 2;
                                          "DN CESS Amount" += PurchaseLine."CESS Amount" * 2;
                                          "DN NCCD Amount" += PurchaseLine."NCCD Amount" * 2;
                                          "DN eCess Amount" += PurchaseLine."eCess Amount" * 2;
                                          "DN AED(TTA) Amount" += PurchaseLine."AED(TTA) Amount" * 2;
                                          "DN ADET Amount" += PurchaseLine."ADET Amount" * 2;
                                          "DN ADE Amount" += PurchaseLine."ADE Amount" * 2;
                                          "DN SHE Cess Amount" += PurchaseLine."SHE Cess Amount" * 2;
                                          "DN ADC VAT Amount" += PurchaseLine."ADC VAT Amount" * 2;
                                          MODIFY;
                                        END;
                                        PurchaseLine.INSERT;
                                        TotalAmount += "Excise Amount" / 2;
                                        DebitNoteAmount := 0;
                                      END;
                                    END;
                                END;

               OnPostDataItem=BEGIN
                                IF TotalAmount = 0 THEN
                                  ERROR(Text002);

                                MESSAGE(Text001,PurchaseHeader."No.");
                              END;

               DataItemLink=Document No.=FIELD(Document No.),
                            Document Line No.=FIELD(Line No.),
                            Parent Item No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      DebitNoteAmount@1280001 : Decimal;
      PurchaseHeader@1280000 : Record 38;
      PurchaseLine@1280002 : Record 39;
      NextLineNo@1280003 : Integer;
      Vendor@1280004 : Record 23;
      Item@1280005 : Record 27;
      GPSetup@1280006 : Record 252;
      GLAccount@1280007 : Record 15;
      TotalAmount@1280008 : Decimal;
      Text001@1500000 : TextConst 'ENU=Purchase Credit Memo No. %1 created.;ENN=Purchase Credit Memo No. %1 created.';
      Text002@1500001 : TextConst 'ENU=No Balance Recoverable.;ENN=No Balance Recoverable.';

    PROCEDURE GetInventoryAdjAccount@1280000() : Code[10];
    BEGIN
      Vendor.GET("Purchase Line"."Buy-from Vendor No.");
      Item.GET("Sub Order Comp. List Vend"."Item No.");
      GPSetup.GET(Vendor."Gen. Bus. Posting Group",Item."Gen. Prod. Posting Group");
      GPSetup.TESTFIELD("Inventory Adjmt. Account");
      EXIT(GPSetup."Inventory Adjmt. Account");
    END;

    PROCEDURE GetExcisePayableAccount@1280005() AccountNo : Code[20];
    VAR
      ExcisePostingSetup@1280000 : Record 13711;
    BEGIN
      ExcisePostingSetup.SETFILTER("Excise Bus. Posting Group","Sub Order Comp. List Vend"."Excise Bus. Posting Group");
      ExcisePostingSetup.SETFILTER("Excise Prod. Posting Group","Sub Order Comp. List Vend"."Excise Prod. Posting Group");
      ExcisePostingSetup.SETFILTER("From Date",'<=%1',WORKDATE);
      ExcisePostingSetup.SETRANGE(SSI,"Sub Order Comp. List Vend".SSI);
      ExcisePostingSetup.FINDLAST;
      ExcisePostingSetup.TESTFIELD("Cenvat Cr. Receivable Account");
      EXIT(ExcisePostingSetup."Cenvat Cr. Receivable Account");
    END;

    PROCEDURE GetExcisePayableAccount2@1280004() AccountNo : Code[20];
    VAR
      ExcisePostingSetup@1280000 : Record 13711;
    BEGIN
      ExcisePostingSetup.SETFILTER("Excise Bus. Posting Group","Sub Order Comp. List Vend"."Excise Bus. Posting Group");
      ExcisePostingSetup.SETFILTER("Excise Prod. Posting Group","Sub Order Comp. List Vend"."Excise Prod. Posting Group");
      ExcisePostingSetup.SETFILTER("From Date",'<=%1',WORKDATE);
      ExcisePostingSetup.SETRANGE(SSI,"Sub Order Comp. List Vend".SSI);
      ExcisePostingSetup.FINDLAST;
      ExcisePostingSetup.TESTFIELD("Cenvat Cr. (Deferred) Account");
      EXIT(ExcisePostingSetup."Cenvat Cr. (Deferred) Account");
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

