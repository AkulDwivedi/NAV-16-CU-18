OBJECT Report 16535 Create FA Fiscal Year
{
  OBJECT-PROPERTIES
  {
    Date=07-09-12;
    Time=12:00:00 PM;
    Version List=NAVIN7.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create FA Fiscal Year;
               ENN=Create FA Fiscal Year];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  AccountingPeriod."Starting Date" := FiscalYearStartDate;
                  AccountingPeriod.TESTFIELD("Starting Date");

                  IF AccountingPeriod.FIND('-') THEN BEGIN
                    FirstPeriodStartDate := AccountingPeriod."Starting Date";
                    FirstPeriodLocked := AccountingPeriod."Date Locked";
                    IF (FiscalYearStartDate < FirstPeriodStartDate) AND FirstPeriodLocked THEN
                      IF NOT
                         CONFIRM(
                           Text16500 +
                           Text16501)
                      THEN
                        EXIT;
                    IF AccountingPeriod.FIND('+') THEN
                      LastPeriodStartDate := AccountingPeriod."Starting Date";
                  END ELSE
                    IF NOT
                       CONFIRM(
                         Text16502 +
                         Text16503)
                    THEN
                      EXIT;

                  FOR i := 1 TO NoOfPeriods + 1 DO BEGIN
                    IF (FiscalYearStartDate <= FirstPeriodStartDate) AND (i = NoOfPeriods + 1) THEN
                      EXIT;

                    IF FirstPeriodStartDate <> 0D THEN
                      IF (FiscalYearStartDate >= FirstPeriodStartDate) AND (FiscalYearStartDate < LastPeriodStartDate) THEN
                        ERROR(Text16504);
                    AccountingPeriod.INIT;
                    AccountingPeriod."Starting Date" := FiscalYearStartDate;
                    AccountingPeriod.VALIDATE("Starting Date");
                    IF (i = 1) OR (i = NoOfPeriods + 1) THEN
                      AccountingPeriod."New Fiscal Year" := TRUE;
                    IF (FirstPeriodStartDate = 0D) AND (i = 1) THEN
                      AccountingPeriod."Date Locked" := TRUE;
                    IF (AccountingPeriod."Starting Date" < FirstPeriodStartDate) AND FirstPeriodLocked THEN BEGIN
                      AccountingPeriod.Closed := TRUE;
                      AccountingPeriod."Date Locked" := TRUE;
                    END;
                    IF NOT AccountingPeriod.FIND('=') THEN
                      AccountingPeriod.INSERT;
                    FiscalYearStartDate := CALCDATE(PeriodLength,FiscalYearStartDate);
                  END;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF NoOfPeriods = 0 THEN BEGIN
                     NoOfPeriods := 12;
                     EVALUATE(PeriodLength,'<1M>');
                   END;
                   IF AccountingPeriod.FIND('+') THEN
                     FiscalYearStartDate := AccountingPeriod."Starting Date";
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENN=Options] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Starting Date;
                             ENN=Starting Date];
                  SourceExpr=FiscalYearStartDate }

      { 2   ;2   ;Field     ;
                  CaptionML=[ENU=No. of Periods;
                             ENN=No. of Periods];
                  SourceExpr=NoOfPeriods }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Period Length;
                             ENN=Period Length];
                  SourceExpr=PeriodLength }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      AccountingPeriod@1500007 : Record 16519;
      NoOfPeriods@1500006 : Integer;
      PeriodLength@1500005 : DateFormula;
      FiscalYearStartDate@1500004 : Date;
      FirstPeriodStartDate@1500003 : Date;
      LastPeriodStartDate@1500002 : Date;
      FirstPeriodLocked@1500001 : Boolean;
      i@1500000 : Integer;
      Text16500@1500012 : TextConst 'ENU=The new fiscal year begins before an existing fiscal year, so the new year will be closed automatically.\\;ENN=The new fiscal year begins before an existing fiscal year, so the new year will be closed automatically.\\';
      Text16501@1500011 : TextConst 'ENU=Do you want to create and close the fiscal year?;ENN=Do you want to create and close the fiscal year?';
      Text16502@1500010 : TextConst 'ENU=Once you create the new fiscal year you cannot change its starting date.\\;ENN=Once you create the new fiscal year you cannot change its starting date.\\';
      Text16503@1500009 : TextConst 'ENU=Do you want to create the fiscal year?;ENN=Do you want to create the fiscal year?';
      Text16504@1500008 : TextConst 'ENU=It is only possible to create new fiscal years before or after the existing ones.;ENN=It is only possible to create new fiscal years before or after the existing ones.';

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

