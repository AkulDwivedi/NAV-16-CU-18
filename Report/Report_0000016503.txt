OBJECT Report 16503 Update Challan Register
{
  OBJECT-PROPERTIES
  {
    Date=03-08-16;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.46621;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Update Challan Register;
               ENN=Update Challan Register];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   CompanyInfo.GET;
                   PaidByBook := FALSE;
                 END;

    OnPreReport=BEGIN
                  DeductorCategory.GET(CompanyInfo."Deductor Category");
                  IF DeductorCategory."Transfer Voucher No. Mandatory" AND (TransferVoucherNo = '') THEN
                    ERROR(Text16501,DeductorCategory.Code,DeductorCategory.Description);
                  IF NOT DeductorCategory."Transfer Voucher No. Mandatory" AND (TransferVoucherNo <> '') THEN
                    ERROR(Text16502,DeductorCategory.Code,DeductorCategory.Description);
                  IF DeductorCategory."Transfer Voucher No. Mandatory" AND (TransferVoucherNo <> '') AND NOT PaidByBook THEN
                    ERROR(Text16503);
                END;

  }
  DATASET
  {
    { 2129;    ;DataItem;                    ;
               DataItemTable=Table16504;
               DataItemTableView=SORTING(Entry No.);
               OnPreDataItem=BEGIN
                               SETRANGE("Entry No.",EntryNo);
                             END;

               OnAfterGetRecord=VAR
                                  Form26Q27QEntry@1500000 : Record 16505;
                                  GenJournalLine@1500001 : Record 81;
                                BEGIN
                                  "TDS Interest Amount" := GenJournalLine.RoundTDSAmount(InterestAmount);
                                  "TDS Others" := GenJournalLine.RoundTDSAmount(Others);
                                  "Oltas Interest" := GenJournalLine.RoundTDSAmount(InterestAmount);
                                  "Oltas Others" := GenJournalLine.RoundTDSAmount(Others);
                                  "TDS Fee" := GenJournalLine.RoundTDSAmount(LateFee);
                                  "Paid By Book Entry" := PaidByBook;
                                  "Transfer Voucher No." := TransferVoucherNo;
                                  Form26Q27QEntry.RESET;
                                  Form26Q27QEntry.SETRANGE("Challan Register Entry No.","Entry No.");
                                  IF Form26Q27QEntry.FINDFIRST THEN
                                    Form26Q27QEntry.MODIFYALL("Book Entry / Cash Indicator",TRUE);

                                  MODIFY;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENN=Options] }

      { 1500000;2;Field     ;
                  CaptionML=[ENU=Interest Amount;
                             ENN=Interest Amount];
                  SourceExpr=InterestAmount }

      { 1500002;2;Field     ;
                  CaptionML=[ENU=Others;
                             ENN=Others];
                  SourceExpr=Others }

      { 1500015;2;Field     ;
                  CaptionML=[ENU=Fee;
                             ENN=Fee];
                  SourceExpr=LateFee }

      { 1500004;2;Field     ;
                  CaptionML=[ENU=Paid By Book Entry;
                             ENN=Paid By Book Entry];
                  SourceExpr=PaidByBook;
                  OnValidate=BEGIN
                               IF NOT (CompanyInfo."Company Status" = CompanyInfo."Company Status"::Government) AND (PaidByBook = TRUE) THEN
                                 ERROR(Text16500);
                             END;
                              }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Transfer Voucher No.;
                             ENN=Transfer Voucher No.];
                  SourceExpr=TransferVoucherNo }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInfo@1500004 : Record 79;
      DeductorCategory@1003 : Record 16498;
      InterestAmount@1500000 : Decimal;
      Others@1500001 : Decimal;
      EntryNo@1500003 : Integer;
      PaidByBook@1500002 : Boolean;
      Text16500@1500005 : TextConst 'ENU=Paid by book entry can be true only for Govt. Organisations.;ENN=Paid by book entry can be true only for Govt. Organisations.';
      TransferVoucherNo@1000 : Code[9];
      Text16501@1001 : TextConst 'ENU=Transfer Voucher No. cannot be empty when Deductor Category is %1 - %2.;ENN=Transfer Voucher No. cannot be empty when Deductor Category is %1 - %2.';
      Text16502@1002 : TextConst 'ENU=Transfer Voucher No. cannot be entered when  Deductor Category is %1 - %2.;ENN=Transfer Voucher No. cannot be entered when  Deductor Category is %1 - %2.';
      Text16503@1500006 : TextConst 'ENU=Paid by Book Entry cannot be false when Transfer Voucher No. is entered.;ENN=Paid by Book Entry cannot be false when Transfer Voucher No. is entered.';
      LateFee@1500026 : Decimal;

    PROCEDURE UpdateChallan@1500000(NewInterestAmount@1500003 : Decimal;NewOtherAmount@1500002 : Decimal;NewLateFee@1500027 : Decimal;NewEntryNo@1500000 : Integer);
    VAR
      GenJournalLine@1500009 : Record 81;
    BEGIN
      InterestAmount := GenJournalLine.RoundTDSAmount(NewInterestAmount);
      Others := GenJournalLine.RoundTDSAmount(NewOtherAmount);
      LateFee := GenJournalLine.RoundTDSAmount(NewLateFee);
      EntryNo := NewEntryNo;
    END;

    PROCEDURE UpdateVoucherNo@1500001(PaidByBookEntry@1500000 : Boolean;VoucherNo@1500001 : Code[9]);
    BEGIN
      PaidByBook := PaidByBookEntry;
      TransferVoucherNo := VoucherNo;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

