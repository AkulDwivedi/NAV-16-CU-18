OBJECT Report 16597 GetJobTaskLines
{
  OBJECT-PROPERTIES
  {
    Date=07-09-12;
    Time=12:00:00 PM;
    Version List=NAVIN7.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=GetJobTaskLines;
               ENN=GetJobTaskLines];
    ProcessingOnly=Yes;
    UseRequestPage=Yes;
  }
  DATASET
  {
    { 2969;    ;DataItem;                    ;
               DataItemTable=Table1001;
               OnAfterGetRecord=BEGIN
                                  IF JobNo <> "Job Task"."Job No." THEN
                                    ERROR(Text16500);
                                  CapitalizeCWIPHeader.GET(DocNo);
                                  CapitalizeCWIPLine.RESET;
                                  CapitalizeCWIPLine.SETRANGE("Document No.",DocNo);
                                  CapitalizeCWIPLine.SETRANGE("Job No.","Job No.");
                                  CapitalizeCWIPLine.SETRANGE("Job Task No.","Job Task No.");
                                  IF CapitalizeCWIPLine.FINDFIRST THEN
                                    UpdateRecord(CapitalizeCWIPLine,"Job Task")
                                  ELSE
                                    InsertRecord("Job Task");
                                END;

               ReqFilterFields=Job Task No.,Job Task Type }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      DocNo@1500000 : Code[20];
      JobNo@1500001 : Code[20];
      CapitalizeCWIPLine@1500002 : Record 16598;
      Type@1500005 : ',Labor,Material,Overheads';
      Text16500@1500003 : TextConst 'ENU=You cannot change Job No.;ENN=You cannot change Job No.';
      CapitalizeCWIPHeader@1500004 : Record 16597;

    PROCEDURE InitReport@1500000(DocumentNo_@1500000 : Code[20];JobNo_@1500001 : Code[20]);
    BEGIN
      DocNo := DocumentNo_;
      JobNo := JobNo_;
    END;

    PROCEDURE DeleteRecords@1500002(JobTaskNo_@1500000 : Code[20]);
    VAR
      Capitalization@1500002 : Record 16596;
    BEGIN
      Capitalization.RESET;
      Capitalization.SETRANGE("Document No.",DocNo);
      Capitalization.SETRANGE("Job No.",JobNo);
      Capitalization.SETRANGE("Job Task No.",JobTaskNo_);
      Capitalization.DELETEALL;
    END;

    PROCEDURE UpdateRecord@1500006(CapitalizeCWIPLine2@1500000 : Record 16598;JobTask2@1500001 : Record 1001);
    BEGIN
      WITH JobTask2 DO BEGIN
        CapitalizeCWIPLine2.Description := Description;
        CapitalizeCWIPLine2."Job Task Type" := "Job Task Type";
        CapitalizeCWIPLine2."CWIP Amount" := CalculateCWIPAmount("Job No.","Job Task No.");
        CapitalizeCWIPLine2."Remaining CWIP Amt (Labor)" := CalculateRemCWIPAmount("Job No.","Job Task No.",Type::Labor);
        IF CapitalizeCWIPLine2."Remaining CWIP Amt (Labor)" < 0 THEN
          CapitalizeCWIPLine2."Remaining CWIP Amt (Labor)" := 0;
        CapitalizeCWIPLine2."Remaining CWIP Amt (Material)" := CalculateRemCWIPAmount("Job No.","Job Task No.",Type::Material);
        IF CapitalizeCWIPLine2."Remaining CWIP Amt (Material)" < 0 THEN
          CapitalizeCWIPLine2."Remaining CWIP Amt (Material)" := 0;
        CapitalizeCWIPLine2."Remaining CWIP Amt (Overheads)" := CalculateRemCWIPAmount("Job No.","Job Task No.",Type::Overheads);
        IF CapitalizeCWIPLine2."Remaining CWIP Amt (Overheads)" < 0 THEN
          CapitalizeCWIPLine2."Remaining CWIP Amt (Overheads)" := 0;
        CapitalizeCWIPLine2.Indentation := Indentation;
        CapitalizeCWIPLine2."Posting Date" := CapitalizeCWIPHeader."Posting Date";
        CapitalizeCWIPLine2.MODIFY;
        DeleteRecords("Job Task No.");
      END;
    END;

    PROCEDURE InsertRecord@1500007(JobTask3@1500001 : Record 1001);
    VAR
      CapitalizeCWIPLine3@1500000 : Record 16598;
      CapitalizeCWIPLn3@1500002 : Record 16598;
    BEGIN
      WITH JobTask3 DO BEGIN
        CapitalizeCWIPLine3.RESET;
        CapitalizeCWIPLine3.INIT;
        CapitalizeCWIPLine3."Document No." := DocNo;
        CapitalizeCWIPLine3."Job No." := "Job No.";
        CapitalizeCWIPLine3."Job Task No." := "Job Task No.";
        CapitalizeCWIPLine3.Description := Description;
        CapitalizeCWIPLine3."Job Task Type" := "Job Task Type";
        CapitalizeCWIPLine3."CWIP Amount" := CalculateCWIPAmount("Job No.","Job Task No.");
        CapitalizeCWIPLine3."Remaining CWIP Amt (Labor)" := CalculateRemCWIPAmount("Job No.","Job Task No.",Type::Labor);
        IF CapitalizeCWIPLine3."Remaining CWIP Amt (Labor)" < 0 THEN
          CapitalizeCWIPLine3."Remaining CWIP Amt (Labor)" := 0;
        CapitalizeCWIPLine3."Remaining CWIP Amt (Material)" := CalculateRemCWIPAmount("Job No.","Job Task No.",Type::Material);
        IF CapitalizeCWIPLine3."Remaining CWIP Amt (Material)" < 0 THEN
          CapitalizeCWIPLine3."Remaining CWIP Amt (Material)" := 0;
        CapitalizeCWIPLine3."Remaining CWIP Amt (Overheads)" := CalculateRemCWIPAmount("Job No.","Job Task No.",Type::Overheads);
        IF CapitalizeCWIPLine3."Remaining CWIP Amt (Overheads)" < 0 THEN
          CapitalizeCWIPLine3."Remaining CWIP Amt (Overheads)" := 0;
        CapitalizeCWIPLine3.Indentation := Indentation;
        CapitalizeCWIPLine3."Posting Date" := CapitalizeCWIPHeader."Posting Date";
        CapitalizeCWIPLn3.RESET;
        CapitalizeCWIPLn3.SETRANGE("Document No.",DocNo);
        CapitalizeCWIPLn3.SETRANGE("Job No.","Job No.");
        IF CapitalizeCWIPLn3.FINDLAST THEN
          CapitalizeCWIPLine3."Line No." := CapitalizeCWIPLn3."Line No." + 10000
        ELSE
          CapitalizeCWIPLine3."Line No." := 10000;
        CapitalizeCWIPLine3.INSERT;
      END;
    END;

    PROCEDURE CalculateRemCWIPAmount@1500010(JobNo_@1500000 : Code[20];JobTaskNo_@1500001 : Code[20];CWIPGLType_@1500002 : ',Labor,Material,Overheads') : Decimal;
    VAR
      JobLedgerEntry@1500003 : Record 169;
    BEGIN
      JobLedgerEntry.RESET;
      JobLedgerEntry.SETCURRENTKEY("Job No.","Job Task No.","CWIP G/L Type");
      JobLedgerEntry.SETRANGE("Job No.",JobNo_);
      JobLedgerEntry.SETRANGE("Job Task No.",JobTaskNo_);
      JobLedgerEntry.SETRANGE("CWIP G/L Type",CWIPGLType_);
      JobLedgerEntry.SETRANGE("CWIP Posted to G/L",TRUE);
      JobLedgerEntry.CALCSUMS("Remaining CWIP Amt");
      EXIT(JobLedgerEntry."Remaining CWIP Amt");
    END;

    PROCEDURE CalculateCWIPAmount@1500001(JobNo@1500000 : Code[20];JobTaskNo@1500001 : Code[20]) : Decimal;
    VAR
      JobLedgerEntry@1500003 : Record 169;
    BEGIN
      JobLedgerEntry.RESET;
      JobLedgerEntry.SETCURRENTKEY("Job No.","Job Task No.","CWIP G/L Type");
      JobLedgerEntry.SETRANGE("Job No.",JobNo);
      JobLedgerEntry.SETRANGE("Job Task No.",JobTaskNo);
      JobLedgerEntry.SETRANGE("CWIP Posted to G/L",TRUE);
      JobLedgerEntry.CALCSUMS("Total Cost (LCY)");
      EXIT(JobLedgerEntry."Total Cost (LCY)");
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

