OBJECT Report 16517 Generate TCS Certificate Nos.
{
  OBJECT-PROPERTIES
  {
    Date=07-09-12;
    Time=12:00:00 PM;
    Version List=NAVIN7.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Generate TCS Certificate Nos.;
               ENN=Generate TCS Certificate Nos.];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF (PartyType = PartyType::" ") THEN
                    ERROR(Text16500);
                    IF (StartDate = 0D) OR (EndDate = 0D) THEN
                      ERROR(Text16503);
                  CheckReceiptNo;
                  IF NOT CONFIRM(Text000,TRUE,ReceiptNumber) THEN
                    CurrReport.QUIT;
                  IncomeTaxPeriodSetup.SETRANGE("Starting Date",StartDate);
                  IncomeTaxPeriodSetup.SETRANGE("Ending Date",EndDate);
                  IF IncomeTaxPeriodSetup.ISEMPTY THEN
                    ERROR(Text16504,StartDate,EndDate,IncomeTaxPeriodSetup.FIELDCAPTION(Quarter),IncomeTaxPeriodSetup.TABLECAPTION);
                  IF PartyType <> PartyType::" " THEN BEGIN
                    NODNOCHeader.SETRANGE(Type,PartyType);
                    IF PartyNo <> '' THEN
                      NODNOCHeader.SETRANGE("No.",PartyNo);
                    IF NODNOCHeader.FINDSET THEN
                      REPEAT
                        IF TCSType <> TCSType::" " THEN
                          TCSSetup.SETRANGE("TCS Type",TCSType);
                        IF TCSSetup.FINDSET THEN
                          REPEAT
                            NOCLine.SETRANGE(Type,PartyType);
                            NOCLine.SETRANGE("No.",NODNOCHeader."No.");
                            NOCLine.SETRANGE("TCS Type",TCSSetup."TCS Type");
                            IF NOCLine.FINDSET THEN
                              REPEAT
                                TCSEntry.SETRANGE("Party Type",PartyType);
                                TCSEntry.SETRANGE("Party Code",NODNOCHeader."No.");
                                TCSEntry.SETRANGE("TCS Type",TCSSetup."TCS Type");
                                TCSEntry.SETRANGE("TCS Certificate No.",'');
                                TCSEntry.SETFILTER("Challan No.",'<>%1','');
                                TCSEntry.SETFILTER("Challan Date",'<>%1',0D);
                                TCSEntry.SETFILTER("Posting Date",'%1..%2',StartDate,EndDate);
                                TCSEntry.SETRANGE("TCS Paid",TRUE);
                                IF TCSEntry.FINDFIRST THEN BEGIN
                                  TCSSetup.TESTFIELD("No. Series");
                                  CertificateNo := NoSeriesMgt.GetNextNo(TCSSetup."No. Series",WORKDATE,TRUE);
                                  Count := Count + 1;
                                  REPEAT
                                    TCSEntry."TCS Certificate No." := CertificateNo;
                                    TCSEntry."Certificate Period" := FORMAT(StartDate) +'..' + FORMAT(EndDate);
                                    TCSEntry."Receipt Number" := ReceiptNumber;
                                    TCSEntry.MODIFY;
                                  UNTIL TCSEntry.NEXT = 0;
                                END;
                              UNTIL NOCLine.NEXT = 0;
                          UNTIL TCSSetup.NEXT = 0;
                      UNTIL NODNOCHeader.NEXT = 0;
                  END;
                END;

    OnPostReport=BEGIN
                   MESSAGE(Text16501,Count,FORMAT(StartDate) +'..' + FORMAT(EndDate));
                 END;

    UseRequestPage=Yes;
  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENN=Options] }

      { 1280003;2;Field     ;
                  Name=PartyType;
                  CaptionML=[ENU=Party Type;
                             ENN=Party Type];
                  SourceExpr=PartyType }

      { 1280005;2;Field     ;
                  CaptionML=[ENU=Party;
                             ENN=Party];
                  SourceExpr=PartyNo;
                  OnLookup=BEGIN
                             IF PartyType = PartyType::Customer THEN BEGIN
                               IF Cust.FINDFIRST THEN;
                               IF PAGE.RUNMODAL(PAGE::"Customer List",Cust) = ACTION::LookupOK THEN BEGIN
                                 PartyNo := Cust."No.";
                               END;
                             END;
                             IF PartyType = PartyType::Party THEN BEGIN
                               IF TCSParty.FINDFIRST THEN;
                               IF PAGE.RUNMODAL(PAGE::Parties,TCSParty) = ACTION::LookupOK THEN BEGIN
                                 PartyNo := TCSParty.Code;
                               END;
                             END;
                           END;
                            }

      { 1280007;2;Field     ;
                  CaptionML=[ENU=TCS Type;
                             ENN=TCS Type];
                  SourceExpr=TCSType }

      { 1280015;2;Field     ;
                  CaptionML=[ENU=Monthly Certificate;
                             ENN=Monthly Certificate];
                  SourceExpr=MonthlyCertificate }

      { 1280010;2;Field     ;
                  Name=StartDate;
                  CaptionML=[ENU=Starting Date;
                             ENN=Starting Date];
                  SourceExpr=StartDate }

      { 1280000;2;Field     ;
                  Name=EndDate;
                  CaptionML=[ENU=Ending Date;
                             ENN=Ending Date];
                  SourceExpr=EndDate }

      { 1500000;2;Field     ;
                  Name=ReceiptNumber;
                  CaptionML=[ENU=Receipt Number;
                             ENN=Receipt Number];
                  SourceExpr=ReceiptNumber }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Cust@1280022 : Record 18;
      TCSParty@1280020 : Record 13730;
      NODNOCHeader@1500012 : Record 13786;
      NOCLine@1500003 : Record 13785;
      TCSSetup@1500002 : Record 16508;
      TCSEntry@1500001 : Record 16514;
      IncomeTaxPeriodSetup@1500020 : Record 16501;
      NoSeriesMgt@1280008 : Codeunit 396;
      StartDate@1500014 : Date;
      EndDate@1500013 : Date;
      CertificateNo@1500011 : Code[20];
      PartyNo@1500010 : Code[20];
      TCSType@1500009 : ' ,A,B,C,D,E,F,G,H,I';
      PartyType@1500008 : ' ,Party,Customer';
      Count@1500007 : Integer;
      MonthlyCertificate@1500006 : Boolean;
      Text16500@1500018 : TextConst 'ENU=Please select party type.;ENN=Please select party type.';
      Text16501@1500017 : TextConst 'ENU=%1 TCS Certificate(s) generated for the period %2.;ENN=%1 TCS Certificate(s) generated for the period %2.';
      Text16503@1500015 : TextConst 'ENU=Please select Starting Date and Ending Date.;ENN=Please select Starting Date and Ending Date.';
      Text16504@1500019 : TextConst 'ENU=%1..%2 is not a valid %3 from %4.;ENN=%1..%2 is not a valid %3 from %4.';
      ReceiptNumber@1500021 : Text[8];
      Text000@1500024 : TextConst 'ENU=Do you want to update the receipt number %1?;ENN=Do you want to update the receipt number %1?';
      Text001@1500023 : TextConst 'ENU=Please enter valid 8 character Receipt number.;ENN=Please enter valid 8 character Receipt number.';

    PROCEDURE IsAlphabet@1500001(Alphabet@1500000 : Char) : Boolean;
    BEGIN
      EXIT(Alphabet IN ['A'..'Z','a'..'z']);
    END;

    LOCAL PROCEDURE CheckReceiptNo@1500002();
    VAR
      Counter@1500000 : Integer;
      MaxLengthReceiptNo@1500001 : Integer;
    BEGIN
      MaxLengthReceiptNo := 8;
      IF STRLEN(ReceiptNumber) = MaxLengthReceiptNo THEN BEGIN
        FOR Counter := 1 TO MaxLengthReceiptNo DO
          IF NOT IsAlphabet((ReceiptNumber[Counter])) THEN
            ERROR(Text001);
      END ELSE
        ERROR(Text001);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

