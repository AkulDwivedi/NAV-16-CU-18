OBJECT Report 13720 Generate Certificate Nos.
{
  OBJECT-PROPERTIES
  {
    Date=24-04-16;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.45778;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Generate Certificate Nos.;
               ENN=Generate Certificate Nos.];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF PartyType = PartyType::" " THEN
                    ERROR(Text000);
                  IF (StartDate = 0D) OR (EndDate = 0D) THEN
                    ERROR(Text003);
                  MaxLengthReceiptNo := 8;
                  IF STRLEN(ReceiptNumber) = MaxLengthReceiptNo THEN BEGIN
                    FOR Counter := 1 TO MaxLengthReceiptNo DO
                      IF NOT IsAlphabet(ReceiptNumber[Counter]) THEN
                        ERROR(Text006);
                  END ELSE
                    ERROR(Text006);

                  IF NOT CONFIRM(Text005,TRUE,ReceiptNumber) THEN
                    CurrReport.QUIT;
                  IncomeTaxPeriodSetup.SETRANGE("Starting Date",StartDate);
                  IncomeTaxPeriodSetup.SETRANGE("Ending Date",EndDate);
                  IF IncomeTaxPeriodSetup.ISEMPTY THEN
                    ERROR(Text004,StartDate,EndDate,IncomeTaxPeriodSetup.FIELDCAPTION(Quarter),IncomeTaxPeriodSetup.TABLECAPTION);
                  IF PartyType <> PartyType::" " THEN BEGIN
                    NODHeader.SETRANGE(Type,PartyType);
                    IF "PartyNo." <> '' THEN
                      NODHeader.SETRANGE("No.","PartyNo.");
                    IF NODHeader.FINDSET THEN
                      REPEAT
                        IF TDSGroupType <> TDSGroupType::" " THEN
                          TDSGroup.SETRANGE("TDS Group",TDSGroupType);
                        IF TDSGroup.FINDSET THEN
                          REPEAT
                            NODLines.SETRANGE(Type,PartyType);
                            NODLines.SETRANGE("No.",NODHeader."No.");
                            NODLines.SETRANGE("TDS Group",TDSGroup."TDS Group");
                            IF NODLines.FINDSET THEN
                              REPEAT
                                TDSEntry.SETRANGE("Party Type",PartyType);
                                TDSEntry.SETRANGE("Party Code",NODHeader."No.");
                                TDSEntry.SETRANGE("TDS Group",TDSGroup."TDS Group");
                                TDSEntry.SETRANGE("TDS Nature of Deduction",NODLines."NOD/NOC");
                                TDSEntry.SETRANGE("TDS Certificate No.",'');
                                TDSEntry.SETFILTER("Challan No.",'<>%1','');
                                TDSEntry.SETFILTER("Challan Date",'<>%1',0D);
                                TDSEntry.SETFILTER("Posting Date",'%1..%2',StartDate,EndDate);
                                TDSEntry.SETRANGE("TDS Paid",TRUE);
                                IF TDSEntry.FIND('-') THEN BEGIN
                                  TDSGroup.TESTFIELD("No. Series");
                                  CertificateNo := NoSeriesMgt.GetNextNo(TDSGroup."No. Series",WORKDATE,TRUE);
                                  Count := Count + 1;
                                  REPEAT
                                    TDSEntry."TDS Certificate No." := CertificateNo;
                                    TDSEntry."Certificate Period" := FORMAT(StartDate) + '..' + FORMAT(EndDate);
                                    TDSEntry."Receipt Number" := ReceiptNumber;
                                    TDSEntry.MODIFY;
                                  UNTIL TDSEntry.NEXT = 0;
                                END;
                              UNTIL NODLines.NEXT = 0;
                          UNTIL TDSGroup.NEXT = 0;
                      UNTIL NODHeader.NEXT = 0;
                  END;
                END;

    OnPostReport=BEGIN
                   MESSAGE(Text001,Count,FORMAT(StartDate) + '..' + FORMAT(EndDate));
                 END;

    UseRequestPage=Yes;
  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENN=Options] }

      { 1280003;2;Field     ;
                  Name=PartyType;
                  CaptionML=[ENU=Party Type;
                             ENN=Party Type];
                  SourceExpr=PartyType }

      { 1280005;2;Field     ;
                  Name=Party;
                  CaptionML=[ENU=Party;
                             ENN=Party];
                  SourceExpr="PartyNo.";
                  OnLookup=BEGIN
                             IF PartyType = PartyType::Vendor THEN BEGIN
                               IF Vend.FINDFIRST THEN;
                               IF PAGE.RUNMODAL(PAGE::"Vendor List",Vend) = ACTION::LookupOK THEN
                                 "PartyNo." := Vend."No.";
                             END;
                             IF PartyType = PartyType::Customer THEN BEGIN
                               IF Cust.FINDFIRST THEN;
                               IF PAGE.RUNMODAL(PAGE::"Customer List",Cust) = ACTION::LookupOK THEN
                                 "PartyNo." := Cust."No.";
                             END;
                             IF PartyType = PartyType::Party THEN BEGIN
                               IF TDSParty.FINDFIRST THEN;
                               IF PAGE.RUNMODAL(PAGE::Parties,TDSParty) = ACTION::LookupOK THEN
                                 "PartyNo." := TDSParty.Code;
                             END;
                           END;
                            }

      { 1280007;2;Field     ;
                  Name=TDSGroup;
                  CaptionML=[ENU=TDS Group;
                             ENN=TDS Group];
                  SourceExpr=TDSGroupType }

      { 1280010;2;Field     ;
                  Name=StartingDate;
                  CaptionML=[ENU=Starting Date;
                             ENN=Starting Date];
                  SourceExpr=StartDate }

      { 1280000;2;Field     ;
                  Name=EndingDate;
                  CaptionML=[ENU=Ending Date;
                             ENN=Ending Date];
                  SourceExpr=EndDate }

      { 1280004;2;Field     ;
                  Name=ReceiptNumber;
                  CaptionML=[ENU=Receipt Number;
                             ENN=Receipt Number];
                  SourceExpr=ReceiptNumber }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Cust@1280022 : Record 18;
      Vend@1280021 : Record 23;
      TDSParty@1280020 : Record 13730;
      NODHeader@1280002 : Record 13786;
      NODLines@1280001 : Record 13785;
      TDSGroup@1500002 : Record 13731;
      TDSEntry@1500001 : Record 13729;
      IncomeTaxPeriodSetup@1500007 : Record 16501;
      NoSeriesMgt@1280008 : Codeunit 396;
      StartDate@1000000006 : Date;
      EndDate@1000000007 : Date;
      Text000@1280000 : TextConst 'ENU=Please select party type.;ENN=Please select party type.';
      CertificateNo@1280007 : Code[20];
      Text001@1000000000 : TextConst 'ENU=%1 TDS Certificate(s) generated for the period %2.;ENN=%1 TDS Certificate(s) generated for the period %2.';
      "PartyNo."@1500003 : Code[20];
      TDSGroupType@1280012 : ' ,Contractor,Commission,Professional,Interest,Rent,Dividend,Interest on Securities,Lotteries,Insurance Commission,NSS,Mutual fund,Brokerage,Income from Units,Capital Assets,Horse Races,Sports Association,Payable to Non Residents,Income of Mutual Funds,Units,Foreign Currency Bonds,FII from Securities,Others,Rent for Plant & Machinery,Rent for Land & Building,Banking Services';
      PartyType@1280013 : ' ,Party,Customer,Vendor';
      Count@1280006 : Integer;
      Counter@1500010 : Integer;
      MaxLengthReceiptNo@1500012 : Integer;
      Text003@1280010 : TextConst 'ENU=Please select Starting Date and Ending Date.;ENN=Please select Starting Date and Ending Date.';
      Text004@1500006 : TextConst 'ENU=%1..%2 is not a valid %3 from %4.;ENN=%1..%2 is not a valid %3 from %4.';
      ReceiptNumber@1500008 : Text[8];
      Text005@1500009 : TextConst 'ENU=Do you want to update the receipt number %1?;ENN=Do you want to update the receipt number %1?';
      Text006@1500011 : TextConst 'ENU=Please enter valid 8 character Receipt number.;ENN=Please enter valid 8 character Receipt number.';

    PROCEDURE IsAlphabet@1500000(Alphabet@1500000 : Char) : Boolean;
    BEGIN
      EXIT(Alphabet IN ['A'..'Z','a'..'z']);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

