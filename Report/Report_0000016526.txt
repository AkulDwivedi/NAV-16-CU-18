OBJECT Report 16526 Generate revised e-TCS 27EQ
{
  OBJECT-PROPERTIES
  {
    Date=29-09-16;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.47042;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Generate revised e-TCS 27EQ;
               ENN=Generate revised e-TCS 27EQ];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  FileMgt@1500000 : Codeunit 419;
                  CompanyInformation@1500001 : Record 79;
                BEGIN
                  IF FileName = '' THEN
                    ERROR(Text16500);
                  ServerFile := FileMgt.ServerTempFileName('txt');
                  OutFolderName := FileMgt.GetDirectoryName(ServerFile);

                  CompanyInformation.GET;
                  IF Quarter = 0 THEN
                    ERROR(Text16526);
                  IF FinancialYear = '' THEN
                    ERROR(Text16527);
                  IF TCANLocation = '' THEN
                    ERROR(Text16528);
                  IF PersonName = '' THEN
                    ERROR(Text16529);
                  IF Designation = '' THEN
                    ERROR(Text16530);
                  IF CreationDate = 0D THEN
                    ERROR(Text16531);
                  IF NameofReturnPrepUtility = '' THEN
                    ERROR(Text16525);
                  IF PANNo = '' THEN
                    ERROR(PANNoEmptyErr);
                  IF CompanyInformation."Phone No." = '' THEN
                    ERROR(CompInfoPhoneNoEmptyErr);
                  IF CompanyInformation."E-Mail" = '' THEN
                    ERROR(CompInfoEmailEmptyErr);
                  IF CompanyInformation."Location Code" = '' THEN
                    ERROR(CompInfoLocationEmptyErr);

                  IF (Quarter = 0) OR (FinancialYear = '') THEN
                    ERROR(Text16503);
                  IF NOT CheckRevisedEntries THEN
                    ERROR(Text16502,Quarter,FinancialYear);
                  CompanyInformation.TESTFIELD(State);

                  TCSBatchHeader.RESET;
                  TCSBatchHeader.SETRANGE("Financial Year",FinancialYear);
                  TCSBatchHeader.SETRANGE(Quarter,Quarter);
                  TCSBatchHeader.SETRANGE("Collector T.C.A.N. No.",TCANLocation);
                  TCSBatchHeader.SETRANGE(Revised,TRUE);
                  TCSBatchHeader.FINDFIRST;

                  TCSChallanRegister.RESET;
                  TCSChallanRegister.SETRANGE("Financial Year",FinancialYear);
                  TCSChallanRegister.SETRANGE(Quarter,Quarter);
                  TCSChallanRegister.SETRANGE("T.C.A.N. No.",TCANLocation);
                  IF TCSChallanRegister.FINDFIRST THEN
                    REPEAT
                      Form27EQEntry.RESET;
                      Form27EQEntry.SETRANGE("Financial Year",FinancialYear);
                      Form27EQEntry.SETRANGE(Quarter,Quarter);
                      Form27EQEntry.SETRANGE("T.C.A.N. No.",TCANLocation);
                      Form27EQEntry.SETRANGE(Printed,TRUE);
                      Form27EQEntry.SETRANGE("Challan Register Entry No.",TCSChallanRegister."Entry No.");
                      Execute += Form27EQEntry.COUNT;
                    UNTIL TCSChallanRegister.NEXT = 0;
                  IF Execute = 0 THEN
                    ERROR(Text16501,Quarter,FinancialYear);

                  IF (CompanyInformation."Company Status" <> CompanyInformation."Company Status"::Government) AND
                     (STRLEN(MobileNo) <> 10)
                  THEN
                    ERROR(Text16532);

                  SequenceNo := 1;
                  OutFile.CREATE(ServerFile);
                  OutFile.CREATEOUTSTREAM(OStream);
                  CreateFileHeader(FALSE);
                END;

    OnPostReport=VAR
                   FileMgt@1500000 : Codeunit 419;
                 BEGIN
                   OutFile.CLOSE;
                   FileMgt.DownloadToFile(ServerFile,FileName);
                 END;

  }
  DATASET
  {
    { 5332;    ;DataItem;                    ;
               DataItemTable=Table16502;
               DataItemTableView=SORTING(Sorting Order)
                                 ORDER(Ascending);
               OnAfterGetRecord=BEGIN
                                  CASE "Correction Type" OF
                                    "Correction Type"::C1:
                                      ProcessC1;
                                    "Correction Type"::C2:
                                      ProcessC2;
                                    "Correction Type"::C3:
                                      ProcessC3;
                                    "Correction Type"::C5:
                                      ProcessC5;
                                  END;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENN=Options] }

      { 1500007;2;Field     ;
                  Name=FileName;
                  AssistEdit=Yes;
                  CaptionML=[ENU=File Name;
                             ENN=File Name];
                  SourceExpr=FileName;
                  OnAssistEdit=VAR
                                 FileMgt@1500000 : Codeunit 419;
                               BEGIN
                                 IF FileName = '' THEN
                                   FileName := '.txt';
                                 FileName := FileMgt.SaveFileDialog(Text008,FileName,'');
                               END;
                                }

      { 1500011;2;Field     ;
                  CaptionML=[ENU=T.C.A.N. Location;
                             ENN=T.C.A.N. Location];
                  SourceExpr=TCANLocation;
                  TableRelation="T.C.A.N. No." }

      { 1500005;2;Field     ;
                  CaptionML=[ENU=Report Frequency;
                             ENN=Report Frequency];
                  SourceExpr=Quarter }

      { 1500013;2;Field     ;
                  CaptionML=[ENU=Financial Year;
                             ENN=Financial Year];
                  SourceExpr=FinancialYear;
                  OnLookup=VAR
                             IncomeTaxAccountingPeriod@1500000 : Record 13724;
                           BEGIN
                             IF Quarter > 0 THEN BEGIN
                               TDSTCSPeriodSetup.RESET;
                               TDSTCSPeriodSetup.SETRANGE(Quarter,Quarter);
                               IF TDSTCSPeriodSetup.FINDFIRST THEN BEGIN
                                 IncomeTaxAccountingPeriod.GET(TDSTCSPeriodSetup."No.");
                                 IF PAGE.RUNMODAL(13721,IncomeTaxAccountingPeriod) = ACTION::LookupOK THEN
                                   FinancialYear := IncomeTaxAccountingPeriod."Financial Year for eTDS/TCS";
                               END;
                             END;
                           END;
                            }

      { 1500000;2;Field     ;
                  CaptionML=[ENU=Full Name;
                             ENN=Full Name];
                  SourceExpr=PersonName }

      { 1500002;2;Field     ;
                  CaptionML=[ENU="Designation ";
                             ENN="Designation "];
                  SourceExpr=Designation }

      { 1500009;2;Field     ;
                  CaptionML=[ENU=Printing Date;
                             ENN=Printing Date];
                  SourceExpr=CreationDate }

      { 1500400;2;Field     ;
                  Name=P.A.N No.;
                  CaptionML=[ENU=P.A.N No.;
                             ENN=P.A.N No.];
                  SourceExpr=PANNo }

      { 2   ;2   ;Field     ;
                  CaptionML=[ENU=Name of Return Preparation Utility;
                             ENN=Name of Return Preparation Utility];
                  SourceExpr=NameofReturnPrepUtility }

      { 1500015;2;Field     ;
                  CaptionML=[ENU=Email;
                             ENN=Email];
                  SourceExpr=EMail }

      { 1500017;2;Field     ;
                  CaptionML=[ENU=Mobile No.;
                             ENN=Mobile No.];
                  SourceExpr=MobileNo }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInformation@1500023 : Record 79;
      TCSChallanRegister@1500022 : Record 16516;
      TCSBatchHeader@1500021 : Record 16515;
      Form27EQEntry@1500020 : Record 16517;
      Form27EQEntry2@1500018 : Record 16517;
      TDSTCSPeriodSetup@1500019 : Record 16501;
      NodNocCertificate@1500401 : Record 13784;
      FileName@1500016 : Text[250];
      OutFolderName@1500015 : Text[250];
      PersonName@1500014 : Text[75];
      Designation@1500013 : Text[20];
      OutFile@1500012 : File;
      OutFile2@1500011 : File;
      OStream@1500010 : OutStream;
      Quarter@1500009 : ' ,Q1,Q2,Q3,Q4';
      CreationDate@1500008 : Date;
      PartyCounter@1500007 : Integer;
      LineNo@1500006 : Integer;
      BatchNo@1500005 : Integer;
      SequenceNo@1500004 : Integer;
      FinancialYear@1500003 : Code[6];
      TCANLocation@1500002 : Code[10];
      Execute@1500001 : Integer;
      Text16500@1500028 : TextConst 'ENU=You must enter a file name.;ENN=You must enter a file name.';
      Text16501@1500026 : TextConst '@@@="%1 and %2 = Option and Code";ENU=You must print ''Revised Form 27EQ'' for Quarter %1 Financial year %2.;ENN=You must print ''Revised Form 27EQ'' for Quarter %1 Financial year %2.';
      Text16502@1500025 : TextConst '@@@="%1 = Option";ENU=No records were found for %1.;ENN=No records were found for %1.';
      Text16503@1500024 : TextConst 'ENU=You must enter correction file name.;ENN=You must enter correction file name.';
      BatchCreated@1500027 : Boolean;
      Text16504@1500029 : TextConst 'ENU=Y27EQ.txt;ENN=Y27EQ.txt';
      Text16505@1500030 : TextConst 'ENU=Y27EQREG.txt;ENN=Y27EQREG.txt';
      Text16506@1500031 : TextConst 'ENU=FH;ENN=FH';
      Text16507@1500032 : TextConst 'ENU=TC1;ENN=TC1';
      Text16508@1500033 : TextConst 'ENU=C;ENN=C';
      Text16509@1500034 : TextConst 'ENU=D;ENN=D';
      Text16510@1500035 : TextConst 'ENU=^;ENN=^';
      Text16511@1500036 : TextConst 'ENU=Y;ENN=Y';
      Text16512@1500037 : TextConst 'ENU=N;ENN=N';
      Text16513@1500038 : TextConst 'ENU=1^;ENN=1^';
      Text16514@1500039 : TextConst 'ENU=27EQ;ENN=27EQ';
      Text16515@1500040 : TextConst 'ENU=BH;ENN=BH';
      Text16516@1500041 : TextConst 'ENU=CD;ENN=CD';
      Text16517@1500042 : TextConst 'ENU=0.00;ENN=0.00';
      Text16518@1500043 : TextConst 'ENU=DD;ENN=DD';
      Text16519@1500044 : TextConst 'ENU=U;ENN=U';
      Text16520@1500045 : TextConst 'ENU=O;ENN=O';
      Text008@1500047 : TextConst 'ENU=Export to Text File;ENN=Export to Text File';
      NameofReturnPrepUtility@1500098 : Text[75];
      Text16525@1500408 : TextConst 'ENU=You must enter name of the Return Preparation Utility.;ENN=You must enter name of the Return Preparation Utility.';
      Text16526@1500409 : TextConst 'ENU=You must enter a report frequency.;ENN=You must enter a report frequency.';
      Text16527@1500410 : TextConst 'ENU=You must enter financial year.;ENN=You must enter financial year.';
      Text16528@1500411 : TextConst 'ENU=You must enter a T.C.A.N. No.;ENN=You must enter a T.C.A.N. No.';
      Text16529@1500412 : TextConst 'ENU=You must enter a person name.;ENN=You must enter a person name.';
      Text16530@1500413 : TextConst 'ENU=You must enter a designation.;ENN=You must enter a designation.';
      Text16531@1500414 : TextConst 'ENU=You must enter a printing date.;ENN=You must enter a printing date.';
      EMail@1500087 : Text[75];
      MobileNo@1500088 : Text[10];
      ServerFile@1500051 : Text[1024];
      Text16532@1500060 : TextConst 'ENU=You must specify a valid mobile number. Enter a 10 digit mobile number.;ENN=You must specify a valid mobile number. Enter a 10 digit mobile number.';
      PANNo@1500402 : Code[10];
      PANNoEmptyErr@1500404 : TextConst 'ENU=Select P.A.N. No.;ENN=Select P.A.N. No.';
      CompInfoPhoneNoEmptyErr@1500405 : TextConst 'ENU=The Phone No. field must have a value in the Company Information.;ENN=The Phone No. field must have a value in the Company Information.';
      CompInfoEmailEmptyErr@1500406 : TextConst 'ENU=The Email field must have a value in Company Information.;ENN=The Email field must have a value in Company Information.';
      CompInfoLocationEmptyErr@1500407 : TextConst 'ENU=The Location field must have a value in Company Information.;ENN=The Location field must have a value in Company Information.';
      CertificateNo@1500403 : Code[25];

    PROCEDURE ProcessC1@1500109();
    BEGIN
      TCSBatchHeader.RESET;
      TCSBatchHeader.SETRANGE("Financial Year",FinancialYear);
      TCSBatchHeader.SETRANGE(Quarter,Quarter);
      TCSBatchHeader.SETRANGE("Collector T.C.A.N. No.",TCANLocation);
      TCSBatchHeader.SETRANGE(Revised,TRUE);
      TCSBatchHeader.SETRANGE("Correction-C1",TRUE);
      IF TCSBatchHeader.FINDFIRST THEN
        IF TCSBatchHeader."Batch Updation Indicator" = 0 THEN
          CreateBatchHeader(0,0,0);
      Form27EQEntry.RESET;
      Form27EQEntry.SETRANGE("Financial Year",FinancialYear);
      Form27EQEntry.SETRANGE(Quarter,Quarter);
      Form27EQEntry.SETRANGE("T.C.A.N. No.",TCANLocation);
      Form27EQEntry.MODIFYALL("Revised eTCS Generated",TRUE,TRUE);
    END;

    PROCEDURE ProcessC2@1500008();
    VAR
      BatchAmount@1500000 : Decimal;
      ChallanCount@1500001 : Integer;
    BEGIN
      TCSChallanRegister.RESET;
      TCSChallanRegister.SETRANGE("Financial Year",FinancialYear);
      TCSChallanRegister.SETRANGE(Quarter,Quarter);
      TCSChallanRegister.SETRANGE("T.C.A.N. No.",TCANLocation);
      TCSChallanRegister.SETRANGE(Revised,TRUE);
      TCSChallanRegister.SETRANGE("Correction-C2",TRUE);
      IF TCSChallanRegister.FIND('-') THEN BEGIN
        REPEAT
          TCSChallanRegister.CALCFIELDS("Total TCS Including SHE Cess");
          BatchAmount +=
            TCSChallanRegister."Oltas Others" +
            TCSChallanRegister."Oltas Interest" +
            TCSChallanRegister."Total TCS Including SHE Cess";
          ChallanCount += 1;
        UNTIL TCSChallanRegister.NEXT = 0;
        CreateBatchHeader(1,ChallanCount,BatchAmount);
      END;

      IF TCSChallanRegister.FIND('-') THEN
        REPEAT
          CreateChallanDetails(1);
          TCSChallanRegister."Revised eTCS Generated" := TRUE;
          TCSChallanRegister.MODIFY(TRUE);
        UNTIL TCSChallanRegister.NEXT = 0;
      Form27EQEntry.RESET;
      Form27EQEntry.SETRANGE("Financial Year",FinancialYear);
      Form27EQEntry.SETRANGE(Quarter,Quarter);
      Form27EQEntry.SETRANGE("T.C.A.N. No.",TCANLocation);
      Form27EQEntry.MODIFYALL("Revised eTCS Generated",TRUE,TRUE);
    END;

    PROCEDURE ProcessC3@1500029();
    VAR
      BatchAmount@1500000 : Decimal;
      ChallanCount@1500001 : Integer;
    BEGIN
      TCSChallanRegister.RESET;
      TCSChallanRegister.SETRANGE("Financial Year",FinancialYear);
      TCSChallanRegister.SETRANGE(Quarter,Quarter);
      TCSChallanRegister.SETRANGE("T.C.A.N. No.",TCANLocation);
      TCSChallanRegister.SETRANGE(Revised,TRUE);
      TCSChallanRegister.SETRANGE("Correction-C3",TRUE);
      IF TCSChallanRegister.FIND('-') THEN BEGIN
        REPEAT
          Form27EQEntry.SETCURRENTKEY("Challan Register Entry No.","Correction-C3","Correction-C5","Correction-C9","Correction-Y");
          Form27EQEntry.SETRANGE("Challan Register Entry No.",TCSChallanRegister."Entry No.");
          Form27EQEntry.SETRANGE("Correction-C3",TRUE);
          Form27EQEntry.CALCSUMS("TCS Amount","Surcharge Amount","eCESS Amount","SHE CESS Amount");
          IF TCSChallanRegister."Challan Updation Indicator" = 0 THEN
            BatchAmount := BatchAmount + TCSChallanRegister."Last TCS Others" +
              TCSChallanRegister."Last TCS Interest" + Form27EQEntry."TCS Amount" +
              Form27EQEntry."Surcharge Amount" + Form27EQEntry."eCESS Amount" + Form27EQEntry."SHE CESS Amount"
          ELSE
            BatchAmount := BatchAmount + TCSChallanRegister."Oltas Others" +
              TCSChallanRegister."Oltas Interest" + Form27EQEntry."TCS Amount" +
              Form27EQEntry."Surcharge Amount" + Form27EQEntry."eCESS Amount" + Form27EQEntry."SHE CESS Amount";
          ChallanCount += 1;
        UNTIL TCSChallanRegister.NEXT = 0;
        CreateBatchHeader(2,ChallanCount,BatchAmount);
      END;

      IF TCSChallanRegister.FIND('-') THEN
        REPEAT
          CreateChallanDetails(2);
          Form27EQEntry.RESET;
          Form27EQEntry.SETRANGE("Challan Register Entry No.",TCSChallanRegister."Entry No.");
          Form27EQEntry.SETRANGE("Correction-C3",TRUE);
          IF Form27EQEntry.FIND('-') THEN
            REPEAT
              IF Form27EQEntry."Document Type" = Form27EQEntry."Document Type"::Invoice THEN
                AdjustAppliedEntries(Form27EQEntry);
              IF Form27EQEntry."Document Type" <> Form27EQEntry."Document Type"::"Credit Memo" THEN
                CreatePartyDetails(2);
              Form27EQEntry2.GET(Form27EQEntry."Entry No.");
              Form27EQEntry2."Revised eTCS Generated" := TRUE;
              Form27EQEntry2.MODIFY(TRUE);
            UNTIL Form27EQEntry.NEXT = 0 ;
          TCSChallanRegister."Revised eTCS Generated" := TRUE;
          TCSChallanRegister.MODIFY(TRUE);
        UNTIL TCSChallanRegister.NEXT = 0;
    END;

    PROCEDURE ProcessC5@1500012();
    BEGIN
      TCSChallanRegister.RESET;
      TCSChallanRegister.SETRANGE("Financial Year",FinancialYear);
      TCSChallanRegister.SETRANGE(Quarter,Quarter);
      TCSChallanRegister.SETRANGE("T.C.A.N. No.",TCANLocation);
      TCSChallanRegister.SETRANGE(Revised,TRUE);
      TCSChallanRegister.SETRANGE("Correction-C5",TRUE);
      IF TCSChallanRegister.FIND('-') THEN BEGIN
        TCSBatchHeader.RESET;
        TCSBatchHeader.SETRANGE("Financial Year",FinancialYear);
        TCSBatchHeader.SETRANGE(Quarter,Quarter);
        TCSBatchHeader.SETRANGE(Revised,TRUE);
        TCSBatchHeader.FINDFIRST;
        CreateBatchHeader(3,TCSChallanRegister.COUNT,0);
        REPEAT
          CreateChallanDetails(3);
          Form27EQEntry.RESET;
          Form27EQEntry.SETRANGE("Challan Register Entry No.",TCSChallanRegister."Entry No.");
          Form27EQEntry.SETRANGE("Correction-C5",TRUE);
          Form27EQEntry.FIND('-');
          REPEAT
            IF Form27EQEntry."Document Type" = Form27EQEntry."Document Type"::Invoice THEN
              AdjustAppliedEntries(Form27EQEntry);
            IF Form27EQEntry."Document Type" <> Form27EQEntry."Document Type"::"Credit Memo" THEN
              CreatePartyDetails(3);
            Form27EQEntry2.GET(Form27EQEntry."Entry No.");
            Form27EQEntry2."Revised eTCS Generated" := TRUE;
            Form27EQEntry2.MODIFY(TRUE);
          UNTIL Form27EQEntry.NEXT = 0 ;
          TCSChallanRegister."Revised eTCS Generated" := TRUE;
          TCSChallanRegister.MODIFY(TRUE);
        UNTIL TCSChallanRegister.NEXT = 0;
      END;
    END;

    PROCEDURE ProcessC9@1500030();
    VAR
      BatchAmount@1500000 : Decimal;
      ChallanCount@1500001 : Integer;
    BEGIN
      TCSChallanRegister.RESET;
      TCSChallanRegister.SETRANGE("Financial Year",FinancialYear);
      TCSChallanRegister.SETRANGE(Quarter,Quarter);
      TCSChallanRegister.SETRANGE("T.C.A.N. No.",TCANLocation);
      TCSChallanRegister.SETRANGE(Revised,TRUE);
      TCSChallanRegister.SETRANGE("Correction-C9",TRUE);
      IF TCSChallanRegister.FIND('-') THEN BEGIN
        REPEAT
          TCSChallanRegister.CALCFIELDS("Total TCS Including SHE Cess");
          BatchAmount := BatchAmount + TCSChallanRegister."Oltas Others" +
            TCSChallanRegister."Oltas Interest" + TCSChallanRegister."Total TCS Including SHE Cess";
          ChallanCount += 1;
        UNTIL TCSChallanRegister.NEXT = 0;
        CreateBatchHeader(4,ChallanCount,BatchAmount);
      END;
      IF TCSChallanRegister.FIND('-') THEN
        REPEAT
          CreateChallanDetails(4);
          Form27EQEntry.RESET;
          Form27EQEntry.SETRANGE("Challan Register Entry No.",TCSChallanRegister."Entry No.");
          Form27EQEntry.SETRANGE("Correction-C9",TRUE);
          Form27EQEntry.FIND('-');
          REPEAT
            IF Form27EQEntry."Document Type" = Form27EQEntry."Document Type"::Invoice THEN
              AdjustAppliedEntries(Form27EQEntry);
            IF Form27EQEntry."Document Type" <> Form27EQEntry."Document Type"::"Credit Memo" THEN
              CreatePartyDetails(4);
            Form27EQEntry2.GET(Form27EQEntry."Entry No.");
            Form27EQEntry2."Revised eTCS Generated" := TRUE;
            Form27EQEntry2.MODIFY(TRUE);
          UNTIL Form27EQEntry.NEXT = 0 ;
          TCSChallanRegister."Revised eTCS Generated" := TRUE;
          TCSChallanRegister.MODIFY(TRUE);
        UNTIL TCSChallanRegister.NEXT = 0;
    END;

    PROCEDURE ProcessY@1500007();
    VAR
      Report27EQ@1500000 : Report 16524;
    BEGIN
      IF TCSBatchHeader."Correction-Y" THEN BEGIN
        IF NOT BatchCreated THEN BEGIN
          TCSBatchHeader.RESET;
          TCSBatchHeader.SETRANGE("Financial Year",FinancialYear);
          TCSBatchHeader.SETRANGE(Quarter,Quarter);
          TCSBatchHeader.SETRANGE("Collector T.C.A.N. No.",TCANLocation);
          TCSBatchHeader.SETRANGE(Revised,TRUE);
          TCSBatchHeader.SETRANGE("Correction-Y",TRUE);
          IF TCSBatchHeader.FINDFIRST THEN
            CreateBatchHeader(5,0,0);
        END ELSE BEGIN
          LineNo := 0;
          BatchNo := 0;
          OutFile2.CREATE(OutFolderName + Text16504);
          OutFile2.CREATEOUTSTREAM(OStream);
          CreateFileHeader(TRUE);
          CreateBatchHeader(5,0,0);
          OutFile2.CLOSE;
        END;

        Report27EQ.SetProperties(
          OutFolderName + Text16505,TCANLocation,Quarter,FinancialYear,
          PersonName,Designation,CreationDate,TRUE);
        Report27EQ.USEREQUESTPAGE := FALSE;
        Report27EQ.RUN;

        TCSBatchHeader."Revised eTCS Generated" := TRUE;
        TCSBatchHeader.MODIFY(TRUE);
        Form27EQEntry.RESET;
        Form27EQEntry.SETRANGE("Financial Year",FinancialYear);
        Form27EQEntry.SETRANGE(Quarter,Quarter);
        Form27EQEntry.SETRANGE("T.C.A.N. No.",TCANLocation);
        Form27EQEntry.MODIFYALL("Revised eTCS Generated",TRUE,TRUE);
      END;
    END;

    PROCEDURE CreateFileHeader@1280000(C9Correction@1500001 : Boolean);
    VAR
      FieldText@1500000 : ARRAY [100] OF Text[250];
      BatchCount@1500002 : Integer;
    BEGIN
      LineNo += 1;
      FieldText[1] := FORMAT(LineNo) + Text16510;
      FieldText[2] := Text16506 + Text16510;
      FieldText[3] := Text16507 + Text16510;
      FieldText[4] := Text16508 + Text16510;
      FieldText[5] := FORMAT(CreationDate,0,'<Day,2><Month,2><Year4>') + Text16510;
      FieldText[6] := FORMAT(SequenceNo) + Text16510;
      FieldText[7] := Text16509 + Text16510;
      FieldText[8] := TCSBatchHeader."Collector Last TCAN" + Text16510;

      BatchCount := CalcBatchCount;
      IF C9Correction OR (BatchCount = 0) THEN
        FieldText[9] := Text16513
      ELSE
        FieldText[9] := FORMAT(CalcBatchCount) + Text16510;
      FieldText[10] := NameofReturnPrepUtility + Text16510;
      FieldText[11] := Text16510;
      FieldText[12] := Text16510;
      FieldText[13] := Text16510;
      FieldText[14] := Text16510;
      FieldText[15] := Text16510;
      FieldText[16] := Text16510;
      FieldText[17] := '';
      FieldText[18] := Text16510;
      WriteToStream(FieldText,18);
    END;

    PROCEDURE CreateBatchHeader@1280001(CorrectionType@1500001 : 'C1,C2,C3,C5,C9,Y';ChallanCount@1500000 : Integer;BatchAmount@1500003 : Decimal);
    VAR
      FieldText@1500004 : ARRAY [100] OF Text[250];
    BEGIN
      BatchCreated := TRUE;
      LineNo += 1;
      BatchNo += 1;
      WITH TCSBatchHeader DO BEGIN
        TESTFIELD("Collector State");
        TESTFIELD("Collector Post Code");
        FieldText[1] := FORMAT(LineNo) + Text16510;
        FieldText[2] := Text16515 + Text16510;
        FieldText[3] := FORMAT(BatchNo) + Text16510;
        IF CorrectionType IN [CorrectionType::C1,CorrectionType::Y] THEN
          FieldText[4] := Text16510
        ELSE
          IF ChallanCount > 0 THEN
            FieldText[4] := FORMAT(ChallanCount) + Text16510
          ELSE
            FieldText[4] := Text16510;
        FieldText[5] := Text16514 + Text16510;
        FieldText[6] := FORMAT(CorrectionType) + Text16510;
        IF CorrectionType IN [0,3,4,5] THEN
          FieldText[7] := Text16510
        ELSE
          FieldText[7] := FORMAT("Batch Updation Indicator") + Text16510;
        FieldText[8] := "Original RRR No." + Text16510;
        IF "No. of Revision" > 1 THEN
          FieldText[9] := "Previous RRR No." + Text16510
        ELSE
          FieldText[9] := "Original RRR No." + Text16510;
        FieldText[10] := Text16510;
        FieldText[11] := Text16510;
        FieldText[12] := "Collector Last TCAN" + Text16510;
        IF CorrectionType <> CorrectionType::C5 THEN
          FieldText[13] := "Collector Last TCAN" + Text16510
        ELSE
          FieldText[13] := Text16510;
        FieldText[14] := Text16510;
        IF (CorrectionType = 0) OR ((CorrectionType IN [1,2]) AND ("Batch Updation Indicator" = 1)) THEN
          FieldText[15] := "Collector P.A.N. No." + Text16510
        ELSE
          FieldText[15] := Text16510;
        FieldText[16] := "Assessment Year" + Text16510;
        FieldText[17] := FinancialYear + Text16510;
        FieldText[18] := FORMAT(Quarter) + Text16510;
        IF (CorrectionType IN [0,3,4,5]) OR ("Batch Updation Indicator" = 0) THEN
          FieldText[19] := "Collector Last Name" + Text16510
        ELSE
          FieldText[19] := "Collector Name" + Text16510;
        CreateBatchHeaderForCollector(FieldText,CorrectionType);
        IF (CorrectionType = 0) OR ((CorrectionType IN [1,2]) AND ("Batch Updation Indicator" = 1)) THEN BEGIN
          IF "Change of Add of Collector" THEN
            FieldText[31] := Text16511 + Text16510
          ELSE
            FieldText[31] := Text16512 + Text16510;
        END ELSE
          FieldText[31] := Text16510;
        FieldText[32] := FORMAT("Collector Category") + Text16510;
        CreateBatchHeaderForRespPerson(FieldText,CorrectionType);
        IF (CorrectionType = 0) OR (("Batch Updation Indicator" = 1) AND (CorrectionType IN [1,2])) THEN BEGIN
          IF "Change of Add of Collector" THEN
            FieldText[46] := Text16511 + Text16510
          ELSE
            FieldText[46] := Text16512 + Text16510;
        END ELSE
          FieldText[46] := Text16510;
        IF CorrectionType IN [1,2,4] THEN
          FieldText[47] := FORMAT(BatchAmount,0,'<Sign><Integer><Decimals,3>') + Text16510
        ELSE
          FieldText[47] := Text16510;
        FieldText[48] := Text16510;
        FieldText[49] := Text16510;
        FieldText[50] := Text16510;
        FieldText[51] := Text16512 + Text16510;
        FieldText[52] := Text16510;
        IF (CorrectionType = 0) OR ((CorrectionType IN [1,2]) AND ("Batch Updation Indicator" = 1)) THEN
          FieldText[53] := "Collector Category" + Text16510
        ELSE
          FieldText[53] := Text16510;
        FieldText[54] := "State Code" + Text16510;
        FieldText[55] := "PAO Code" + Text16510;
        FieldText[56] := "DDO Code" + Text16510;
        FieldText[57] := "Ministry Name Code" + Text16510;
        FieldText[58] := "Ministry Name Other" + Text16510;
        FieldText[59] := PANNo + Text16510;
        FieldText[60] := "PAO Registration No." + Text16510;
        FieldText[61] := "DDO Registration No." + Text16510;
        FieldText[62] := Text16510;
        FieldText[63] := Text16510;
        FieldText[64] := Text16510;
        FieldText[65] := Text16510;
        FieldText[66] := Text16510;
        FieldText[67] := Text16510;
        FieldText[68] := Text16510;
        FieldText[69] := '';
      END;
      WriteToStream(FieldText,69);
      TCSBatchHeader."Revised eTCS Generated" := TRUE;
      TCSBatchHeader.MODIFY(TRUE);
    END;

    PROCEDURE CreateBatchHeaderForRespPerson@1500001(VAR FieldText@1500000 : ARRAY [100] OF Text[250];CorrectionType@1500001 : 'C1,C2,C3,C5,C9,Y');
    BEGIN
      IF (CorrectionType = 0) OR ((CorrectionType IN [1,2]) AND (TCSBatchHeader."Batch Updation Indicator" = 1)) THEN BEGIN
        FieldText[33] := PersonName + Text16510;
        FieldText[34] := Designation + Text16510;
        FieldText[35] := TCSBatchHeader."Responsible Person Address" + Text16510;
        FieldText[36] := TCSBatchHeader."Responsible Person Address 2" + Text16510;
        FieldText[37] := TCSBatchHeader."Responsible Person Address 3" + Text16510;
        FieldText[38] := TCSBatchHeader."Responsible Person Address 4" + Text16510;
        FieldText[39] := TCSBatchHeader."Responsible Person Address 5" + Text16510;
        FieldText[40] := TCSBatchHeader."Responsible Person State" + Text16510;
        FieldText[41] := TCSBatchHeader."Responsible Person Post Code" + Text16510;
        IF EMail <> '' THEN
          FieldText[42] := EMail + Text16510
        ELSE
          FieldText[42] := TCSBatchHeader."Responsible Person E-Mail" + Text16510;
        IF MobileNo <> '' THEN
          FieldText[43] := MobileNo + Text16510
        ELSE
          FieldText[43] := Text16510;
        IF (TCSBatchHeader."Responsible Person STD Code" <> '') AND (TCSBatchHeader."Responsible Person Phone No." <> '') THEN BEGIN
          FieldText[44] := TCSBatchHeader."Responsible Person STD Code" + Text16510;
          FieldText[45] := TCSBatchHeader."Responsible Person Phone No." + Text16510;
        END ELSE BEGIN
          FieldText[44] := Text16510;
          FieldText[45] := Text16510;
        END;
      END ELSE BEGIN
        FieldText[33] := Text16510;
        FieldText[34] := Text16510;
        FieldText[35] := Text16510;
        FieldText[36] := Text16510;
        FieldText[37] := Text16510;
        FieldText[38] := Text16510;
        FieldText[39] := Text16510;
        FieldText[40] := Text16510;
        FieldText[41] := Text16510;
        FieldText[42] := Text16510;
        FieldText[43] := Text16510;
        FieldText[44] := Text16510;
        FieldText[45] := Text16510;
      END;
    END;

    PROCEDURE CreateBatchHeaderForCollector@1500004(VAR FieldText@1500000 : ARRAY [100] OF Text[250];CorrectionType@1500001 : 'C1,C2,C3,C5,C9,Y');
    BEGIN
      IF (CorrectionType = 0) OR ((TCSBatchHeader."Batch Updation Indicator" = 1) AND (CorrectionType IN [1,2])) THEN BEGIN
        FieldText[20] := TCSBatchHeader."Collector Branch/Division" + Text16510;
        FieldText[21] := TCSBatchHeader."Collector Address" + Text16510;
        FieldText[22] := TCSBatchHeader."Collector Address 2" + Text16510;
        FieldText[23] := TCSBatchHeader."Collector Address 3" + Text16510;
        FieldText[24] := TCSBatchHeader."Collector Address 4" + Text16510;
        FieldText[25] := TCSBatchHeader."Collector Address 5" + Text16510;
        FieldText[26] := TCSBatchHeader."Collector State" + Text16510;
        FieldText[27] := TCSBatchHeader."Collector Post Code" + Text16510;
        FieldText[28] := TCSBatchHeader."Collector E-Mail" + Text16510;
        IF (TCSBatchHeader."Collector STD Code" <> '') AND (TCSBatchHeader."Collector Phone No." <> '') THEN BEGIN
          FieldText[29] := TCSBatchHeader."Collector STD Code" + Text16510;
          FieldText[30] := TCSBatchHeader."Collector Phone No." + Text16510;
        END ELSE BEGIN
          FieldText[29] := Text16510;
          FieldText[30] := Text16510;
        END;
      END ELSE BEGIN
        FieldText[20] := Text16510;
        FieldText[21] := Text16510;
        FieldText[22] := Text16510;
        FieldText[23] := Text16510;
        FieldText[24] := Text16510;
        FieldText[25] := Text16510;
        FieldText[26] := Text16510;
        FieldText[27] := Text16510;
        FieldText[28] := Text16510;
        FieldText[29] := Text16510;
        FieldText[30] := Text16510;
      END;
    END;

    PROCEDURE CreateChallanDetails@1280002(CorrectionType@1500001 : 'C1,C2,C3,C5,C9,Y');
    VAR
      FieldText@1500003 : ARRAY [100] OF Text[250];
      TransactionType@1500000 : Integer;
      OltasAmount@1500002 : Decimal;
    BEGIN
      IF CorrectionType IN [0,5] THEN
        EXIT;

      IF CorrectionType = CorrectionType::C3 THEN
        TransactionType := 1;
      IF CorrectionType = CorrectionType::C5 THEN
        TransactionType := 2;
      IF CorrectionType = CorrectionType::C9 THEN
        TransactionType := 3;

      WITH TCSChallanRegister DO BEGIN
        CALCFIELDS("Total TCS Amount","Total Surcharge Amount","Total eCess Amount","Total SHE Cess Amount",
          "Total TCS Including SHE Cess");

        LineNo += 1;
        FieldText[1] := FORMAT(LineNo) + Text16510;
        FieldText[2] := Text16516 + Text16510;
        FieldText[3] := FORMAT(BatchNo) + Text16510;
        FieldText[4] := FORMAT("Challan-Detail Record No.") + Text16510;
        IF CorrectionType IN [2,3,4] THEN
          FieldText[5] := FORMAT(GetPartyCount("Entry No.",FORMAT(CorrectionType))) + Text16510
        ELSE
          FieldText[5] := Text16510;
        IF "Nil Challan Indicator" THEN
          FieldText[6] := Text16511 + Text16510
        ELSE
          FieldText[6] := Text16512 + Text16510;
        IF CorrectionType = 2 THEN
          FieldText[7] := FORMAT("Challan Updation Indicator") + Text16510
        ELSE
          FieldText[7] := Text16510;
        FieldText[8] := Text16510;
        FieldText[9] := Text16510;
        FieldText[10] := Text16510;

        IF CorrectionType = 4 THEN
          FieldText[11] := Text16510
        ELSE
          FieldText[11] := "Last Bank Challan No." + Text16510;

        CASE CorrectionType OF
          1,4:
            BEGIN
              IF NOT "Nil Challan Indicator" OR NOT "Paid By Book Entry" THEN
                FieldText[12] := "Challan No." + Text16510
              ELSE
                FieldText[12] := Text16510;
            END;
          2:
            BEGIN
              IF "Challan Updation Indicator" = 1 THEN
                FieldText[12] := "Challan No." + Text16510
              ELSE
                FieldText[12] := "Last Bank Challan No." + Text16510;
            END;
          3:
            FieldText[12] := Text16510;
        END;

        IF CorrectionType IN [1,2,3] THEN BEGIN
          IF TCSBatchHeader."Collector Category" IN ['A,S'] THEN
            FieldText[13] := "Last Transfer Voucher No." + Text16510
          ELSE
            FieldText[13] := Text16510;
        END ELSE
          FieldText[13] := Text16510;

        IF (TCSBatchHeader."Collector Category" IN ['A,S']) AND
           ((CorrectionType = 1) OR ((CorrectionType = 4) AND (NOT "Nil Challan Indicator"))) OR
           ((CorrectionType = 2) AND ("Challan Updation Indicator" = 1))
        THEN
          FieldText[14] := "Transfer Voucher No." + Text16510
        ELSE
          IF (TCSBatchHeader."Collector Category" IN ['A,S']) AND (CorrectionType = 2) THEN
            FieldText[14] := "Last Transfer Voucher No." + Text16510
          ELSE
            FieldText[14] := Text16510;

        IF CompanyInformation."Company Status" = CompanyInformation."Company Status"::Government THEN BEGIN
          FieldText[11] := Text16510;
          FieldText[12] := Text16510;
          IF CorrectionType IN [1,2,3] THEN
            FieldText[13] := "Last Bank Challan No." + Text16510;
          IF (CorrectionType = 1) OR (CorrectionType = 4) AND (NOT "Nil Challan Indicator") OR
             (CorrectionType = 2) AND ("Challan Updation Indicator" = 1)
          THEN
            FieldText[14] := "Challan No." + Text16510;
        END;

        IF (CorrectionType = 4) OR ("Last Bank-Branch Code" = '') THEN
          FieldText[15] := Text16510
        ELSE
          FieldText[15] := "Last Bank-Branch Code" + Text16510;

        IF (CorrectionType = 3) OR ("BSR Code" = '') THEN
          FieldText[16] := Text16510
        ELSE
          IF (CorrectionType = 2) AND ("Challan Updation Indicator" = 1) THEN
            FieldText[16] := "BSR Code" + Text16510
          ELSE
            IF (CorrectionType = 2) AND ("Challan Updation Indicator" = 0) THEN
              FieldText[16] := "Last Bank-Branch Code" + Text16510
            ELSE
              IF (CorrectionType = 1) OR ((CorrectionType = 1) AND (NOT "Paid By Book Entry") AND
                                          (NOT "Nil Challan Indicator"))
              THEN
                FieldText[16] := "BSR Code" + Text16510
              ELSE
                IF CorrectionType = 4 THEN
                  FieldText[16] := "BSR Code" + Text16510
                ELSE
                  FieldText[16] := Text16510;

        IF CorrectionType = 4 THEN
          FieldText[17] := Text16510
        ELSE
          IF (CorrectionType = 1) OR (CorrectionType = 2) OR (CorrectionType = 3) THEN
            FieldText[17] := FORMAT("Last Date of Challan No.",0,'<Day,2><Month,2><Year4>') + Text16510;

        IF CorrectionType = 3 THEN
          FieldText[18] := Text16510
        ELSE
          IF (CorrectionType = 2) AND ("Challan Updation Indicator" = 0) THEN
            FieldText[18] := FORMAT("Last Date of Challan No.",0,'<Day,2><Month,2><Year4>') + Text16510
          ELSE
            FieldText[18] := FORMAT("Challan Date",0,'<Day,2><Month,2><Year4>') + Text16510;

        FieldText[19] := Text16510;
        FieldText[20] := Text16510;
        FieldText[21] := Text16510;

        CASE CorrectionType OF
          1:
            BEGIN
              FieldText[22] := FORMAT("Total TCS Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[23] := FORMAT("Total Surcharge Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[24] := FORMAT("Total eCess Amount" + "Total SHE Cess Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
            END;
          4:
            BEGIN
              FieldText[22] := FORMAT(GetPartyValues("Entry No.",TransactionType,1),0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[23] := FORMAT(GetPartyValues("Entry No.",TransactionType,2),0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[24] := FORMAT(GetPartyValues("Entry No.",TransactionType,3),0,'<Sign><Integer><Decimals,3>') + Text16510;
            END;
          2:
            IF "Challan Updation Indicator" = 0 THEN BEGIN
              FieldText[22] := Text16510;
              FieldText[23] := Text16510;
              FieldText[24] := Text16510;
            END ELSE BEGIN
              FieldText[22] := FORMAT(GetPartyValues("Entry No.",TransactionType,1),0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[23] := FORMAT(GetPartyValues("Entry No.",TransactionType,2),0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[24] := FORMAT(GetPartyValues("Entry No.",TransactionType,3),0,'<Sign><Integer><Decimals,3>') + Text16510;
            END;
          3:
            BEGIN
              FieldText[22] := Text16510;
              FieldText[23] := Text16510;
              FieldText[24] := Text16510;
            END;
        END;

        CASE CorrectionType OF
          1,4:
            BEGIN
              FieldText[25] := FORMAT("Oltas Interest",0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[26] := FORMAT("Oltas Others",0,'<Sign><Integer><Decimals,3>') + Text16510;
            END;
          2:
            IF "Challan Updation Indicator" = 1 THEN BEGIN
              FieldText[25] := FORMAT("Oltas Interest",0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[26] := FORMAT("Oltas Others",0,'<Sign><Integer><Decimals,3>') + Text16510;
            END ELSE BEGIN
              FieldText[25] := Text16510;
              FieldText[26] := Text16510;
            END;
          3:
            BEGIN
              FieldText[25] := Text16510;
              FieldText[26] := Text16510;
            END;
        END;

        IF CorrectionType IN [1,2,4] THEN BEGIN
          OltasAmount :=
            ROUND(GetPartyValues("Entry No.",TransactionType,4),1,'=') +
            ROUND("Oltas Interest",1,'=') +
            ROUND("Oltas Others",1,'=');
          FieldText[27] := FORMAT(OltasAmount,0,'<Sign><Integer><Decimals,3>') + Text16510;
        END ELSE
          FieldText[27] := Text16510;

        IF CorrectionType IN [1,2,3] THEN
          FieldText[28] := FORMAT(
              GetPartyValues("Entry No.",TransactionType,4) + "Oltas Interest" +
              "Oltas Others",0,'<Sign><Integer><Decimals,3>') + Text16510
        ELSE
          FieldText[28] := Text16510;

        IF CorrectionType IN [1,3] THEN BEGIN
          FieldText[29] := Text16510;
          FieldText[30] := Text16510;
          FieldText[31] := Text16510;
          FieldText[32] := Text16510;
          FieldText[33] := Text16510;
        END ELSE
          IF CorrectionType = 2 THEN BEGIN
            FieldText[29] := Text16517 + Text16510;
            FieldText[30] := Text16517 + Text16510;
            FieldText[31] := Text16517 + Text16510;
            FieldText[32] := Text16517 + Text16510;
            FieldText[33] := Text16517 + Text16510;
          END ELSE
            IF CorrectionType = 4 THEN BEGIN
              FieldText[29] := FORMAT(GetPartyValues("Entry No.",TransactionType,4) +
                  "Oltas Interest" + "Oltas Others",0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[30] := FORMAT(GetPartyValues("Entry No.",TransactionType,1),0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[31] := FORMAT(GetPartyValues("Entry No.",TransactionType,2),0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[32] := FORMAT(GetPartyValues("Entry No.",TransactionType,3),0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[33] := FORMAT(GetPartyValues("Entry No.",TransactionType,1) +
                  GetPartyValues("Entry No.",TransactionType,2) +
                  GetPartyValues("Entry No.",TransactionType,3),0,'<Sign><Integer><Decimals,3>') + Text16510;
            END;

        IF CorrectionType = 3 THEN BEGIN
          FieldText[34] := Text16510;
          FieldText[35] := Text16510;
        END ELSE
          IF CorrectionType = 4 THEN BEGIN
            FieldText[34] := FORMAT("Oltas Interest",0,'<Sign><Integer><Decimals,3>') + Text16510;
            FieldText[35] := FORMAT("Oltas Others",0,'<Sign><Integer><Decimals,3>') + Text16510;
          END ELSE
            IF CorrectionType IN [1,2] THEN BEGIN
              FieldText[34] := FORMAT("TCS Interest Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
              FieldText[35] := FORMAT("TCS Others",0,'<Sign><Integer><Decimals,3>') + Text16510;
            END;
        FieldText[36] := Text16510;
        IF CorrectionType = 3 THEN
          FieldText[37] := Text16510
        ELSE
          IF CorrectionType IN [1,2,4] THEN BEGIN
            IF "Paid By Book Entry" THEN
              FieldText[37] := Text16511 + Text16510
            ELSE
              FieldText[37] := Text16512 + Text16510;
          END;
        FieldText[38] := Text16510;
        FieldText[39] := FORMAT("TCS Fee",0,'<Sign><Integer><Decimals,3>') + Text16510;
        FieldText[40] := FORMAT("Minor Head Code") + Text16510;
        FieldText[41] := '';
      END;
      WriteToStream(FieldText,41);
      PartyCounter := 0;
    END;

    PROCEDURE CreatePartyDetails@1280003(CorrectionType@1500005 : 'C1,C2,C3,C5,C9,Y');
    VAR
      FieldText@1500006 : ARRAY [100] OF Text[250];
      InvoiceAmount@1500000 : Decimal;
    BEGIN
      IF CorrectionType IN [0,1,5] THEN
        EXIT;
      WITH Form27EQEntry DO BEGIN
        LineNo += 1;
        PartyCounter += 1;
        FieldText[1] := FORMAT(LineNo) + Text16510;
        FieldText[2] := Text16518 + Text16510;
        FieldText[3] := FORMAT(BatchNo) + Text16510;
        FieldText[4] := FORMAT("Challan-Detail Record No.") + Text16510;
        FieldText[5] := FORMAT(PartyCounter) + Text16510;
        IF CorrectionType = 3 THEN
          FieldText[6] := Text16510
        ELSE
          IF CorrectionType = 2 THEN
            FieldText[6] := Text16519 + Text16510
          ELSE
            IF CorrectionType = 4 THEN
              FieldText[6] := Text16520 + Text16510;
        FieldText[7] := Text16510;
        IF CorrectionType = 3 THEN
          FieldText[8] := Text16510
        ELSE
          FieldText[8] := "Party Code1" + Text16510;
        IF CorrectionType = 2 THEN
          FieldText[9] := "Last Emp./Party P.A.N. No." + Text16510
        ELSE
          FieldText[9] := Text16510;
        FieldText[10] := "Party P.A.N. No." + Text16510;
        IF CorrectionType = 2 THEN
          FieldText[11] := "Last Emp./Party P.A.N. No." + Text16510
        ELSE
          FieldText[11] := Text16510;
        IF CorrectionType IN [2,4] THEN
          FieldText[12] := "Party P.A.N. Ref. No." + Text16510
        ELSE
          FieldText[12] := Text16510;
        IF CorrectionType = 3 THEN BEGIN
          FieldText[13] := Text16510;
          FieldText[14] := Text16510;
          FieldText[15] := Text16510;
          FieldText[16] := Text16510;
          FieldText[17] := Text16510;
        END ELSE BEGIN
          FieldText[13] := "Party Name" + Text16510;
          FieldText[14] := FORMAT("TCS Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
          FieldText[15] := FORMAT("Surcharge Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
          FieldText[16] := FORMAT("eCESS Amount" + "SHE CESS Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
          FieldText[17] := FORMAT("TCS Amount" + "Surcharge Amount" + "eCESS Amount" + "SHE CESS Amount"
              ,0,'<Sign><Integer><Decimals,3>') + Text16510;
        END;
        IF CorrectionType = 4 THEN
          FieldText[18] := Text16510
        ELSE
          FieldText[18] := FORMAT("TCS Amount" + "Surcharge Amount" + "eCESS Amount" + "SHE CESS Amount"
              ,0,'<Sign><Integer><Decimals,3>') + Text16510;
        IF CorrectionType = 3 THEN
          FieldText[19] := Text16510
        ELSE
          IF CorrectionType = 4 THEN
            FieldText[19] := FORMAT("Total TCS Including SHE CESS",0,'<Sign><Integer><Decimals,3>') + Text16510
          ELSE
            IF CorrectionType = 2 THEN
              FieldText[19] := FORMAT("Total TCS Including SHE CESS",0,'<Sign><Integer><Decimals,3>') + Text16510;
        IF CorrectionType = 4 THEN
          FieldText[20] := Text16510
        ELSE
          FieldText[20] := FORMAT("Total TCS Including SHE CESS",0,'<Sign><Integer><Decimals,3>') + Text16510;
        IF "Document Type" = "Document Type"::Invoice THEN
          InvoiceAmount := ABS("Invoice Amount")
        ELSE
          InvoiceAmount := 0;
        IF CorrectionType = 3 THEN
          FieldText[21] := Text16510
        ELSE
          FieldText[21] := FORMAT(InvoiceAmount,0,'<Integer><Decimals,3>') + Text16510;
        CreatePartyDetails22To30(FieldText,CorrectionType);
        FieldText[31] := Text16510;
        FieldText[32] := Text16510;
        FieldText[33] := "TCS Nature of Collection" + Text16510;
        CertificateNo := '';
        IF "Concessional Code" = 'A' THEN BEGIN
          NodNocCertificate.RESET;
          NodNocCertificate.SETRANGE(Type,"Party Type");
          NodNocCertificate.SETRANGE("No.","Party Code");
          IF NodNocCertificate.FINDFIRST THEN
            CertificateNo := NodNocCertificate."Certificate No.";
        END;
        FieldText[34] := CertificateNo + Text16510;
        FieldText[35] := Text16510;
        FieldText[36] := Text16510;
        FieldText[37] := Text16510;
        FieldText[38] := Text16510;
        FieldText[39] := ''
      END;
      WriteToStream(FieldText,39);
    END;

    PROCEDURE CreatePartyDetails22To30@1500025(VAR FieldText@1500001 : ARRAY [100] OF Text[250];CorrectionType@1500000 : 'C1,C2,C3,C5,C9,Y');
    BEGIN
      IF CorrectionType = 3 THEN BEGIN
        FieldText[22] := Text16510;
        FieldText[23] := Text16510;
        FieldText[24] := Text16510;
        FieldText[25] := Text16510;
        FieldText[26] := Text16510;
        FieldText[27] := Text16510;
        FieldText[28] := Text16510;
        FieldText[29] := Text16510;
        FieldText[30] := Text16510;
      END ELSE BEGIN
        FieldText[22] := FORMAT(Form27EQEntry."TCS Base Amount",0,'<Integer><Decimals,3>') + Text16510;
        FieldText[23] := FORMAT(Form27EQEntry."Posting Date",0,'<Day,2><Month,2><Year4>') + Text16510;
        FieldText[24] := FORMAT(Form27EQEntry."Posting Date",0,'<Day,2><Month,2><Year4>') + Text16510;
        FieldText[25] := Text16510;
        FieldText[26] :=
          FORMAT(
            (Form27EQEntry."TCS %" + (Form27EQEntry."TCS %" * Form27EQEntry."Surcharge %" / 100)) *
            (1 + (Form27EQEntry."eCESS %" + Form27EQEntry."SHE CESS %") / 100),0,'<Sign><Integer><Decimals,5>') + Text16510;
        FieldText[27] := Text16510;
        FieldText[28] := Text16512 + Text16510;
        FieldText[29] := Text16510;
        FieldText[30] := COPYSTR(Form27EQEntry."Concessional Code",1,1) + Text16510;
      END;
    END;

    PROCEDURE CalcBatchCount@1500010() : Integer;
    VAR
      BatchCount@1500000 : Integer;
    BEGIN
      IF TCSBatchHeader."Correction-C1" THEN
        BatchCount += 1;

      TCSChallanRegister.RESET;
      TCSChallanRegister.SETRANGE("Financial Year",FinancialYear);
      TCSChallanRegister.SETRANGE(Quarter,Quarter);
      TCSChallanRegister.SETRANGE(Revised,TRUE);
      TCSChallanRegister.SETRANGE("Correction-C2",TRUE);
      IF TCSChallanRegister.FINDFIRST THEN
        BatchCount += 1;

      Form27EQEntry.RESET;
      Form27EQEntry.SETRANGE("Financial Year",FinancialYear);
      Form27EQEntry.SETRANGE(Quarter,Quarter);
      Form27EQEntry.SETRANGE(Revised,TRUE);
      Form27EQEntry.SETRANGE("Correction-C3",TRUE);
      IF Form27EQEntry.FINDFIRST THEN
        BatchCount += 1;

      TCSChallanRegister.RESET;
      TCSChallanRegister.SETRANGE("Financial Year",FinancialYear);
      TCSChallanRegister.SETRANGE(Quarter,Quarter);
      TCSChallanRegister.SETRANGE(Revised,TRUE);
      TCSChallanRegister.SETRANGE("Correction-C5",TRUE);
      IF TCSChallanRegister.FINDFIRST THEN
        BatchCount += 1;

      TCSChallanRegister.RESET;
      TCSChallanRegister.SETRANGE("Financial Year",FinancialYear);
      TCSChallanRegister.SETRANGE(Quarter,Quarter);
      TCSChallanRegister.SETRANGE(Revised,TRUE);
      TCSChallanRegister.SETRANGE("Correction-C9",TRUE);
      IF TCSChallanRegister.FINDFIRST THEN
        BatchCount += 1;

      EXIT(BatchCount);
    END;

    PROCEDURE GetPartyCount@1500005(ChlEntryNo@1500000 : Integer;TranType@1500001 : Code[2]) : Integer;
    VAR
      Form27EQEntry@1500002 : Record 16517;
    BEGIN
      Form27EQEntry.RESET;
      Form27EQEntry.SETRANGE("Challan Register Entry No.",ChlEntryNo);
      Form27EQEntry.SETFILTER("Document Type",'<>%1',Form27EQEntry."Document Type"::"Credit Memo");
      IF TranType = 'C3' THEN
        Form27EQEntry.SETRANGE("Correction-C3",TRUE)
      ELSE
        IF TranType = 'C5' THEN
          Form27EQEntry.SETRANGE("Correction-C5",TRUE)
        ELSE
          IF TranType = 'C9' THEN
            Form27EQEntry.SETRANGE("Correction-C9",TRUE);
      EXIT(Form27EQEntry.COUNT);
    END;

    PROCEDURE CheckRevisedEntries@1500006() : Boolean;
    BEGIN
      TCSChallanRegister.SETRANGE("Financial Year",FinancialYear);
      TCSChallanRegister.SETRANGE(Quarter,Quarter);
      TCSChallanRegister.SETRANGE(Revised,TRUE);
      IF  TCSChallanRegister.FIND('-') THEN
        EXIT(TRUE);

      Form27EQEntry.SETRANGE("Financial Year",FinancialYear);
      Form27EQEntry.SETRANGE(Quarter,Quarter);
      Form27EQEntry.SETRANGE("T.C.A.N. No.",TCANLocation);
      Form27EQEntry.SETRANGE(Revised,TRUE);
      IF  Form27EQEntry.FIND('-') THEN
        EXIT(TRUE);

      TCSBatchHeader.SETRANGE("Financial Year",FinancialYear);
      TCSBatchHeader.SETRANGE(Quarter,Quarter);
      TCSBatchHeader.SETRANGE(Revised,TRUE);
      IF TCSBatchHeader.FINDFIRST THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE GetPartyValues@1500011(EntryNo@1500000 : Integer;Correction@1500001 : ' ,C3,C5,C9,Y';AmountType@1500002 : ' ,TDS,Surcharge,eCess,TotTDSIncleCess') : Decimal;
    BEGIN
      Form27EQEntry.RESET;
      Form27EQEntry.SETCURRENTKEY("Challan Register Entry No.","Correction-C3","Correction-C5","Correction-C9","Correction-Y");
      Form27EQEntry.SETRANGE("Challan Register Entry No.",EntryNo);
      IF Correction = Correction::C3 THEN
        Form27EQEntry.SETRANGE("Correction-C3",TRUE);
      IF Correction = Correction::C5 THEN
        Form27EQEntry.SETRANGE("Correction-C5",TRUE);
      IF Correction = Correction::C9 THEN
        Form27EQEntry.SETRANGE("Correction-C9",TRUE);
      IF Correction = Correction::Y THEN
        Form27EQEntry.SETRANGE("Correction-Y",TRUE);

      Form27EQEntry.CALCSUMS("TCS Amount","Surcharge Amount","eCESS Amount","SHE CESS Amount","Total TCS Including SHE CESS");
      IF AmountType = AmountType::TDS THEN
        EXIT(Form27EQEntry."TCS Amount");
      IF AmountType = AmountType::Surcharge THEN
        EXIT(Form27EQEntry."Surcharge Amount");
      IF AmountType = AmountType::eCess THEN
        EXIT(Form27EQEntry."eCESS Amount" + Form27EQEntry."SHE CESS Amount");
      IF AmountType = AmountType::TotTDSIncleCess THEN
        EXIT(Form27EQEntry."Total TCS Including SHE CESS");
    END;

    LOCAL PROCEDURE WriteToStream@1500009(FieldText@1500000 : ARRAY [100] OF Text[250];FieldCount@1500001 : Integer);
    VAR
      x@1500002 : Integer;
    BEGIN
      FOR x := 1 TO FieldCount DO
        IF FieldText[x] <> '' THEN
          OStream.WRITETEXT(FieldText[x]);
      OStream.WRITETEXT;
    END;

    LOCAL PROCEDURE AdjustAppliedEntries@1(VAR Form27EQEntry2@1500003 : Record 16517);
    VAR
      DtldCustLedgEntry1@1001 : Record 379;
      DtldCustLedgEntry2@1000 : Record 379;
      CustLedEntry@1500001 : Record 21;
      CustLedEntry2@1500002 : Record 21;
      Form27EQEntry3@1500000 : Record 16517;
    BEGIN
      CustLedEntry.SETCURRENTKEY("Document No.");
      CustLedEntry.SETRANGE("Document No.",Form27EQEntry2."Document No.");
      IF NOT CustLedEntry.FINDFIRST THEN
        EXIT;

      DtldCustLedgEntry1.SETCURRENTKEY("Cust. Ledger Entry No.");
      DtldCustLedgEntry1.SETRANGE("Cust. Ledger Entry No.",CustLedEntry."Entry No.");
      DtldCustLedgEntry1.SETRANGE(Unapplied,FALSE);
      IF DtldCustLedgEntry1.FIND('-') THEN
        REPEAT
          IF DtldCustLedgEntry1."Cust. Ledger Entry No." =
             DtldCustLedgEntry1."Applied Cust. Ledger Entry No."
          THEN BEGIN
            DtldCustLedgEntry2.INIT;
            DtldCustLedgEntry2.SETCURRENTKEY("Applied Cust. Ledger Entry No.","Entry Type");
            DtldCustLedgEntry2.SETRANGE(
              "Applied Cust. Ledger Entry No.",DtldCustLedgEntry1."Applied Cust. Ledger Entry No.");
            DtldCustLedgEntry2.SETRANGE("Entry Type",DtldCustLedgEntry2."Entry Type"::Application);
            DtldCustLedgEntry2.SETRANGE(Unapplied,FALSE);
            IF DtldCustLedgEntry2.FIND('-') THEN
              REPEAT
                IF DtldCustLedgEntry2."Cust. Ledger Entry No." <>
                   DtldCustLedgEntry2."Applied Cust. Ledger Entry No."
                THEN BEGIN
                  CustLedEntry2.SETCURRENTKEY("Entry No.");
                  CustLedEntry2.SETRANGE("Entry No.",DtldCustLedgEntry2."Cust. Ledger Entry No.");
                  IF CustLedEntry2.FIND('-') THEN
                    CustLedEntry2.MARK(TRUE);
                END;
              UNTIL DtldCustLedgEntry2.NEXT = 0;
          END ELSE BEGIN
            CustLedEntry2.SETCURRENTKEY("Entry No.");
            CustLedEntry2.SETRANGE("Entry No.",DtldCustLedgEntry1."Applied Cust. Ledger Entry No.");
            IF CustLedEntry2.FIND('-') THEN
              CustLedEntry2.MARK(TRUE);
          END;
        UNTIL DtldCustLedgEntry1.NEXT = 0;

      CustLedEntry2.MARKEDONLY(TRUE);

      IF CustLedEntry2.FIND('-') THEN
        REPEAT
          Form27EQEntry3.SETRANGE("Document No.",CustLedEntry2."Document No.");
          IF Form27EQEntry3.FINDFIRST THEN
            IF Form27EQEntry3."TCS Paid" THEN
              IF Form27EQEntry3."Document Type" <> Form27EQEntry3."Document Type"::Payment THEN BEGIN
                Form27EQEntry2."Invoice Amount" += Form27EQEntry3."Invoice Amount";
                Form27EQEntry2."TCS Base Amount" += Form27EQEntry3."TCS Base Amount";
                Form27EQEntry2."Surcharge Base Amount" += Form27EQEntry3."Surcharge Base Amount";
                Form27EQEntry2."TCS Amount" += Form27EQEntry3."TCS Amount";
                Form27EQEntry2."Surcharge Amount" += Form27EQEntry3."Surcharge Amount";
                Form27EQEntry2."eCESS Amount" += Form27EQEntry3."eCESS Amount";
                Form27EQEntry2."SHE CESS Amount" += Form27EQEntry3."SHE CESS Amount";
                Form27EQEntry2."TCS Amount Including Surcharge" += Form27EQEntry3."TCS Amount Including Surcharge";
                Form27EQEntry2."Total TCS Including SHE CESS" += Form27EQEntry3."Total TCS Including SHE CESS";
                Form27EQEntry2."Bal. TCS Including SHE CESS" += Form27EQEntry3."Bal. TCS Including SHE CESS";
                Form27EQEntry2."Rem. Total TCS Incl. SHE CESS" += Form27EQEntry3."Rem. Total TCS Incl. SHE CESS";
              END;
        UNTIL CustLedEntry2.NEXT = 0;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

