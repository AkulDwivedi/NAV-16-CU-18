OBJECT Report 16508 Generate e-TDS
{
  OBJECT-PROPERTIES
  {
    Date=03-08-16;
    Time=12:00:00 PM;
    Version List=NAVIN9.00.00.46621;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Generate e-TDS;
               ENN=Generate e-TDS];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  FileMgt@1500000 : Codeunit 419;
                  CompanyInformation@1500001 : Record 79;
                BEGIN
                  IF FileName = '' THEN
                    ERROR(Text16500);
                  IF (CurrentQuarter = 0) THEN
                    ERROR(Text16501);
                  IF (FinancialYear = '') THEN
                    ERROR(Text16502);
                  IF (TANLocation = '') THEN
                    ERROR(Text16503);
                  IF (PersonName = '') THEN
                    ERROR(Text16504);
                  IF (Designation = '') THEN
                    ERROR(Text16505);
                  IF (CreationDate = 0D) THEN
                    ERROR(Text16506);
                  IF (NameofReturnPrepUtility = '') THEN
                    ERROR(Text16524);
                  IF PANNo = '' THEN
                    ERROR(PANNoEmptyErr);

                  ServerFile := FileMgt.ServerTempFileName('txt');
                  CompanyInfo.GET;
                  CompanyInfo.TESTFIELD(State);
                  FormNo := "Batch Header".GETRANGEMIN("Form No.");
                  Form26Q27QEntry.SETRANGE("Form No.",FormNo);
                  Form26Q27QEntry.SETRANGE("Financial Year", FinancialYear);
                  Form26Q27QEntry.SETRANGE(Quarter, CurrentQuarter);
                  Form26Q27QEntry.SETRANGE("T.A.N. No.", TANLocation);
                  Form26Q27QEntry.SETRANGE(Printed, TRUE);
                  IF Form26Q27QEntry.FINDFIRST THEN
                    Execute := 1;

                  BatchHeader.SETRANGE("Financial Year", FinancialYear);
                  BatchHeader.SETRANGE(Quarter, CurrentQuarter);
                  BatchHeader.SETRANGE("Form No.",FormNo);
                  BatchHeader.SETRANGE("Deductor T.A.N. No.",TANLocation);
                  NoOfBatchs := BatchHeader.COUNT;
                  SequenceNo := 1;

                  IF (CompanyInformation."Company Status" <> CompanyInformation."Company Status"::Government) AND
                    (STRLEN(MobileNo) <> 10)
                  THEN
                    ERROR(Text16525);
                END;

    OnPostReport=VAR
                   FileMgt@1500001 : Codeunit 419;
                 BEGIN
                   IF FileOpened THEN
                     OutFile.CLOSE;
                   FileMgt.DownloadToFile(ServerFile,FileName);
                 END;

    UseRequestPage=Yes;
  }
  DATASET
  {
    { 9960;    ;DataItem;                    ;
               DataItemTable=Table16503;
               DataItemTableView=SORTING(Entry No.)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               IF Execute = 0 THEN
                                 ERROR(Text16509,FormNo);
                               SETRANGE("Financial Year",FinancialYear);
                               SETRANGE(Quarter,CurrentQuarter);
                               SETRANGE("Form No.",FormNo);
                               SETRANGE("Deductor T.A.N. No.",TANLocation);
                               IF FINDFIRST THEN;
                               IF NOT CalledFromY THEN BEGIN
                                 SETRANGE(Revised,FALSE);
                                 SETRANGE(Filed,FALSE);
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF NOT FileOpened THEN BEGIN
                                    OutFile.CREATE(ServerFile);
                                    OutFile.CREATEOUTSTREAM(OStream);
                                    CreateFileHeader;
                                    FileOpened := TRUE;
                                  END;
                                  ChallanRegister.RESET;
                                  ChallanRegister.SETCURRENTKEY(Quarter,"Financial Year");
                                  ChallanRegister.SETRANGE(Quarter,CurrentQuarter);
                                  ChallanRegister.SETRANGE("Financial Year",FinancialYear);
                                  ChallanRegister.SETRANGE("T.A.N. No.",TANLocation);
                                  ChallanRegister.SETRANGE("Non Resident Payment",InclNonResidentPmt);
                                  ChallanCount := 0;
                                  IF ChallanRegister.FINDFIRST THEN
                                  REPEAT
                                    ChallanRegister.CALCFIELDS("Total TDS Including SHE Cess");
                                    BatchAmount +=
                                      ChallanRegister."Total TDS Including SHE Cess" + ChallanRegister."Oltas Interest" +
                                      ChallanRegister."Oltas Others" + ChallanRegister."TDS Fee";
                                    ChallanCount += 1;
                                  UNTIL ChallanRegister.NEXT = 0;
                                  CreateBatchHeader;

                                  "Normal eTDS Generated" := TRUE;
                                  MODIFY;
                                END;
                                 }

    { 2129;1   ;DataItem;                    ;
               DataItemTable=Table16504;
               DataItemTableView=SORTING(Quarter,Financial Year)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               SETRANGE("Financial Year",FinancialYear);
                               SETRANGE(Quarter,CurrentQuarter);
                               SETRANGE("Non Resident Payment",InclNonResidentPmt);
                               SETRANGE("T.A.N. No.",TANLocation);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF NOT CalledFromY THEN
                                    IF (NOT "Correction-Y") AND (Revised OR Filed) THEN
                                      CurrReport.SKIP;

                                  Form26Q27QEntry.RESET;
                                  Form26Q27QEntry.SETRANGE("Reporting Challan Entry No.","Challan Register"."Entry No.");
                                  Form26Q27QEntry.SETRANGE("T.A.N. No.",TANLocation);
                                  Form26Q27QEntry.SETRANGE("Reporting Quarter","Challan Register".Quarter);
                                  Form26Q27QEntry.SETRANGE("Financial Year","Challan Register"."Financial Year");
                                  DeducteeCount := Form26Q27QEntry.COUNT;
                                  CALCFIELDS("Total TDS Amount", "Total Surcharge Amount", "Total eCess Amount", "Total SHE Cess Amount",
                                    "Total TDS Including SHE Cess");

                                  CreateChallanDetails;
                                  "Normal eTDS Generated" := TRUE;
                                  MODIFY;
                                END;

               DataItemLink=Quarter=FIELD(Quarter),
                            Financial Year=FIELD(Financial Year) }

    { 6267;2   ;DataItem;                    ;
               DataItemTable=Table16505;
               DataItemTableView=SORTING(Reporting Challan Entry No.,Reporting Quarter,Party Code)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               SETRANGE("Financial Year",FinancialYear);
                               SETRANGE("Reporting Quarter",CurrentQuarter);
                               SETRANGE("Form No.",FormNo);
                               SETRANGE("T.A.N. No.",TANLocation);
                               SETRANGE(Printed,TRUE);
                               IF COUNT =0 THEN
                                 ERROR(Text16509,FormNo);
                               SNo := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF STRLEN("Deductee P.A.N. No.") <> 10 THEN
                                    ERROR(Text16508);

                                  SNo += 1;
                                  CreateDeducteeDetails;
                                  "Normal eTDS Generated" := TRUE;
                                  MODIFY;
                                END;

               DataItemLink=Reporting Challan Entry No.=FIELD(Entry No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENN=Options] }

      { 1500008;2;Field     ;
                  Name=FileName;
                  AssistEdit=Yes;
                  CaptionML=[ENU=File Name;
                             ENN=File Name];
                  SourceExpr=FileName;
                  OnAssistEdit=VAR
                                 FileMgt@1001 : Codeunit 419;
                               BEGIN
                                 IF FileName = '' THEN
                                   FileName:= '.txt';
                                 FileName := FileMgt.SaveFileDialog(Text16507,FileName,'');
                               END;
                                }

      { 1500010;2;Field     ;
                  Name=TANLocation;
                  CaptionML=[ENU=T.A.N. Location;
                             ENN=T.A.N. Location];
                  SourceExpr=TANLocation;
                  OnLookup=BEGIN
                             IF PAGE.RUNMODAL(13722,TANNos) = ACTION::LookupOK THEN
                               TANLocation := TANNos.Code;
                           END;
                            }

      { 1500006;2;Field     ;
                  Name=ReportFrequency;
                  CaptionML=[ENU=Report Frequency;
                             ENN=Report Frequency];
                  SourceExpr=CurrentQuarter }

      { 1500004;2;Field     ;
                  Name=FinancialYear;
                  CaptionML=[ENU=Financial Year;
                             ENN=Financial Year];
                  SourceExpr=FinancialYear;
                  OnLookup=VAR
                             TDSAccountingPeriod@1500000 : Record 13724;
                           BEGIN
                             IF CurrentQuarter > 0 THEN BEGIN
                               TDSSetup.RESET;
                               TDSSetup.SETRANGE(Quarter,CurrentQuarter);
                               IF TDSSetup.FINDFIRST THEN BEGIN
                                 TDSAccountingPeriod.GET(TDSSetup."No.");
                                 IF PAGE.RUNMODAL(13721,TDSAccountingPeriod) = ACTION::LookupOK THEN
                                   FinancialYear := TDSAccountingPeriod."Financial Year for eTDS/TCS";
                               END;
                             END;
                           END;
                            }

      { 1500000;2;Field     ;
                  Name=FullName;
                  CaptionML=[ENU=Full Name;
                             ENN=Full Name];
                  SourceExpr=PersonName }

      { 1500002;2;Field     ;
                  Name=Designation;
                  CaptionML=[ENU="Designation ";
                             ENN="Designation "];
                  SourceExpr=Designation }

      { 1500003;2;Field     ;
                  Name=PAN No.;
                  CaptionML=[ENU=P.A.N. No.;
                             ENN=P.A.N. No.];
                  SourceExpr=PANNo }

      { 1500012;2;Field     ;
                  Name=PrintingDate;
                  CaptionML=[ENU=Printing Date;
                             ENN=Printing Date];
                  SourceExpr=CreationDate }

      { 1   ;2   ;Field     ;
                  Name=NameOfReturnPreparationUtility;
                  CaptionML=[ENU=Name of Return Preparation Utility;
                             ENN=Name of Return Preparation Utility];
                  SourceExpr=NameofReturnPrepUtility }

      { 1500016;2;Field     ;
                  Name=Email;
                  CaptionML=[ENU=Email;
                             ENN=Email];
                  SourceExpr=EMail }

      { 1500017;2;Field     ;
                  Name=MobileNo;
                  CaptionML=[ENU=Mobile No.;
                             ENN=Mobile No.];
                  Numeric=Yes;
                  SourceExpr=MobileNo }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInfo@1500062 : Record 79;
      BatchHeader@1500007 : Record 16503;
      Form26Q27QEntry@1500006 : Record 16505;
      TANNos@1500001 : Record 13725;
      ChallanRegister@1500019 : Record 16504;
      TDSSetup@1500003 : Record 16501;
      OutFile@1500055 : File;
      OStream@1500053 : OutStream;
      SequenceNo@1500048 : Integer;
      NoOfBatchs@1500046 : Integer;
      PersonName@1500031 : Text[75];
      Designation@1500030 : Text[20];
      ChallanCount@1500044 : Integer;
      Execute@1500012 : Integer;
      FileName@1500011 : Text[250];
      FinancialYear@1500005 : Code[6];
      TANLocation@1500079 : Code[10];
      Text16500@1500067 : TextConst 'ENU=Please enter the file name.;ENN=Please enter the file name.';
      Text16501@1500076 : TextConst 'ENU=Select Report Frequency.;ENN=Select Report Frequency.';
      Text16502@1500075 : TextConst 'ENU=Select Financial Year.;ENN=Select Financial Year.';
      Text16503@1500074 : TextConst 'ENU=Select T.A.N. No.;ENN=Select T.A.N. No.';
      Text16504@1500073 : TextConst 'ENU=Enter Person Name.;ENN=Enter Person Name.';
      Text16505@1500072 : TextConst 'ENU=Enter Designation.;ENN=Enter Designation.';
      Text16506@1500066 : TextConst 'ENU=Enter Printing Date.;ENN=Enter Printing Date.';
      Text16507@1500065 : TextConst 'ENU=Export to text file.;ENN=Export to text file.';
      Text16508@1500068 : TextConst 'ENU=Invalid Deductee P.A.N.;ENN=Invalid Deductee P.A.N.';
      SNo@1500071 : Integer;
      CurrentQuarter@1500004 : ' ,Q1,Q2,Q3,Q4';
      Text16509@1500082 : TextConst 'ENU=You must print Form %1 before you generate the e-TDS statement.;ENN=You must print Form %1 before you generate the e-TDS statement.';
      CreationDate@1500083 : Date;
      BatchAmount@1500002 : Decimal;
      DeducteeCount@1500009 : Integer;
      LineNo@1500014 : Integer;
      CalledFromY@1500010 : Boolean;
      FileOpened@1500008 : Boolean;
      Text16510@1500015 : TextConst 'ENU=^;ENN=^';
      Text16511@1500016 : TextConst 'ENU=Y;ENN=Y';
      Text16512@1500017 : TextConst 'ENU=N;ENN=N';
      Text16513@1500018 : TextConst 'ENU=FH;ENN=FH';
      Text16514@1500020 : TextConst 'ENU=NS1;ENN=NS1';
      Text16515@1500021 : TextConst 'ENU=R;ENN=R';
      Text16516@1500022 : TextConst 'ENU=D;ENN=D';
      Text16517@1500023 : TextConst 'ENU=BH;ENN=BH';
      Text16518@1500024 : TextConst 'ENU=CD;ENN=CD';
      Text16519@1500025 : TextConst 'ENU=DD;ENN=DD';
      Text16520@1500026 : TextConst 'ENU=O;ENN=O';
      NameofReturnPrepUtility@1500098 : Text[75];
      Text16524@1000 : TextConst 'ENU=Enter Name of the Return Preparation Utility.;ENN=Enter Name of the Return Preparation Utility.';
      EMail@1500061 : Text[75];
      MobileNo@1500069 : Text[10];
      FormNo@1500063 : '26Q,27Q';
      ServerFile@1500064 : Text[1024];
      Text16525@1500032 : TextConst 'ENU=You must specify valid mobile number. Enter a 10 digit mobile number.;ENN=You must specify valid mobile number. Enter a 10 digit mobile number.';
      NotFiledBatchQst@1500013 : TextConst 'ENU=An e-TDS return for the previous period was not filed: Financial Year %1 Quarter %2. Do you want to continue?;ENN=An e-TDS return for the previous period was not filed: Financial Year %1 Quarter %2. Do you want to continue?';
      PANNo@1500000 : Code[10];
      PANNoEmptyErr@1500028 : TextConst 'ENU=Select P.A.N. No.;ENN=Select P.A.N. No.';

    PROCEDURE CreateFileHeader@1280000();
    VAR
      FieldText@1500000 : ARRAY [100] OF Text[250];
    BEGIN
      LineNo := 1;
      FieldText[1] := FORMAT(LineNo) + Text16510;
      FieldText[2] := Text16513 + Text16510;
      FieldText[3] := Text16514 + Text16510;
      FieldText[4] := Text16515 + Text16510;
      FieldText[5] := FORMAT(CreationDate, 0, '<Day,2><Month,2><Year4>') + Text16510;
      FieldText[6] := FORMAT(SequenceNo) + Text16510;
      FieldText[7] := Text16516 + Text16510;
      FieldText[8] := PADSTR("Batch Header"."Deductor T.A.N. No.",10 ,' ') + Text16510;
      IF NoOfBatchs > 0 THEN
        FieldText[9] := FORMAT(NoOfBatchs) + Text16510
      ELSE
        FieldText[9] := Text16510;

      FieldText[10] := NameofReturnPrepUtility + Text16510;
      FieldText[11] := Text16510;
      FieldText[12] := Text16510;
      FieldText[13] := Text16510;
      FieldText[14] := Text16510;
      FieldText[15] := Text16510;
      FieldText[16] := Text16510;
      FieldText[17] := '';
      FieldText[18] := Text16510;
      WriteToStream(FieldText,18);
    END;

    PROCEDURE CreateBatchHeader@1280001();
    VAR
      PrevBatchHeader@1500000 : Record 16503;
      FieldText@1500001 : ARRAY [100] OF Text[250];
      PreviousRRRNo@1500002 : Code[20];
    BEGIN
      WITH "Batch Header" DO BEGIN
        IF FindBatchOfPreviousPeriod(PrevBatchHeader) THEN
          PreviousRRRNo := GetPrevProvReceipt(PrevBatchHeader);
        LineNo += 1;
        FieldText[1] := FORMAT(LineNo) + Text16510;
        FieldText[2] := Text16517 + Text16510;
        FieldText[3] := FormatNoOfBatches(NoOfBatchs) + Text16510;
        IF ChallanCount > 0 THEN
          FieldText[4] := FORMAT(ChallanCount) + Text16510
        ELSE
          FieldText[4] := Text16510;
        FieldText[5] := FORMAT("Form No.") + Text16510;
        FieldText[6] := Text16510;
        FieldText[7] := Text16510;
        FieldText[8] := Text16510;
        FieldText[9] := PreviousRRRNo + Text16510;
        FieldText[10] := Text16510;
        FieldText[11] := Text16510;
        FieldText[12] := Text16510;
        FieldText[13] := PADSTR("Deductor T.A.N. No.",10 ,' ') + Text16510;
        FieldText[14] := Text16510;
        FieldText[15] := PADSTR("Deductor P.A.N. No.",10 ,' ') + Text16510;
        FieldText[16] := "Assessment Year" + Text16510;
        FieldText[17] := FinancialYear + Text16510;
        FieldText[18] := FORMAT(CurrentQuarter) + Text16510;
        FieldText[19] := "Deductor Name" + Text16510;
        IF "Deductor Branch/Division" = '' THEN
          FieldText[20] := CompanyInfo."Location Code" + Text16510
        ELSE
          FieldText[20] := "Deductor Branch/Division" + Text16510;
        FieldText[21] := "Deductor Address" + Text16510;
        FieldText[22] := "Deductor Address 2" + Text16510;
        FieldText[23] := "Deductor Address 3" + Text16510;
        FieldText[24] := "Deductor Address 4" + Text16510;
        FieldText[25] := "Deductor Address 5" + Text16510;
        FieldText[26] := "Deductor State" + Text16510;
        FieldText[27] := "Deductor Post Code" + Text16510;
        FieldText[28] := "Deductor E-Mail" + Text16510;
        IF ("Deductor STD Code" <> '') AND ("Deductor Phone No." <> '') THEN BEGIN
          FieldText[29] := "Deductor STD Code" + Text16510;
          FieldText[30] := "Deductor Phone No." + Text16510;
        END ELSE BEGIN
          FieldText[29] := Text16510;
          FieldText[30] := Text16510;
        END;
        IF "Change of Add of Deductor" THEN
          FieldText[31] := Text16511 + Text16510
        ELSE
          FieldText[31] := Text16512 + Text16510;
        FieldText[32] := FORMAT("Deductor Category") + Text16510;
        FieldText[33] := PersonName + Text16510;
        FieldText[34] := Designation + Text16510;
        FieldText[35] := "Responsible Person Address" + Text16510;
        FieldText[36] := "Responsible Person Address 2" + Text16510;
        FieldText[37] := "Responsible Person Address 3" + Text16510;
        FieldText[38] := "Responsible Person Address 4" + Text16510;
        FieldText[39] := "Responsible Person Address 5" + Text16510;
        FieldText[40] := "Responsible Person State" + Text16510;
        FieldText[41] := "Responsible Person Post Code" + Text16510;
        IF EMail <> '' THEN
          FieldText[42] := EMail + Text16510
        ELSE
          FieldText[42] := "Responsible Person E-Mail" + Text16510;
        IF MobileNo <> '' THEN
          FieldText[43] := MobileNo + Text16510
        ELSE
          FieldText[43] := Text16510;
        IF ("Responsible Person STD Code" <> '') AND ("Responsible Person Phone No." <> '') THEN BEGIN
          FieldText[44] := "Responsible Person STD Code" + Text16510;
          FieldText[45] := "Responsible Person Phone No." + Text16510;
        END ELSE BEGIN
          FieldText[44] := Text16510;
          FieldText[45] := Text16510;
        END;
        IF "Change of Add of Deductor" THEN
          FieldText[46] := Text16511 + Text16510
        ELSE
          FieldText[46] := Text16512+Text16510;
        FieldText[47] := FORMAT(BatchAmount,0,'<Sign><Integer>.00') + Text16510;
        FieldText[48] := Text16510;
        FieldText[49] := Text16510;
        FieldText[50] := Text16510;
        FieldText[51] := Text16512 + Text16510;
        FieldText[52] := BooleanToYN(PreviousRRRNo <> '') + Text16510;
        FieldText[53] := Text16510;
        FieldText[54] := "State Code" + Text16510;
        FieldText[55] := "PAO Code" + Text16510;
        FieldText[56] := "DDO Code" + Text16510;
        FieldText[57] := "Ministry Name Code" + Text16510;
        FieldText[58] := "Ministry Name Other" + Text16510;
        FieldText[59] := PANNo + Text16510;
        FieldText[60] := "PAO Registration No." + Text16510;
        FieldText[61] := "DDO Registration No." + Text16510;
        FieldText[62] := Text16510;
        FieldText[63] := Text16510;
        FieldText[64] := Text16510;
        FieldText[65] := Text16510;
        FieldText[66] := Text16510;
        FieldText[67] := Text16510;
        FieldText[68] := Text16510;
        FieldText[69] := '';
      END;
      WriteToStream(FieldText,68);
    END;

    PROCEDURE CreateChallanDetails@1280002();
    VAR
      FieldText@1500001 : ARRAY [100] OF Text[250];
      OltasAmount@1500000 : Decimal;
    BEGIN
      WITH "Challan Register" DO BEGIN
        LineNo += 1;
        FieldText[1] := FORMAT(LineNo) + Text16510;
        FieldText[2] := Text16518 + Text16510;
        FieldText[3] := FormatNoOfBatches(NoOfBatchs) + Text16510;
        FieldText[4] := FORMAT("Challan-Detail Record No.") + Text16510;
        IF DeducteeCount > 0 THEN
          FieldText[5] := FORMAT(DeducteeCount) + Text16510
        ELSE
          FieldText[5] := Text16510;
        IF "Challan Register"."Nil Challan Indicator" THEN
          FieldText[6] := Text16511 + Text16510
        ELSE
          FieldText[6] := Text16512 + Text16510;
        FieldText[7] := Text16510;
        FieldText[8] := Text16510;
        FieldText[9] := Text16510;
        FieldText[10] := Text16510;
        FieldText[11] := Text16510;
        IF (CompanyInfo."Company Status" = CompanyInfo."Company Status"::Government) OR "Nil Challan Indicator" THEN
          FieldText[12] := Text16510
        ELSE
          FieldText[12] := PADSTR("Challan No.",5,' ') + Text16510;

        FieldText[13] := Text16510;
        IF NOT "Challan Register"."Nil Challan Indicator" THEN
          FieldText[14] := "Transfer Voucher No." + Text16510
        ELSE
          FieldText[14] := Text16510;
        FieldText[15] := Text16510;
        IF (CompanyInfo."Company Status" = CompanyInfo."Company Status"::Government) OR "Nil Challan Indicator" THEN
          FieldText[16] := Text16510
        ELSE
          FieldText[16] := PADSTR("BSR Code",7,' ') + Text16510;
        FieldText[17] := Text16510;
        FieldText[18] := FORMAT("Challan Date", 0, '<Day,2><Month,2><Year4>') + Text16510;
        FieldText[19] := Text16510;
        FieldText[20] := Text16510;
        FieldText[21] := Text16510;
        FieldText[22] := FORMAT("Total TDS Amount",0,'<Sign><Integer>.00') + Text16510;
        FieldText[23] := FORMAT("Total Surcharge Amount",0,'<Sign><Integer>.00') + Text16510;
        FieldText[24] := FORMAT("Total eCess Amount" + "Total SHE Cess Amount",0,'<Sign><Integer>.00') + Text16510;
        FieldText[25] := FORMAT("Oltas Interest",0,'<Sign><Integer>.00') + Text16510;
        FieldText[26] := FORMAT("Oltas Others",0,'<Sign><Integer>.00') + Text16510;
        OltasAmount :=
          ROUND("Challan Register"."Total TDS Amount",1,'=') +
          ROUND("Challan Register"."Total Surcharge Amount",1,'=') +
          ROUND("Challan Register"."Total eCess Amount" + "Challan Register"."Total SHE Cess Amount",1,'=') +
          ROUND("Challan Register"."Oltas Interest",1,'=') +
          ROUND("Challan Register"."TDS Fee",1,'=') +
          ROUND("Challan Register"."Oltas Others",1,'=');
        FieldText[27] := FORMAT(OltasAmount,0,'<Sign><Integer>.00') + Text16510;
        FieldText[28] := Text16510;
        FieldText[29] := FORMAT("Total TDS Including SHE Cess",0,'<Sign><Integer><Decimals,3>') + Text16510;
        FieldText[30] := FORMAT("Total TDS Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
        FieldText[31] := FORMAT("Total Surcharge Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
        FieldText[32] := FORMAT("Total eCess Amount" + "Total SHE Cess Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
        FieldText[33] := FORMAT("Total TDS Including SHE Cess",0,'<Sign><Integer><Decimals,3>') + Text16510;
        FieldText[34] := FORMAT("Oltas Interest",0,'<Sign><Integer><Decimals,3>') + Text16510;
        FieldText[35] := FORMAT("Oltas Others",0,'<Sign><Integer><Decimals,3>') + Text16510;
        FieldText[36] := Text16510;
        IF ("Paid By Book Entry") OR ("Transfer Voucher No." <> '') THEN
          FieldText[37] := Text16511 + Text16510
        ELSE IF NOT "Nil Challan Indicator" THEN
          FieldText[37] := Text16512 + Text16510
        ELSE
          FieldText[37] := Text16510;
        FieldText[38] := Remarks + Text16510;
        FieldText[39] := FORMAT("TDS Fee",0,'<Sign><Integer>.00') + Text16510;
        IF "Nil Challan Indicator" THEN
          FieldText[40] := Text16510
        ELSE
          FieldText[40] := FORMAT("Minor Head Code") + Text16510;
        FieldText[41] := '';
      END;
      WriteToStream(FieldText,41);
    END;

    PROCEDURE CreateDeducteeDetails@1280003();
    VAR
      Vendor@1500006 : Record 23;
      NODNOCCertificateNo@1500001 : Record 13784;
      CountryRegion@1500002 : Record 9;
      FieldText@1500005 : ARRAY [100] OF Text[250];
    BEGIN
      WITH "Form 26Q/27Q Entry" DO BEGIN
        LineNo += 1;
        FieldText[1] := FORMAT(LineNo) + Text16510;
        FieldText[2] := Text16519 + Text16510;
        IF NoOfBatchs > 0 THEN
          FieldText[3] := FORMAT(NoOfBatchs) + Text16510
        ELSE
          FieldText[3] := Text16510;
        FieldText[4] := FORMAT("Challan-Detail Record No.") + Text16510;
        FieldText[5] := FORMAT(SNo) + Text16510;
        FieldText[6] := Text16520 + Text16510;
        FieldText[7] := Text16510;
        FieldText[8] := "Deductee Code" + Text16510;
        FieldText[9] := Text16510;
        FieldText[10] := "Deductee P.A.N. No." + Text16510;
        FieldText[11] := Text16510;
        IF "Deductee P.A.N. No." = 'PANAPPLIED' THEN
          FieldText[12] := "Deductee P.A.N. Ref. No." + Text16510
        ELSE
          FieldText[12] := Text16510;
        FieldText[13] := "Deductee Name" + Text16510;
        FieldText[14] := FORMAT("TDS Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
        FieldText[15] := FORMAT("Surcharge Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
        FieldText[16] := FORMAT("eCESS Amount" + "SHE Cess Amount",0,'<Sign><Integer><Decimals,3>') + Text16510;
        FieldText[17] := FORMAT("Total TDS Including SHE CESS",0,'<Sign><Integer><Decimals,3>') + Text16510;
        FieldText[18] := Text16510;
        FieldText[19] := FORMAT("Total TDS Including SHE CESS",0,'<Sign><Integer><Decimals,3>') + Text16510;
        FieldText[20] := Text16510;
        FieldText[21] := Text16510;
        CASE FormNo OF
          FormNo::"26Q":
            FieldText[22] := FORMAT("Amount of Payment / Credit",0,'<Integer><Decimals,3>') + Text16510;
          FormNo::"27Q":
            FieldText[22] := FORMAT("Invoice Amount",0,'<Integer><Decimals,3>') + Text16510;
        END;
        FieldText[23] := FORMAT("Posting Date", 0, '<Day,2><Month,2><Year4>') + Text16510;

        IF "NIL Challan Indicator" THEN
          FieldText[24] := Text16510
        ELSE
          FieldText[24] := FORMAT("Posting Date", 0, '<Day,2><Month,2><Year4>') + Text16510;
        FieldText[25] := Text16510;
        FieldText[26] := FORMAT(ROUND((("TDS %"+("TDS %" * "Surcharge %" / 100)) * (1 + ("eCESS %" + "SHE Cess %")/100)),0.0001,'='),
          0,'<Sign><Integer><Decimals,5>') + Text16510;
        FieldText[27] := Text16510;
        FieldText[28] := Text16510;
        FieldText[29] := Text16510;

        FieldText[30] := Text16510;
        IF "NIL Challan Indicator" THEN
          FieldText[30] := GetField30ForNilDeductee("Party Code","Concessional Code",FormNo) + Text16510
        ELSE BEGIN
        IF Vendor.GET("Party Code") THEN
          IF Vendor.Transporter THEN BEGIN
            IF (Vendor."P.A.N. Status" <> Vendor."P.A.N. Status"::" ") OR (Vendor."P.A.N. No." = '') THEN
              FieldText[30] := 'C' + Text16510
            ELSE
              CASE FormNo OF
                FormNo::"26Q":
                  FieldText[30] := 'T' + Text16510;
                FormNo::"27Q":
                  FieldText[30] := COPYSTR("Concessional Code",1,1) + Text16510;
              END;
          END ELSE
            IF (Vendor."P.A.N. Status" <> Vendor."P.A.N. Status"::" ") OR (Vendor."P.A.N. No." = '') THEN
              FieldText[30] := 'C' + Text16510
            ELSE
              FieldText[30] := COPYSTR("Concessional Code",1,1) + Text16510;

        IF ("Total TDS Including SHE CESS" = 0) AND (FormNo = FormNo::"26Q") THEN
          FieldText[30] := 'Y' + Text16510;
        END;
        FieldText[31] := Text16510;
        FieldText[32] := Text16510;
        FieldText[33] := GetSection + Text16510;

        NODNOCCertificateNo.SETRANGE("No.","Party Code");
        NODNOCCertificateNo.SETFILTER("Stating Date",'<=%1',"Posting Date");
        NODNOCCertificateNo.SETFILTER("Ending Date",'>=%1',"Posting Date");
        IF NODNOCCertificateNo.FINDFIRST THEN
          IF ("Concessional Code" = 'A') OR (("Concessional Code" = 'B') AND ("Form No." = "Form No."::"27Q")) THEN
            FieldText[34] := NODNOCCertificateNo."Certificate No." + Text16510
          ELSE
            FieldText[34] := Text16510
        ELSE
          FieldText[34] := Text16510;
        IF "Form No." = "Form No."::"27Q" THEN BEGIN
          FieldText[35] := GetActApplicable + Text16510;
          FieldText[36] := "Nature of Remittance" + Text16510;
          FieldText[37] := NODNOCCertificateNo."Acknowledgement No. (15CA)" + Text16510;
          IF CountryRegion.GET("Country Code") THEN
            FieldText[38] := FORMAT(CountryRegion."Country Code for eTDS/TCS") + Text16510
          ELSE
            CountryRegion.GET(Vendor."Country/Region Code");
            FieldText[38] := FORMAT(CountryRegion."Country Code for eTDS/TCS") + Text16510;
        END ELSE BEGIN
          FieldText[35] := Text16510;
          FieldText[36] := Text16510;
          FieldText[37] := Text16510;
          FieldText[38] := Text16510;
        END;
        FieldText[39] := '';
      END;
      WriteToStream(FieldText,38);
    END;

    LOCAL PROCEDURE GetPrevProvReceipt@1500005(PrevBatchHeader@1500000 : Record 16503) : Code[20];
    BEGIN
      IF PrevBatchHeader."Original RRR No." = '' THEN
        IF NOT CONFIRM(STRSUBSTNO(NotFiledBatchQst,PrevBatchHeader."Financial Year",PrevBatchHeader.Quarter)) THEN
          ERROR('');
      EXIT(PrevBatchHeader."Original RRR No.");
    END;

    LOCAL PROCEDURE WriteToStream@1500009(VAR FieldText@1500000 : ARRAY [100] OF Text[250];FieldCount@1500001 : Integer);
    VAR
      x@1500002 : Integer;
    BEGIN
      FOR x := 1 TO FieldCount DO
       IF FieldText[x] <> '' THEN
         OStream.WRITETEXT(FieldText[x]);
      OStream.WRITETEXT();
    END;

    PROCEDURE SetProperties@1500001(NewFileName@1500000 : Text[250];NewTANLocation@1500001 : Code[10];NewCurrentQuarter@1500002 : Option;NewFinancialYear@1500003 : Code[6];NewPersonName@1500004 : Text[30];NewDesignation@1500005 : Text[30];NewCreationDate@1500006 : Date;NewCalledFromY@1500007 : Boolean);
    BEGIN
      ServerFile := NewFileName;
      TANLocation := NewTANLocation;
      CurrentQuarter := NewCurrentQuarter;
      FinancialYear := NewFinancialYear;
      PersonName := NewPersonName;
      Designation := NewDesignation;
      CreationDate := NewCreationDate;
      CalledFromY := NewCalledFromY;
    END;

    PROCEDURE InclNonResidentPmt@1500002() : Boolean;
    BEGIN
      CASE FormNo OF
        FormNo::"26Q":
          EXIT(FALSE);
        FormNo::"27Q":
          EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE BooleanToYN@1500000(Bool@1500000 : Boolean) : Code[1];
    BEGIN
      IF Bool THEN
        EXIT('Y');
      EXIT('N');
    END;

    PROCEDURE FormatNoOfBatches@1500004(NoOfBatches@1500000 : Integer) : Text[30];
    BEGIN
      IF (FormNo = FormNo::"27Q") AND (NoOfBatches = 0) THEN
        EXIT('');
      EXIT(FORMAT(NoOfBatches))
    END;

    PROCEDURE GetField30ForNilDeductee@1500003(VendorNo@1500000 : Code[20];ConcessionalCode@1500003 : Code[10];FormNo@1500001 : '26Q,27Q') ReturnCode : Text[1];
    VAR
      Vendor@1500002 : Record 23;
    BEGIN
      IF Vendor.GET(VendorNo) THEN
        IF (Vendor."P.A.N. Status" <> Vendor."P.A.N. Status"::" ") OR (Vendor."P.A.N. No." = '') THEN
          ReturnCode := 'C'
        ELSE IF Vendor.Transporter AND (FormNo = FormNo::"26Q") THEN
          ReturnCode := 'T'
        ELSE IF ConcessionalCode IN ['B','S','Z'] THEN
          ReturnCode := ConcessionalCode
        ELSE
          ReturnCode := 'A'
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

