OBJECT Table 125 Purch. Cr. Memo Line
{
  OBJECT-PROPERTIES
  {
    Date=01-08-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.48992,NAVIN9.00.00.48992;
  }
  PROPERTIES
  {
    OnDelete=VAR
               PurchDocLineComments@1000 : Record 43;
               PostedDeferralHeader@1001 : Record 1704;
             BEGIN
               PurchDocLineComments.SETRANGE("Document Type",PurchDocLineComments."Document Type"::"Posted Credit Memo");
               PurchDocLineComments.SETRANGE("No.","Document No.");
               PurchDocLineComments.SETRANGE("Document Line No.","Line No.");
               IF NOT PurchDocLineComments.ISEMPTY THEN
                 PurchDocLineComments.DELETEALL;

               PostedDeferralHeader.DeleteHeader(DeferralUtilities.GetPurchDeferralDocType,'','',
                 PurchDocLineComments."Document Type"::"Posted Credit Memo","Document No.","Line No.");
             END;

    CaptionML=[ENU=Purch. Cr. Memo Line;
               ENN=Purch. Cr. Memo Line];
    LookupPageID=Page530;
    DrillDownPageID=Page530;
  }
  FIELDS
  {
    { 2   ;   ;Buy-from Vendor No. ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Buy-from Vendor No.;
                                                              ENN=Buy-from Vendor No.];
                                                   Editable=No }
    { 3   ;   ;Document No.        ;Code20        ;TableRelation="Purch. Cr. Memo Hdr.";
                                                   CaptionML=[ENU=Document No.;
                                                              ENN=Document No.] }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ENN=Line No.] }
    { 5   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              ENN=Type];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,,Fixed Asset,Charge (Item)";
                                                                    ENN=" ,G/L Account,Item,,Fixed Asset,Charge (Item)"];
                                                   OptionString=[ ,G/L Account,Item,,Fixed Asset,Charge (Item)] }
    { 6   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Type=CONST("Charge (Item)")) "Item Charge";
                                                   CaptionML=[ENU=No.;
                                                              ENN=No.] }
    { 7   ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              ENN=Location Code] }
    { 8   ;   ;Posting Group       ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Inventory Posting Group"
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "FA Posting Group";
                                                   CaptionML=[ENU=Posting Group;
                                                              ENN=Posting Group];
                                                   Editable=No }
    { 10  ;   ;Expected Receipt Date;Date         ;CaptionML=[ENU=Expected Receipt Date;
                                                              ENN=Expected Receipt Date] }
    { 11  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENN=Description] }
    { 12  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              ENN=Description 2] }
    { 13  ;   ;Unit of Measure     ;Text10        ;CaptionML=[ENU=Unit of Measure;
                                                              ENN=Unit of Measure] }
    { 15  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              ENN=Quantity];
                                                   DecimalPlaces=0:5 }
    { 22  ;   ;Direct Unit Cost    ;Decimal       ;CaptionML=[ENU=Direct Unit Cost;
                                                              ENN=Direct Unit Cost];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCode;
                                                   CaptionClass=GetCaptionClass(FIELDNO("Direct Unit Cost")) }
    { 23  ;   ;Unit Cost (LCY)     ;Decimal       ;CaptionML=[ENU=Unit Cost (LCY);
                                                              ENN=Unit Cost (LCY)];
                                                   AutoFormatType=2 }
    { 25  ;   ;VAT %               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              ENN=VAT %];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 27  ;   ;Line Discount %     ;Decimal       ;CaptionML=[ENU=Line Discount %;
                                                              ENN=Line Discount %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 28  ;   ;Line Discount Amount;Decimal       ;CaptionML=[ENU=Line Discount Amount;
                                                              ENN=Line Discount Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 29  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ENN=Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 30  ;   ;Amount Including VAT;Decimal       ;CaptionML=[ENU=Amount Including VAT;
                                                              ENN=Amount Including VAT];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 31  ;   ;Unit Price (LCY)    ;Decimal       ;CaptionML=[ENU=Unit Price (LCY);
                                                              ENN=Unit Price (LCY)];
                                                   AutoFormatType=2 }
    { 32  ;   ;Allow Invoice Disc. ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Invoice Disc.;
                                                              ENN=Allow Invoice Disc.] }
    { 34  ;   ;Gross Weight        ;Decimal       ;CaptionML=[ENU=Gross Weight;
                                                              ENN=Gross Weight];
                                                   DecimalPlaces=0:5 }
    { 35  ;   ;Net Weight          ;Decimal       ;CaptionML=[ENU=Net Weight;
                                                              ENN=Net Weight];
                                                   DecimalPlaces=0:5 }
    { 36  ;   ;Units per Parcel    ;Decimal       ;CaptionML=[ENU=Units per Parcel;
                                                              ENN=Units per Parcel];
                                                   DecimalPlaces=0:5 }
    { 37  ;   ;Unit Volume         ;Decimal       ;CaptionML=[ENU=Unit Volume;
                                                              ENN=Unit Volume];
                                                   DecimalPlaces=0:5 }
    { 38  ;   ;Appl.-to Item Entry ;Integer       ;AccessByPermission=TableData 27=R;
                                                   CaptionML=[ENU=Appl.-to Item Entry;
                                                              ENN=Appl.-to Item Entry] }
    { 40  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              ENN=Shortcut Dimension 1 Code];
                                                   CaptionClass='1,2,1' }
    { 41  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              ENN=Shortcut Dimension 2 Code];
                                                   CaptionClass='1,2,2' }
    { 45  ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Job No.;
                                                              ENN=Job No.] }
    { 54  ;   ;Indirect Cost %     ;Decimal       ;CaptionML=[ENU=Indirect Cost %;
                                                              ENN=Indirect Cost %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 68  ;   ;Pay-to Vendor No.   ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Pay-to Vendor No.;
                                                              ENN=Pay-to Vendor No.];
                                                   Editable=No }
    { 69  ;   ;Inv. Discount Amount;Decimal       ;CaptionML=[ENU=Inv. Discount Amount;
                                                              ENN=Inv. Discount Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 70  ;   ;Vendor Item No.     ;Text20        ;CaptionML=[ENU=Vendor Item No.;
                                                              ENN=Vendor Item No.] }
    { 74  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              ENN=Gen. Bus. Posting Group] }
    { 75  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              ENN=Gen. Prod. Posting Group] }
    { 77  ;   ;VAT Calculation Type;Option        ;CaptionML=[ENU=VAT Calculation Type;
                                                              ENN=VAT Calculation Type];
                                                   OptionCaptionML=[ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                                    ENN=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax }
    { 78  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=[ENU=Transaction Type;
                                                              ENN=Transaction Type] }
    { 79  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=[ENU=Transport Method;
                                                              ENN=Transport Method] }
    { 80  ;   ;Attached to Line No.;Integer       ;TableRelation="Purch. Cr. Memo Line"."Line No." WHERE (Document No.=FIELD(Document No.));
                                                   CaptionML=[ENU=Attached to Line No.;
                                                              ENN=Attached to Line No.] }
    { 81  ;   ;Entry Point         ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=[ENU=Entry Point;
                                                              ENN=Entry Point] }
    { 82  ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=[ENU=Area;
                                                              ENN=Area] }
    { 83  ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=[ENU=Transaction Specification;
                                                              ENN=Transaction Specification] }
    { 85  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              ENN=Tax Area Code] }
    { 86  ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              ENN=Tax Liable] }
    { 87  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=[ENU=Tax Group Code;
                                                              ENN=Tax Group Code] }
    { 88  ;   ;Use Tax             ;Boolean       ;CaptionML=[ENU=Use Tax;
                                                              ENN=Use Tax] }
    { 89  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              ENN=VAT Bus. Posting Group] }
    { 90  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              ENN=VAT Prod. Posting Group] }
    { 97  ;   ;Blanket Order No.   ;Code20        ;TableRelation="Purchase Header".No. WHERE (Document Type=CONST(Blanket Order));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Blanket Order No.;
                                                              ENN=Blanket Order No.] }
    { 98  ;   ;Blanket Order Line No.;Integer     ;TableRelation="Purchase Line"."Line No." WHERE (Document Type=CONST(Blanket Order),
                                                                                                   Document No.=FIELD(Blanket Order No.));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Blanket Order Line No.;
                                                              ENN=Blanket Order Line No.] }
    { 99  ;   ;VAT Base Amount     ;Decimal       ;CaptionML=[ENU=VAT Base Amount;
                                                              ENN=VAT Base Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 100 ;   ;Unit Cost           ;Decimal       ;CaptionML=[ENU=Unit Cost;
                                                              ENN=Unit Cost];
                                                   Editable=No;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 101 ;   ;System-Created Entry;Boolean       ;CaptionML=[ENU=System-Created Entry;
                                                              ENN=System-Created Entry];
                                                   Editable=No }
    { 103 ;   ;Line Amount         ;Decimal       ;CaptionML=[ENU=Line Amount;
                                                              ENN=Line Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode;
                                                   CaptionClass=GetCaptionClass(FIELDNO("Line Amount")) }
    { 104 ;   ;VAT Difference      ;Decimal       ;CaptionML=[ENU=VAT Difference;
                                                              ENN=VAT Difference];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 106 ;   ;VAT Identifier      ;Code10        ;CaptionML=[ENU=VAT Identifier;
                                                              ENN=VAT Identifier];
                                                   Editable=No }
    { 107 ;   ;IC Partner Ref. Type;Option        ;CaptionML=[ENU=IC Partner Ref. Type;
                                                              ENN=IC Partner Ref. Type];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,,,Charge (Item),Cross reference,Common Item No.";
                                                                    ENN=" ,G/L Account,Item,,,Charge (Item),Cross reference,Common Item No."];
                                                   OptionString=[ ,G/L Account,Item,,,Charge (Item),Cross reference,Common Item No.] }
    { 108 ;   ;IC Partner Reference;Code20        ;CaptionML=[ENU=IC Partner Reference;
                                                              ENN=IC Partner Reference] }
    { 123 ;   ;Prepayment Line     ;Boolean       ;CaptionML=[ENU=Prepayment Line;
                                                              ENN=Prepayment Line];
                                                   Editable=No }
    { 130 ;   ;IC Partner Code     ;Code20        ;TableRelation="IC Partner";
                                                   CaptionML=[ENU=IC Partner Code;
                                                              ENN=IC Partner Code] }
    { 131 ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ENN=Posting Date] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              ENN=Dimension Set ID];
                                                   Editable=No }
    { 1001;   ;Job Task No.        ;Code20        ;TableRelation="Job Task"."Job Task No." WHERE (Job No.=FIELD(Job No.));
                                                   CaptionML=[ENU=Job Task No.;
                                                              ENN=Job Task No.] }
    { 1002;   ;Job Line Type       ;Option        ;CaptionML=[ENU=Job Line Type;
                                                              ENN=Job Line Type];
                                                   OptionCaptionML=[ENU=" ,Schedule,Contract,Both Schedule and Contract";
                                                                    ENN=" ,Schedule,Contract,Both Schedule and Contract"];
                                                   OptionString=[ ,Schedule,Contract,Both Schedule and Contract] }
    { 1003;   ;Job Unit Price      ;Decimal       ;CaptionML=[ENU=Job Unit Price;
                                                              ENN=Job Unit Price];
                                                   BlankZero=Yes }
    { 1004;   ;Job Total Price     ;Decimal       ;CaptionML=[ENU=Job Total Price;
                                                              ENN=Job Total Price];
                                                   BlankZero=Yes }
    { 1005;   ;Job Line Amount     ;Decimal       ;CaptionML=[ENU=Job Line Amount;
                                                              ENN=Job Line Amount];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Job Currency Code" }
    { 1006;   ;Job Line Discount Amount;Decimal   ;CaptionML=[ENU=Job Line Discount Amount;
                                                              ENN=Job Line Discount Amount];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Job Currency Code" }
    { 1007;   ;Job Line Discount % ;Decimal       ;CaptionML=[ENU=Job Line Discount %;
                                                              ENN=Job Line Discount %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   BlankZero=Yes }
    { 1008;   ;Job Unit Price (LCY);Decimal       ;CaptionML=[ENU=Job Unit Price (LCY);
                                                              ENN=Job Unit Price (LCY)];
                                                   BlankZero=Yes }
    { 1009;   ;Job Total Price (LCY);Decimal      ;CaptionML=[ENU=Job Total Price (LCY);
                                                              ENN=Job Total Price (LCY)];
                                                   BlankZero=Yes }
    { 1010;   ;Job Line Amount (LCY);Decimal      ;CaptionML=[ENU=Job Line Amount (LCY);
                                                              ENN=Job Line Amount (LCY)];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 1011;   ;Job Line Disc. Amount (LCY);Decimal;CaptionML=[ENU=Job Line Disc. Amount (LCY);
                                                              ENN=Job Line Disc. Amount (LCY)];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 1012;   ;Job Currency Factor ;Decimal       ;CaptionML=[ENU=Job Currency Factor;
                                                              ENN=Job Currency Factor];
                                                   BlankZero=Yes }
    { 1013;   ;Job Currency Code   ;Code20        ;CaptionML=[ENU=Job Currency Code;
                                                              ENN=Job Currency Code] }
    { 1700;   ;Deferral Code       ;Code10        ;TableRelation="Deferral Template"."Deferral Code";
                                                   CaptionML=[ENU=Deferral Code;
                                                              ENN=Deferral Code] }
    { 5401;   ;Prod. Order No.     ;Code20        ;CaptionML=[ENU=Prod. Order No.;
                                                              ENN=Prod. Order No.] }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              ENN=Variant Code] }
    { 5403;   ;Bin Code            ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Location Code),
                                                                                 Item Filter=FIELD(No.),
                                                                                 Variant Filter=FIELD(Variant Code));
                                                   CaptionML=[ENU=Bin Code;
                                                              ENN=Bin Code] }
    { 5404;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=[ENU=Qty. per Unit of Measure;
                                                              ENN=Qty. per Unit of Measure];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5407;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              ENN=Unit of Measure Code] }
    { 5415;   ;Quantity (Base)     ;Decimal       ;CaptionML=[ENU=Quantity (Base);
                                                              ENN=Quantity (Base)];
                                                   DecimalPlaces=0:5 }
    { 5600;   ;FA Posting Date     ;Date          ;CaptionML=[ENU=FA Posting Date;
                                                              ENN=FA Posting Date] }
    { 5601;   ;FA Posting Type     ;Option        ;CaptionML=[ENU=FA Posting Type;
                                                              ENN=FA Posting Type];
                                                   OptionCaptionML=[ENU=" ,Acquisition Cost,Maintenance";
                                                                    ENN=" ,Acquisition Cost,Maintenance"];
                                                   OptionString=[ ,Acquisition Cost,Maintenance] }
    { 5602;   ;Depreciation Book Code;Code10      ;TableRelation="Depreciation Book";
                                                   CaptionML=[ENU=Depreciation Book Code;
                                                              ENN=Depreciation Book Code] }
    { 5603;   ;Salvage Value       ;Decimal       ;CaptionML=[ENU=Salvage Value;
                                                              ENN=Salvage Value];
                                                   AutoFormatType=1 }
    { 5605;   ;Depr. until FA Posting Date;Boolean;CaptionML=[ENU=Depr. until FA Posting Date;
                                                              ENN=Depr. until FA Posting Date] }
    { 5606;   ;Depr. Acquisition Cost;Boolean     ;CaptionML=[ENU=Depr. Acquisition Cost;
                                                              ENN=Depr. Acquisition Cost] }
    { 5609;   ;Maintenance Code    ;Code10        ;TableRelation=Maintenance;
                                                   CaptionML=[ENU=Maintenance Code;
                                                              ENN=Maintenance Code] }
    { 5610;   ;Insurance No.       ;Code20        ;TableRelation=Insurance;
                                                   CaptionML=[ENU=Insurance No.;
                                                              ENN=Insurance No.] }
    { 5611;   ;Budgeted FA No.     ;Code20        ;TableRelation="Fixed Asset";
                                                   CaptionML=[ENU=Budgeted FA No.;
                                                              ENN=Budgeted FA No.] }
    { 5612;   ;Duplicate in Depreciation Book;Code10;
                                                   TableRelation="Depreciation Book";
                                                   CaptionML=[ENU=Duplicate in Depreciation Book;
                                                              ENN=Duplicate in Depreciation Book] }
    { 5613;   ;Use Duplication List;Boolean       ;CaptionML=[ENU=Use Duplication List;
                                                              ENN=Use Duplication List] }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=[ENU=Responsibility Center;
                                                              ENN=Responsibility Center] }
    { 5705;   ;Cross-Reference No. ;Code20        ;AccessByPermission=TableData 5717=R;
                                                   CaptionML=[ENU=Cross-Reference No.;
                                                              ENN=Cross-Reference No.] }
    { 5706;   ;Unit of Measure (Cross Ref.);Code10;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Unit of Measure (Cross Ref.);
                                                              ENN=Unit of Measure (Cross Ref.)] }
    { 5707;   ;Cross-Reference Type;Option        ;CaptionML=[ENU=Cross-Reference Type;
                                                              ENN=Cross-Reference Type];
                                                   OptionCaptionML=[ENU=" ,Customer,Vendor,Bar Code";
                                                                    ENN=" ,Customer,Vendor,Bar Code"];
                                                   OptionString=[ ,Customer,Vendor,Bar Code] }
    { 5708;   ;Cross-Reference Type No.;Code30    ;CaptionML=[ENU=Cross-Reference Type No.;
                                                              ENN=Cross-Reference Type No.] }
    { 5709;   ;Item Category Code  ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Category";
                                                   CaptionML=[ENU=Item Category Code;
                                                              ENN=Item Category Code] }
    { 5710;   ;Nonstock            ;Boolean       ;CaptionML=[ENU=Nonstock;
                                                              ENN=Nonstock] }
    { 5711;   ;Purchasing Code     ;Code10        ;TableRelation=Purchasing;
                                                   CaptionML=[ENU=Purchasing Code;
                                                              ENN=Purchasing Code] }
    { 5712;   ;Product Group Code  ;Code10        ;TableRelation="Product Group".Code WHERE (Item Category Code=FIELD(Item Category Code));
                                                   CaptionML=[ENU=Product Group Code;
                                                              ENN=Product Group Code] }
    { 6600;   ;Return Shipment No. ;Code20        ;CaptionML=[ENU=Return Shipment No.;
                                                              ENN=Return Shipment No.];
                                                   Editable=No }
    { 6601;   ;Return Shipment Line No.;Integer   ;CaptionML=[ENU=Return Shipment Line No.;
                                                              ENN=Return Shipment Line No.];
                                                   Editable=No }
    { 6608;   ;Return Reason Code  ;Code10        ;TableRelation="Return Reason";
                                                   CaptionML=[ENU=Return Reason Code;
                                                              ENN=Return Reason Code] }
    { 13701;  ;Tax %               ;Decimal       ;CaptionML=[ENU=Tax %;
                                                              ENN=Tax %];
                                                   MinValue=0;
                                                   Editable=No }
    { 13702;  ;Amount Including Tax;Decimal       ;CaptionML=[ENU=Amount Including Tax;
                                                              ENN=Amount Including Tax];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 13703;  ;Form Code           ;Code10        ;OnLookup=VAR
                                                              StateForm@1280000 : Record 13767;
                                                              StateForms@1280001 : Page 13702;
                                                            BEGIN
                                                            END;

                                                   CaptionML=[ENU=Form Code;
                                                              ENN=Form Code] }
    { 13704;  ;Form No.            ;Code10        ;TableRelation="Tax Forms Details"."Form No." WHERE (Form Code=FIELD(Form Code),
                                                                                                       Issued=CONST(No),
                                                                                                       State=FIELD(State));
                                                   CaptionML=[ENU=Form No.;
                                                              ENN=Form No.] }
    { 13705;  ;State               ;Code10        ;TableRelation=State;
                                                   CaptionML=[ENU=State;
                                                              ENN=State] }
    { 13711;  ;Tax Base Amount     ;Decimal       ;CaptionML=[ENU=Tax Base Amount;
                                                              ENN=Tax Base Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 13713;  ;Excise Bus. Posting Group;Code10   ;TableRelation="Excise Bus. Posting Group";
                                                   CaptionML=[ENU=Excise Bus. Posting Group;
                                                              ENN=Excise Bus. Posting Group];
                                                   Editable=No }
    { 13714;  ;Excise Prod. Posting Group;Code10  ;TableRelation="Excise Prod. Posting Group";
                                                   CaptionML=[ENU=Excise Prod. Posting Group;
                                                              ENN=Excise Prod. Posting Group];
                                                   Editable=No }
    { 13717;  ;Amount Including Excise;Decimal    ;CaptionML=[ENU=Amount Including Excise;
                                                              ENN=Amount Including Excise];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 13718;  ;Excise Amount       ;Decimal       ;CaptionML=[ENU=Excise Amount;
                                                              ENN=Excise Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 13719;  ;Excise Base Quantity;Decimal       ;CaptionML=[ENU=Excise Base Quantity;
                                                              ENN=Excise Base Quantity] }
    { 13722;  ;Tax Amount          ;Decimal       ;CaptionML=[ENU=Tax Amount;
                                                              ENN=Tax Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 13724;  ;Excise Accounting Type;Option      ;CaptionML=[ENU=Excise Accounting Type;
                                                              ENN=Excise Accounting Type];
                                                   OptionCaptionML=[ENU=With CENVAT,Without CENVAT;
                                                                    ENN=With CENVAT,Without CENVAT];
                                                   OptionString=With CENVAT,Without CENVAT }
    { 13738;  ;Excise Base Amount  ;Decimal       ;CaptionML=[ENU=Excise Base Amount;
                                                              ENN=Excise Base Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 13750;  ;Capital Item        ;Boolean       ;CaptionML=[ENU=Capital Item;
                                                              ENN=Capital Item];
                                                   Editable=No }
    { 13757;  ;BED Amount          ;Decimal       ;CaptionML=[ENU=BED Amount;
                                                              ENN=BED Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 13758;  ;AED(GSI) Amount     ;Decimal       ;CaptionML=[ENU=AED(GSI) Amount;
                                                              ENN=AED(GSI) Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 13759;  ;SED Amount          ;Decimal       ;CaptionML=[ENU=SED Amount;
                                                              ENN=SED Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 13769;  ;SAED Amount         ;Decimal       ;CaptionML=[ENU=SAED Amount;
                                                              ENN=SAED Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 13770;  ;CESS Amount         ;Decimal       ;CaptionML=[ENU=CESS Amount;
                                                              ENN=CESS Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 13771;  ;NCCD Amount         ;Decimal       ;CaptionML=[ENU=NCCD Amount;
                                                              ENN=NCCD Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 13772;  ;eCess Amount        ;Decimal       ;CaptionML=[ENU=eCess Amount;
                                                              ENN=eCess Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 16340;  ;Amount To Vendor    ;Decimal       ;CaptionML=[ENU=Amount To Vendor;
                                                              ENN=Amount To Vendor] }
    { 16342;  ;Charges To Vendor   ;Decimal       ;CaptionML=[ENU=Charges To Vendor;
                                                              ENN=Charges To Vendor];
                                                   Editable=No }
    { 16367;  ;SetOff Available    ;Boolean       ;CaptionML=[ENU=SetOff Available;
                                                              ENN=SetOff Available] }
    { 16383;  ;Vendor Shipment No. ;Code20        ;CaptionML=[ENU=Vendor Shipment No.;
                                                              ENN=Vendor Shipment No.] }
    { 16391;  ;Service Tax Group   ;Code20        ;TableRelation="Service Tax Groups".Code;
                                                   OnValidate=VAR
                                                                CompanyInfo@1280000 : Record 79;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Service Tax Group;
                                                              ENN=Service Tax Group] }
    { 16393;  ;Service Tax Base    ;Decimal       ;CaptionML=[ENU=Service Tax Base;
                                                              ENN=Service Tax Base] }
    { 16394;  ;Service Tax Amount  ;Decimal       ;CaptionML=[ENU=Service Tax Amount;
                                                              ENN=Service Tax Amount] }
    { 16395;  ;Service Tax Registration No.;Code20;TableRelation="Service Tax Registration Nos.".Code;
                                                   CaptionML=[ENU=Service Tax Registration No.;
                                                              ENN=Service Tax Registration No.] }
    { 16406;  ;Service Tax eCess Amount;Decimal   ;CaptionML=[ENU=Service Tax eCess Amount;
                                                              ENN=Service Tax eCess Amount] }
    { 16409;  ;RG Record Type      ;Option        ;CaptionML=[ENU=RG Record Type;
                                                              ENN=RG Record Type];
                                                   OptionCaptionML=[ENU=" ,RG23A,RG23C";
                                                                    ENN=" ,RG23A,RG23C"];
                                                   OptionString=[ ,RG23A,RG23C] }
    { 16410;  ;Excise as Service Tax Credit;Boolean;
                                                   CaptionML=[ENU=Excise as Service Tax Credit;
                                                              ENN=Excise as Service Tax Credit] }
    { 16411;  ;Service Tax as Excise Credit;Boolean;
                                                   CaptionML=[ENU=Service Tax as Excise Credit;
                                                              ENN=Service Tax as Excise Credit] }
    { 16452;  ;ADET Amount         ;Decimal       ;CaptionML=[ENU=ADET Amount;
                                                              ENN=ADET Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 16455;  ;AED(TTA) Amount     ;Decimal       ;CaptionML=[ENU=AED(TTA) Amount;
                                                              ENN=AED(TTA) Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 16459;  ;ADE Amount          ;Decimal       ;CaptionML=[ENU=ADE Amount;
                                                              ENN=ADE Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 16490;  ;Assessable Value    ;Decimal       ;CaptionML=[ENU=Assessable Value;
                                                              ENN=Assessable Value] }
    { 16491;  ;VAT Type            ;Option        ;CaptionML=[ENU=VAT Type;
                                                              ENN=VAT Type];
                                                   OptionCaptionML=[ENU=" ,Item,Capital Goods";
                                                                    ENN=" ,Item,Capital Goods"];
                                                   OptionString=[ ,Item,Capital Goods] }
    { 16494;  ;SHE Cess Amount     ;Decimal       ;CaptionML=[ENU=SHE Cess Amount;
                                                              ENN=SHE Cess Amount];
                                                   Editable=Yes;
                                                   AutoFormatType=1 }
    { 16496;  ;Service Tax SHE Cess Amount;Decimal;CaptionML=[ENU=Service Tax SHE Cess Amount;
                                                              ENN=Service Tax SHE Cess Amount] }
    { 16504;  ;Supplementary       ;Boolean       ;CaptionML=[ENU=Supplementary;
                                                              ENN=Supplementary] }
    { 16505;  ;Source Document Type;Option        ;CaptionML=[ENU=Source Document Type;
                                                              ENN=Source Document Type];
                                                   OptionCaptionML=[ENU=Posted Invoice,Posted Credit Memo;
                                                                    ENN=Posted Invoice,Posted Credit Memo];
                                                   OptionString=Posted Invoice,Posted Credit Memo }
    { 16506;  ;Source Document No. ;Code20        ;TableRelation=IF (Source Document Type=FILTER(Posted Invoice)) "Purch. Inv. Header".No.
                                                                 ELSE IF (Source Document Type=FILTER(Posted Credit Memo)) "Purch. Cr. Memo Hdr.".No.;
                                                   CaptionML=[ENU=Source Document No.;
                                                              ENN=Source Document No.] }
    { 16509;  ;ADC VAT Amount      ;Decimal       ;CaptionML=[ENU=ADC VAT Amount;
                                                              ENN=ADC VAT Amount];
                                                   Editable=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 16510;  ;CIF Amount          ;Decimal       ;CaptionML=[ENU=CIF Amount;
                                                              ENN=CIF Amount] }
    { 16511;  ;BCD Amount          ;Decimal       ;CaptionML=[ENU=BCD Amount;
                                                              ENN=BCD Amount] }
    { 16512;  ;CVD                 ;Boolean       ;CaptionML=[ENU=CVD;
                                                              ENN=CVD] }
    { 16513;  ;Notification Sl. No.;Code20        ;CaptionML=[ENU=Notification Sl. No.;
                                                              ENN=Notification Sl. No.] }
    { 16514;  ;Notification No.    ;Code20        ;CaptionML=[ENU=Notification No.;
                                                              ENN=Notification No.] }
    { 16515;  ;CTSH No.            ;Code10        ;CaptionML=[ENU=CTSH No.;
                                                              ENN=CTSH No.] }
    { 16516;  ;Ret. Shipment No.   ;Code20        ;CaptionML=[ENU=Ret. Shipment No.;
                                                              ENN=Ret. Shipment No.];
                                                   Editable=No }
    { 16517;  ;Ret. Shipment Line No.;Integer     ;CaptionML=[ENU=Ret. Shipment Line No.;
                                                              ENN=Ret. Shipment Line No.];
                                                   Editable=No }
    { 16522;  ;Excise Loading on Inventory;Boolean;CaptionML=[ENU=Excise Loading on Inventory;
                                                              ENN=Excise Loading on Inventory] }
    { 16523;  ;Custom eCess Amount ;Decimal       ;CaptionML=[ENU=Custom eCess Amount;
                                                              ENN=Custom eCess Amount] }
    { 16524;  ;Custom SHECess Amount;Decimal      ;CaptionML=[ENU=Custom SHECess Amount;
                                                              ENN=Custom SHECess Amount] }
    { 16527;  ;Excise Refund       ;Boolean       ;CaptionML=[ENU=Excise Refund;
                                                              ENN=Excise Refund] }
    { 16528;  ;CWIP G/L Type       ;Option        ;CaptionML=[ENU=CWIP G/L Type;
                                                              ENN=CWIP G/L Type];
                                                   OptionCaptionML=[ENU=" ,Labor,Material,Overheads";
                                                                    ENN=" ,Labor,Material,Overheads"];
                                                   OptionString=[ ,Labor,Material,Overheads] }
    { 16539;  ;Service Tax SBC %   ;Decimal       ;CaptionML=[ENU=Service Tax SBC %;
                                                              ENN=Service Tax SBC %];
                                                   Editable=No }
    { 16540;  ;Service Tax SBC Amount;Decimal     ;CaptionML=[ENU=Service Tax SBC Amount(LCY);
                                                              ENN=Service Tax SBC Amount(LCY)];
                                                   Editable=No }
    { 16541;  ;Service Tax SBC Amount (Intm);Decimal;
                                                   CaptionML=[ENU=Service Tax SBC Amount(Intm);
                                                              ENN=Service Tax SBC Amount(Intm)];
                                                   Editable=No }
    { 16542;  ;KK Cess%            ;Decimal       ;CaptionML=[ENU=KK Cess%;
                                                              ENN=KK Cess%];
                                                   Editable=No }
    { 16543;  ;KK Cess Amount      ;Decimal       ;CaptionML=[ENU=KK Cess Amount;
                                                              ENN=KK Cess Amount];
                                                   Editable=No }
    { 16600;  ;GST Credit          ;Option        ;CaptionML=[ENU=GST Credit;
                                                              ENN=GST Credit];
                                                   OptionCaptionML=[ENU=Availment,Non-Availment;
                                                                    ENN=Availment,Non-Availment];
                                                   OptionString=Availment,Non-Availment }
    { 16601;  ;GST Group Code      ;Code20        ;TableRelation="GST Group";
                                                   CaptionML=[ENU=GST Group Code;
                                                              ENN=GST Group Code] }
    { 16602;  ;GST Group Type      ;Option        ;CaptionML=[ENU=GST Group Type;
                                                              ENN=GST Group Type];
                                                   OptionCaptionML=[ENU=Goods,Service;
                                                                    ENN=Goods,Service];
                                                   OptionString=Goods,Service;
                                                   Editable=No }
    { 16603;  ;HSN/SAC Code        ;Code8         ;TableRelation=HSN/SAC.Code WHERE (GST Group Code=FIELD(GST Group Code));
                                                   CaptionML=[ENU=HSN/SAC Code;
                                                              ENN=HSN/SAC Code] }
    { 16604;  ;GST Base Amount     ;Decimal       ;CaptionML=[ENU=GST Base Amount;
                                                              ENN=GST Base Amount];
                                                   Editable=No }
    { 16605;  ;GST %               ;Decimal       ;CaptionML=[ENU=GST %;
                                                              ENN=GST %];
                                                   Editable=No }
    { 16606;  ;Total GST Amount    ;Decimal       ;CaptionML=[ENU=Total GST Amount;
                                                              ENN=Total GST Amount];
                                                   Editable=No }
    { 16608;  ;Exempted            ;Boolean       ;CaptionML=[ENU=Exempted;
                                                              ENN=Exempted];
                                                   Editable=No }
    { 16609;  ;GST Jurisdiction Type;Option       ;CaptionML=[ENU=GST Jurisdiction Type;
                                                              ENN=GST Jurisdiction Type];
                                                   OptionCaptionML=[ENU=Intrastate,Interstate;
                                                                    ENN=Intrastate,Interstate];
                                                   OptionString=Intrastate,Interstate;
                                                   Editable=No }
    { 16611;  ;Custom Duty Amount  ;Decimal       ;CaptionML=[ENU=Custom Duty Amount;
                                                              ENN=Custom Duty Amount];
                                                   Editable=No }
    { 16612;  ;GST Reverse Charge  ;Boolean       ;CaptionML=[ENU=GST Reverse Charge;
                                                              ENN=GST Reverse Charge];
                                                   Editable=No }
    { 16613;  ;GST Assessable Value;Decimal       ;OnValidate=VAR
                                                                Vendor@1170000000 : Record 23;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=GST Assessable Value;
                                                              ENN=GST Assessable Value] }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;SumIndexFields=Amount,Amount Including VAT,Amount To Vendor;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Blanket Order No.,Blanket Order Line No. }
    {    ;Buy-from Vendor No.                      }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DimMgt@1001 : Codeunit 408;
      DeferralUtilities@1000 : Codeunit 1720;

    PROCEDURE GetCurrencyCode@1() : Code[10];
    VAR
      PurchCrMemoHeader@1000 : Record 124;
    BEGIN
      IF "Document No." = PurchCrMemoHeader."No." THEN
        EXIT(PurchCrMemoHeader."Currency Code");
      IF PurchCrMemoHeader.GET("Document No.") THEN
        EXIT(PurchCrMemoHeader."Currency Code");
      EXIT('');
    END;

    PROCEDURE ShowDimensions@25();
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2 %3',TABLECAPTION,"Document No.","Line No."));
    END;

    PROCEDURE ShowItemTrackingLines@3();
    VAR
      ItemTrackingDocMgt@1000 : Codeunit 6503;
    BEGIN
      ItemTrackingDocMgt.ShowItemTrackingForInvoiceLine(RowID1);
    END;

    PROCEDURE CalcVATAmountLines@2(VAR PurchCrMemoHeader@1000 : Record 124;VAR VATAmountLine@1001 : Record 290);
    BEGIN
      VATAmountLine.DELETEALL;
      SETRANGE("Document No.",PurchCrMemoHeader."No.");
      IF FIND('-') THEN
        REPEAT
          VATAmountLine.INIT;
          VATAmountLine."VAT Identifier" := "VAT Identifier";
          VATAmountLine."VAT Calculation Type" := "VAT Calculation Type";
          VATAmountLine."Tax Group Code" := "Tax Group Code";
          VATAmountLine."Use Tax" := "Use Tax";
          VATAmountLine."VAT %" := "VAT %";
          VATAmountLine."VAT Base" := Amount;
          VATAmountLine."VAT Amount" := "Amount Including VAT" - Amount;
          VATAmountLine."Amount Including VAT" := "Amount Including VAT";
          VATAmountLine."Line Amount" := "Line Amount";
          IF "Allow Invoice Disc." THEN
            VATAmountLine."Inv. Disc. Base Amount" := "Line Amount";
          VATAmountLine."Invoice Discount Amount" := "Inv. Discount Amount";
          VATAmountLine.Quantity := "Quantity (Base)";
          VATAmountLine."Calculated VAT Amount" := "Amount Including VAT" - Amount - "VAT Difference";
          VATAmountLine."VAT Difference" := "VAT Difference";
          VATAmountLine.InsertLine;
        UNTIL NEXT = 0;
    END;

    LOCAL PROCEDURE GetFieldCaption@31(FieldNumber@1000 : Integer) : Text[100];
    VAR
      Field@1001 : Record 2000000041;
    BEGIN
      Field.GET(DATABASE::"Purch. Cr. Memo Line",FieldNumber);
      EXIT(Field."Field Caption");
    END;

    LOCAL PROCEDURE GetCaptionClass@34(FieldNumber@1000 : Integer) : Text[80];
    VAR
      PurchCrMemoHeader@1001 : Record 124;
    BEGIN
      IF NOT PurchCrMemoHeader.GET("Document No.") THEN
        PurchCrMemoHeader.INIT;
      IF PurchCrMemoHeader."Prices Including VAT" THEN
        EXIT('2,1,' + GetFieldCaption(FieldNumber));

      EXIT('2,0,' + GetFieldCaption(FieldNumber));
    END;

    PROCEDURE RowID1@44() : Text[250];
    VAR
      ItemTrackingMgt@1000 : Codeunit 6500;
    BEGIN
      EXIT(ItemTrackingMgt.ComposeRowID(DATABASE::"Purch. Cr. Memo Line",
          0,"Document No.",'',0,"Line No."));
    END;

    LOCAL PROCEDURE GetReturnShptLines@4(VAR TempReturnShptLine@1000 : TEMPORARY Record 6651);
    VAR
      ReturnShptLine@1003 : Record 6651;
      ItemLedgEntry@1002 : Record 32;
      ValueEntry@1001 : Record 5802;
    BEGIN
      TempReturnShptLine.RESET;
      TempReturnShptLine.DELETEALL;

      IF Type <> Type::Item THEN
        EXIT;

      FilterPstdDocLineValueEntries(ValueEntry);
      ValueEntry.SETFILTER("Invoiced Quantity",'<>0');
      IF ValueEntry.FINDSET THEN
        REPEAT
          ItemLedgEntry.GET(ValueEntry."Item Ledger Entry No.");
          IF ItemLedgEntry."Document Type" = ItemLedgEntry."Document Type"::"Purchase Return Shipment" THEN
            IF ReturnShptLine.GET(ItemLedgEntry."Document No.",ItemLedgEntry."Document Line No.") THEN BEGIN
              TempReturnShptLine.INIT;
              TempReturnShptLine := ReturnShptLine;
              IF TempReturnShptLine.INSERT THEN;
            END;
        UNTIL ValueEntry.NEXT = 0;
    END;

    PROCEDURE GetItemLedgEntries@6(VAR TempItemLedgEntry@1000 : Record 32;SetQuantity@1003 : Boolean);
    VAR
      ItemLedgEntry@1002 : Record 32;
      ValueEntry@1001 : Record 5802;
    BEGIN
      IF SetQuantity THEN BEGIN
        TempItemLedgEntry.RESET;
        TempItemLedgEntry.DELETEALL;

        IF Type <> Type::Item THEN
          EXIT;
      END;

      FilterPstdDocLineValueEntries(ValueEntry);
      ValueEntry.SETFILTER("Invoiced Quantity",'<>0');
      IF ValueEntry.FINDSET THEN
        REPEAT
          ItemLedgEntry.GET(ValueEntry."Item Ledger Entry No.");
          TempItemLedgEntry := ItemLedgEntry;
          IF SetQuantity THEN BEGIN
            TempItemLedgEntry.Quantity := ValueEntry."Invoiced Quantity";
            IF ABS(TempItemLedgEntry."Remaining Quantity") > ABS(TempItemLedgEntry.Quantity) THEN
              TempItemLedgEntry."Remaining Quantity" := ABS(TempItemLedgEntry.Quantity);
          END;
          IF TempItemLedgEntry.INSERT THEN;
        UNTIL ValueEntry.NEXT = 0;
    END;

    LOCAL PROCEDURE FilterPstdDocLineValueEntries@7(VAR ValueEntry@1000 : Record 5802);
    BEGIN
      ValueEntry.RESET;
      ValueEntry.SETCURRENTKEY("Document No.");
      ValueEntry.SETRANGE("Document No.","Document No.");
      ValueEntry.SETRANGE("Document Type",ValueEntry."Document Type"::"Purchase Credit Memo");
      ValueEntry.SETRANGE("Document Line No.","Line No.");
    END;

    LOCAL PROCEDURE ShowItemLedgEntries@10();
    VAR
      TempItemLedgEntry@1000 : TEMPORARY Record 32;
    BEGIN
      IF Type = Type::Item THEN BEGIN
        GetItemLedgEntries(TempItemLedgEntry,FALSE);
        PAGE.RUNMODAL(0,TempItemLedgEntry);
      END;
    END;

    PROCEDURE ShowItemReturnShptLines@9();
    VAR
      TempReturnShptLine@1000 : TEMPORARY Record 6651;
    BEGIN
      IF Type = Type::Item THEN BEGIN
        GetReturnShptLines(TempReturnShptLine);
        PAGE.RUNMODAL(0,TempReturnShptLine);
      END;
    END;

    PROCEDURE ShowLineComments@5();
    VAR
      PurchDocLineComments@1000 : Record 43;
      PurchDocCommentSheet@1001 : Page 66;
    BEGIN
      PurchDocLineComments.SETRANGE("Document Type",PurchDocLineComments."Document Type"::"Posted Credit Memo");
      PurchDocLineComments.SETRANGE("No.","Document No.");
      PurchDocLineComments.SETRANGE("Document Line No.","Line No.");
      PurchDocCommentSheet.SETTABLEVIEW(PurchDocLineComments);
      PurchDocCommentSheet.RUNMODAL;
    END;

    PROCEDURE InitFromPurchLine@8(PurchCrMemoHdr@1001 : Record 124;PurchLine@1002 : Record 39);
    BEGIN
      INIT;
      TRANSFERFIELDS(PurchLine);
      IF ("No." = '') AND (Type IN [Type::"G/L Account"..Type::"Charge (Item)"]) THEN
        Type := Type::" ";
      "Posting Date" := PurchCrMemoHdr."Posting Date";
      "Document No." := PurchCrMemoHdr."No.";
      Quantity := PurchLine."Qty. to Invoice";
      "Quantity (Base)" := PurchLine."Qty. to Invoice (Base)";
    END;

    PROCEDURE ShowDeferrals@13();
    BEGIN
      DeferralUtilities.OpenLineScheduleView(
        "Deferral Code",DeferralUtilities.GetPurchDeferralDocType,'','',
        GetDocumentType,"Document No.","Line No.");
    END;

    PROCEDURE GetDocumentType@14() : Integer;
    VAR
      PurchCommentLine@1000 : Record 43;
    BEGIN
      EXIT(PurchCommentLine."Document Type"::"Posted Credit Memo");
    END;

    BEGIN
    END.
  }
}

