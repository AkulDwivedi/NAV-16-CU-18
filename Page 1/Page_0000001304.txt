OBJECT Page 1304 Mini Sales Invoice
{
  OBJECT-PROPERTIES
  {
    Date=24-04-16;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.45778,NAVIN9.00.00.45778;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Invoice;
               ENN=Sales Invoice];
    SourceTable=Table36;
    SourceTableView=WHERE(Document Type=FILTER(Invoice));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Invoice,Posting,View;
                                ENN=New,Process,Report,Invoice,Posting,View];
    OnInit=BEGIN
             ShowDetailsTab := FALSE;
             ReturnOrderNoEnable := TRUE;
             ReturnOrderNoVisible := TRUE;
           END;

    OnOpenPage=BEGIN
                 ShowBillToShipToTab := ("Sell-to Customer No." <> "Bill-to Customer No.") OR ("Sell-to Address" <> "Ship-to Address");
                 IF UserSetupManagement.GetSalesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserSetupManagement.GetSalesFilter);
                   FILTERGROUP(0);
                 END;
                 DocumentIsPosted := FALSE;

                 IF OfficeHost.IsAvailable THEN BEGIN
                   OfficeHost := OfficeHost.Create;
                   IF OfficeHost.HostType = 'Outlook-ItemEdit' THEN
                     OutlookComposeFormAvailable := TRUE;
                   IF OfficeHost.HostType = 'Outlook-ItemRead' THEN
                     OutlookReadFormAvailable := TRUE;
                 END;
               END;

    OnNextRecord=VAR
                   Outcome@1001 : Integer;
                 BEGIN
                   Outcome := NEXT(Steps);
                   IF Outcome <> 0 THEN
                     ShowBillToShipToTab := ("Sell-to Customer No." <> "Bill-to Customer No.") OR ("Sell-to Address" <> "Ship-to Address");

                   EXIT(Outcome);
                 END;

    OnAfterGetRecord=BEGIN
                       CustomerSelected := "Sell-to Customer No." <> '';
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserSetupManagement.GetSalesFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnQueryClosePage=BEGIN
                       IF NOT DocumentIsPosted THEN
                         EXIT(CONFIRM(ClosePageQst))
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 57      ;1   ;ActionGroup;
                      Name=Invoice;
                      CaptionML=[ENU=&Invoice;
                                 ENN=&Invoice];
                      Image=Invoice }
      { 60      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Customer;
                                 ENN=Customer];
                      ToolTipML=[ENU=View or edit detailed information about the customer.;
                                 ENN=View or edit detailed information about the customer.];
                      RunObject=Page 1300;
                      RunPageLink=No.=FIELD(Sell-to Customer No.);
                      Promoted=Yes;
                      Enabled=CustomerSelected;
                      PromotedIsBig=Yes;
                      Image=Customer;
                      PromotedCategory=Category4 }
      { 2       ;2   ;Action    ;
                      Name=CreatePurchaseInvoice;
                      CaptionML=[ENU=Create Purchase Invoice;
                                 ENN=Create Purchase Invoice];
                      Promoted=No;
                      PromotedIsBig=Yes;
                      Image=NewInvoice;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 SelectedSalesLine@1001 : Record 37;
                                 PurchInvFromSalesInvoice@1000 : Codeunit 1314;
                               BEGIN
                                 CurrPage.SalesLines.PAGE.SETSELECTIONFILTER(SelectedSalesLine);
                                 PurchInvFromSalesInvoice.CreatePurchaseInvoice(Rec,SelectedSalesLine);
                               END;
                                }
      { 134     ;2   ;Action    ;
                      Name=GetRecurringSalesLines;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Recurring Sales Lines;
                                 ENN=Get Recurring Sales Lines];
                      ToolTipML=[ENU=Insert sales document lines that you have set up for the customer as recurring. Recurring sales lines could be for a monthly replenishment order or a fixed freight expense.;
                                 ENN=Insert sales document lines that you have set up for the customer as recurring. Recurring sales lines could be for a monthly replenishment order or a fixed freight expense.];
                      PromotedIsBig=Yes;
                      Image=CustomerCode;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 StdCustSalesCode@1000 : Record 172;
                               BEGIN
                                 TESTFIELD("No.");
                                 TESTFIELD("Sell-to Customer No.");

                                 StdCustSalesCode.FILTERGROUP := 2;
                                 StdCustSalesCode.SETRANGE("Customer No.","Sell-to Customer No.");
                                 StdCustSalesCode.FILTERGROUP := 0;

                                 IF PAGE.RUNMODAL(PAGE::"Mini Std Customer Sales Codes",StdCustSalesCode) = ACTION::LookupOK THEN
                                   StdCustSalesCode.ApplyStdCodesToSalesLines(Rec,StdCustSalesCode);
                               END;
                                }
      { 64      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 ENN=Copy Document];
                      ToolTipML=[ENU=Copy document lines and header information from another sales document to this document. You can copy a posted sales invoice into a new sales invoice to quickly create a similar document.;
                                 ENN=Copy document lines and header information from another sales document to this document. You can copy a posted sales invoice into a new sales invoice to quickly create a similar document.];
                      PromotedIsBig=Yes;
                      Image=CopyDocument;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 CopySalesDoc.SetSalesHeader(Rec);
                                 CopySalesDoc.RUNMODAL;
                                 CLEAR(CopySalesDoc);
                               END;
                                }
      { 23      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENN=Dimensions];
                      ToolTipML=[ENU=View or edit the dimension sets that are set up for the customer on the sales document.;
                                 ENN=View or edit the dimension sets that are set up for the customer on the sales document.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 69      ;1   ;ActionGroup;
                      Name=Posting;
                      CaptionML=[ENU=P&osting;
                                 ENN=P&osting];
                      Image=Post }
      { 71      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 ENN=P&ost];
                      ToolTipML=[ENU=Finalize the sales document. Posting updates your books with the document's amounts and quantities.;
                                 ENN=Finalize the sales document. Posting updates your books with the document's amounts and quantities.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post (Yes/No)");
                               END;
                                }
      { 14      ;2   ;Action    ;
                      Name=PostAndSend;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post and &Send;
                                 ENN=Post and &Send];
                      ToolTipML=[ENU=Finalize and send the sales document.;
                                 ENN=Finalize and send the sales document.];
                      Promoted=Yes;
                      Visible=NOT (OutlookReadFormAvailable OR OutlookComposeFormAvailable);
                      PromotedIsBig=Yes;
                      Image=PostSendTo;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 DocumentIsPosted := TRUE;
                                 SendToPosting(CODEUNIT::"Sales-Post and Send");
                                 DocumentIsPosted := TRUE;
                               END;
                                }
      { 1001    ;2   ;Action    ;
                      Name=Printer;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 ENN=&Print];
                      ToolTipML=[ENU=Finalize and print the sales document.;
                                 ENN=Finalize and print the sales document.];
                      PromotedIsBig=Yes;
                      Image=Print;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 PostAndPrint(CODEUNIT::"Sales-Post");
                               END;
                                }
      { 1002    ;2   ;Action    ;
                      Name=Email as PDF;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Email;
                                 ENN=&Email];
                      ToolTipML=[ENU=Finalize and attach the sales document to an email to the customer.;
                                 ENN=Finalize and attach the sales document to an email to the customer.];
                      Visible=NOT (OutlookReadFormAvailable OR OutlookComposeFormAvailable);
                      PromotedIsBig=Yes;
                      Image=Email;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post + Email");
                               END;
                                }
      { 35      ;2   ;Action    ;
                      Name=PostAndAttach;
                      CaptionML=[ENU=Post and Attach;
                                 ENN=Post and Attach];
                      Promoted=Yes;
                      Visible=OutlookReadFormAvailable OR OutlookComposeFormAvailable;
                      PromotedIsBig=Yes;
                      Image=Email;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TempBlob@1000 : Record 99008535;
                                 SalesInvoiceHeader@1001 : Record 112;
                                 ReportDistributionManagement@1002 : Codeunit 452;
                                 PreAssignedNo@1003 : Code[20];
                               BEGIN
                                 MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);
                                 PreAssignedNo := "No.";
                                 SendToPosting(CODEUNIT::"Sales-Post (Yes/No)");

                                 IF SalesInvoiceHeader.GET(PreAssignedNo) THEN BEGIN
                                   SalesInvoiceHeader.SETRECFILTER;
                                   COMMIT;
                                 END;

                                 ReportDistributionManagement.GetReportPDFAsBlob(SalesInvoiceHeader,TempBlob);

                                 IF OutlookReadFormAvailable THEN
                                   OfficeHost.InvokeExtensionAsync('replyWithAttachment',TempBlob.Blob,'Invoice.pdf');
                                 IF OutlookComposeFormAvailable THEN
                                   OfficeHost.InvokeExtensionAsync('AddAttachmentRest',TempBlob.Blob,'Invoice.pdf');
                               END;
                                }
      { 17      ;2   ;Action    ;
                      CaptionML=[ENU=Preview Posting;
                                 ENN=Preview Posting];
                      Image=ViewPostedOrder;
                      OnAction=BEGIN
                                 ShowPreview;
                               END;
                                }
      { 3       ;1   ;ActionGroup;
                      Name=View;
                      CaptionML=[ENU=View;
                                 ENN=View] }
      { 4       ;2   ;Action    ;
                      Name=Bill-to and Ship-to Address;
                      CaptionML=[ENU=Ship-to and Bill-to Address;
                                 ENN=Ship-to and Bill-to Address];
                      ToolTipML=[ENU=Show fields for the customer's shipping and billing addresses. You can specify a different address where the item or service is delivered or specify a different address where the document is sent.;
                                 ENN=Show fields for the customer's shipping and billing addresses. You can specify a different address where the item or service is delivered or specify a different address where the document is sent.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShipAddress;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowBillToShipToTab := NOT ShowBillToShipToTab;
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=InvoiceDetails;
                      CaptionML=[ENU=Invoice Details;
                                 ENN=Invoice Details];
                      ToolTipML=[ENU=Show fields for invoice details, such as currency, shipment date, and payment terms. You can specify a currency that is different than your local currency for amounts on this sales document.;
                                 ENN=Show fields for invoice details, such as currency, shipment date, and payment terms. You can specify a currency that is different than your local currency for amounts on this sales document.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=TaxDetail;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowDetailsTab := NOT ShowDetailsTab;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=SalesInvoice;
                CaptionML=[ENU=Sales Invoice;
                           ENN=Sales Invoice];
                GroupType=Group }

    { 13  ;2   ;Group     ;
                GroupType=Group }

    { 6   ;3   ;Field     ;
                CaptionML=[ENU=Customer Name;
                           ENN=Customer Name];
                ToolTipML=ENU=Specifies the name of the customer who will receive the products and be billed by default. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.;
                NotBlank=Yes;
                SourceExpr="Sell-to Customer Name";
                OnValidate=BEGIN
                             IF MiniCustomerMgt.ValidateSellToCustomer(Rec,xRec) THEN
                               CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           IF MiniCustomerMgt.LookupSellToCustomer(Rec,xRec) THEN
                             CurrPage.UPDATE;
                         END;

                ShowMandatory=TRUE }

    { 75  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENN=Address];
                ToolTipML=ENU=Specifies the address where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.;
                SourceExpr="Sell-to Address" }

    { 11  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENN=Address 2];
                ToolTipML=ENU=Specifies an additional part of the address where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.;
                SourceExpr="Sell-to Address 2" }

    { 80  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENN=Post Code];
                ToolTipML=ENU=Specifies the post code where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.;
                SourceExpr="Sell-to Post Code" }

    { 79  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENN=City];
                ToolTipML=ENU=Specifies the name of the city where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.;
                SourceExpr="Sell-to City" }

    { 15  ;2   ;Group     ;
                GroupType=Group }

    { 8   ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENN=Contact];
                ToolTipML=ENU=Specifies the name of the person to contact at the customer. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.;
                SourceExpr="Sell-to Contact" }

    { 43  ;3   ;Field     ;
                ToolTipML=ENU=Specifies the date on which you create the sales document. The date will appear on the printed sales document. By default, today's date is entered.;
                SourceExpr="Document Date" }

    { 12  ;3   ;Field     ;
                ToolTipML=ENU=Specifies the date when the posting of the sales document will be recorded. By default, today's date is entered.;
                SourceExpr="Posting Date";
                Importance=Promoted }

    { 28  ;3   ;Field     ;
                ToolTipML=ENU=Specifies when the sales invoice must be paid. By default, the field is calculated as the date in the Shipment Date field plus the period defined in the Payment Terms Code field.;
                SourceExpr="Due Date";
                Importance=Promoted }

    { 7   ;1   ;Group     ;
                Name=InvoiceDetails;
                CaptionML=[ENU=Invoice Details;
                           ENN=Invoice Details];
                Visible=ShowDetailsTab;
                GroupType=Group }

    { 107 ;2   ;Field     ;
                ToolTipML=ENU=Specifies the currency of amounts on the sales document. By default, the field is filled with the value in the Currency Code field on the customer card.;
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 33  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date you expect to ship items on the sales document. By default, today's date is entered.;
                SourceExpr="Shipment Date" }

    { 112 ;2   ;Field     ;
                ToolTipML=ENU=Specifies whether the document is open, waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.;
                SourceExpr=Status;
                Importance=Promoted;
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the sales quote that the sales order was created from. You can track the number to sales quote documents that you have printed, saved, or emailed.;
                SourceExpr="Quote No." }

    { 121 ;2   ;Field     ;
                ToolTipML=ENU=Specifies whether the unit price on the line should be displayed including or excluding VAT.;
                SourceExpr="Prices Including VAT";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             CALCFIELDS("Invoice Discount Amount");
                             MiniSalesCalcDiscByType.ApplyDefaultInvoiceDiscount("Invoice Discount Amount",Rec);
                           END;
                            }

    { 156 ;2   ;Field     ;
                ToolTipML=ENU=Specifies the customer's VAT specification to link transactions made for this customer with the appropriate general ledger account according to the VAT posting setup.;
                SourceExpr="VAT Bus. Posting Group";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             MiniSalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 26  ;2   ;Field     ;
                ToolTipML=ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the sales document. By default, the payment term from the customer card is entered.;
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 101 ;2   ;Field     ;
                ToolTipML=ENU=Specifies how payment for the sales document must be submitted, such as bank transfer or check. By default, the payment method from the customer card is entered.;
                SourceExpr="Payment Method Code" }

    { 10  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number for the transaction type, for the purpose of reporting to INTRASTAT.;
                SourceExpr="Transaction Type" }

    { 1905885101;1;Group  ;
                Name=BilltoandShiptoAddresses;
                CaptionML=[ENU=Ship-to and Bill-to Addresses;
                           ENN=Ship-to and Bill-to Addresses];
                Visible=ShowBillToShipToTab;
                GroupType=Group }

    { 34  ;2   ;Group     ;
                Name=Shiptoaddress;
                CaptionML=[ENU=Ship-to Address;
                           ENN=Ship-to Address];
                GroupType=Group }

    { 31  ;3   ;Field     ;
                CaptionML=[ENU=Address Code;
                           ENN=Address Code];
                ToolTipML=ENU=Specifies the code for another shipment address than the customer's own address, which is entered by default. To ship products on the sales document to another address, choose the button in the Ship-to Code field and select a code that represents a ship-to address.;
                SourceExpr="Ship-to Code";
                Importance=Promoted }

    { 30  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           ENN=Name];
                ToolTipML=ENU=Specifies the name that products on the sales document will be shipped to. By default, the field is filled with the value in the Name field on the customer card or with the value in the Name field in the Ship-to Address window.;
                SourceExpr="Ship-to Name" }

    { 29  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENN=Address];
                ToolTipML=ENU=Specifies the address that products on the sales document will be shipped to. By default, the field is filled with the value in the Address field on the customer card or with the value in the Address field in the Ship-to Address window.;
                SourceExpr="Ship-to Address" }

    { 27  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENN=Address 2];
                ToolTipML=ENU=Specifies the second part of the address that products on the sales document will be shipped to. By default, the field is filled with the value in the Address 2 field on the customer card or with the value in the Address 2 field in the Ship-to Address window.;
                SourceExpr="Ship-to Address 2" }

    { 25  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENN=Post Code];
                ToolTipML=ENU=Specifies the post code of the customer's shipping address.;
                SourceExpr="Ship-to Post Code" }

    { 21  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENN=City];
                ToolTipML=ENU=Specifies the city name of the address that products on the sales document will be shipped to. By default, the field is filled with the value in the City field on the customer card or with the value in the City field in the Ship-to Address window.;
                SourceExpr="Ship-to City" }

    { 20  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENN=Contact];
                ToolTipML=ENU=Specifies the name of the contact person at the address that products on the sales document will be shipped to. By default, the field is filled with the value in the Primary Contact No. field on the customer card.;
                SourceExpr="Ship-to Contact" }

    { 19  ;2   ;Group     ;
                Name=BilltoCustomer;
                CaptionML=[ENU=Bill-to Customer;
                           ENN=Bill-to Customer];
                GroupType=Group }

    { 16  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           ENN=Name];
                ToolTipML=ENU=Specifies the customer to whom you will send the sales invoice, when different from the customer that you are selling to. By default, the name and address of the customer that you are selling to is entered.;
                SourceExpr="Bill-to Name";
                OnValidate=BEGIN
                             IF MiniCustomerMgt.ValidateBillToCustomer(Rec,xRec) THEN
                               CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           IF MiniCustomerMgt.LookupBillToCustomer(Rec,xRec) THEN
                             CurrPage.UPDATE;
                         END;
                          }

    { 18  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENN=Address];
                ToolTipML=ENU=Specifies the address of the customer that you will send the invoice to.;
                SourceExpr="Bill-to Address" }

    { 9   ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENN=Address 2];
                ToolTipML=ENU=Contains another line of the address of the customer that you will send the invoice to.;
                SourceExpr="Bill-to Address 2" }

    { 85  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENN=Post Code];
                ToolTipML=ENU=Specifies the post code of the customer's billing address.;
                SourceExpr="Bill-to Post Code" }

    { 22  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENN=City];
                ToolTipML=ENU=Specifies the city name of the customer that you will send the invoice to.;
                SourceExpr="Bill-to City" }

    { 24  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENN=Contact];
                ToolTipML=ENU=Specifies the name of the person you should contact at the customer that you are sending the invoice to.;
                SourceExpr="Bill-to Contact" }

    { 56  ;1   ;Part      ;
                Name=SalesLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page1305 }

    { 1902697801;1;Group  ;
                CaptionML=[ENU=Tax Information;
                           ENN=Tax Information] }

    { 1500013;2;Field     ;
                ToolTipML=[ENU=Specifies if the input has been used for trading purposes.;
                           HIN=Specifies if the input has been used for trading purposes.];
                SourceExpr=Trading }

    { 1500018;2;Field     ;
                ToolTipML=[ENU=A check mark in this field indicates that a transit document has been attached with the document.;
                           HIN=A check mark in this field indicates that a transit document has been attached with the document.];
                SourceExpr="Transit Document" }

    { 1500020;2;Field     ;
                ToolTipML=[ENU=A check mark in this field shows that the TDS certificate is receivable against the sales transaction.;
                           HIN=A check mark in this field shows that the TDS certificate is receivable against the sales transaction.];
                SourceExpr="TDS Certificate Receivable" }

    { 1500000;2;Field     ;
                ToolTipML=[ENU=Specifies if the items are an export or are considered for an export.;
                           HIN=Specifies if the items are an export or are considered for an export.];
                SourceExpr="Export or Deemed Export" }

    { 1500001;2;Field     ;
                ToolTipML=[ENU=A check mark in this field indicates that the transaction is VAT Exempted.;
                           HIN=A check mark in this field indicates that the transaction is VAT Exempted.];
                SourceExpr="VAT Exempted" }

    { 1500002;2;Field     ;
                ToolTipML=[ENU=Place a check mark in this field to calculate the Invoice Discount % in case any one of Sales line has a check mark in the Price Inclusive of Tax field.;
                           HIN=Place a check mark in this field to calculate the Invoice Discount % in case any one of Sales line has a check mark in the Price Inclusive of Tax field.];
                SourceExpr="Calc. Inv. Discount (%)" }

    { 1500024;2;Field     ;
                ToolTipML=[ENU=A check mark in this field indicates that the items are being sent on FOC (free of cost) basis.;
                           HIN=A check mark in this field indicates that the items are being sent on FOC (free of cost) basis.];
                SourceExpr="Free Supply" }

    { 1500053;2;Field     ;
                ToolTipML=[ENU=If this field contains a check mark, service tax amount will calculated zero value and the base value will be populated in service tax entry and service tax detail entry table when amount has been received from customer.;
                           HIN=If this field contains a check mark, service tax amount will calculated zero value and the base value will be populated in service tax entry and service tax detail entry table when amount has been received from customer.];
                SourceExpr="ST Pure Agent" }

    { 1500014;2;Field     ;
                ToolTipML=[ENU=Specifies if the item that is associated with the sales header has been re-dispatched to the customer.;
                           HIN=Specifies if the item that is associated with the sales header has been re-dispatched to the customer.];
                SourceExpr="Re-Dispatch";
                OnValidate=BEGIN
                             ReturnOrderNoEnable := "Re-Dispatch";
                           END;
                            }

    { 1500061;2;Field     ;
                ToolTipML=[ENU=Specifies if the service tax is payable based on the invoice or payment, depending on which is earlier.;
                           HIN=Specifies if the service tax is payable based on the invoice or payment, depending on which is earlier.];
                SourceExpr=PoT }

    { 1500012;2;Field     ;
                Name=ReturnOrderNo;
                CaptionML=[ENU=Return Receipt No.;
                           ENN=Return Receipt No.];
                ToolTipML=[ENU=Specifies the return re-dispatch receipt number that is associated with the sales credit memo line.;
                           HIN=Specifies the return re-dispatch receipt number that is associated with the sales credit memo line.];
                SourceExpr="Return Re-Dispatch Rcpt. No.";
                Visible=ReturnOrderNoVisible;
                Enabled=ReturnOrderNoEnable }

    { 1500008;2;Field     ;
                ToolTipML=[ENU=This field displays the LC No. of the customer.;
                           HIN=This field displays the LC No. of the customer.];
                SourceExpr="LC No." }

    { 1500006;2;Field     ;
                ToolTipML=[ENU=This field displays the form code of the customer.;
                           HIN=This field displays the form code of the customer.];
                SourceExpr="Form Code";
                Importance=Promoted }

    { 1500007;2;Field     ;
                ToolTipML=[ENU=This field displays the form number of the customer.;
                           HIN=This field displays the form number of the customer.];
                SourceExpr="Form No." }

    { 1500055;2;Field     ;
                ToolTipML=[ENU=Specifies the service tax rounding precision that is defined in General Ledger Setup. If you require changing the rounding precision on the specific transaction, you can change the service tax rounding precision manually. You cannot change the service tax rounding precision when the sales order or invoice needs to be applied to a service tax on advance payment document that has already been posted.;
                           HIN=Specifies the service tax rounding precision that is defined in General Ledger Setup. If you require changing the rounding precision on the specific transaction, you can change the service tax rounding precision manually. You cannot change the service tax rounding precision when the sales order or invoice needs to be applied to a service tax on advance payment document that has already been posted.];
                SourceExpr="Service Tax Rounding Precision" }

    { 1500057;2;Field     ;
                ToolTipML=[ENU=Specifies the service tax rounding type that is defined in General Ledger Setup. If you require changing the rounding type on the specific transaction, you can change the service tax rounding type manually. You cannot change the service tax rounding type when the sales invoice needs to be applied to a service tax on advance payment document that has already been posted.;
                           HIN=Specifies the service tax rounding type that is defined in General Ledger Setup. If you require changing the rounding type on the specific transaction, you can change the service tax rounding type manually. You cannot change the service tax rounding type when the sales invoice needs to be applied to a service tax on advance payment document that has already been posted.];
                SourceExpr="Service Tax Rounding Type" }

    { 1500047;2;Field     ;
                Name=Posting Date2;
                CaptionML=[ENU=Date of Removal;
                           ENN=Date of Removal];
                ToolTipML=ENU=Specifies the date when the posting of the sales document will be recorded. By default, today's date is entered.;
                SourceExpr="Posting Date" }

    { 1500048;2;Field     ;
                CaptionML=[ENU=Time of Removal;
                           ENN=Time of Removal];
                ToolTipML=[ENU=This field contains the time on which goods has been removed from the location.;
                           HIN=This field contains the time on which goods has been removed from the location.];
                SourceExpr="Time of Removal" }

    { 1500049;2;Field     ;
                CaptionML=[ENU=Mode of Transport;
                           ENN=Mode of Transport];
                ToolTipML=[ENU=This field contains mode of transport through which goods has been send to Customer. For example: Rail, Road, Sea, and so on.;
                           HIN=This field contains mode of transport through which goods has been send to Customer. For example: Rail, Road, Sea, and so on.];
                SourceExpr="Mode of Transport" }

    { 1500050;2;Field     ;
                CaptionML=[ENU=Vehicle No.;
                           ENN=Vehicle No.];
                ToolTipML=[ENU=This field contains the vehicle number which will be used to send the goods.;
                           HIN=This field contains the vehicle number which will be used to send the goods.];
                SourceExpr="Vehicle No." }

    { 1500051;2;Field     ;
                CaptionML=[ENU=LR/RR No.;
                           ENN=LR/RR No.];
                ToolTipML=[ENU=This field contains the Lorry Receipt /Railway Receipt Number (LR/RR No.) on which goods has been send to Customer.;
                           HIN=This field contains the Lorry Receipt /Railway Receipt Number (LR/RR No.) on which goods has been send to Customer.];
                SourceExpr="LR/RR No." }

    { 1500052;2;Field     ;
                CaptionML=[ENU=LR/RR Date;
                           ENN=LR/RR Date];
                ToolTipML=[ENU=This field contains the lorry Receipt /Railway Receipt Date (LR/RR Date) on which goods has been send to Customer.;
                           HIN=This field contains the lorry Receipt /Railway Receipt Date (LR/RR Date) on which goods has been send to Customer.];
                SourceExpr="LR/RR Date" }

  }
  CODE
  {
    VAR
      CopySalesDoc@1000 : Report 292;
      UserSetupManagement@1004 : Codeunit 5700;
      MiniSalesCalcDiscByType@1002 : Codeunit 1300;
      MiniCustomerMgt@1003 : Codeunit 1302;
      MiniLinesInstructionMgt@1012 : Codeunit 1320;
      ChangeExchangeRate@1001 : Page 511;
      OfficeHost@1013 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Hosts.OfficeHost" RUNONCLIENT;
      ShowBillToShipToTab@1005 : Boolean;
      DocumentIsPosted@1010 : Boolean;
      ShowDetailsTab@1007 : Boolean;
      OpenPostedSalesInvQst@1006 : TextConst 'ENU=The invoice has been posted and moved to the Posted Sales Invoice list.\\Do you want to open the posted invoice?;ENN=The invoice has been posted and moved to the Posted Sales Invoice list.\\Do you want to open the posted invoice?';
      CustomerSelected@1008 : Boolean;
      PostAndPrintQst@1011 : TextConst 'ENU=Do you want to post and print the invoice?;ENN=Do you want to post and print the invoice?';
      ReturnOrderNoVisible@19073041 : Boolean INDATASET;
      ReturnOrderNoEnable@19062932 : Boolean INDATASET;
      ClosePageQst@1009 : TextConst 'ENU=This document is not posted.\Do you still want to leave?;ENN=This document is not posted.\Do you still want to leave?';
      OutlookComposeFormAvailable@1014 : Boolean;
      OutlookReadFormAvailable@1015 : Boolean;

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    VAR
      PreAssignedNo@1001 : Code[20];
    BEGIN
      MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);
      PreAssignedNo := "No.";
      SendToPosting(PostingCodeunitID);
      ShowPostedConfirmationMessage(PreAssignedNo);
    END;

    LOCAL PROCEDURE PostAndPrint@1(PostingCodeunitID@1000 : Integer);
    VAR
      SalesInvHeader@1001 : Record 112;
      DocumentNo@1002 : Code[20];
      PreAssignedNo@1003 : Code[20];
    BEGIN
      MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);

      IF NOT CONFIRM(PostAndPrintQst,FALSE) THEN
        EXIT;

      PreAssignedNo := "No.";
      SendToPosting(PostingCodeunitID);

      IF "Last Posting No." = '' THEN
        DocumentNo := "No."
      ELSE
        DocumentNo := "Last Posting No.";

      IF SalesInvHeader.GET(DocumentNo) THEN BEGIN
        SalesInvHeader.SETRECFILTER;
        COMMIT;
        SalesInvHeader.PrintRecords(TRUE);
        ShowPostedConfirmationMessage(PreAssignedNo);
      END;
      DocumentIsPosted := TRUE;
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@7(PreAssignedNo@1001 : Code[20]);
    VAR
      SalesInvoiceHeader@1000 : Record 112;
    BEGIN
      SalesInvoiceHeader.SETRANGE("Pre-Assigned No.",PreAssignedNo);
      IF SalesInvoiceHeader.FINDFIRST THEN
        IF DIALOG.CONFIRM(OpenPostedSalesInvQst,FALSE) THEN
          PAGE.RUN(PAGE::"Mini Posted Sales Invoice",SalesInvoiceHeader);
      DocumentIsPosted := TRUE;
    END;

    LOCAL PROCEDURE ShowPreview@2();
    VAR
      SalesPostYesNo@1000 : Codeunit 81;
    BEGIN
      SalesPostYesNo.Preview(Rec);
    END;

    BEGIN
    END.
  }
}

