OBJECT Page 400 Purchase Invoice Statistics
{
  OBJECT-PROPERTIES
  {
    Date=01-08-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.48992,NAVIN9.00.00.48992;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Purchase Invoice Statistics;
               ENN=Purchase Invoice Statistics];
    LinksAllowed=No;
    SourceTable=Table122;
    PageType=ListPlus;
    OnAfterGetRecord=VAR
                       VendLedgEntry@1000 : Record 25;
                       ServiceTaxEntry@1500000 : Record 16473;
                     BEGIN
                       CLEARALL;

                       IF "Currency Code" = '' THEN
                         Currency.InitRoundingPrecision
                       ELSE
                         Currency.GET("Currency Code");

                       PurchInvLine.SETRANGE("Document No.","No.");

                       IF PurchInvLine.FIND('-') THEN BEGIN
                         REPEAT
                           VendAmount := VendAmount + PurchInvLine.Amount;
                           ExciseAmount := ExciseAmount + PurchInvLine."Excise Amount";
                           TaxAmount := TaxAmount + PurchInvLine."Tax Amount";
                           TDSAmount := TDSAmount + PurchInvLine."Total TDS Including SHE CESS";
                           WorkTaxAmount := WorkTaxAmount + PurchInvLine."Work Tax Amount";
                           ServiceTaxeCessAmount := ServiceTaxeCessAmount + PurchInvLine."Service Tax eCess Amount";
                           ServiceTaxSHECessAmount := ServiceTaxSHECessAmount + PurchInvLine."Service Tax SHE Cess Amount";
                           ServiceTax := ServiceTax + PurchInvLine."Service Tax Amount";
                           SBCServiceTax := SBCServiceTax + PurchInvLine."Service Tax SBC Amount";
                           KKCessAmount := KKCessAmount + PurchInvLine."KK Cess Amount";
                           ChargeAmount := ChargeAmount + PurchInvLine."Charges To Vendor";
                           GSTAmount := GSTAmount + PurchInvLine."Total GST Amount";

                           NetTotal := NetTotal + PurchInvLine."Amount To Vendor";

                           AmountInclVAT := AmountInclVAT + PurchInvLine."Amount Including VAT";
                           IF "Prices Including VAT" THEN
                             InvDiscAmount := InvDiscAmount + PurchInvLine."Inv. Discount Amount" / (1 + PurchInvLine."VAT %" / 100)
                           ELSE
                             InvDiscAmount := InvDiscAmount + PurchInvLine."Inv. Discount Amount";
                           LineQty := LineQty + PurchInvLine.Quantity;
                           TotalNetWeight := TotalNetWeight + (PurchInvLine.Quantity * PurchInvLine."Net Weight");
                           TotalGrossWeight := TotalGrossWeight + (PurchInvLine.Quantity * PurchInvLine."Gross Weight");
                           TotalVolume := TotalVolume + (PurchInvLine.Quantity * PurchInvLine."Unit Volume");
                           IF PurchInvLine."Units per Parcel" > 0 THEN
                             TotalParcels := TotalParcels + ROUND(PurchInvLine.Quantity / PurchInvLine."Units per Parcel",1,'>');
                           IF PurchInvLine."VAT %" <> VATPercentage THEN
                             IF VATPercentage = 0 THEN
                               VATPercentage := PurchInvLine."VAT %"
                             ELSE
                               VATPercentage := -1;
                         UNTIL PurchInvLine.NEXT = 0;
                         IF PurchInvLine."GST Reverse Charge" THEN
                           NetTotal -= GSTAmount;
                       END;
                       VATAmount := AmountInclVAT - VendAmount;
                       InvDiscAmount := ROUND(InvDiscAmount,Currency."Amount Rounding Precision");

                       IF VATPercentage <= 0 THEN
                         VATAmountText := Text000
                       ELSE
                         VATAmountText := STRSUBSTNO(Text001,VATPercentage);

                       IF "Currency Code" = '' THEN
                         AmountLCY := VendAmount
                       ELSE
                         AmountLCY :=
                           CurrExchRate.ExchangeAmtFCYToLCY(
                             WORKDATE,"Currency Code",VendAmount,"Currency Factor");

                       VendLedgEntry.SETCURRENTKEY("Document No.");
                       VendLedgEntry.SETRANGE("Document No.","No.");
                       VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::Invoice);
                       VendLedgEntry.SETRANGE("Vendor No.","Pay-to Vendor No.");
                       IF VendLedgEntry.FINDFIRST THEN
                         AmountLCY := VendLedgEntry."Purchase (LCY)";

                       IF NOT Vend.GET("Pay-to Vendor No.") THEN
                         CLEAR(Vend);
                       Vend.CALCFIELDS("Balance (LCY)");

                       PurchInvLine.CalcVATAmountLines(Rec,TempVATAmountLine);
                       // CurrForm.SubForm.PAGE.SetTempVATAmountLine(TempVATAmountLine);
                       // CurrForm.SubForm.PAGE.InitGlobals("Currency Code",FALSE,FALSE,FALSE,FALSE,"VAT Base Discount %");
                       IF "Transaction No. Serv. Tax" <> 0 THEN BEGIN
                         ServiceTax2 := ServiceTax;
                         ServiceTaxeCessAmount2 := ServiceTaxeCessAmount;
                         ServiceTaxSHECessAmount2 := ServiceTaxSHECessAmount;
                         SBCServiceTax2 := SBCServiceTax;
                         KKCessAmount2 := KKCessAmount;
                         ServiceTaxEntry.RESET;
                         ServiceTaxEntry.SETRANGE(Type,ServiceTaxEntry.Type::Purchase);
                         ServiceTaxEntry.SETRANGE("Document Type",ServiceTaxEntry."Document Type"::Invoice);
                         ServiceTaxEntry.SETRANGE("Document No.","No.");
                         IF ServiceTaxEntry.FINDFIRST THEN BEGIN

                           IF "Currency Code" <> '' THEN BEGIN
                             ServiceTaxEntry."Service Tax Amount" :=
                               ROUND(CurrExchRate.ExchangeAmtLCYToFCY(
                                   "Posting Date","Currency Code",
                                   ServiceTaxEntry."Service Tax Amount","Currency Factor"));
                             ServiceTaxEntry."eCess Amount" :=
                               ROUND(CurrExchRate.ExchangeAmtLCYToFCY(
                                   "Posting Date","Currency Code",
                                   ServiceTaxEntry."eCess Amount","Currency Factor"));
                             ServiceTaxEntry."SHE Cess Amount" :=
                               ROUND(CurrExchRate.ExchangeAmtLCYToFCY(
                                   "Posting Date","Currency Code",
                                   ServiceTaxEntry."SHE Cess Amount","Currency Factor"));
                             ServiceTaxEntry."Service Tax SBC Amount" :=
                               ROUND(CurrExchRate.ExchangeAmtLCYToFCY(
                                   "Posting Date","Currency Code",
                                   ServiceTaxEntry."Service Tax SBC Amount","Currency Factor"));
                             ServiceTaxEntry."KK Cess Amount" :=
                               ROUND(CurrExchRate.ExchangeAmtLCYToFCY(
                                   "Posting Date","Currency Code",
                                   ServiceTaxEntry."KK Cess Amount","Currency Factor"));
                           END;

                           ServiceTax := ABS(ServiceTaxEntry."Service Tax Amount");
                           ServiceTaxeCessAmount := ABS(ServiceTaxEntry."eCess Amount");
                           ServiceTaxSHECessAmount := ABS(ServiceTaxEntry."SHE Cess Amount");
                           SBCServiceTax := ABS(ServiceTaxEntry."Service Tax SBC Amount");
                           KKCessAmount := ABS(ServiceTaxEntry."KK Cess Amount");
                           NetTotal := NetTotal - ServiceTax2 - ServiceTaxeCessAmount2 - ServiceTaxSHECessAmount2 - KKCessAmount2 -
                             SBCServiceTax2 + ServiceTax + ServiceTaxeCessAmount +
                             ServiceTaxSHECessAmount + SBCServiceTax + KKCessAmount;
                         END ELSE BEGIN
                           ServiceTax := ServiceTax - ServiceTax2;
                           ServiceTaxeCessAmount := ServiceTaxeCessAmount - ServiceTaxeCessAmount2;
                           ServiceTaxSHECessAmount := ServiceTaxSHECessAmount - ServiceTaxSHECessAmount2;
                           SBCServiceTax := SBCServiceTax - SBCServiceTax2; ;
                           KKCessAmount := KKCessAmount - KKCessAmount2; ;
                           NetTotal := NetTotal - ServiceTax2 - ServiceTaxeCessAmount2 - ServiceTaxSHECessAmount2 - SBCServiceTax2 -
                             KKCessAmount2;
                         END
                       END;

                       NetTotal := NetTotal + VATAmount;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 24  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ENN=General] }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Amount;
                           ENN=Amount];
                SourceExpr=VendAmount + InvDiscAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Inv. Discount Amount;
                           ENN=Inv. Discount Amount];
                SourceExpr=InvDiscAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 12  ;2   ;Field     ;
                CaptionML=[ENU=Total;
                           ENN=Total];
                SourceExpr=VendAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 1280001;2;Field     ;
                CaptionML=[ENU=Excise Amount;
                           ENN=Excise Amount];
                SourceExpr=ExciseAmount }

    { 1280000;2;Field     ;
                CaptionML=[ENU=Tax Amount;
                           ENN=Tax Amount];
                SourceExpr=TaxAmount }

    { 1500000;2;Field     ;
                CaptionML=[ENU=GST Amount;
                           ENN=GST Amount];
                SourceExpr=GSTAmount;
                Editable=FALSE }

    { 1280006;2;Field     ;
                CaptionML=[ENU=Service Tax Amount;
                           ENN=Service Tax Amount];
                SourceExpr=ServiceTax + ServiceTaxeCessAmount + ServiceTaxSHECessAmount + SBCServiceTax + KKCessAmount }

    { 1280005;2;Field     ;
                CaptionML=[ENU=Charges Amount;
                           ENN=Charges Amount];
                SourceExpr=ChargeAmount }

    { 1280003;2;Field     ;
                CaptionML=[ENU=TDS Amount;
                           ENN=TDS Amount];
                SourceExpr=TDSAmount }

    { 1280004;2;Field     ;
                CaptionML=[ENU=Work Tax Amount;
                           ENN=Work Tax Amount];
                SourceExpr=WorkTaxAmount }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Net Total;
                           ENN=Net Total];
                SourceExpr=NetTotal;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ENN=Quantity];
                DecimalPlaces=0:5;
                SourceExpr=LineQty }

    { 13  ;2   ;Field     ;
                CaptionML=[ENU=Parcels;
                           ENN=Parcels];
                DecimalPlaces=0:5;
                SourceExpr=TotalParcels }

    { 7   ;2   ;Field     ;
                CaptionML=[ENU=Net Weight;
                           ENN=Net Weight];
                DecimalPlaces=0:5;
                SourceExpr=TotalNetWeight }

    { 10  ;2   ;Field     ;
                CaptionML=[ENU=Gross Weight;
                           ENN=Gross Weight];
                DecimalPlaces=0:5;
                SourceExpr=TotalGrossWeight }

    { 17  ;2   ;Field     ;
                CaptionML=[ENU=Volume;
                           ENN=Volume];
                DecimalPlaces=0:5;
                SourceExpr=TotalVolume }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Purchase (LCY);
                           ENN=Purchase (LCY)];
                SourceExpr=AmountLCY;
                AutoFormatType=1 }

    { 1901061301;1;Group  ;
                CaptionML=[ENU=Vendor;
                           ENN=Vendor] }

    { 21  ;2   ;Field     ;
                CaptionML=[ENU=Balance (LCY);
                           ENN=Balance (LCY)];
                SourceExpr=Vend."Balance (LCY)";
                AutoFormatType=1 }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=VAT Amount;ENN=VAT Amount';
      Text001@1001 : TextConst 'ENU=%1% VAT;ENN=%1% VAT';
      CurrExchRate@1002 : Record 330;
      PurchInvLine@1003 : Record 123;
      Vend@1004 : Record 23;
      TempVATAmountLine@1005 : TEMPORARY Record 290;
      Currency@1018 : Record 4;
      VendAmount@1006 : Decimal;
      AmountInclVAT@1007 : Decimal;
      InvDiscAmount@1008 : Decimal;
      AmountLCY@1009 : Decimal;
      LineQty@1010 : Decimal;
      TotalNetWeight@1011 : Decimal;
      TotalGrossWeight@1012 : Decimal;
      TotalVolume@1013 : Decimal;
      TotalParcels@1014 : Decimal;
      VATAmount@1015 : Decimal;
      VATPercentage@1016 : Decimal;
      VATAmountText@1017 : Text[30];
      ExciseAmount@1280006 : Decimal;
      TaxAmount@1280005 : Decimal;
      ChargeAmount@1280004 : Decimal;
      TDSAmount@1280002 : Decimal;
      WorkTaxAmount@1280001 : Decimal;
      ServiceTax@1280000 : Decimal;
      ServiceTaxeCessAmount@1500000 : Decimal;
      NetTotal@1280007 : Decimal;
      ServiceTax2@1500002 : Decimal;
      ServiceTaxeCessAmount2@1500001 : Decimal;
      ServiceTaxSHECessAmount@1500003 : Decimal;
      ServiceTaxSHECessAmount2@1500004 : Decimal;
      SBCServiceTax2@1500010 : Decimal;
      SBCServiceTax@1500011 : Decimal;
      KKCessAmount@1500005 : Decimal;
      KKCessAmount2@1500006 : Decimal;
      GSTAmount@1500007 : Decimal;

    BEGIN
    END.
  }
}

