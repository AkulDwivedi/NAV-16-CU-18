OBJECT Page 6030 Service Statistics
{
  OBJECT-PROPERTIES
  {
    Date=29-06-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.48822,NAVIN9.00.00.48822;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Statistics;
               ENN=Service Statistics];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table5900;
    PageType=ListPlus;
    OnOpenPage=BEGIN
                 SalesSetup.GET;
                 AllowInvDisc :=
                   NOT (SalesSetup."Calc. Inv. Discount" AND CustInvDiscRecExists("Invoice Disc. Code"));
                 AllowVATDifference :=
                   SalesSetup."Allow VAT Difference" AND
                   ("Document Type" <> "Document Type"::Quote);
                 CurrPage.EDITABLE :=
                   AllowVATDifference OR AllowInvDisc;
               END;

    OnAfterGetRecord=VAR
                       ServLine@1000 : Record 5902;
                       TempServLine@1001 : TEMPORARY Record 5902;
                       StructureOrderDetails@1500001 : Record 13794;
                       ChargesToCustomer@1500000 : Decimal;
                       TransactionType@1500002 : 'Purchase,Sales,Transfer,Service';
                     BEGIN
                       CurrPage.CAPTION(STRSUBSTNO(Text000,"Document Type"));

                       IF PrevNo = "No." THEN BEGIN
                         GetVATSpecification;
                         EXIT;
                       END;
                       PrevNo := "No.";
                       FILTERGROUP(2);
                       SETRANGE("No.",PrevNo);
                       FILTERGROUP(0);

                       CLEAR(ServLine);
                       CLEAR(TotalServLine);
                       CLEAR(TotalServLineLCY);
                       CLEAR(ServAmtsMgt);

                       FOR i := 1 TO 7 DO BEGIN
                         IF i IN [1,5,6,7] THEN BEGIN
                           TempServLine.DELETEALL;
                           CLEAR(TempServLine);

                           ServAmtsMgt.GetServiceLines(Rec,TempServLine,i - 1,ChargesToCustomer);

                           ServAmtsMgt.SumServiceLinesTemp(
                             Rec,TempServLine,i - 1,TotalServLine[i],TotalServLineLCY[i],
                             VATAmount[i],VATAmountText[i],ProfitLCY[i],ProfitPct[i],TotalAdjCostLCY[i],ChargesToCustomer);

                           IF TotalServLineLCY[i].Amount = 0 THEN
                             ProfitPct[i] := 0
                           ELSE
                             ProfitPct[i] := ROUND(100 * ProfitLCY[i] / TotalServLineLCY[i].Amount,0.1);

                           AdjProfitLCY[i] := TotalServLineLCY[i].Amount - TotalAdjCostLCY[i];
                           IF TotalServLineLCY[i].Amount <> 0 THEN
                             AdjProfitPct[i] := ROUND(AdjProfitLCY[i] / TotalServLineLCY[i].Amount * 100,0.1);

                           IF "Prices Including VAT" THEN BEGIN
                             TotalAmount2[i] := TotalServLine[i].Amount;
                             TotalAmount1[i] := TotalAmount2[i] + VATAmount[i];
                             TotalServLine[i]."Line Amount" := TotalAmount1[i] + TotalServLine[i]."Inv. Discount Amount";
                           END ELSE BEGIN
                             TotalAmount1[i] := TotalServLine[i].Amount;
                             TotalAmount2[i] := TotalServLine[i].Amount;
                           END;
                         END;
                       END;

                       IF Cust.GET("Bill-to Customer No.") THEN
                         Cust.CALCFIELDS("Balance (LCY)")
                       ELSE
                         CLEAR(Cust);
                       IF Cust."Credit Limit (LCY)" = 0 THEN
                         CreditLimitLCYExpendedPct := 0
                       ELSE
                         IF Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" < 0 THEN
                           CreditLimitLCYExpendedPct := 0
                         ELSE
                           IF Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" > 1 THEN
                             CreditLimitLCYExpendedPct := 10000
                           ELSE
                             CreditLimitLCYExpendedPct := ROUND(Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" * 10000,1);

                       TempServLine.DELETEALL;
                       CLEAR(TempServLine);
                       ServAmtsMgt.GetServiceLines(Rec,TempServLine,0,ChargesToCustomer);
                       ServLine.CalcVATAmountLines(0,Rec,TempServLine,TempVATAmountLine,FALSE);
                       TempVATAmountLine.MODIFYALL(Modified,FALSE);

                       ClearGSTStatisticsAmount;
                       ServLine.RESET;
                       ServLine.SETRANGE("Document Type","Document Type");
                       ServLine.SETRANGE("Document No.","No.");
                       ServLine.SETFILTER(Type,'<>%1',ServLine.Type::" ");
                       ServLine.SETFILTER(Quantity,'<>%1',0);
                       IF ServLine.FINDSET THEN
                         REPEAT
                           TotalGST += GSTManagement.RoundTotalGSTAmountQtyFactor(TransactionType::Service,ServLine."Document Type",
                             ServLine."Document No.",ServLine."Line No.",1,"Currency Code");
                         UNTIL ServLine.NEXT = 0;
                       IF ("Applies-to Doc. No." <> '') OR ("Applies-to ID" <> '')THEN BEGIN
                         TotalAdvAmount += GSTApplicationAmount;
                         TotalAmountApplied := GetApplicableAmount(TotalAdvAmount,TotalGST);
                       END;
                     END;

    OnQueryClosePage=BEGIN
                       GetVATSpecification;
                       IF TempVATAmountLine.GetAnyLineModified THEN
                         UpdateVATOnServLines;
                       EXIT(TRUE);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ENN=General] }

    { 129 ;2   ;Field     ;
                Name=Amount_General;
                CaptionML=[ENU=Amount;
                           ENN=Amount];
                SourceExpr=TotalServLine[1]."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text002,FALSE);
                Editable=FALSE }

    { 93  ;2   ;Field     ;
                Name=Inv. Discount Amount_General;
                CaptionML=[ENU=Inv. Discount Amount;
                           ENN=Inv. Discount Amount];
                SourceExpr=TotalServLine[1]."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                OnValidate=BEGIN
                             UpdateInvDiscAmount;
                           END;
                            }

    { 80  ;2   ;Field     ;
                CaptionML=[ENU=Total;
                           ENN=Total];
                SourceExpr=TotalAmount1[1];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,FALSE);
                OnValidate=BEGIN
                             UpdateTotalAmount(1);
                           END;
                            }

    { 75  ;2   ;Field     ;
                Name=VAT Amount_General;
                CaptionML=[ENU=VAT Amount;
                           ENN=VAT Amount];
                SourceExpr=VATAmount[1];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT(VATAmountText[1]);
                Editable=FALSE }

    { 76  ;2   ;Field     ;
                Name=Total Incl. VAT_General;
                CaptionML=[ENU=Total Incl. VAT;
                           ENN=Total Incl. VAT];
                SourceExpr=TotalAmount2[1];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,TRUE);
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                Name=Sales (LCY)_General;
                CaptionML=[ENU=Sales (LCY);
                           ENN=Sales (LCY)];
                SourceExpr=TotalServLineLCY[1].Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 79  ;2   ;Field     ;
                CaptionML=[ENU=Original Profit (LCY);
                           ENN=Original Profit (LCY)];
                SourceExpr=ProfitLCY[1];
                AutoFormatType=1;
                Editable=FALSE }

    { 52  ;2   ;Field     ;
                CaptionML=[ENU=Adjusted Profit (LCY);
                           ENN=Adjusted Profit (LCY)];
                SourceExpr=AdjProfitLCY[1];
                AutoFormatType=1;
                Editable=FALSE }

    { 81  ;2   ;Field     ;
                CaptionML=[ENU=Original Profit %;
                           ENN=Original Profit %];
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct[1];
                Editable=FALSE }

    { 54  ;2   ;Field     ;
                CaptionML=[ENU=Adjusted Profit %;
                           ENN=Adjusted Profit %];
                DecimalPlaces=1:1;
                SourceExpr=AdjProfitPct[1];
                Editable=FALSE }

    { 1500008;2;Field     ;
                CaptionML=[ENU=Excise Amount;
                           ENN=Excise Amount];
                SourceExpr=TotalServLine[1]."Excise Amount";
                Editable=FALSE }

    { 1500006;2;Field     ;
                CaptionML=[ENU=Tax Amount;
                           ENN=Tax Amount];
                SourceExpr=TotalServLine[1]."Tax Amount";
                Editable=FALSE }

    { 1500001;2;Field     ;
                CaptionML=[ENU=GST Amount;
                           ENN=GST Amount];
                SourceExpr=ABS(TotalGST) - TotalAmountApplied }

    { 1500004;2;Field     ;
                CaptionML=[ENU=Service Tax Amount;
                           ENN=Service Tax Amount];
                SourceExpr=[TotalServLine[1]]."Service Tax Amount" + TotalServLine[1]]."Service Tax eCess Amount" + TotalServLine[1]]."Service Tax SHE Cess Amount" + TotalServLine[1]]."Service Tax SBC Amount" + TotalServLine[1]]."KK Cess Amount" ];
                Editable=FALSE }

    { 1500002;2;Field     ;
                CaptionML=[ENU=Charges Amount;
                           ENN=Charges Amount];
                SourceExpr=TotalServLine[1]."Charges To Customer";
                Editable=FALSE }

    { 1500000;2;Field     ;
                CaptionML=[ENU=Net Total;
                           ENN=Net Total];
                SourceExpr=TotalServLine[1]."Amount To Customer";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE;
                OnValidate=BEGIN
                             TotalServLine1AmountToCustomer;
                           END;
                            }

    { 95  ;2   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ENN=Quantity];
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[1].Quantity;
                Editable=FALSE }

    { 73  ;2   ;Field     ;
                CaptionML=[ENU=Parcels;
                           ENN=Parcels];
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[1]."Units per Parcel";
                Editable=FALSE }

    { 91  ;2   ;Field     ;
                CaptionML=[ENU=Net Weight;
                           ENN=Net Weight];
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[1]."Net Weight";
                Editable=FALSE }

    { 82  ;2   ;Field     ;
                CaptionML=[ENU=Gross Weight;
                           ENN=Gross Weight];
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[1]."Gross Weight";
                Editable=FALSE }

    { 71  ;2   ;Field     ;
                CaptionML=[ENU=Volume;
                           ENN=Volume];
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[1]."Unit Volume";
                Editable=FALSE }

    { 78  ;2   ;Field     ;
                CaptionML=[ENU=Original Cost (LCY);
                           ENN=Original Cost (LCY)];
                SourceExpr=TotalServLineLCY[1]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 56  ;2   ;Field     ;
                CaptionML=[ENU=Adjusted Cost (LCY);
                           ENN=Adjusted Cost (LCY)];
                SourceExpr=TotalAdjCostLCY[1];
                AutoFormatType=1;
                Editable=FALSE }

    { 58  ;2   ;Field     ;
                CaptionML=[ENU=Cost Adjmt. Amount (LCY);
                           ENN=Cost Adjmt. Amount (LCY)];
                SourceExpr=TotalAdjCostLCY[1] - TotalServLineLCY[1]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE;
                OnLookup=BEGIN
                           LookupAdjmtValueEntries(0);
                         END;
                          }

    { 5   ;1   ;Part      ;
                Name=SubForm;
                PagePartID=Page576 }

    { 1903781401;1;Group  ;
                CaptionML=[ENU=Service Line;
                           ENN=Service Line] }

    { 1904230801;2;Group  ;
                GroupType=FixedLayout }

    { 1900725501;3;Group  ;
                CaptionML=[ENU=Items;
                           ENN=Items] }

    { 8   ;4   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ENN=Quantity];
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[5].Quantity;
                Editable=FALSE }

    { 10  ;4   ;Field     ;
                Name=Amount_Items;
                CaptionML=[ENU=Amount;
                           ENN=Amount];
                SourceExpr=TotalServLine[5]."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 12  ;4   ;Field     ;
                Name=Inv. Discount Amount_Items;
                CaptionML=[ENU=Inv. Discount Amount;
                           ENN=Inv. Discount Amount];
                SourceExpr=TotalServLine[5]."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 14  ;4   ;Field     ;
                Name=Total;
                CaptionML=[ENU=Total;
                           ENN=Total];
                SourceExpr=TotalAmount1[5];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE;
                OnValidate=BEGIN
                             UpdateTotalAmount(2);
                           END;
                            }

    { 1500018;4;Field     ;
                CaptionML=[ENU=Excise Amount;
                           ENN=Excise Amount];
                SourceExpr=TotalServLine[5]."Excise Amount";
                Editable=FALSE }

    { 1500019;4;Field     ;
                CaptionML=[ENU=Tax Amount;
                           ENN=Tax Amount];
                SourceExpr=TotalServLine[5]."Tax Amount";
                Editable=FALSE }

    { 1500003;4;Field     ;
                CaptionML=[ENU=GST Amount;
                           ENN=GST Amount];
                SourceExpr=TotalServLine[5]."Total GST Amount" }

    { 1500021;4;Field     ;
                CaptionML=[ENU=Service Tax Amount;
                           ENN=Service Tax Amount];
                SourceExpr=[TotalServLine[5]]."Service Tax Amount" + TotalServLine[5]]."Service Tax eCess Amount" + TotalServLine[5]]."Service Tax SHE Cess Amount" + TotalServLine[5]]."Service Tax SBC Amount" + TotalServLine[5]]."KK Cess Amount" ];
                Editable=FALSE }

    { 1500020;4;Field     ;
                CaptionML=[ENU=Charges Amount;
                           ENN=Charges Amount];
                SourceExpr=TotalServLine[5]."Charges To Customer";
                Editable=FALSE }

    { 1500026;4;Field     ;
                CaptionML=[ENU=Net Total;
                           ENN=Net Total];
                SourceExpr=TotalServLine[5]."Amount To Customer";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 21  ;4   ;Field     ;
                Name=VAT Amount_Items;
                CaptionML=[ENU=VAT Amount;
                           ENN=VAT Amount];
                SourceExpr=VATAmount[5];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 24  ;4   ;Field     ;
                Name=Total Incl. VAT_Items;
                CaptionML=[ENU=Total Amount;
                           ENN=Total Amount];
                SourceExpr=TotalAmount2[5];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 27  ;4   ;Field     ;
                Name=Sales (LCY)_Items;
                CaptionML=[ENU=Sales (LCY);
                           ENN=Sales (LCY)];
                SourceExpr=TotalServLineLCY[5].Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 43  ;4   ;Field     ;
                CaptionML=[ENU=Original Profit (LCY);
                           ENN=Original Profit (LCY)];
                SourceExpr=ProfitLCY[5];
                AutoFormatType=1;
                Editable=FALSE }

    { 61  ;4   ;Field     ;
                CaptionML=[ENU=Adjusted Profit (LCY);
                           ENN=Adjusted Profit (LCY)];
                SourceExpr=AdjProfitLCY[5];
                AutoFormatType=1;
                Editable=FALSE }

    { 47  ;4   ;Field     ;
                CaptionML=[ENU=Original Profit %;
                           ENN=Original Profit %];
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct[5];
                Editable=FALSE }

    { 65  ;4   ;Field     ;
                CaptionML=[ENU=Adjusted Profit %;
                           ENN=Adjusted Profit %];
                DecimalPlaces=1:1;
                SourceExpr=AdjProfitPct[5];
                Editable=FALSE }

    { 30  ;4   ;Field     ;
                CaptionML=[ENU=Original Cost (LCY);
                           ENN=Original Cost (LCY)];
                SourceExpr=TotalServLineLCY[5]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 77  ;4   ;Field     ;
                CaptionML=[ENU=Adjusted Cost (LCY);
                           ENN=Adjusted Cost (LCY)];
                SourceExpr=TotalAdjCostLCY[5];
                AutoFormatType=1;
                Editable=FALSE }

    { 104 ;4   ;Field     ;
                CaptionML=[ENU=Cost Adjmt. Amount (LCY);
                           ENN=Cost Adjmt. Amount (LCY)];
                SourceExpr=TotalAdjCostLCY[5] - TotalServLineLCY[5]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE;
                OnLookup=BEGIN
                           LookupAdjmtValueEntries(1);
                         END;
                          }

    { 1903867001;3;Group  ;
                CaptionML=[ENU=Resources;
                           ENN=Resources] }

    { 19  ;4   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ENN=Quantity];
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[6].Quantity;
                Editable=FALSE }

    { 18  ;4   ;Field     ;
                Name=Amount_Resources;
                SourceExpr=TotalServLine[6]."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text002,FALSE);
                Editable=FALSE }

    { 17  ;4   ;Field     ;
                Name=Inv. Discount Amount_Resources;
                CaptionML=[ENU=Inv. Discount Amount;
                           ENN=Inv. Discount Amount];
                SourceExpr=TotalServLine[6]."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 16  ;4   ;Field     ;
                SourceExpr=TotalAmount1[6];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,FALSE);
                Editable=FALSE;
                OnValidate=BEGIN
                             UpdateTotalAmount(2);
                           END;
                            }

    { 1500017;4;Field     ;
                CaptionML=[ENU=Excise Amount;
                           ENN=Excise Amount];
                SourceExpr=TotalServLine[6]."Excise Amount";
                Editable=FALSE }

    { 1500016;4;Field     ;
                CaptionML=[ENU=Tax Amount;
                           ENN=Tax Amount];
                SourceExpr=TotalServLine[6]."Tax Amount";
                Editable=FALSE }

    { 1500005;4;Field     ;
                CaptionML=[ENU=GST Amount;
                           ENN=GST Amount];
                SourceExpr=TotalServLine[6]."Total GST Amount" }

    { 1500015;4;Field     ;
                CaptionML=[ENU=Service Tax Amount;
                           ENN=Service Tax Amount];
                SourceExpr=[TotalServLine[6]]."Service Tax Amount" + TotalServLine[6]]."Service Tax eCess Amount" + TotalServLine[6]]."Service Tax SHE Cess Amount" + TotalServLine[6]]."Service Tax SBC Amount" + TotalServLine[6]]."KK Cess Amount" ];
                Editable=FALSE }

    { 1500014;4;Field     ;
                CaptionML=[ENU=Charges Amount;
                           ENN=Charges Amount];
                SourceExpr=TotalServLine[6]."Charges To Customer";
                Editable=FALSE }

    { 1500028;4;Field     ;
                CaptionML=[ENU=Net Total;
                           ENN=Net Total];
                SourceExpr=TotalServLine[6]."Amount To Customer";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 23  ;4   ;Field     ;
                Name=VAT Amount_Resources;
                SourceExpr=VATAmount[6];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 26  ;4   ;Field     ;
                Name=Total Incl. VAT_Resources;
                SourceExpr=TotalAmount2[6];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,TRUE);
                Editable=FALSE }

    { 29  ;4   ;Field     ;
                Name=Sales (LCY)_Resources;
                CaptionML=[ENU=Amount (LCY);
                           ENN=Amount (LCY)];
                SourceExpr=TotalServLineLCY[6].Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 45  ;4   ;Field     ;
                CaptionML=[ENU=Profit (LCY);
                           ENN=Profit (LCY)];
                SourceExpr=ProfitLCY[6];
                AutoFormatType=1;
                Editable=FALSE }

    { 60  ;4   ;Field     ;
                CaptionML=[ENU=Profit (LCY);
                           ENN=Profit (LCY)];
                SourceExpr=AdjProfitLCY[6];
                AutoFormatType=1;
                Editable=FALSE }

    { 49  ;4   ;Field     ;
                CaptionML=[ENU=Profit %;
                           ENN=Profit %];
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct[6];
                Editable=FALSE }

    { 63  ;4   ;Field     ;
                SourceExpr=Text006;
                Visible=FALSE }

    { 32  ;4   ;Field     ;
                CaptionML=[ENU=Cost (LCY);
                           ENN=Cost (LCY)];
                SourceExpr=TotalServLineLCY[6]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 85  ;4   ;Field     ;
                SourceExpr=Text006;
                Visible=FALSE }

    { 98  ;4   ;Field     ;
                SourceExpr=Text006;
                Visible=FALSE }

    { 1900295701;3;Group  ;
                CaptionML=[ENU=Costs && G/L Accounts;
                           ENN=Costs && G/L Accounts] }

    { 37  ;4   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ENN=Quantity];
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[7].Quantity;
                Editable=FALSE }

    { 36  ;4   ;Field     ;
                Name=Amount_Costs;
                SourceExpr=TotalServLine[7]."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text002,FALSE);
                Editable=FALSE }

    { 35  ;4   ;Field     ;
                Name=Inv. Discount Amount_Costs;
                CaptionML=[ENU=Inv. Discount Amount;
                           ENN=Inv. Discount Amount];
                SourceExpr=TotalServLine[7]."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 33  ;4   ;Field     ;
                SourceExpr=TotalAmount1[7];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,FALSE);
                Editable=FALSE;
                OnValidate=BEGIN
                             UpdateTotalAmount(2);
                           END;
                            }

    { 1500011;4;Field     ;
                CaptionML=[ENU=Excise Amount;
                           ENN=Excise Amount];
                SourceExpr=TotalServLine[7]."Excise Amount";
                Editable=FALSE }

    { 1500010;4;Field     ;
                CaptionML=[ENU=Tax Amount;
                           ENN=Tax Amount];
                SourceExpr=TotalServLine[7]."Tax Amount";
                Editable=FALSE }

    { 1500007;4;Field     ;
                CaptionML=[ENU=GST Amount;
                           ENN=GST Amount];
                SourceExpr=TotalServLine[7]."Total GST Amount" }

    { 1500012;4;Field     ;
                CaptionML=[ENU=Service Tax Amount;
                           ENN=Service Tax Amount];
                SourceExpr=[TotalServLine[7]]."Service Tax Amount" + TotalServLine[7]]."Service Tax eCess Amount" + TotalServLine[7]]."Service Tax SHE Cess Amount" + TotalServLine[7]]."Service Tax SBC Amount" + TotalServLine[7]]."KK Cess Amount" ];
                Editable=FALSE }

    { 1500013;4;Field     ;
                CaptionML=[ENU=Charges Amount;
                           ENN=Charges Amount];
                SourceExpr=TotalServLine[7]."Charges To Customer";
                Editable=FALSE }

    { 1500029;4;Field     ;
                CaptionML=[ENU=Net Total;
                           ENN=Net Total];
                SourceExpr=TotalServLine[7]."Amount To Customer";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 39  ;4   ;Field     ;
                Name=VAT Amount_Costs;
                SourceExpr=VATAmount[7];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 40  ;4   ;Field     ;
                Name=Total Incl. VAT_Costs;
                SourceExpr=TotalAmount2[7];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,TRUE);
                Editable=FALSE }

    { 41  ;4   ;Field     ;
                Name=Sales (LCY)_Costs;
                CaptionML=[ENU=Amount (LCY);
                           ENN=Amount (LCY)];
                SourceExpr=TotalServLineLCY[7].Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 46  ;4   ;Field     ;
                CaptionML=[ENU=Profit (LCY);
                           ENN=Profit (LCY)];
                SourceExpr=ProfitLCY[7];
                AutoFormatType=1;
                Editable=FALSE }

    { 51  ;4   ;Field     ;
                CaptionML=[ENU=Profit (LCY);
                           ENN=Profit (LCY)];
                SourceExpr=AdjProfitLCY[7];
                AutoFormatType=1;
                Editable=FALSE }

    { 50  ;4   ;Field     ;
                CaptionML=[ENU=Profit %;
                           ENN=Profit %];
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct[7];
                Editable=FALSE }

    { 64  ;4   ;Field     ;
                SourceExpr=Text006;
                Visible=FALSE }

    { 42  ;4   ;Field     ;
                CaptionML=[ENU=Cost (LCY);
                           ENN=Cost (LCY)];
                SourceExpr=TotalServLineLCY[7]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 87  ;4   ;Field     ;
                SourceExpr=Text006;
                Visible=FALSE }

    { 99  ;4   ;Field     ;
                SourceExpr=Text006;
                Visible=FALSE }

    { 1903289601;1;Group  ;
                CaptionML=[ENU=Customer;
                           ENN=Customer] }

    { 67  ;2   ;Field     ;
                CaptionML=[ENU=Balance (LCY);
                           ENN=Balance (LCY)];
                SourceExpr=Cust."Balance (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 68  ;2   ;Field     ;
                Name=Credit Limit (LCY);
                CaptionML=[ENU=Credit Limit (LCY);
                           ENN=Credit Limit (LCY)];
                SourceExpr=Cust."Credit Limit (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                ExtendedDatatype=Ratio;
                CaptionML=[ENU=Expended % of Credit Limit (LCY);
                           ENN=Expended % of Credit Limit (LCY)];
                ToolTipML=[ENU=Expended % of Credit Limit (LCY);
                           ENN=Expended % of Credit Limit (LCY)];
                SourceExpr=CreditLimitLCYExpendedPct }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Service %1 Statistics;ENN=Service %1 Statistics';
      Text001@1001 : TextConst 'ENU=Total;ENN=Total';
      Text002@1002 : TextConst 'ENU=Amount;ENN=Amount';
      Text003@1003 : TextConst 'ENU=%1 must not be 0.;ENN=%1 must not be 0.';
      Text004@1004 : TextConst 'ENU=%1 must not be greater than %2.;ENN=%1 must not be greater than %2.';
      Text005@1005 : TextConst '@@@=You cannot change the invoice discount because there is a Cust. Invoice Disc. record for Invoice Disc. Code 10000.;ENU=You cannot change the invoice discount because there is a %1 record for %2 %3.;ENN=You cannot change the invoice discount because there is a %1 record for %2 %3.';
      TotalServLine@1006 : ARRAY [7] OF Record 5902;
      TotalServLineLCY@1007 : ARRAY [7] OF Record 5902;
      Cust@1008 : Record 18;
      TempVATAmountLine@1009 : TEMPORARY Record 290;
      SalesSetup@1010 : Record 311;
      ServAmtsMgt@1011 : Codeunit 5986;
      GSTManagement@1500003 : Codeunit 16401;
      TotalAmount1@1012 : ARRAY [7] OF Decimal;
      TotalAmount2@1013 : ARRAY [7] OF Decimal;
      AdjProfitPct@1025 : ARRAY [7] OF Decimal;
      AdjProfitLCY@1024 : ARRAY [7] OF Decimal;
      TotalAdjCostLCY@1023 : ARRAY [7] OF Decimal;
      VATAmount@1014 : ARRAY [7] OF Decimal;
      VATAmountText@1015 : ARRAY [7] OF Text[30];
      ProfitLCY@1016 : ARRAY [7] OF Decimal;
      ProfitPct@1017 : ARRAY [7] OF Decimal;
      CreditLimitLCYExpendedPct@1018 : Decimal;
      i@1022 : Integer;
      PrevNo@1019 : Code[20];
      AllowInvDisc@1020 : Boolean;
      AllowVATDifference@1021 : Boolean;
      Text006@1026 : TextConst 'ENU=Placeholder;ENN=Placeholder';
      TotalGST@1500000 : Decimal;
      TotalAdvAmount@1500004 : Decimal;
      TotalAmountApplied@1500005 : Decimal;

    LOCAL PROCEDURE UpdateHeaderInfo@5(IndexNo@1003 : Integer;VAR VATAmountLine@1002 : Record 290);
    VAR
      CurrExchRate@1000 : Record 330;
      UseDate@1001 : Date;
    BEGIN
      TotalServLine[IndexNo]."Inv. Discount Amount" := VATAmountLine.GetTotalInvDiscAmount;
      TotalAmount1[IndexNo] :=
        TotalServLine[IndexNo]."Line Amount" - TotalServLine[IndexNo]."Inv. Discount Amount";
      VATAmount[IndexNo] := VATAmountLine.GetTotalVATAmount;
      IF "Prices Including VAT" THEN BEGIN
        TotalAmount1[IndexNo] := VATAmountLine.GetTotalAmountInclVAT;
        TotalAmount2[IndexNo] := TotalAmount1[IndexNo] - VATAmount[IndexNo];
        TotalServLine[IndexNo]."Line Amount" :=
          TotalAmount1[IndexNo] + TotalServLine[IndexNo]."Inv. Discount Amount";
      END ELSE
        TotalAmount2[IndexNo] := TotalAmount1[IndexNo] + VATAmount[IndexNo];

      IF "Prices Including VAT" THEN
        TotalServLineLCY[IndexNo].Amount := TotalAmount2[IndexNo]
      ELSE
        TotalServLineLCY[IndexNo].Amount := TotalAmount1[IndexNo];
      IF "Currency Code" <> '' THEN
        IF ("Document Type" = "Document Type"::Quote) AND
           ("Posting Date" = 0D)
        THEN
          UseDate := WORKDATE
        ELSE
          UseDate := "Posting Date";

      TotalServLineLCY[IndexNo].Amount :=
        CurrExchRate.ExchangeAmtFCYToLCY(
          UseDate,"Currency Code",TotalServLineLCY[IndexNo].Amount,"Currency Factor");
      ProfitLCY[IndexNo] := TotalServLineLCY[IndexNo].Amount - TotalServLineLCY[IndexNo]."Unit Cost (LCY)";
      IF TotalServLineLCY[IndexNo].Amount = 0 THEN
        ProfitPct[IndexNo] := 0
      ELSE
        ProfitPct[IndexNo] := ROUND(100 * ProfitLCY[IndexNo] / TotalServLineLCY[IndexNo].Amount,0.1);

      AdjProfitLCY[IndexNo] := TotalServLineLCY[IndexNo].Amount - TotalAdjCostLCY[IndexNo];
      IF TotalServLineLCY[IndexNo].Amount = 0 THEN
        AdjProfitPct[IndexNo] := 0
      ELSE
        AdjProfitPct[IndexNo] := ROUND(100 * AdjProfitLCY[IndexNo] / TotalServLineLCY[IndexNo].Amount,0.1);
    END;

    LOCAL PROCEDURE GetVATSpecification@21();
    BEGIN
      UpdateHeaderInfo(1,TempVATAmountLine);
    END;

    LOCAL PROCEDURE UpdateTotalAmount@16(IndexNo@1001 : Integer);
    VAR
      SaveTotalAmount@1000 : Decimal;
    BEGIN
      CheckAllowInvDisc;
      IF "Prices Including VAT" THEN BEGIN
        SaveTotalAmount := TotalAmount1[IndexNo];
        UpdateInvDiscAmount;
        TotalAmount1[IndexNo] := SaveTotalAmount;
      END;

      WITH TotalServLine[IndexNo] DO
        "Inv. Discount Amount" := "Line Amount" - TotalAmount1[IndexNo];
      UpdateInvDiscAmount;
    END;

    LOCAL PROCEDURE UpdateInvDiscAmount@3();
    VAR
      InvDiscBaseAmount@1000 : Decimal;
    BEGIN
      CheckAllowInvDisc;
      InvDiscBaseAmount := TempVATAmountLine.GetTotalInvDiscBaseAmount(FALSE,"Currency Code");
      IF InvDiscBaseAmount = 0 THEN
        ERROR(Text003,TempVATAmountLine.FIELDCAPTION("Inv. Disc. Base Amount"));

      IF TotalServLine[1]."Inv. Discount Amount" / InvDiscBaseAmount > 1 THEN
        ERROR(
          Text004,
          TotalServLine[1].FIELDCAPTION("Inv. Discount Amount"),
          TempVATAmountLine.FIELDCAPTION("Inv. Disc. Base Amount"));

      TempVATAmountLine.SetInvoiceDiscountAmount(
        TotalServLine[1]."Inv. Discount Amount","Currency Code","Prices Including VAT","VAT Base Discount %");
      UpdateHeaderInfo(1,TempVATAmountLine);
      CurrPage.SubForm.PAGE.SetTempVATAmountLine(TempVATAmountLine);

      "Invoice Discount Calculation" := "Invoice Discount Calculation"::Amount;
      "Invoice Discount Value" := TotalServLine[1]."Inv. Discount Amount";
      MODIFY;
      UpdateVATOnServLines;
    END;

    LOCAL PROCEDURE GetCaptionClass@2(FieldCaption@1000 : Text[100];ReverseCaption@1001 : Boolean) : Text[80];
    BEGIN
      IF "Prices Including VAT" XOR ReverseCaption THEN
        EXIT('2,1,' + FieldCaption);
      EXIT('2,0,' + FieldCaption);
    END;

    LOCAL PROCEDURE UpdateVATOnServLines@1();
    VAR
      ServLine@1000 : Record 5902;
    BEGIN
      GetVATSpecification;
      IF TempVATAmountLine.GetAnyLineModified THEN BEGIN
        ServLine.UpdateVATOnLines(0,Rec,ServLine,TempVATAmountLine);
        ServLine.UpdateVATOnLines(1,Rec,ServLine,TempVATAmountLine);
      END;
      PrevNo := '';
    END;

    LOCAL PROCEDURE CustInvDiscRecExists@4(InvDiscCode@1000 : Code[20]) : Boolean;
    VAR
      CustInvDisc@1001 : Record 19;
    BEGIN
      CustInvDisc.SETRANGE(Code,InvDiscCode);
      EXIT(CustInvDisc.FINDFIRST);
    END;

    LOCAL PROCEDURE CheckAllowInvDisc@8();
    VAR
      CustInvDisc@1000 : Record 19;
    BEGIN
      IF NOT AllowInvDisc THEN
        ERROR(
          Text005,
          CustInvDisc.TABLECAPTION,FIELDCAPTION("Invoice Disc. Code"),"Invoice Disc. Code");
    END;

    LOCAL PROCEDURE UpdateHeaderServLine@6();
    VAR
      TempServLine@1000 : TEMPORARY Record 5902;
      ChargesToCustomer@1000000000 : Decimal;
    BEGIN
      CLEAR(ServAmtsMgt);

      FOR i := 1 TO 7 DO BEGIN
        IF i IN [1,5,6,7] THEN BEGIN
          TempServLine.DELETEALL;
          CLEAR(TempServLine);

          ServAmtsMgt.SumServiceLinesTemp(
            Rec,TempServLine,i - 1,TotalServLine[i],TotalServLineLCY[i],
            VATAmount[i],VATAmountText[i],ProfitLCY[i],ProfitPct[i],TotalAdjCostLCY[i],ChargesToCustomer);

          IF TotalServLineLCY[i].Amount = 0 THEN
            ProfitPct[i] := 0
          ELSE
            ProfitPct[i] := ROUND(100 * ProfitLCY[i] / TotalServLineLCY[i].Amount,0.1);

          AdjProfitLCY[i] := TotalServLineLCY[i].Amount - TotalAdjCostLCY[i];
          IF TotalServLineLCY[i].Amount <> 0 THEN
            AdjProfitPct[i] := ROUND(AdjProfitLCY[i] / TotalServLineLCY[i].Amount * 100,0.1);

          IF "Prices Including VAT" THEN BEGIN
            TotalAmount2[i] := TotalServLine[i].Amount;
            TotalAmount1[i] := TotalAmount2[i] + VATAmount[i];
            TotalServLine[i]."Line Amount" := TotalAmount1[i] + TotalServLine[i]."Inv. Discount Amount";
          END ELSE BEGIN
            TotalAmount1[i] := TotalServLine[i].Amount;
            TotalAmount2[i] := TotalServLine[i]."Amount Including VAT";
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE TotalServLine1AmountToCustomer@19044182();
    BEGIN
      WITH TotalServLine[1] DO BEGIN
        IF "Prices Including VAT" THEN
          "Inv. Discount Amount" := "Line Amount" - "Amount Including VAT"
        ELSE
          "Inv. Discount Amount" := "Line Amount" - Amount;
      END;
      UpdateInvDiscAmount;
    END;

    LOCAL PROCEDURE GSTApplicationAmount@1500001() : Decimal;
    VAR
      CustLedgerEntry@1500000 : Record 21;
      DetailedGSTLedgerEntry@1500001 : Record 16419;
      GSTApplicationBuffer@1500004 : Record 16423;
      SalesLine@1500005 : Record 37;
      TotalAdvAmount@1500002 : Decimal;
      TotalInvAmount@1500006 : Decimal;
      TotalGSTAmount@1500007 : Decimal;
      ApplicationFactor@1500009 : Decimal;
    BEGIN
      CustLedgerEntry.SETCURRENTKEY("Document No.","Document Type","Sell-to Customer No.");
      IF "Applies-to Doc. No." <> '' THEN
        CustLedgerEntry.SETRANGE("Document No.","Applies-to Doc. No.");
      IF "Applies-to ID" <> '' THEN
        CustLedgerEntry.SETRANGE("Applies-to ID","Applies-to ID");
      CustLedgerEntry.SETRANGE("Document Type","Applies-to Doc. Type");
      CustLedgerEntry.SETRANGE("Sell-to Customer No.","Customer No.");
      CustLedgerEntry.SETRANGE("GST on Advance Payment",TRUE);
      CustLedgerEntry.SETRANGE(Open,TRUE);
      CustLedgerEntry.SETRANGE("On Hold",'');
      CustLedgerEntry.SETFILTER("Amount to Apply",'<>%1',0);
      IF CustLedgerEntry.FINDSET THEN REPEAT
        GSTApplicationBuffer.SETRANGE("Transaction Type",GSTApplicationBuffer."Transaction Type"::Sale);
        GSTApplicationBuffer.SETRANGE("Original Document Type",GSTApplicationBuffer."Original Document Type"::Payment);
        GSTApplicationBuffer.SETRANGE("Original Document No.",CustLedgerEntry."Document No.");
        GSTApplicationBuffer.SETRANGE("GST Group Code",CustLedgerEntry."GST Group Code");
        GSTApplicationBuffer.SETRANGE("CLE/VLE Entry No.",CustLedgerEntry."Entry No.");
        IF GSTApplicationBuffer.FINDSET THEN REPEAT
          TotalAdvAmount += ABS(GSTApplicationBuffer."Applied Amount") ;
        UNTIL GSTApplicationBuffer.NEXT = 0;
      UNTIL CustLedgerEntry.NEXT = 0;
      EXIT(TotalAdvAmount);
    END;

    LOCAL PROCEDURE GetApplicableAmount@1500000(TotalAdvAmount@1500002 : Decimal;TotalGSTAmountInvShip@1500001 : Decimal) : Decimal;
    VAR
      TotalGSTAmountApplied@1500000 : Decimal;
    BEGIN
      IF ABS(TotalGSTAmountInvShip) > ABS(TotalAdvAmount) THEN
        TotalGSTAmountApplied := ABS(TotalAdvAmount)
      ELSE
        TotalGSTAmountApplied := ABS(TotalGSTAmountInvShip);
      EXIT(TotalGSTAmountApplied);
    END;

    LOCAL PROCEDURE ClearGSTStatisticsAmount@1500200();
    BEGIN
      TotalGST := 0;
      TotalAdvAmount := 0;
      TotalAmountApplied := 0;
    END;

    BEGIN
    END.
  }
}

