OBJECT Page 5933 Service Invoice
{
  OBJECT-PROPERTIES
  {
    Date=23-02-17;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.48067,NAVIN9.00.00.48067;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Invoice;
               ENN=Service Invoice];
    SourceTable=Table5900;
    PopulateAllFields=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Invoice));
    PageType=Document;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 SetSecurityFilterOnRespCenter;
               END;

    OnFindRecord=BEGIN
                   IF FIND(Which) THEN
                     EXIT(TRUE);

                   SETRANGE("No.");
                   EXIT(FIND(Which));
                 END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetServiceFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     CLEAR(ServLogMgt);
                     ServLogMgt.ServHeaderManualDelete(Rec);
                     EXIT(ConfirmDeletion);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 57      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Invoice;
                                 ENN=&Invoice];
                      Image=Invoice }
      { 59      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 ENN=Statistics];
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CalcInvDiscForHeader;
                                 IF Structure <> '' THEN
                                   CalculateStructureValues;
                                 COMMIT;
                                 PAGE.RUNMODAL(PAGE::"Service Statistics",Rec);
                               END;
                                }
      { 60      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 ENN=Card];
                      RunObject=Page 21;
                      RunPageLink=No.=FIELD(Customer No.);
                      Image=EditLines }
      { 61      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ENN=Co&mments];
                      RunObject=Page 5911;
                      RunPageLink=Table Name=CONST(Service Header),
                                  Table Subtype=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Type=CONST(General);
                      Image=ViewComments }
      { 116     ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=&Dimensions;
                                 ENN=&Dimensions];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 64      ;2   ;Separator  }
      { 67      ;2   ;Action    ;
                      CaptionML=[ENU=Service Document Lo&g;
                                 ENN=Service Document Lo&g];
                      Image=Log;
                      OnAction=VAR
                                 ServDocLog@1002 : Record 5912;
                                 TempServDocLog@1001 : TEMPORARY Record 5912;
                               BEGIN
                                 TempServDocLog.RESET;
                                 TempServDocLog.DELETEALL;

                                 ServDocLog.RESET;
                                 ServDocLog.SETRANGE("Document Type",ServDocLog."Document Type"::Invoice);
                                 ServDocLog.SETRANGE("Document No.","No.");
                                 IF ServDocLog.FINDSET THEN
                                   REPEAT
                                     TempServDocLog := ServDocLog;
                                     TempServDocLog.INSERT;
                                   UNTIL ServDocLog.NEXT = 0;

                                 TempServDocLog.RESET;
                                 TempServDocLog.SETCURRENTKEY("Change Date","Change Time");
                                 TempServDocLog.ASCENDING(FALSE);

                                 PAGE.RUN(0,TempServDocLog);
                               END;
                                }
      { 1500002 ;2   ;Separator  }
      { 1500003 ;2   ;Action    ;
                      CaptionML=[ENU=St&ructure;
                                 ENN=St&ructure];
                      RunObject=Page 16305;
                      RunPageLink=Type=CONST(Service),
                                  Document Type=FIELD(Document Type),
                                  Document No.=FIELD(No.),
                                  Structure Code=FIELD(Structure),
                                  Document Line No.=FILTER(0);
                      Image=Hierarchy }
      { 1500047 ;2   ;Action    ;
                      CaptionML=[ENU=Transit Documents;
                                 ENN=Transit Documents];
                      RunObject=Page 13705;
                      RunPageLink=Type=CONST(Sale),
                                  PO / SO No.=FIELD(No.),
                                  Vendor / Customer Ref.=FIELD(Customer No.),
                                  State=FIELD(State);
                      Image=TransferOrder }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 62      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENN=F&unctions];
                      Image=Action }
      { 63      ;2   ;Action    ;
                      Name=Calculate Invoice Discount;
                      CaptionML=[ENU=Calculate &Invoice Discount;
                                 ENN=Calculate &Invoice Discount];
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                               END;
                                }
      { 142     ;2   ;Separator  }
      { 134     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get St&d. Service Codes;
                                 ENN=Get St&d. Service Codes];
                      Promoted=Yes;
                      Image=ServiceCode;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 StdServCode@1001 : Record 5996;
                               BEGIN
                                 StdServCode.InsertServiceLines(Rec);
                               END;
                                }
      { 1500006 ;2   ;Separator  }
      { 1500007 ;2   ;Action    ;
                      CaptionML=[ENU=Calc&ulate Structure Values;
                                 ENN=Calc&ulate Structure Values];
                      Image=CalculateHierarchy;
                      OnAction=BEGIN
                                 CalculateStructureValues;
                               END;
                                }
      { 69      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 ENN=P&osting];
                      Image=Post }
      { 70      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 ENN=Test Report];
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintServiceHeader(Rec);
                               END;
                                }
      { 71      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 ENN=P&ost];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServPostYesNo@1000 : Codeunit 5981;
                               BEGIN
                                 ServPostYesNo.PostDocument(Rec);
                               END;
                                }
      { 3       ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=[ENU=Preview Posting;
                                 ENN=Preview Posting];
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 ServPostYesNo@1000 : Codeunit 5981;
                               BEGIN
                                 ServPostYesNo.PreviewDocument(Rec);
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=PostAndSend;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post and &Send;
                                 ENN=Post and &Send];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostSendTo;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Service-Post and Send",Rec);
                               END;
                                }
      { 72      ;2   ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=[ENU=Post and &Print;
                                 ENN=Post and &Print];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServPostPrint@1000 : Codeunit 5982;
                               BEGIN
                                 ServPostPrint.PostDocument(Rec);
                               END;
                                }
      { 73      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post &Batch;
                                 ENN=Post &Batch];
                      Image=PostBatch;
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"Batch Post Service Invoices",TRUE,TRUE,Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ENN=General] }

    { 2   ;2   ;Field     ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 4   ;2   ;Field     ;
                SourceExpr="Customer No.";
                OnValidate=BEGIN
                             CustomerNoOnAfterValidate;
                           END;
                            }

    { 128 ;2   ;Field     ;
                SourceExpr="Contact No.";
                OnValidate=BEGIN
                             IF GETFILTER("Contact No.") = xRec."Contact No." THEN
                               IF "Contact No." <> xRec."Contact No." THEN
                                 SETRANGE("Contact No.");
                           END;
                            }

    { 6   ;2   ;Field     ;
                SourceExpr=Name }

    { 75  ;2   ;Field     ;
                SourceExpr=Address }

    { 77  ;2   ;Field     ;
                SourceExpr="Address 2" }

    { 80  ;2   ;Field     ;
                SourceExpr="Post Code" }

    { 79  ;2   ;Field     ;
                SourceExpr=City }

    { 8   ;2   ;Field     ;
                SourceExpr="Contact Name" }

    { 1500004;2;Field     ;
                SourceExpr=Structure;
                Importance=Promoted }

    { 12  ;2   ;Field     ;
                SourceExpr="Posting Date" }

    { 43  ;2   ;Field     ;
                SourceExpr="Document Date" }

    { 10  ;2   ;Field     ;
                SourceExpr="Salesperson Code";
                OnValidate=BEGIN
                             SalespersonCodeOnAfterValidate;
                           END;
                            }

    { 118 ;2   ;Field     ;
                SourceExpr="Responsibility Center";
                OnValidate=BEGIN
                             ResponsibilityCenterOnAfterVal;
                           END;
                            }

    { 147 ;2   ;Field     ;
                SourceExpr="Assigned User ID" }

    { 56  ;1   ;Part      ;
                Name=ServLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page5934 }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoicing;
                           ENN=Invoicing] }

    { 14  ;2   ;Field     ;
                SourceExpr="Bill-to Customer No.";
                OnValidate=BEGIN
                             BilltoCustomerNoOnAfterValidat;
                           END;
                            }

    { 132 ;2   ;Field     ;
                SourceExpr="Bill-to Contact No." }

    { 16  ;2   ;Field     ;
                SourceExpr="Bill-to Name" }

    { 18  ;2   ;Field     ;
                SourceExpr="Bill-to Address" }

    { 20  ;2   ;Field     ;
                SourceExpr="Bill-to Address 2" }

    { 85  ;2   ;Field     ;
                SourceExpr="Bill-to Post Code" }

    { 22  ;2   ;Field     ;
                SourceExpr="Bill-to City" }

    { 24  ;2   ;Field     ;
                SourceExpr="Bill-to Contact" }

    { 84  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 88  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 26  ;2   ;Field     ;
                SourceExpr="Payment Terms Code" }

    { 28  ;2   ;Field     ;
                SourceExpr="Due Date" }

    { 30  ;2   ;Field     ;
                SourceExpr="Payment Discount %" }

    { 32  ;2   ;Field     ;
                SourceExpr="Pmt. Discount Date" }

    { 101 ;2   ;Field     ;
                SourceExpr="Payment Method Code" }

    { 121 ;2   ;Field     ;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;
                            }

    { 1906801201;1;Group  ;
                CaptionML=[ENU=Shipping;
                           ENN=Shipping] }

    { 34  ;2   ;Field     ;
                SourceExpr="Ship-to Code";
                OnValidate=BEGIN
                             ShiptoCodeOnAfterValidate;
                           END;
                            }

    { 36  ;2   ;Field     ;
                SourceExpr="Ship-to Name" }

    { 38  ;2   ;Field     ;
                SourceExpr="Ship-to Address" }

    { 40  ;2   ;Field     ;
                SourceExpr="Ship-to Address 2" }

    { 93  ;2   ;Field     ;
                SourceExpr="Ship-to Post Code" }

    { 42  ;2   ;Field     ;
                SourceExpr="Ship-to City" }

    { 44  ;2   ;Field     ;
                SourceExpr="Ship-to Contact" }

    { 90  ;2   ;Field     ;
                SourceExpr="Location Code" }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           ENN=Foreign Trade] }

    { 107 ;2   ;Field     ;
                SourceExpr="Currency Code";
                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 50  ;2   ;Field     ;
                SourceExpr="EU 3-Party Trade" }

    { 52  ;2   ;Field     ;
                SourceExpr="Transaction Type" }

    { 99  ;2   ;Field     ;
                SourceExpr="Transaction Specification" }

    { 54  ;2   ;Field     ;
                SourceExpr="Transport Method" }

    { 95  ;2   ;Field     ;
                SourceExpr="Exit Point" }

    { 97  ;2   ;Field     ;
                SourceExpr=Area }

    { 1500043;2;Field     ;
                SourceExpr="Applies-to Doc. Type" }

    { 1500045;2;Field     ;
                SourceExpr="Applies-to Doc. No." }

    { 1500049;2;Field     ;
                SourceExpr="Applies-to ID" }

    { 1902697801;1;Group  ;
                CaptionML=[ENU=Tax Information;
                           ENN=Tax Information] }

    { 1500008;2;Field     ;
                SourceExpr="Transit Document" }

    { 1500001;2;Field     ;
                SourceExpr="Free Supply" }

    { 1500009;2;Field     ;
                SourceExpr="TDS Certificate Receivable" }

    { 1500000;2;Field     ;
                SourceExpr="Export or Deemed Export" }

    { 1500010;2;Field     ;
                SourceExpr="VAT Exempted" }

    { 1500016;2;Field     ;
                SourceExpr=Trading }

    { 1500018;2;Field     ;
                SourceExpr="ST Pure Agent" }

    { 1500051;2;Field     ;
                SourceExpr=PoT }

    { 1500037;2;Field     ;
                SourceExpr="Form Code";
                Importance=Promoted }

    { 1500036;2;Field     ;
                SourceExpr="Form No.";
                Importance=Promoted }

    { 1500035;2;Field     ;
                Name=Posting Date2;
                CaptionML=[ENU=Date of Removal;
                           ENN=Date of Removal];
                SourceExpr="Posting Date" }

    { 1500034;2;Field     ;
                CaptionML=[ENU=Time of Removal;
                           ENN=Time of Removal];
                SourceExpr="Time of Removal" }

    { 1500033;2;Field     ;
                CaptionML=[ENU=Mode of Transport;
                           ENN=Mode of Transport];
                SourceExpr="Mode of Transport" }

    { 1500032;2;Field     ;
                CaptionML=[ENU=Vehicle No.;
                           ENN=Vehicle No.];
                SourceExpr="Vehicle No." }

    { 1500031;2;Field     ;
                CaptionML=[ENU=LR/RR No.;
                           ENN=LR/RR No.];
                SourceExpr="LR/RR No." }

    { 1500030;2;Field     ;
                CaptionML=[ENU=LR/RR Date;
                           ENN=LR/RR Date];
                SourceExpr="LR/RR Date" }

    { 1500029;2;Field     ;
                SourceExpr="Service Tax Rounding Precision" }

    { 1500038;2;Field     ;
                SourceExpr="Service Tax Rounding Type" }

    { 1500005;2;Group     ;
                CaptionML=[ENU=GST;
                           ENN=GST];
                GroupType=Group }

    { 1500011;3;Field     ;
                SourceExpr="Nature of Supply" }

    { 1500012;3;Field     ;
                SourceExpr="GST Customer Type" }

    { 1500014;3;Field     ;
                SourceExpr="Invoice Type" }

    { 1500015;3;Field     ;
                SourceExpr="GST Without Payment of Duty" }

    { 1500019;3;Field     ;
                SourceExpr="Bill Of Export No." }

    { 1500017;3;Field     ;
                SourceExpr="Bill Of Export Date" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1902018507;1;Part   ;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9082;
                Visible=TRUE;
                PartType=Page }

    { 1900316107;1;Part   ;
                SubPageLink=No.=FIELD(Customer No.);
                PagePartID=Page9084;
                Visible=FALSE;
                PartType=Page }

    { 1907829707;1;Part   ;
                SubPageLink=No.=FIELD(Customer No.);
                PagePartID=Page9085;
                Visible=FALSE;
                PartType=Page }

    { 1902613707;1;Part   ;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9086;
                Visible=FALSE;
                PartType=Page }

    { 1906530507;1;Part   ;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9088;
                ProviderID=56;
                Visible=FALSE;
                PartType=Page }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ChangeExchangeRate@1001 : Page 511;
      ReportPrint@1003 : Codeunit 228;
      UserMgt@1004 : Codeunit 5700;
      ServLogMgt@1007 : Codeunit 5906;

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.ServLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE CustomerNoOnAfterValidate@19016267();
    BEGIN
      IF GETFILTER("Customer No.") = xRec."Customer No." THEN
        IF "Customer No." <> xRec."Customer No." THEN
          SETRANGE("Customer No.");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SalespersonCodeOnAfterValidate@19011896();
    BEGIN
      CurrPage.ServLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ResponsibilityCenterOnAfterVal@19032024();
    BEGIN
      CurrPage.ServLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE BilltoCustomerNoOnAfterValidat@19044114();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShiptoCodeOnAfterValidate@19065015();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    BEGIN
    END.
  }
}

